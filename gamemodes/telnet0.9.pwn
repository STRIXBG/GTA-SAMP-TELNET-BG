/*
· SA-MP Gamemode: Intense версия: 0.9 RC2
· Copyright © 2018-2022, Daniel Miroslavov Andreev
· Всички права са запазени.
*/
//main - location - open
#include <a_samp>
#include <streamer>
#include <Dini>
//#include <colandreas>
#pragma tabsize 0
//main - location - close
//define - location - open
#if !defined IsValidVehicle
native IsValidVehicle(vehicleid);
#endif
#define RELEASED(%0) \
(((newkeys & (%0)) != (%0)) && ((oldkeys & (%0)) == (%0)))
#define DEF_MAX_OBJECTS 5000
#define MAX_MBLOCATIONS     30
#define COLOR_RCIVIL 0xFFFFFFFF
#define COLOR_RVIP 0xFF3737FF
#define COLOR_RGROVE 0x33AA33FF
#define COLOR_RBALLAS 0xC2A2DAFF
#define COLOR_RVAGOS 0xFFFF00FF
#define COLOR_RAZTEC 0x33CCFFFF
#define COLOR_RCRIPZ 0x000099FF
#define COLOR_RTRIADS 0xF97804FF
#define COLOR_RRIFA 0x0066FFFF
#define COLOR_RSOA 0x7F7F7FFF
#define COLOR_RNANG 0x4D2C2FFF
#define COLOR_RITALIAN 0xA9F5E1FF
#define COLOR_RBOUNTY 0x8ADB3FFF
#define COLOR_RLSPD 0x0040FFFF
#define COLOR_RLVPD 0x0040FFFF
#define COLOR_RDF 0xA4A400FF
#define COLOR_RSOLDIER 0x9932CCFF
#define COLOR_RYAKUZA 0x838b8bFF
#define COLOR_RSYNDICATE 0x276BA9FF
#define COLOR_RBLOODMAFIA 0xE52020FF
#define COLOR_RMS13 0xb7ffffFF
#define COLOR_RBGM 0xFF40FFFF
#define COLOR_R343 0x80BFBFFF

#define COLOR_REACTIONTEST 0x00ff00FF
#define PLAYER_RACE_GREEN 0x00FF00FF
#define PLAYER_RACE_BLUE 0x008FFFFF

#define PLAYER_CMN1_ORANGE 0xF97804FF
#define PLAYER_CMN1_GRAD 0xB4B5B7FF

#define  FACTION_CIVILIAN 0
#define  FACTION_VIP 1
#define  FACTION_GROVE 2
#define  FACTION_BALLAS 3
#define  FACTION_VAGOS 4
#define  FACTION_AZTECAS 5
#define  FACTION_CRIPZ 6
#define  FACTION_TRIADS 7
#define  FACTION_RIFA 8
#define  FACTION_SOA 9
#define  FACTION_NANG 10
#define  FACTION_ITALIAN 11
#define  FACTION_BOUNTY 12
#define  FACTION_LSPD 13
#define  FACTION_LVPD 14
#define  FACTION_DELTAFORCE 15
#define  FACTION_SOLDIER 16
#define  FACTION_YAKUZA 17
#define  FACTION_SYNDICATE 18
#define  FACTION_BLOODMAFIA 19
#define  FACTION_MS13 20
#define  FACTION_BGMAFIA 21
#define  FACTION_343 22
#define MAX_TEAMS           23
#define TOTAL_ITEMS         312
#define SELECTION_ITEMS 	21
#define ITEMS_PER_LINE  	7
#define HEADER_TEXT "Skins"
#define NEXT_TEXT   "Next"
#define PREV_TEXT   "Prev"
#define DIALOG_BASE_X   	75.0
#define DIALOG_BASE_Y   	130.0
#define DIALOG_WIDTH    	550.0
#define DIALOG_HEIGHT   	180.0
#define SPRITE_DIM_X    	60.0
#define SPRITE_DIM_Y    	70.0
#define MAX_HOUSES          50000
#define MAX_PRIVATEVEHS      13
#define MAX_BIZZ            50000
#define COLOR_DEATHMATCH      0x9c281eFF
#define COLOR_STREETRACE      0x0080FFFF
#define COLOR_GRAD1           0xB4B5B7FF
#define COLOR_YELLOW          0xFFFF00FF
#define COLOR_BL1             0x0066FFFF
#define COLOR_RED             0xE60000FF
#define COLOR_DBLUE           0x2641FEFF
#define DIALOG_BUYGUNS        24
#define DIALOG_CLOTHES        43
#define DIALOG_CLOTHES_2      53
#define DIALOG_CLOTHES_3      54
#define MAX_RACES 5
#define LOC_FUELSTATION_1 1004.0327,-937.5370,42.3281
#define LOC_FUELSTATION_2 1942.3719,-1772.8666,13.6406
#define LOC_FUELSTATION_3 -1606.7223,-2713.3562,48.5335
#define LOC_FUELSTATION_4 -2026.7813,156.5509,29.0391
#define LOC_FUELSTATION_5 -2243.8149,-2559.8899,31.9219
#define LOC_FUELSTATION_6 -1676.2601,413.5443,7.1797
#define LOC_FUELSTATION_7 2201.8296,2475.1350,10.8203
#define LOC_FUELSTATION_8 615.3391,1690.0454,6.9922
#define LOC_FUELSTATION_9 -1328.2731,2677.5278,50.0625
#define LOC_FUELSTATION_10 70.3842,1219.0177,18.8116
#define LOC_FUELSTATION_11 2113.3835,919.5655,10.8203
#define LOC_FUELSTATION_12 2641.0115,1106.6252,10.8203
#define LOC_FUELSTATION_13 2146.7964,2747.8115,10.8203
#define LOC_FUELSTATION_14 1595.7935,2199.5996,10.8203
#define LOC_FUELSTATION_15 -1471.1836,1863.7598,32.6328
#define LOC_FUELSTATION_16 655.7673,-565.0798,16.3359
#define LOC_FUELSTATION_17 1381.8230,459.1453,20.3452

#define BusCheckPoint1 -498.4799,2593.1475,53.2546
#define BusCheckPoint2 -466.3619,2593.3589,50.5782
#define BusCheckPoint3 -368.0056,2549.9414,37.5918
#define BusCheckPoint4 -289.2402,2519.1929,34.0896
#define BusCheckPoint5 -84.7533,2394.6294,16.1968
#define BusCheckPoint6 107.8625,2294.5774,19.7972
#define BusCheckPoint7 559.7805,2286.4646,33.8574
#define BusCheckPoint8 567.3085,1779.1766,12.5296
#define BusCheckPoint9 495.8424,1656.5313,13.6520
#define BusCheckPoint10 159.7531,1158.9231,14.3524
#define BusCheckPoint11 -72.6429,1282.0905,11.6395
#define BusCheckPoint12 -109.2153,1757.2048,20.1947
#define BusCheckPoint13 137.5369,2008.4158,18.7260
#define BusCheckPoint14 125.6147,2289.9126,20.1863
#define BusCheckPoint15 -24.9105,2303.9634,24.6508
#define BusCheckPoint16 -158.1425,2478.8467,19.4096
#define BusCheckPoint17 -445.1805,2447.7939,46.8334
#define BusCheckPoint18 -467.8040,2592.9399,50.7876
#define BusTakePoint -512.5389,2626.3389,53.1411

#define CoalmineCheckPoint1 809.2472,842.9479,9.8030
#define CoalmineCheckPoint2 764.9946,889.3522,-1.2541
#define CoalmineCheckPoint3 683.7329,971.1793,-12.7109
#define CoalmineCheckPoint4 724.9157,884.9314,-26.4536
#define CoalmineCheckPoint5 616.0866,906.8915,-44.5193
#define CoalmineCheckPoint6 497.2571,891.3735,-32.0035
#define CoalmineCheckPoint7 535.6892,790.3248,-20.1947
#define CoalmineCheckPoint8 688.4577,748.3844,-5.5390
#define CoalmineTakePoint 849.5752,856.4982,13.3516

#define SweepCheckPoint1 585.6350,1210.8875,11.8014
#define SweepCheckPoint2 389.5959,1093.6327,14.6649
#define SweepCheckPoint3 662.0938,1088.1627,28.1423
#define SweepCheckPoint4 781.4050,1341.2562,23.4485
#define SweepCheckPoint5 830.2501,1731.7754,4.6411
#define SweepCheckPoint6 714.1592,1865.7966,5.2428
#define SweepTakePoint 566.5702,1207.7189,11.7790

#define PizzaCheckPoint1 1356.0927,253.1245,19.1581
#define PizzaCheckPoint2 1393.5309,202.5670,19.0411
#define PizzaCheckPoint3 1715.7087,118.4122,31.7443
#define PizzaCheckPoint4 2223.6995,59.0815,25.9326
#define PizzaCheckPoint5 2236.6594,143.6145,25.9301
#define PizzaCheckPoint6 2317.9854,-26.4204,25.9317
#define PizzaCheckPoint7 2505.5012,-8.3911,25.9304
#define PizzaCheckPoint8 2536.5618,73.4090,25.9327
#define PizzaTakePoint 1376.8827,268.1494,19.2940

#define DeliverCheckPoint1 91.7430,-208.2322,1.4382
#define DeliverCheckPoint2 214.0502,-208.9492,1.4297
#define DeliverCheckPoint3 251.5957,-68.5750,1.4315
#define DeliverCheckPoint4 286.0376,-162.3006,1.4297
#define DeliverCheckPoint5 229.6225,-240.7871,1.4297
#define DeliverCheckPoint6 204.9538,-315.6763,1.4857
#define DeliverCheckPoint7 652.3879,-489.0180,16.1875
#define DeliverCheckPoint8 678.3525,-511.3238,16.1875
#define DeliverCheckPoint9 718.6302,-566.0502,16.1875
#define DeliverCheckPoint10 701.3662,-597.3826,16.1875
#define DeliverCheckPoint11 678.4129,-636.8819,16.1875
#define DeliverCheckPoint12 808.6637,-598.6234,16.1875
#define DeliverCheckPoint13 1079.2185,-342.9671,73.9922
#define DeliverCheckPoint14 1263.0867,181.7920,19.4063
#define DeliverCheckPoint15 1318.9225,232.0029,19.4063
#define DeliverCheckPoint16 1390.7675,284.8674,19.4063
#define DeliverCheckPoint17 1333.4709,340.4113,19.4063
#define DeliverCheckPoint18 1312.7074,373.7821,19.4063
#define DeliverCheckPoint19 1279.5104,357.0676,19.4143
#define DeliverCheckPoint20 1208.6729,281.7849,19.4063
#define DeliverCheckPoint21 1231.6031,194.1801,19.4063
#define DeliverTakePoint -21.5310,-301.6281,5.4229

#define PilotCheckPoint1 60.6346,2504.9580,16.4844
#define PilotCheckPoint2 1824.6741,-2493.9043,13.5547
#define PilotCheckPoint3 -1248.5364,244.1837,14.1484
#define PilotTakePoint 23.6830,2502.6558,16.4922
//robbery - open
#define ROB_CALIGULA 1
#define ROB_ARTIUM 2
#define ROB_BOAT 3

#define ROB_CALIGULA_COORS 2144.2419,1639.6534,993.5761
#define ROB_ARTIUM_COORS 1710.7833,-1643.9384,27.2035
#define ROB_BOAT_COORS -1292.2670,490.4918,11.1953
//robbery - close

//missions defines - open
#define MISSION_NONE 0
#define MISSION_MONEYBOX 1
#define MISSION_DEATHMATCH 2
#define MISSION_STREETRACE 3

#define MoneyBoxCheckpoint1 1400.5925, -1485.3390, 20.4353
#define MoneyBoxCheckpoint2 1031.3981, -1376.8380, 13.5932
#define MoneyBoxCheckpoint3 359.7007, -1471.7852, 36.0238
#define MoneyBoxCheckpoint4 268.4943, -1446.0317, 23.7274

#define MoneyBoxDeliverpoint1 2208.4001, 1432.2076, 11.0547
#define MoneyBoxDeliverpoint2 2489.3777, 1448.1366, 10.9063
#define MoneyBoxDeliverpoint3 2316.8396, 1732.6959, 10.8203
#define MoneyBoxDeliverpoint4 2256.0981, 2564.9705, 10.8203

//Drag
#define StreetRaceDragWaitPoint -1722.9529,-574.8784,15.9721
#define StreetRaceDragCheckPoint1 -1781.6704,-575.6155,16.0630
#define StreetRaceDragCheckPoint2 -1888.9840,-576.6488,24.1741
#define StreetRaceDragCheckPoint3 -2020.8083,-577.6575,26.3063
#define StreetRaceDragCheckPoint4 -2117.9346,-524.7858,35.1644
#define StreetRaceDragFinalPoint -2231.3345,-406.7641,50.5942

//Sprint
#define StreetRaceSprintWaitPoint 1786.5955,1497.7411,6.4615
#define StreetRaceSprintCheckPoint1 1787.1387,1573.3997,6.4615
#define StreetRaceSprintCheckPoint2 1788.1617,1702.6829,6.4615
#define StreetRaceSprintCheckPoint3 1788.1381,1881.0883,6.4615
#define StreetRaceSprintCheckPoint4 1788.9952,2052.8132,3.6330
#define StreetRaceSprintFinalPoint 1787.1313,2295.8889,5.5133

//Drift
#define StreetRaceDriftWaitPoint -1858.7616,-1404.7510,38.0279
#define StreetRaceDriftCheckPoint1 -1827.2673,-1422.8276,36.4690
#define StreetRaceDriftCheckPoint2 -1740.6162,-1474.2750,34.1339
#define StreetRaceDriftCheckPoint3 -1621.0465,-1510.5717,37.2494
#define StreetRaceDriftCheckPoint4 -1578.4031,-1602.9431,36.6926
#define StreetRaceDriftFinalPoint -1953.4404,-1811.0680,33.7089


//Laps
#define StreetRaceLapsWaitPoint 1285.2955,-382.7452,2.2483
#define StreetRaceLapsCheckPoint1 1428.1626,-320.5428,2.7552
#define StreetRaceLapsCheckPoint2 1629.2355,-326.8333,21.6734
#define StreetRaceLapsCheckPoint3 1757.5409,-346.4585,46.0157
#define StreetRaceLapsCheckPoint4 1871.6470,-263.7513,38.1082
#define StreetRaceLapsFinalPoint 1877.6993,-70.1240,34.4164

//Offroad

#define StreetRaceOffroadWaitPoint -863.8476,1090.6401,25.4467
#define StreetRaceOffroadCheckPoint1 -877.8967,1274.1046,34.8127
#define StreetRaceOffroadCheckPoint2 -1029.2034,1279.4197,39.7953
#define StreetRaceOffroadCheckPoint3 -1146.6042,1105.5200,38.2972
#define StreetRaceOffroadCheckPoint4 -1296.1880,949.3697,45.2623
#define StreetRaceOffroadFinalPoint -1429.2609,808.4440,46.9212

//locations - open
#define DeathmatchCheckpoint1 1584.9596,-1520.3334,13.5788
#define DeathmatchCheckpoint2 2005.0504,1545.0089,13.5859
#define DeathmatchPlace1Spawn1 2298.8459,1974.8574,9.8671
#define DeathmatchPlace1Spawn2 2282.9092,1948.3878,9.8671
#define DeathmatchPlace1Spawn3 2243.7249,1939.0444,9.8671
#define DeathmatchPlace2Spawn1 1915.4152,1781.0076,18.9339
#define DeathmatchPlace2Spawn2 1951.3872,1764.6440,18.9046
#define DeathmatchPlace2Spawn3 1964.6542,1735.2903,18.9339
//locations - close
//missions defines - close
//define - location - close
//forward - location - open
//forward IsPlayerInArea(playerid, Float:MinX, Float:MinY, Float:MaxX, Float:MaxY);
forward RemoveHousePick(playerid);
forward GeneralTimer500ms();
forward GeneralTimer1s();
forward ReSpawnTimer(playerid);
forward CorDetector(Float:radi, playerid, targetid);
forward ProxDetector(Float:radi, playerid, string[],col1,col2,col3,col4,col5);
forward Float:GetXYInFrontOfPlayer(playerid, &Float:q, &Float:w, Float:distance);
forward Float:GetXYBehindPlayer(playerid, &Float:q, &Float:w, Float:distance);
forward BanExPublic(playerid, reason[]);
//forward - location - close
//Text3D - open
new Text3D: aztecascars12text;
new Text3D: cripzcars9text;
new Text3D: ballascars10text;
new Text3D:PlayerLabel[MAX_PLAYERS];
new VipText3D[MAX_PLAYERS][26];
new Text3D:fuelStationText[25];
//Text3D - close
//Text - open
new Text:levelms[MAX_PLAYERS];
new Text:topText;
new Text:epeps[MAX_PLAYERS];
new Text:vehstatus[MAX_PLAYERS];
new Text:vehstatus2[MAX_PLAYERS];
new Text:ClockDate;
new Text:intensetext;
new Text:RESTART;
new Text:DMONKillText;
new Text:DMON[MAX_PLAYERS];
new Text:Intro[6];
//Text - close
//private cars - location - open
enum pvInfo
{
pvID,
pvModel,
pvIsOwned,
pvOwner[40],
Float: pvX,
Float: pvY,
Float: pvZ,
Float: pvAngle,
pvVirtualWorld,
pvColor1,
pvColor2,
pvRespawnTime,
pvObject[15],
Text3D: pv3DText
}
new PrivateVeh[MAX_PRIVATEVEHS][pvInfo];
//private cars - location - close
//robbery - open
new robberyTimeToStartAgain=0;
new robberyTimerToCollect=0;
new robberyToStopTimer=0;
new robberyTimerRobberToStart=0;
new robCollectedMoney=0;
new robberyMembers=0;
new robberyPlace=0;
//robbery - close
//missions varriables - open
//streetrace
new streetRaceSecondsCounter[MAX_PLAYERS];
new streetRaceTypeIndex;
new streetRaceStartTimer;
new streetRacePlayers;
new streetRaceTimerToEnd;
new streetRacePositionIndex=1;
new streetRacePlayerColorChange[MAX_PLAYERS];
new cmn1PlayerColorChange[MAX_PLAYERS];
new bool: streetRaceStarted=false;
new bool: playerInStreetRace[MAX_PLAYERS];
//deathmatch
new deathmatchEndTimer;
new deathmatchStartTimer;
new deathmatchPlayers;
new deathmatchKills[MAX_PLAYERS];
new bool: deathmatchStarted=false;
new deathmatchFightArea;
new deathmatchGun;
new bool:playerInDeathmatch[MAX_PLAYERS]=false;
//moneybox
new bool: playerWithMoneyBox[MAX_PLAYERS];
new bool: isMoneyBoxGet=false;
new whoHaveMoneyBox=-1;
new bool: lostMoneyBox;
new moneyBoxCPID;
new moneyBoxDPID;
//new Float: moneyBoxCheckPoints[MAX_MBLOCATIONS][3];
//new Float: moneyBoxDeliverPoints[MAX_MBLOCATIONS][3];
new allMoneyBoxCheckPoints=4;
new allMoneyBoxDeliverPoints=4;
new missionActive=MISSION_NONE;
//cmn1
new cmn1Money;
new cmn1[MAX_PLAYERS]=0;
new cmn1Mission[MAX_PLAYERS]=MISSION_NONE;
//missions varriables - close
//admin skin - open
new gTotalItems = TOTAL_ITEMS;
new PlayerText:gCurrentPageTextDrawId[MAX_PLAYERS];
new PlayerText:gHeaderTextDrawId[MAX_PLAYERS];
new PlayerText:gBackgroundTextDrawId[MAX_PLAYERS];
new PlayerText:gNextButtonTextDrawId[MAX_PLAYERS];
new PlayerText:gPrevButtonTextDrawId[MAX_PLAYERS];
new PlayerText:gSelectionItems[MAX_PLAYERS][SELECTION_ITEMS];
new gSelectionItemsTag[MAX_PLAYERS][SELECTION_ITEMS];
new gItemAt[MAX_PLAYERS];
new
bool: g_bump[MAX_PLAYERS],
g_veh[MAX_PLAYERS]
;
new gItemList[TOTAL_ITEMS] = {
0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,
50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,
97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,
132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,
167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,
202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,
237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,
272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,
300,301,302,303,304,305,306,307,308,309,310,311
};
//admin skin - close
//ports - open
new dfPort1;
new dfPort2;
new lvpd1;
new lvpd2;
new lvpdB1Timer;
new deltaForceP1Timer;
new deltaForceP2Timer;
new lvpdB2Timer;
//ports - close
//cells - open
new lspdCell1;
new lspdCell2;
new specialobject;
new bool: lspdCell1open=false;
new bool: lspdCell2open=false;
//cells - close
//Tune Menu - open
new Menu:TuningMenu;
new Menu:Paintjobs;
new Menu:Colors;
new Menu:Colors1;
new Menu:Exhausts;
new Menu:Frontbumper;
new Menu:Rearbumper;
new Menu:Roof;
new Menu:Spoilers;
new Menu:Sideskirts;
new Menu:Wheels;
new Menu:Wheels1;
new Menu:Nitro;
new Menu:Others;
//Tune Menu - close
//strings - open
new string256[256];
new string115[115];
new string175[175];
new string115n2[115];
new stringvehicle[501][115];
//strings - close
//duel - open
new Float: prediduelarmour[MAX_PLAYERS]=0.0;
new Float:prediduelX[MAX_PLAYERS];
new Float:prediduelY[MAX_PLAYERS];
new Float:prediduelZ[MAX_PLAYERS];
new playerInDuel[MAX_PLAYERS]=0;
new duelprotivnik[MAX_PLAYERS]=-1;
new duelzalog[MAX_PLAYERS]=0;
new prediduelinterior[MAX_PLAYERS];
new prediduelvw[MAX_PLAYERS];
new Float: prediduelhealth[MAX_PLAYERS]=0.0;
new duelsender[MAX_PLAYERS]=-1;
new duelsend[MAX_PLAYERS]=-1;
//duel - close
//top - open
new dmTopNickname[64];
new dmTopKills;
//top - close
//dmon - open
new dmonArena=1;
new playerInDMON[MAX_PLAYERS]=0;
new const DmonRandomWeapons[][] =
{
{9, 999999999}, //DEagle
{16, 999999}, //Shotgun
{22, 999999999}, //Molotov
{23, 999999999}, //Grenade
{24, 999999999}, //DEagle
{26, 999999999}, //Shotgun
{25, 999999999}, //Molotov
{28, 999999999}, //Grenade
{30, 999999999}, //DEagle
{31, 999999999}, //Shotgun
{32, 999999999}, //Molotov
{34, 999999999} //Grenade
};
//dmon - close
//entered interior(house,biz) - open
new enteredbiz[MAX_PLAYERS]=0;
new enteredhouse[MAX_PLAYERS]=0;
//entered interior(house,biz) - close
//bool - open
new bool: gpsOn[MAX_PLAYERS];
new bool:towTruckSkin[MAX_PLAYERS];
new bool: InTuneGarage[MAX_PLAYERS]=false;
new bool: replyPm[MAX_PLAYERS]=false;
new bool: passenger[MAX_PLAYERS]=false;
//bool - close
//switching, selling - open
new bool:bizSwitching[MAX_PLAYERS]=false;
new bool:houseSwitching[MAX_PLAYERS]=false;
new bool:houseSelling[MAX_PLAYERS]=false;
new houseSellSenderPrice[MAX_PLAYERS]=-1;
new houseSellSender[MAX_PLAYERS]=-1;
new houseSellReceiver[MAX_PLAYERS]=-1;
new houseSwitchSender[MAX_PLAYERS]=-1;
new houseSwitchReceiver[MAX_PLAYERS]=-1;
new bizSwitchSender[MAX_PLAYERS]=-1;
new bizSwitchReceiver[MAX_PLAYERS]=-1;
//switching, selling - close
//gang things - open
new gangrankskin[MAX_TEAMS][7];
new gangspawn[MAX_TEAMS][20][30];
//gang things - close
//gang vehs - open
new vipVehs[23];
new groveVehs[13];
new ballasVehs[13];
new vagosVehs[11];
new aztecasVehs[13];
new cripzVehs[13];
new triadsVehs[11];
new rifaVehs[12];
new soaVehs[11];
new nangVehs[11];
new italianVehs[10];
new bountyVehs[11];
new lspdVehs[11];
new lvpdVehs[12];
new deltaForceVehs[56];
new specialForceCars[20];
new soldierVehs[11];
new yakuzaVehs[11];
new syndicateVehs[10];
new bloodMafiaVehs[11];
new ms13Vehs[11];
new bgMafiaVehs[10];
new Gang343Vehs[10];
new bool: isVipGangVeh[MAX_VEHICLES]=false;
new bool: isGroveGangVeh[MAX_VEHICLES]=false;
new bool: isBallasGangVeh[MAX_VEHICLES]=false;
new bool: isVagosGangVeh[MAX_VEHICLES]=false;
new bool: isAztecasGangVeh[MAX_VEHICLES]=false;
new bool: isCripzGangVeh[MAX_VEHICLES]=false;
new bool: isTriadsGangVeh[MAX_VEHICLES]=false;
new bool: isRifaGangVeh[MAX_VEHICLES]=false;
new bool: isSoaGangVeh[MAX_VEHICLES]=false;
new bool: isNangGangVeh[MAX_VEHICLES]=false;
new bool: isItalianGangVeh[MAX_VEHICLES]=false;
new bool: isBountyGangVeh[MAX_VEHICLES]=false;
new bool: isLspdGangVeh[MAX_VEHICLES]=false;
new bool: isLvpdGangVeh[MAX_VEHICLES]=false;
new bool: isDeltaForceGangVeh[MAX_VEHICLES]=false;
new bool: isSoldierGangVeh[MAX_VEHICLES]=false;
new bool: isYakuzaGangVeh[MAX_VEHICLES]=false;
new bool: isSyndicateGangVeh[MAX_VEHICLES]=false;
new bool: isBloodMafiaGangVeh[MAX_VEHICLES]=false;
new bool: isMS13GangVeh[MAX_VEHICLES]=false;
new bool: isBGMafiaGangVeh[MAX_VEHICLES]=false;
new bool: is343GangVeh[MAX_VEHICLES]=false;
new specialForceCarsmax=1;
//gang vehs - close
//pickups - open
new ATMPICKUP[15];
new BIZPICKUP[22];
new ROBPICKUP[2];
new ROBPICKUP2[3];
new ROBPICKUPBOX[2];
new VILNAPICKUP;
new TowerPickup[3];
new CarShopPickup[3];
new CarShopPickup2[3];
new ElevatorPickup[3];
new BankPickup[9];
new BankCommandPickup[3];
new WSPickup;
//pickups - close
//gangs pickups - location - open
new BloodPickup[2];
new YakuzaPickup[2];
new BGMPickup[4];
new BallasPickup[2];
new SoldierPickup[2];
new RifaPickup[3];
new LSPDPickup[2];
new CripzPickup[2];
new SyndicatePickup[2];
new BountyPickup[2];
new DFDUTY;
new IFCDUTY;
//gangs pickups - location - close
//gangs healts, armours - location - open
new viphealarmour[2];
new grovehealarmour[2];
new dfhealarmour[2];
new rifahealarmour[2];
new soldierhealarmour[2];
new cripzhealarmour[2];
new bgmhealarmour[2];
new yakuzahealarmour[2];
new blackstreethealarmour[2];
new syndicatehealarmour[2];
new bloodhealarmour[2];
new ms13healarmour[2];
new vagoshealarmour[2];
new triadshealarmour[2];
new italianhealarmour[2];
new nanghealarmour[2];
new bountyhealarmour[2];
//gangs healths, armours - location - close
//work vehs - open
new afterwork[43];
new carpizza[7];
new carboat[7];
new carcoalmine[7];
new carsweeper[7];
new carpilot[7];
new cardeliver[7];
new carbus[7];
new cartruck[7];
//work vehs - close
//counts - open
new eventCount0;
new eventCount1;
new eventCount2;
new counttime0;
new counttime1;
new counttime2;
//counts - close
//vote - open
new voteResultsYes=0;
new voteResultsNo=0;
new respawnVehsTimer;
new respawnVehsVoteTimer;
new voteTimer;
new voteQuestion[256];
new isMadeRefuel=0;
new respawnVehsYes=0;
new respawnVehsNo=0;
//vote - close
//fuel station - open
new refuelcisterna[MAX_PLAYERS]=0;
new fueltruck[3];
new fuelremarke[3];
new fuelStationsFuel[25]=5000;
//fuel station - close
//tow truck - open
new mechanicDutyVehs[8];
new mechanicDuty[MAX_PLAYERS];
//tow truck - close
//admin - open
new adutyskinchanged[MAX_PLAYERS]=0;
new hhrefuel, mmrefuel, ssrefuel, playerrefuel[115];
new Jump[MAX_PLAYERS]=0;
new godmode[MAX_PLAYERS]=0;
new acuffed[MAX_PLAYERS]=0;
new AntiFallOfBike[MAX_PLAYERS]=0;
new specing[MAX_PLAYERS]=0;
new scripterMode[MAX_PLAYERS]=0;
new fly[MAX_PLAYERS]=0;
new Float:AX[MAX_PLAYERS],Float:AY[MAX_PLAYERS],Float:AZ[MAX_PLAYERS],Float:AZA[MAX_PLAYERS];
new AINT[MAX_PLAYERS], AVW[MAX_PLAYERS];
new adminprefix[501][35];
new marked[MAX_PLAYERS]=0;
//admin - close
//faction - open
new TeamInvite[MAX_PLAYERS]=-1;
//faction - close
//vip - open
new attachedviptext[MAX_PLAYERS]=0;
new enabledramp[MAX_PLAYERS];
new vehLocker[MAX_PLAYERS]=-1;
new rampobject[MAX_PLAYERS]=-1;
new freevip=0;
new viptextformat[501][30];
//vip - close
//sturff - open
new pname[MAX_PLAYER_NAME][MAX_PLAYERS];
new zaplatakinti[MAX_PLAYERS]=0;
new lastpaydaykinti[MAX_PLAYERS]=0;
//stuff - close
//santahat - open
new bool: santaHat[MAX_PLAYERS]=false;
new santaHatObject[MAX_PLAYERS];
//santahat - close
//carshop - open
new carshopobjects[12];
new carshopcars[12];
new carshopcars2[12];
//carshop - close
//keys - open
new lastkey[MAX_PLAYERS]=-1;
new oldkey[MAX_PLAYERS]=-1;
//keys - close
//player - open
new onhousepick2[MAX_PLAYERS]=0;
new objectright[MAX_PLAYERS]=0;
new refuelcan[MAX_PLAYERS]=0;
new firstskin[MAX_PLAYERS]=0;
new BigEar[MAX_PLAYERS]=0;
new logged[MAX_PLAYERS]=0;
new onWork[MAX_PLAYERS]=0;
new radioff[MAX_PLAYERS]=0;
new driver[MAX_PLAYERS]=0;
new WhatCar[MAX_PLAYERS] = 0;
new spawned[MAX_PLAYERS]=0;
new firstspawn[MAX_PLAYERS]=1;
new radion[MAX_PLAYERS]=0;
new nospam2[MAX_PLAYERS]=0;
new togchat[MAX_PLAYERS]=0;
new hideexitserver[MAX_PLAYERS]=0;
new rezachka[MAX_PLAYERS]=0;
new cbchat[MAX_PLAYERS]=0;
new commandspam[MAX_PLAYERS]=0;
new nameon[MAX_PLAYERS]=1;
new textspam[MAX_PLAYERS]=0;
new statisticset[MAX_PLAYERS]=0;
new Speed[MAX_PLAYERS]=0;
new speedo[MAX_PLAYERS]=0;
new kmh[MAX_PLAYERS]=0;
new timeset[MAX_PLAYERS]=0;
new dateset[MAX_PLAYERS]=0;
new oldvehid[MAX_PLAYERS]=-1;
new drive[MAX_VEHICLES]=0;
new vehfuel[MAX_VEHICLES]=100;
new vehfuel2[MAX_VEHICLES]=0;
new Float:vehhealth[MAX_PLAYERS];
new Float:X[MAX_PLAYERS],Float:Y[MAX_PLAYERS],Float:Z[MAX_PLAYERS];
new fignore[MAX_PLAYERS][MAX_PLAYERS];
new ignore[MAX_PLAYERS][MAX_PLAYERS];
new spawnselectedskin[MAX_PLAYERS]=0;
new spawnselectedskin2[MAX_PLAYERS]=0;
new wrongpassword[MAX_PLAYERS]=0;
new pDrunkLevelLast[MAX_PLAYERS];
new pFPS[MAX_PLAYERS]=30;
new loadedtexts[MAX_PLAYERS]=0;
new loadedtext[MAX_PLAYERS]=0;
new housetimer[MAX_PLAYERS];
new lottonumber[MAX_PLAYERS]=0;
new requestspawn2[MAX_PLAYERS]=0;
new timec[MAX_PLAYERS]=0; new sitec[MAX_PLAYERS]=0;
new nospawnselect[MAX_PLAYERS]=0;
new introon[MAX_PLAYERS]=0;
new requestspawn[MAX_PLAYERS]=0;
new afterjobcheckpoint[MAX_PLAYERS]=0;
new isinhousepickup[MAX_PLAYERS]=0;
new para1[MAX_PLAYERS]=-1;
new spec[MAX_PLAYERS] = 0;
//player - close
//hitman - open
new hitmaner[MAX_PLAYERS]=-1;
new hitmanprice[MAX_PLAYERS]=0;
new hitmanby[MAX_PLAYERS]=-1;
//hitman - close
//event - open
new hidename[MAX_PLAYERS]=0;
new eventveh[MAX_PLAYERS]=0;
new eventmembers=0;
new einvisible2=0;
new startedevent=0;
new eventclosed=0;
new eenter=0; new ename=0;
new ejetpack=0;
new dhealme=1;
new einvisible=0;
new eramp=0;
new eventlimit=0;
new eventplayers=0;
new inevent[MAX_PLAYERS]=0;
new efight=0;
new eev=0;
new etune=1;
new efix=1;
new enos=1;
new ehyd=1;
new eflip=1;
new Float:eventx, Float:eventy, Float:eventz;
new eventinterior;
//event - close
//count - open
new activecount = 0;
new eventActiveCount = 0;
//count - close
//reaction test - open
new bool:reactionTestOn;
new reactionTestString[32];
//reaction test - close
//clothes - open
new bool: loadedClothes[MAX_PLAYERS]=false;
new selectedTmpClothID[MAX_PLAYERS]=0;
//clothes - close
//general - open
new bool: vehStatus2On[MAX_PLAYERS]=false;
new count=0;
new spawnedcars=0;
new attachobjecta;
new hidedf=0;
new Float:LX;new Float:LY;new Float:LZ;
new maxprivatevehs=1;
new sfpermission=0;
new ingmx=0;
new lottowin = 5000;
new serverrestarttimer=0;
new timerdmstart=-1;
new timerdmstart2=-1;
new updatedseconds;
new startedrob=0;
new mbgetedpos=0;
//general - close
//house, biz - open
new maxbiz=0;
new maxhouses=1;
//house, biz - close
//time - open
new hours;
new minutes;
new seconds;
new day;
new month;
new year;
//time - close
/*
pTeam==0 Civilian
pTeam==1 VIP
pTeam==2 Grove Street Families
pTeam==3 Rolling Heights Ballas
pTeam==4 Los Santos Vagos
pTeam==5 Varrio Los Aztecas
pTeam==6 Vinewood Cripz
pTeam==7 San Fierro Triads
pTeam==8 San Fierro Rifa
pTeam==9 Sons Of Anarchy
pTeam==10 Da Nang Boys
pTeam==11 Italian Mafia
pTeam==12 Bounty Hunters
pTeam==13 Los Santos Police Department
pTeam==14 Las Venturas Police Department
pTeam==15 Delta Force
pTeam==16 Soldier Boys
pTeam==17 Yakuza
pTeam==18 Syndicate Texas
pTeam==19 Blood Mafia
pTeam==20 MS13
pTeam==21 BG Mafia
pTeam==22 343 Black Street Avenue
*/
//gang guide - location - close
//new audiostreams[][] ={{"http://a.tumblr.com/tumblr_lmak69Gqkp1qae5mjo1.mp3"},{"http://clip2net.com/clip/m20668/1246982373-a6ebf-3097kb.mp3"}};
new audiostreams[][] ={{"http://k003.kiwi6.com/hotlink/rpxqi09ojz/Coolio_-_Gangsta_Paradise.mp3"},{"http://k003.kiwi6.com/hotlink/zpk5k464m4/50_Cent_-_Candy_Shop_ft._Olivia-_AudioTrimmer.com_.mp3"}
,{"http://k003.kiwi6.com/hotlink/7bv42eb2nz/Chamillionaire_-_Ridin_ft._Krayzie_Bone-_AudioTrimmer.com_.mp3"}
,{"http://k003.kiwi6.com/hotlink/ogmzy9sjat/Eminem_-_Phenomenal_Lyric_Video_-_AudioTrimmer.com_.mp3"}
,{"http://k003.kiwi6.com/hotlink/8sb17wkrqx/Roy_Jones_Jr._-_Can_t_Be_Touched.mp3"},{"http://k003.kiwi6.com/hotlink/7iyf4xb2fz/Tokyo_Drift_-_Teriyaki_Boyz_MUSIC_VIDEO_HD.mp3"}
,{"http://k003.kiwi6.com/hotlink/tcmbazycnr/Usher_-_Yeah_ft._Lil_Jon_Ludacris.mp3"},{"http://k003.kiwi6.com/hotlink/vmyupqresi/Wiz_Khalifa_-_Black_And_Yellow_G-Mix_ft._Snoop_Dogg_Juicy_J_and_T-Pain.mp3"}};
enum pLastCoor
{
Float:Coords[3],
Float:sPx,
Float:sPy,
Float:sPz,
sPint,
sLocal,
Float:sAngle,
sVw,
sCam,
};
new LastCoor[MAX_PLAYERS][pLastCoor];
enum streetRaceInfo
{
stTypeName[50],
stWinner[50],
stWinTime
}
new StreetRaceInfo[MAX_RACES][streetRaceInfo]={
{"Sprint"},
{"Drift"},
{"Drag"},
{"Laps"},
{"Offroad"}
};
enum tInfo
{
tName[256],
tRank1[256],
tRank2[256],
tRank3[256],
tRank4[256],
tRank5[256],
tRank6[256],
tMute,
tRCOLOR,
}
new TeamInfo[MAX_TEAMS][tInfo]= {
{"Civilian","Няма име","Няма име","Няма име","Няма име","Няма име","Няма име",0,COLOR_RCIVIL},
{"VIP","Новак","Напредващ новак","Подобряващ","Лява ръка на шефа","Дясна ръка на шефа","Шеф",0,COLOR_RVIP},
{"Grove Street Families","Gangsta","Original Gangsta","Double OG","Left Hand","Right Hand","Boss",0,COLOR_RGROVE},
{"Rolling Heights Ballas","Gangsta","Original Gangsta","Double OG","Left Hand","Right Hand","Boss",0,COLOR_RBALLAS},
{"Los Santos Vagos","Gangsta","Original Gangsta","Double OG","Left Hand","Right Hand","Boss",0,COLOR_RVAGOS},
{"Varrio Los Aztecas","Gangsta","Original Gangsta","Double OG","Left Hand","Right Hand","Boss",0,COLOR_RAZTEC},
{"Vinewood Cripz","Gangsta","Original Gangsta","Double OG","Left Hand","Right Hand","Boss",0,COLOR_RCRIPZ},
{"San Fierro Triads","Gangsta","Original Gangsta","Double OG","Left Hand","Right Hand","Boss",0,COLOR_RTRIADS},
{"San Fierro Rifa","Gangsta","Original Gangsta","Double OG","Left Hand","Right Hand","Boss",0,COLOR_RRIFA},
{"Sons Of Anarchy","Gangsta","Original Gangsta","Double OG","Left Hand","Right Hand","Boss",0,COLOR_RSOA},
{"Da Nang Boys","Gangsta","Original Gangsta","Double OG","Left Hand","Right Hand","Boss",0,COLOR_RNANG},
{"Italian Mafia","Gangsta","Original Gangsta","Double OG","Left Hand","Right Hand","Boss",0,COLOR_RITALIAN},
{"Bounty Hunters","Gangsta","Original Gangsta","Double OG","Left Hand","Right Hand","Boss",0,COLOR_RBOUNTY},
{"Los Santos Police Department","Cop","Officer","Detective","Commander","Assistant Chief","Chief of Police",0,COLOR_RLSPD},
{"Las Venturas Police Department","Cadet","Officer","SWAT","Sergant","Lead Sergant","Sheriff",0,COLOR_RLVPD},
{"Delta Force","Ефрейтор","Сержант","Капитан","Майиор","Полковник","Генерал",0,COLOR_RDF},
{"Soldier Boys","Gangsta","Original Gangsta","Double OG","Left Hand","Right Hand","Boss",0,COLOR_RSOLDIER},
{"Yakuza","Gangsta","Original Gangsta","Double OG","Left Hand","Right Hand","Boss",0,COLOR_RYAKUZA},
{"Syndicate Texas","Gangsta","Original Gangsta","Double OG","Left Hand","Right Hand","Boss",0,COLOR_RSYNDICATE},
{"Blood Mafia","Gangsta","Original Gangsta","Double OG","Left Hand","Right Hand","Boss",0,COLOR_RBLOODMAFIA},
{"Mara Salvatrucha 13","Gangsta","Original Gangsta","Double OG","Left Hand","Right Hand","Boss",0,COLOR_RMS13},
{"Bulgarian Mafia","Gangsta","Original Gangsta","Double OG","Left Hand","Right Hand","Boss",0,COLOR_RBGM},
{"343 Black Street Avenue","Gangsta","Original Gangsta","Double OG","Left Hand","Right Hand","Boss",0,COLOR_R343}
};
enum hInfo
{
Float:hX,
Float:hY,
Float:hZ,
Float:hcX,
Float:hcY,
Float:hcZ,
Float:hcA,
hcC,
hcC2,
hcV,
hcVeh,
hOwner,
hLocked,
hOwnerName[256],
hVeh,
hLevel,
hPrice,
hInterior,
hArmour,
hHealth
}
new HouseInfo[MAX_HOUSES][hInfo];
new housepickup[MAX_HOUSES];
enum bInfo
{
Float:bX,
Float:bY,
Float:bZ,
bOwner,
bLocked,
bEP,
Text3D:bText,
bOwnerName[256],
bLevel,
bPayOut,
bEarnings,
bFee,
bName[256],
bPrice,
bType
}
new BizInfo[MAX_BIZZ][bInfo];
new bizpickup[MAX_BIZZ];
enum vInfo
{
vAdminVehSpawnedBy,
vID,
vC1,
vC2,
vX,
vY,
vZ,
vAngle,
vOwner
}
new VehicleInfo[MAX_VEHICLES][vInfo];
enum pInfo
{
pRegistred,
pPassword[115],
pAdmin,
pTogFaction,
pTogLeader,
pArmour2,
pHealth2,
pMoonshineEffectTime,
pHeroinEffectTime,
pCocaineEffectTime,
pWeedEffectTime,
pRefuelTankIFC,
pTogCB,
pDFDuty,
pOrganisator,
pChantichki,
pClothes[9],
pSpecialForce,
pEvent,
pIFC,
pIFCDuty,
pManage,
pReadTA,
pDice,
pReactionTestsWon,
pCigarettes,
pDMONKills2,
pBriefcase,
pFuelcase,
pRadio,
pNumberAccs,
pReasonMute[256],
pIP[35],
pADMINMute,
pBizEP,
pBizCash,
pSamolet,
pVlak,
pDuelCountTimer,
pDuelCountTimer2,
pDuelCountTimer3,
pDuelCountTimer4,
pInvisible,
pHelikopter,
pGLeader,
pLodka,
pDMONKills,
pMoonshine,
pMoonshine1,
pWeed1,
pCocaine1,
pHeroin1,
pHook,
pStyle,
pWeed,
pHeroin,
pCocaine,
pRNMute,
pJob,
pAWarns,
pAdvertTime,
pRobber,
pRobberLead,
pMoneyboxSuccess,
pVIPLabel,
pStreetRaceSuccess,
pDeathmatchSuccess,
pCMN1,
pParrot,
pRefuelCan,
pRefuelTube,
pBizO,
pSpawnO,
pNone,
pNo,
pPizzaTimerWorkAgain,
pBoatTimerWorkAgain,
pCoalmineTimerWorkAgain,
pSweeperTimerWorkAgain,
pPilotTimerWorkAgain,
pDeliverTimerWorkAgain,
pBusTimerWorkAgain,
pTruckTimerWorkAgain,
pInfiniteNos,
pYes,
pOffice,
pADuty,
pASkin,
pTest,
pVip,
pKills,
pDeaths,
pWarns,
pTimeMute,
pTimeJail,
pTSpec,
pTGoto,
pTeam,
pRank,
pLevel,
pEP,
pEPS,
pCash,
pBSpec,
pJail,
pLastPayday,
pAHide,
pWeaponS,
pHouseO,
pMuted,
pJailReason,
pMuteReason,
pLMuted,
pAMuted,
pFMuted,
pFWarns,
pYear,
pPrivateVeh[MAX_PRIVATEVEHS],
pMonth,
pDay,
pHours,
pMinutes,
pSeconds,
pAFK,
pActiveCheck,
pAccount,
pLaser,
pWanted,
pPJail,
pGSM,
pTogPM,
pIgnorePM,
pLastPM,
//timers - location - open
pBan,
pComingBan,
pPlayerRefuelTimer,
pInfiniteNosTimer,
pBankSpawn,
pBlock,
pFixT,
pHealT,
pHideDMONKillText,
pVGuns,
pKick,
pAfterWork,
pFuel,
pDmon20SecWait,
pRefuel20LitTimer,
pStartIntro,
pTextSpamTimer,
pCommandSpamTimer,
pCmn1Timer,
pReSpawn,
pIntro,
pIntro1,
pIntro2,
pIntro3,
pIntro4,
pIntro5,
pAFKBack,
pIntro6
//timers - location - close
}
new PlayerInfo[MAX_PLAYERS][pInfo];
enum nInfo
{
pIP
}
new NameInfo[MAX_PLAYER_NAME][nInfo];
stock bool:GetPosInFrontOfPoint(&Float:OutputX, &Float:OutputY, Float:Angle, Float:Distance)
{
if(!Distance) return false;
OutputX += floatmul(Distance, floatsin(-Angle, degrees));
OutputY += floatmul(Distance, floatcos(-Angle, degrees));
return true;
}
stock SendFactionMessage(TEAM,color,string[])
{
for(new allPlayers=0; allPlayers<MAX_PLAYERS; allPlayers++)
{
if(PlayerInfo[allPlayers][pTeam]==TEAM)
{
SendClientMessage(allPlayers, color, string);
}
}
}
stock IsPlayerInRobPlace(playerid)
{
if(IsPlayerInRangeOfPoint(playerid, 7, ROB_CALIGULA_COORS) && robberyPlace==ROB_CALIGULA) return true;
if(IsPlayerInRangeOfPoint(playerid, 7, ROB_ARTIUM_COORS) && robberyPlace==ROB_ARTIUM) return true;
if(IsPlayerInRangeOfPoint(playerid, 7, ROB_BOAT_COORS) && robberyPlace==ROB_BOAT) return true;
return false;
}
stock FuelStationClose(playerid)
{
if(IsPlayerInRangeOfPoint(playerid, 10, 1004.0327,-937.5370,42.3281))
{
return 0;
}
if(IsPlayerInRangeOfPoint(playerid, 10, 1942.3719,-1772.8666,13.6406))
{
return 1;
}
if(IsPlayerInRangeOfPoint(playerid, 10, -1606.7223,-2713.3562,48.5335))
{
return 2;
}
if(IsPlayerInRangeOfPoint(playerid, 10, -2026.7813,156.5509,29.0391))
{
return 3;
}
if(IsPlayerInRangeOfPoint(playerid, 10, -2243.8149,-2559.8899,31.9219))
{
return 4;
}
if(IsPlayerInRangeOfPoint(playerid, 10, -1676.2601,413.5443,7.1797))
{
return 5;
}
if(IsPlayerInRangeOfPoint(playerid, 10, 2201.8296,2475.1350,10.8203))
{
return 6;
}
if(IsPlayerInRangeOfPoint(playerid, 10, 615.3391,1690.0454,6.9922))
{
return 7;
}
if(IsPlayerInRangeOfPoint(playerid, 10, -1328.2731,2677.5278,50.0625))
{
return 8;
}
if(IsPlayerInRangeOfPoint(playerid, 10, 70.3842,1219.0177,18.8116))
{
return 9;
}
if(IsPlayerInRangeOfPoint(playerid, 10, 2113.3835,919.5655,10.8203))
{
return 10;
}
if(IsPlayerInRangeOfPoint(playerid, 10, 2641.0115,1106.6252,10.8203))
{
return 11;
}
if(IsPlayerInRangeOfPoint(playerid, 10, 2146.7964,2747.8115,10.8203))
{
return 12;
}
if(IsPlayerInRangeOfPoint(playerid, 10, 1595.7935,2199.5996,10.8203))
{
return 13;
}
if(IsPlayerInRangeOfPoint(playerid, 10, -1471.1836,1863.7598,32.6328))
{
return 14;
}
if(IsPlayerInRangeOfPoint(playerid, 10, 655.7673,-565.0798,16.3359))
{
return 15;
}
if(IsPlayerInRangeOfPoint(playerid, 10, 1381.8230,459.1453,20.3452))
{
return 16;
}
return 0;
}
stock RestartPlayerSkin(playerid)
{
if((PlayerInfo[playerid][pTeam]==FACTION_VIP && PlayerInfo[playerid][pRank]==1) || PlayerInfo[playerid][pTeam]==FACTION_CIVILIAN)
{
if(firstskin[playerid]==1)  SetPlayerSkin(playerid,28);
if(firstskin[playerid]==2)  SetPlayerSkin(playerid,29);
if(firstskin[playerid]==3)  SetPlayerSkin(playerid,30);
if(firstskin[playerid]==4)  SetPlayerSkin(playerid,143);
if(firstskin[playerid]==5)  SetPlayerSkin(playerid,144);
if(firstskin[playerid]==6)  SetPlayerSkin(playerid,145);
if(firstskin[playerid]==7)  SetPlayerSkin(playerid,146);
if(firstskin[playerid]==8)  SetPlayerSkin(playerid,101);
if(firstskin[playerid]==9)  SetPlayerSkin(playerid,98);
if(firstskin[playerid]==10)  SetPlayerSkin(playerid,60);
if(firstskin[playerid]==11)  SetPlayerSkin(playerid,59);
if(firstskin[playerid]==12)  SetPlayerSkin(playerid,55);
if(firstskin[playerid]==13)  SetPlayerSkin(playerid,56);
if(firstskin[playerid]==14)  SetPlayerSkin(playerid,17);
if(firstskin[playerid]==15)  SetPlayerSkin(playerid,141);
if(firstskin[playerid]==16)  SetPlayerSkin(playerid,237);
if(firstskin[playerid]==17)  SetPlayerSkin(playerid,244);
if(firstskin[playerid]==18)  SetPlayerSkin(playerid,246);
if(firstskin[playerid]==19)  SetPlayerSkin(playerid,93);
if(firstskin[playerid]==20)  SetPlayerSkin(playerid,91);
if(firstskin[playerid]==21)  SetPlayerSkin(playerid,90);
}
if(PlayerInfo[playerid][pRank]>1 && PlayerInfo[playerid][pTeam]==FACTION_VIP)
SetPlayerSkin(playerid,gangrankskin[PlayerInfo[playerid][pTeam]][PlayerInfo[playerid][pRank]]);
if(PlayerInfo[playerid][pTeam]>1)
SetPlayerSkin(playerid,gangrankskin[PlayerInfo[playerid][pTeam]][PlayerInfo[playerid][pRank]]);
}
stock RestartPlayerColor(playerid)
{
if(PlayerInfo[playerid][pADuty]==0)
{
if(PlayerInfo[playerid][pInvisible]==0)
{
SetPlayerColor(playerid,TeamInfo[PlayerInfo[playerid][pTeam]][tRCOLOR]);
if(PlayerInfo[playerid][pTeam]==FACTION_CIVILIAN)
{
SetPlayerColor(playerid,0xFFFFFFFF);
}
}
else
{
SetPlayerColor(playerid,0xFFFFFF00);
}
}
if(PlayerInfo[playerid][pTeam]==FACTION_DELTAFORCE)
{
if(hidedf==1)
{
SetPlayerColor(playerid,0xFFFFFF00);
}
}
}
stock RestartVIPLaser(playerid)
{
new level=PlayerInfo[playerid][pTeam];
//<<<<< VIP LASER >>>>
if(PlayerInfo[playerid][pLaser]==1)
{
if(PlayerInfo[playerid][pVip]>3 || freevip==1)
{
SetPVarInt(playerid, "color", 0);
if(PlayerInfo[playerid][pTeam]==FACTION_VIP)
{
SetPVarInt(playerid, "color", 18643);
}
if(PlayerInfo[playerid][pTeam]==FACTION_GROVE)
{
SetPVarInt(playerid, "color", 19083);
}
if(PlayerInfo[playerid][pTeam]==13 || PlayerInfo[playerid][pTeam]==FACTION_LVPD)
{
SetPVarInt(playerid, "color", 19080);
}
if(PlayerInfo[playerid][pTeam]==FACTION_RIFA)
{
PlayerInfo[playerid][pLaser]=1;
SetPVarInt(playerid, "color", 19080);
}
if(PlayerInfo[playerid][pTeam]==FACTION_DELTAFORCE)
{
SetPVarInt(playerid, "color", 19084);
}
}
}
//<<<<< VIP LASER >>>>
}
stock strreplace(string[], const search[], const replacement[], bool:ignorecase = false, pos = 0, limit = -1, maxlength = sizeof(string)) {
// No need to do anything if the limit is 0.
if (limit == 0)
return 0;
new
sublen = strlen(search),
replen = strlen(replacement),
bool:packed = ispacked(string),
maxlen = maxlength,
len = strlen(string),
count5 = 0
;
// "maxlen" holds the max string length (not to be confused with "maxlength", which holds the max. array size).
// Since packed strings hold 4 characters per array slot, we multiply "maxlen" by 4.
if (packed)
maxlen *= 4;
// If the length of the substring is 0, we have nothing to look for..
if (!sublen)
return 0;
// In this line we both assign the return value from "strfind" to "pos" then check if it's -1.
while (-1 != (pos = strfind(string, search, ignorecase, pos))) {
// Delete the string we found
strdel(string, pos, pos + sublen);
len -= sublen;
// If there's anything to put as replacement, insert it. Make sure there's enough room first.
if (replen && len + replen < maxlen) {
strins(string, replacement, pos, maxlength);
pos += replen;
len += replen;
}
// Is there a limit of number of replacements, if so, did we break it?
if (limit != -1 && ++count5 >= limit)
break;
}
return count5;
}
stock RemovePlayerWeapon(playerid, weaponid)
{
new plyWeapons[12];
new plyAmmo[12];
for(new slot = 0; slot != 12; slot++)
{
new wep, ammo;
GetPlayerWeaponData(playerid, slot, wep, ammo);
if(wep != weaponid)
{
GetPlayerWeaponData(playerid, slot, plyWeapons[slot], plyAmmo[slot]);
}
}
ResetPlayerWeapons(playerid);
for(new slot = 0; slot != 12; slot++)
{
GivePlayerWeapon(playerid, plyWeapons[slot], plyAmmo[slot]);
}
}
stock IsPlayerInRangeOfVehicle(playerid, vehicleid, Float:Range)
{
new Float:Pos[3];
GetVehiclePos(vehicleid, Pos[0], Pos[1], Pos[2]);
return IsPlayerInRangeOfPoint(playerid, Range, Pos[0], Pos[1], Pos[2]);
}
GetNumberOfPages()
{
if((gTotalItems >= SELECTION_ITEMS) && (gTotalItems % SELECTION_ITEMS) == 0)
{
return (gTotalItems / SELECTION_ITEMS);
}
else return (gTotalItems / SELECTION_ITEMS) + 1;
}
stock randomex(min, max)
{
//Credits to y_less
new rand = random(max-min)+min;
return rand;
}
stock ReturnNextUnusedHouseID()
{
new house[64];
for(new h; h<maxhouses+2; h++){
format(house, 64, "/Houses/%d.ini", h);
if(!dini_Exists(house)) return h; }
return true;
}
stock ReturnNextUnusedBizID()
{
new biz[64];
for(new b; b<maxbiz+2; b++){
format(biz, 64, "/Bizz/%d.ini", b);
if(!dini_Exists(biz)) return b; }
return true;
}
PlayerText:CreateCurrentPageTextDraw(playerid, Float:Xpos, Float:Ypos)
{
new PlayerText:txtInit;
txtInit = CreatePlayerTextDraw(playerid, Xpos, Ypos, "0/0");
PlayerTextDrawUseBox(playerid, txtInit, 0);
PlayerTextDrawLetterSize(playerid, txtInit, 0.4, 1.1);
PlayerTextDrawFont(playerid, txtInit, 1);
PlayerTextDrawSetShadow(playerid, txtInit, 0);
PlayerTextDrawSetOutline(playerid, txtInit, 1);
PlayerTextDrawColor(playerid, txtInit, 0xACCBF1FF);
PlayerTextDrawShow(playerid, txtInit);
return txtInit;
}
PlayerText:CreatePlayerDialogButton(playerid, Float:Xpos, Float:Ypos, Float:Width, Float:Height, button_text[])
{
new PlayerText:txtInit;
txtInit = CreatePlayerTextDraw(playerid, Xpos, Ypos, button_text);
PlayerTextDrawUseBox(playerid, txtInit, 1);
PlayerTextDrawBoxColor(playerid, txtInit, 0x000000FF);
PlayerTextDrawBackgroundColor(playerid, txtInit, 0x000000FF);
PlayerTextDrawLetterSize(playerid, txtInit, 0.4, 1.1);
PlayerTextDrawFont(playerid, txtInit, 1);
PlayerTextDrawSetShadow(playerid, txtInit, 0); // no shadow
PlayerTextDrawSetOutline(playerid, txtInit, 0);
PlayerTextDrawColor(playerid, txtInit, 0x4A5A6BFF);
PlayerTextDrawSetSelectable(playerid, txtInit, 1);
PlayerTextDrawAlignment(playerid, txtInit, 2);
PlayerTextDrawTextSize(playerid, txtInit, Height, Width); // The width and height are reversed for centering.. something the game does <g>
PlayerTextDrawShow(playerid, txtInit);
return txtInit;
}
PlayerText:CreatePlayerHeaderTextDraw(playerid, Float:Xpos, Float:Ypos, header_text[])
{
new PlayerText:txtInit;
txtInit = CreatePlayerTextDraw(playerid, Xpos, Ypos, header_text);
PlayerTextDrawUseBox(playerid, txtInit, 0);
PlayerTextDrawLetterSize(playerid, txtInit, 1.25, 3.0);
PlayerTextDrawFont(playerid, txtInit, 0);
PlayerTextDrawSetShadow(playerid, txtInit, 0);
PlayerTextDrawSetOutline(playerid, txtInit, 1);
PlayerTextDrawColor(playerid, txtInit, 0xACCBF1FF);
PlayerTextDrawShow(playerid, txtInit);
return txtInit;
}
PlayerText:CreatePlayerBackgroundTextDraw(playerid, Float:Xpos, Float:Ypos, Float:Width, Float:Height)
{
new PlayerText:txtBackground = CreatePlayerTextDraw(playerid, Xpos, Ypos, "                                            ~n~"); // enough space for everyone
PlayerTextDrawUseBox(playerid, txtBackground, 1);
PlayerTextDrawBoxColor(playerid, txtBackground, 0x4A5A6BBB);
PlayerTextDrawLetterSize(playerid, txtBackground, 5.0, 5.0);
PlayerTextDrawFont(playerid, txtBackground, 0);
PlayerTextDrawSetShadow(playerid, txtBackground, 0);
PlayerTextDrawSetOutline(playerid, txtBackground, 0);
PlayerTextDrawColor(playerid, txtBackground,0x000000FF);
PlayerTextDrawTextSize(playerid, txtBackground, Width, Height);
PlayerTextDrawBackgroundColor(playerid, txtBackground, 0x4A5A6BBB);
PlayerTextDrawShow(playerid, txtBackground);
return txtBackground;
}
PlayerText:CreateModelPreviewTextDraw(playerid, modelindex, Float:Xpos, Float:Ypos, Float:width, Float:height)
{
new PlayerText:txtPlayerSprite = CreatePlayerTextDraw(playerid, Xpos, Ypos, ""); // it has to be set with SetText later
PlayerTextDrawFont(playerid, txtPlayerSprite, TEXT_DRAW_FONT_MODEL_PREVIEW);
PlayerTextDrawColor(playerid, txtPlayerSprite, 0xFFFFFFFF);
PlayerTextDrawBackgroundColor(playerid, txtPlayerSprite, 0x88888899);
PlayerTextDrawTextSize(playerid, txtPlayerSprite, width, height); // Text size is the Width:Height
PlayerTextDrawSetPreviewModel(playerid, txtPlayerSprite, modelindex);
PlayerTextDrawSetSelectable(playerid, txtPlayerSprite, 1);
PlayerTextDrawShow(playerid,txtPlayerSprite);
return txtPlayerSprite;
}
DestroyPlayerModelPreviews(playerid)
{
new x=0;
while(x != SELECTION_ITEMS) {
if(gSelectionItems[playerid][x] != PlayerText:INVALID_TEXT_DRAW) {
PlayerTextDrawDestroy(playerid, gSelectionItems[playerid][x]);
gSelectionItems[playerid][x] = PlayerText:INVALID_TEXT_DRAW;
}
x++;
}
}
ShowPlayerModelPreviews(playerid)
{
new x=0;
new Float:BaseX = DIALOG_BASE_X;
new Float:BaseY = DIALOG_BASE_Y - (SPRITE_DIM_Y * 0.33); // down a bit
new linetracker = 0;
new itemat = GetPVarInt(playerid, "skinc_page") * SELECTION_ITEMS;
// Destroy any previous ones created
DestroyPlayerModelPreviews(playerid);
while(x != SELECTION_ITEMS && itemat < gTotalItems) {
if(linetracker == 0) {
BaseX = DIALOG_BASE_X + 25.0; // in a bit from the box
BaseY += SPRITE_DIM_Y + 1.0; // move on the Y for the next line
}
gSelectionItems[playerid][x] = CreateModelPreviewTextDraw(playerid, gItemList[itemat], BaseX, BaseY, SPRITE_DIM_X, SPRITE_DIM_Y);
gSelectionItemsTag[playerid][x] = gItemList[itemat];
BaseX += SPRITE_DIM_X + 1.0; // move on the X for the next sprite
linetracker++;
if(linetracker == ITEMS_PER_LINE) linetracker = 0;
itemat++;
x++;
}
}
UpdatePageTextDraw(playerid)
{
new PageText[64+1];
format(PageText, 64, "%d/%d", GetPVarInt(playerid,"skinc_page") + 1, GetNumberOfPages());
PlayerTextDrawSetString(playerid, gCurrentPageTextDrawId[playerid], PageText);
}
CreateSelectionMenu(playerid)
{
gBackgroundTextDrawId[playerid] = CreatePlayerBackgroundTextDraw(playerid, DIALOG_BASE_X, DIALOG_BASE_Y + 20.0, DIALOG_WIDTH, DIALOG_HEIGHT);
gHeaderTextDrawId[playerid] = CreatePlayerHeaderTextDraw(playerid, DIALOG_BASE_X, DIALOG_BASE_Y, HEADER_TEXT);
gCurrentPageTextDrawId[playerid] = CreateCurrentPageTextDraw(playerid, DIALOG_WIDTH - 30.0, DIALOG_BASE_Y + 15.0);
gNextButtonTextDrawId[playerid] = CreatePlayerDialogButton(playerid, DIALOG_WIDTH - 30.0, DIALOG_BASE_Y+DIALOG_HEIGHT+100.0, 50.0, 16.0, NEXT_TEXT);
gPrevButtonTextDrawId[playerid] = CreatePlayerDialogButton(playerid, DIALOG_WIDTH - 90.0, DIALOG_BASE_Y+DIALOG_HEIGHT+100.0, 50.0, 16.0, PREV_TEXT);
ShowPlayerModelPreviews(playerid);
UpdatePageTextDraw(playerid);
}
DestroySelectionMenu(playerid)
{
DestroyPlayerModelPreviews(playerid);
PlayerTextDrawDestroy(playerid, gHeaderTextDrawId[playerid]);
PlayerTextDrawDestroy(playerid, gBackgroundTextDrawId[playerid]);
PlayerTextDrawDestroy(playerid, gCurrentPageTextDrawId[playerid]);
PlayerTextDrawDestroy(playerid, gNextButtonTextDrawId[playerid]);
PlayerTextDrawDestroy(playerid, gPrevButtonTextDrawId[playerid]);
gHeaderTextDrawId[playerid] = PlayerText:INVALID_TEXT_DRAW;
gBackgroundTextDrawId[playerid] = PlayerText:INVALID_TEXT_DRAW;
gCurrentPageTextDrawId[playerid] = PlayerText:INVALID_TEXT_DRAW;
gNextButtonTextDrawId[playerid] = PlayerText:INVALID_TEXT_DRAW;
gPrevButtonTextDrawId[playerid] = PlayerText:INVALID_TEXT_DRAW;
}
HandlePlayerItemSelection(playerid, selecteditem)
{
// In this case we change the player's skin
if(gSelectionItemsTag[playerid][selecteditem] >= 0 && gSelectionItemsTag[playerid][selecteditem] < 319) {
if(PlayerInfo[playerid][pADuty]==1){SetPlayerSkin(playerid, gSelectionItemsTag[playerid][selecteditem]);}
PlayerInfo[playerid][pASkin]=gSelectionItemsTag[playerid][selecteditem];
return;
}
}
stock ToggleEngine(vehicleid, toggle)
{
new engine, lights, alarm, doors, bonnet, boot, objective;
GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);
SetVehicleParamsEx(vehicleid, toggle, lights, alarm, doors, bonnet, boot, objective);
}
stock ToggleAlarm(vehicleid, toggle)
{
new engine, lights, alarm, doors, bonnet, boot, objective;
GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);
SetVehicleParamsEx(vehicleid, engine, lights, toggle, doors, bonnet, boot, objective);
}
stock ToggleBonnet(vehicleid, toggle)
{
new engine, lights, alarm, doors, bonnet, boot, objective;
GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);
SetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, toggle, boot, objective);
}
stock ToggleLights(vehicleid, toggle)
{
new engine, lights, alarm, doors, bonnet, boot, objective;
GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);
SetVehicleParamsEx(vehicleid, engine, toggle, alarm, doors, bonnet, boot, objective);
}
stock ToggleBoot(vehicleid, toggle)
{
new engine, lights, alarm, doors, bonnet, boot, objective;
GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);
SetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, toggle, objective);
}
stock IsPlayerAiming(playerid) {
new anim=GetPlayerAnimationIndex(playerid);
if (((anim >= 1160) && (anim <= 1163))||(anim==1167)||(anim==1365) ||
(anim==1643)||(anim==1453)||(anim==220)) return 1;
return 0;
}
stock IsPlayerInWater(playerid) {
new anim=GetPlayerAnimationIndex(playerid);
if (((anim >=  1538) && (anim <= 1542))||(anim==1544)||(anim==1250)||(anim==1062)) return 1;
return 0;
}
//IsPlayerInArea(playerid, Float:MinX, Float:MinY, Float:MaxX, Float:MaxY)
//{
//	GetPlayerPos(playerid, X[playerid], Y[playerid], Z[playerid]);
//	if(X[playerid] >= MinX && X[playerid] <= MaxX && Y[playerid] >= MinY && Y[playerid] <= MaxY) {
//		return 1;
//	}
//	return 0;
//}
/*stock IsPlayerInWater2( playerid )
{
GetPlayerPos(playerid, X[playerid], Y[playerid], Z[playerid]);
if(
(IsPlayerInArea(playerid, 2032.1371, 1841.2656, 1703.1653, 1467.1099) && Z[playerid] <= 9.0484) //lv piratenschiff
|| (IsPlayerInArea(playerid, 2109.0725, 2065.8232, 1962.5355, 10.8547) && Z[playerid] <= 10.0792) //lv visage
|| (IsPlayerInArea(playerid, -492.5810, -1424.7122, 2836.8284, 2001.8235) && Z[playerid] <= 41.06) //lv staucamm
|| (IsPlayerInArea(playerid, -2675.1492, -2762.1792, -413.3973, -514.3894) && Z[playerid] <= 4.24) //sf sьdwesten kleiner teich
|| (IsPlayerInArea(playerid, -453.9256, -825.7167, -1869.9600, -2072.8215) && Z[playerid] <= 5.72) //sf gammel teich
|| (IsPlayerInArea(playerid, 1281.0251, 1202.2368, -2346.7451, -2414.4492) && Z[playerid] <= 9.3145) //ls neben dem airport
|| (IsPlayerInArea(playerid, 2012.6154, 1928.9028, -1178.6207, -1221.4043) && Z[playerid] <= 18.45) //ls mitte teich
|| (IsPlayerInArea(playerid, 2326.4858, 2295.7471, -1400.2797, -1431.1266) && Z[playerid] <= 22.615) //ls weiter sьdцstlich
|| (IsPlayerInArea(playerid, 2550.0454, 2513.7588, 1583.3751, 1553.0753) && Z[playerid] <= 9.4171) //lv pool цstlich
|| (IsPlayerInArea(playerid, 1102.3634, 1087.3705, -663.1653, -682.5446) && Z[playerid] <= 112.45) //ls pool nordwestlich
|| (IsPlayerInArea(playerid, 1287.7906, 1270.4369, -801.3882, -810.0527) && Z[playerid] <= 87.123) //pool bei maddog's haus oben
|| (Z[playerid] < 1.5)
)
{
return ( 1 );
}
return ( 0 );
}*/
stock GivePlayerCash(playerid, money)
{
PlayerInfo[playerid][pCash]+=money;
ResetPlayerMoney(playerid);
GivePlayerMoney(playerid,PlayerInfo[playerid][pCash]);
return PlayerInfo[playerid][pCash];
}
stock OnLoginShowTexts(playerid)
{
format(string256, 256, "~b~EP: ~w~%d/%d",PlayerInfo[playerid][pEP],PlayerInfo[playerid][pLevel]+6,PlayerInfo[playerid][pEPS]);
TextDrawSetString(epeps[playerid], string256);
format(string256, 256, "~g~Level: ~w~%d   ~r~EP Skill:~n~             ~w~%d", PlayerInfo[playerid][pLevel],PlayerInfo[playerid][pEPS]);
TextDrawSetString(levelms[playerid], string256);
TextDrawShowForPlayer(playerid, topText);
TextDrawShowForPlayer(playerid, levelms[playerid]);
TextDrawShowForPlayer(playerid, epeps[playerid]);
}
stock GivePlayerEP(playerid, ep)
{
if(IsPlayerConnected(playerid))
{
PlayerInfo[playerid][pEP]+=ep;
format(string256, 256, "~b~EP: ~w~%d/%d",PlayerInfo[playerid][pEP],PlayerInfo[playerid][pLevel]+6,PlayerInfo[playerid][pEPS]);
TextDrawSetString(epeps[playerid], string256);
}
}
stock GivePlayerLevel(playerid, level)
{
if(IsPlayerConnected(playerid))
{
SetPlayerScore(playerid, PlayerInfo[playerid][pLevel]);
PlayerInfo[playerid][pLevel]+=level;
format(string256, 256, "~g~Level: ~w~%d   ~r~EP Skill:~n~             ~w~%d", PlayerInfo[playerid][pLevel],PlayerInfo[playerid][pEPS]);
TextDrawSetString(levelms[playerid], string256);
}
}
stock GivePlayerEPS(playerid, eps)
{
if(IsPlayerConnected(playerid))
{
PlayerInfo[playerid][pEPS]+=eps;
format(string256, 256, "~g~Level: ~w~%d   ~r~EP Skill:~n~             ~w~%d", PlayerInfo[playerid][pLevel],PlayerInfo[playerid][pEPS]);
TextDrawSetString(levelms[playerid], string256);
}
}
stock ActualizeDownStats(playerid)
{
if(IsPlayerConnected(playerid))
{
format(string256, 256, "~g~Level: ~w~%d   ~r~EP Skill:~n~             ~w~%d", PlayerInfo[playerid][pLevel],PlayerInfo[playerid][pEPS]);
TextDrawSetString(levelms[playerid], string256);
}
}
stock GetVehicleKmh(vehicleid)
{
new Float:x, Float:y, Float:z, vel;
GetVehicleVelocity(vehicleid, x, y, z);
vel=floatround(floatsqroot(x*x + y*y + z*z) * 180);
return vel;
}
//stock and other - location - closee
//main - location 2 - open
strtok(const string[], &index)
{
new length=strlen(string);
while ((index<length) && (string[index] <= ' '))
{
index++;
}
new offset=index;
new result[20];
while ((index<length) && (string[index]>' ') && ((index - offset)<(sizeof(result) - 1)))
{
result[index - offset]=string[index];
index++;
}
result[index - offset]=EOS;
return result;
}
IsNumeric(const string[])
{
for (new i=0, j=strlen(string); i<j; i++)
{
if (string[i]>'9'||string[i]<'0') return 0;
}
return 1;
}
ReturnUser(text[], playerid=INVALID_PLAYER_ID)
{
new pos=0;
while (text[pos]<0x21)
{
if (text[pos]==0) return INVALID_PLAYER_ID;
pos++;
}
new userid=INVALID_PLAYER_ID;
if (IsNumeric(text[pos]))
{
userid=strval(text[pos]);
if (userid >=0 && userid<MAX_PLAYERS)
{
if(!IsPlayerConnected(userid))
{
userid=INVALID_PLAYER_ID;
}
else
{
return userid;
}
}
}
new len=strlen(text[pos]);
new name[MAX_PLAYER_NAME];
for (new i=0; i<MAX_PLAYERS; i++)
{
if (IsPlayerConnected(i))
{
GetPlayerName(i, name, sizeof (name));
if (strcmp(name, text[pos], true, len)==0)
{
if (len==strlen(name))
{
return i;
}
else
{
count++;
userid=i;
}
}
}
}
if (count != 1)
{
if (playerid != INVALID_PLAYER_ID)
{
if (count)
{
SendClientMessage(playerid, 0xFF0000AA, "Multiple users found, please narrow search");
}
else
{
SendClientMessage(playerid, 0xFF0000AA, "No matching user found");
}
}
userid=INVALID_PLAYER_ID;
}
return userid;
}
AntiDeAMX()
{
new a[][] =
{
"Unarmed (Fist)",
"Brass K"
};
#pragma unused a
}
main()
{
printf("Сървърът беше пуснат успешно.");
printf("[- GTAINT -][O-F-F-I-C-I-A-L][0.3.7] · версия: 0.9 RC2\n\n");
printf("·Copyright (C) 2018-2022, Daniel Miroslavov Andreev");
printf("·Всички права са запазени.\n\n");
}
//main - location 2 - close
stock DefineGeneralTexts()
{
new stringText[256];
format(stringText,256,"~w~Top ~g~Player: ~r~%s",dmTopNickname);
topText=TextDrawCreate(5, 425.0, stringText);
TextDrawAlignment(topText,0);
TextDrawBackgroundColor(topText,0x000000ff);
TextDrawFont(topText,1);
TextDrawLetterSize(topText, 0.2800,1.8000);
TextDrawSetProportional(topText,1);
TextDrawSetShadow(topText,1);
}
stock DefineTop()
{
new dmon[64]; format(dmon, 64, "/Top/dmon.ini");
if(dini_Exists(dmon))
{
dmTopKills=dini_Int(dmon, "Kills");
format(dmTopNickname,64,"%s",dini_Get(dmon,"Killer"));
}
else
{
dini_Create(dmon);
dmTopKills=20;
dini_IntSet(dmon,"Kills",20);
dini_Set(dmon,"Killer","None");
}
}
stock LoadPrivateVehicles()
{
new vehiclestring[256];
for(new i=1; i<MAX_PRIVATEVEHS; i++)
{
format(vehiclestring,256, "/Vehicles/%d.ini", i);
if(dini_Exists(vehiclestring))
{
PrivateVeh[i][pvIsOwned]=dini_Int(vehiclestring,"VehicleOwn");
format(PrivateVeh[i][pvOwner],40,"%s",dini_Get(vehiclestring,"VehicleOwner"));
PrivateVeh[i][pvX]=dini_Float(vehiclestring,"VehicleX");
PrivateVeh[i][pvY]=dini_Float(vehiclestring,"VehicleY");
PrivateVeh[i][pvZ]=dini_Float(vehiclestring,"VehicleZ");
PrivateVeh[i][pvAngle]=dini_Float(vehiclestring,"VehicleA");
PrivateVeh[i][pvRespawnTime]=dini_Int(vehiclestring,"VehicleRES");
PrivateVeh[i][pvColor1]=dini_Int(vehiclestring,"VehicleC1");
PrivateVeh[i][pvColor2]=dini_Int(vehiclestring,"VehicleC2");
}
else if(!dini_Exists(vehiclestring))
{
dini_Create(vehiclestring);
dini_Set(vehiclestring,"VehicleOwner","No Owner");
dini_IntSet(vehiclestring,"VehicleOwn",1);
PrivateVeh[i][pvVirtualWorld]=-1;
format(PrivateVeh[i][pvOwner],40,"No Owner");
dini_IntSet(vehiclestring,"VehicleC1",1);
dini_IntSet(vehiclestring,"VehicleC2",1);
PrivateVeh[i][pvIsOwned]=1;
PrivateVeh[i][pvColor1] = 1;
PrivateVeh[i][pvColor2] = 1;
}
}
PrivateVeh[1][pvModel] = 411;
PrivateVeh[2][pvModel] = 560;
PrivateVeh[3][pvModel] = 565;
PrivateVeh[4][pvModel] = 565;
PrivateVeh[5][pvModel] = 560;
PrivateVeh[6][pvModel] = 562;
PrivateVeh[7][pvModel] = 411;
PrivateVeh[8][pvModel] = 560;
PrivateVeh[9][pvModel] = 579;
PrivateVeh[10][pvModel] = 562;
PrivateVeh[11][pvModel] = 565;
PrivateVeh[12][pvModel] = 411;

for(new i=1; i<MAX_PRIVATEVEHS; i++)
{
if(PrivateVeh[i][pvRespawnTime]==-1)
{
PrivateVeh[i][pvID] = AddStaticVehicle(PrivateVeh[i][pvModel],PrivateVeh[i][pvX],PrivateVeh[i][pvY],PrivateVeh[i][pvZ],PrivateVeh[i][pvAngle],PrivateVeh[i][pvColor1],PrivateVeh[i][pvColor2]);
SetVehicleVirtualWorld(PrivateVeh[i][pvID], PrivateVeh[i][pvVirtualWorld]);
}
else
{
PrivateVeh[i][pvID] = CreateVehicle(PrivateVeh[i][pvModel],PrivateVeh[i][pvX],PrivateVeh[i][pvY],PrivateVeh[i][pvZ],PrivateVeh[i][pvAngle],PrivateVeh[i][pvColor1],PrivateVeh[i][pvColor2],PrivateVeh[i][pvRespawnTime]);
SetVehicleVirtualWorld(PrivateVeh[i][pvID], PrivateVeh[i][pvVirtualWorld]);
}
}
}
stock LoadStreetRaces()
{

new racesString[64];
for(new alr=0; alr<MAX_RACES; alr++)
{
format(racesString, 64, "/Races/%d.ini", alr);
if(!dini_Exists(racesString))
{
dini_Create(racesString);
dini_Set(racesString,"stWinner","No Name");
dini_IntSet(racesString,"stWinTime",0);
format(StreetRaceInfo[alr][stWinner],50,"No Name");
StreetRaceInfo[alr][stWinTime]=0;
}
else if(dini_Exists(racesString))
{
format(StreetRaceInfo[alr][stWinner],50,dini_Get(racesString, "stWinner"));
StreetRaceInfo[alr][stWinTime]=dini_Int(racesString, "stWinTime");
}
}

}
stock GetDateAndHours()
{
getdate(year, month, day);
gettime(hours,minutes,seconds);
updatedseconds=seconds;
if(hours==0) SetWorldTime(0); if(hours==6) SetWorldTime(0); if(hours==12) SetWorldTime(12); if(hours==18) SetWorldTime(23);
if(hours==1) SetWorldTime(0); if(hours==7) SetWorldTime(6); if(hours==13) SetWorldTime(12); if(hours==19) SetWorldTime(23);
if(hours==2) SetWorldTime(0); if(hours==8) SetWorldTime(6); if(hours==14) SetWorldTime(12); if(hours==20) SetWorldTime(0);
if(hours==3) SetWorldTime(0); if(hours==9) SetWorldTime(12); if(hours==15) SetWorldTime(12); if(hours==21) SetWorldTime(0);
if(hours==4) SetWorldTime(0); if(hours==10) SetWorldTime(12); if(hours==16) SetWorldTime(12); if(hours==22) SetWorldTime(0);
if(hours==5) SetWorldTime(0); if(hours==11) SetWorldTime(12); if(hours==17) SetWorldTime(12); if(hours==23) SetWorldTime(0);
}
stock AddXmasObjects()
{
new tmpobjid;
//lv near ls - open
tmpobjid = CreateDynamicObject(1232, 1818.874511, 843.170715, 12.440773, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(1232, 1776.325073, 843.170715, 12.440773, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(3472, 1816.378051, 865.682617, 8.457870, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(3472, 1818.288696, 823.382324, 8.457870, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(3472, 1776.059326, 823.382324, 8.457870, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(3472, 1776.059326, 863.862426, 8.457870, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(3918, 1751.309204, 851.463867, 0.307352, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(19121, 1796.937255, 848.823730, 10.121256, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(731, 1796.901245, 841.665527, 9.477696, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(19121, 1796.937255, 836.592895, 10.121256, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(19121, 1801.298095, 844.002929, 10.121256, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(19121, 1792.187866, 844.002929, 10.121256, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(3472, 1796.591552, 841.749389, 12.653235, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(3918, 1726.129882, 827.223571, 0.887351, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(3918, 1714.790161, 827.223571, 0.887351, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(3918, 1703.370361, 827.223571, 0.887351, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(3918, 1703.370361, 817.882263, 0.887351, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(3918, 1714.839721, 817.882263, 0.887351, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(3918, 1714.839721, 817.882263, 0.887351, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(3918, 1672.889160, 832.122070, -1.702652, 0.000000, -0.199999, 0.000000, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(19833, 1759.995605, 820.532775, 10.239291, 0.000000, 0.000000, -60.699993, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(19833, 1757.142822, 818.932739, 10.239291, 0.000000, 0.000000, 136.700012, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(19833, 1759.246093, 816.950744, 10.239291, 0.000000, 0.000000, 136.700012, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(3534, 1799.915527, 842.795715, 26.927688, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(3534, 1799.915527, 842.795715, 35.217697, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(3534, 1793.984985, 842.795715, 35.217697, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(3534, 1793.984985, 837.255737, 25.897693, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
//near df ls - open
tmpobjid = CreateDynamicObject(3918, 826.174194, -1801.971557, 6.393503, 0.000000, 7.099998, -91.000000, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(3918, 855.079956, -1806.704223, 3.245041, 1.199999, 0.400001, -89.900001, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(3918, 855.060119, -1795.334228, 3.234421, 1.199999, 0.400001, -89.900001, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(3918, 855.099487, -1816.263549, 3.108327, 1.199999, 0.400001, -89.900001, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(19076, 844.703491, -1855.840454, 11.537346, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(18654, 839.158752, -1851.845336, 11.713728, 0.000000, 0.000000, 167.900054, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(18654, 839.261962, -1857.042480, 11.713728, 0.000000, 0.000000, 167.900054, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(18654, 839.318054, -1860.787109, 11.713728, 0.000000, 0.000000, 167.900054, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(18654, 841.050903, -1863.010009, 11.713728, 0.000000, 0.000000, -132.799957, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(18654, 843.724426, -1864.160766, 11.713728, 0.000000, 0.000000, -117.599967, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(18654, 846.436706, -1864.326293, 11.713728, 0.000000, 0.000000, -78.499977, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(18654, 849.092590, -1863.786010, 11.713728, 0.000000, 0.000000, -72.099990, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(18654, 851.052795, -1863.153076, 11.713728, 0.000000, 0.000000, -66.800010, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(18654, 841.945190, -1848.217651, 11.713728, 0.000000, 0.000000, 121.199974, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(18654, 847.036071, -1847.588989, 11.713728, 0.000000, 0.000000, 78.799972, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(18654, 850.479309, -1848.270874, 11.713728, 0.000000, 0.000000, 78.799972, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(19054, 844.317687, -1855.126220, 13.003446, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(19054, 846.357788, -1855.126220, 13.003446, 0.000000, 0.000000, -34.000003, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(19341, 845.909667, -1854.888183, 12.586122, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(19056, 844.434570, -1856.790771, 12.520775, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(19056, 845.824584, -1856.510498, 12.520775, 0.000000, 0.000000, -22.400001, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(19279, 843.790222, -1865.554321, 12.229921, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(19279, 846.830444, -1865.554321, 12.229921, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(19279, 849.270446, -1865.554321, 12.229921, 0.000000, 0.000000, 7.499998, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(19279, 851.391845, -1865.275268, 12.489923, 0.000000, 0.000000, 7.499998, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(19279, 851.380432, -1846.800048, 12.489923, 0.000000, 0.000000, 162.200027, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(19279, 848.117248, -1847.086791, 12.489923, 0.000000, 0.000000, 167.900039, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(19279, 844.444030, -1847.382690, 12.489923, 0.000000, 0.000000, -173.999954, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(19279, 840.903198, -1847.755615, 12.489923, 0.000000, 0.000000, -158.499969, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(19279, 839.798950, -1852.263916, 12.489923, 0.000000, 0.000000, -120.099937, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(19279, 839.895935, -1854.608520, 12.489923, 0.000000, 0.000000, -107.999969, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(19279, 840.059570, -1857.437622, 12.489923, 0.000000, 0.000000, -79.299987, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(19279, 840.640625, -1860.512817, 12.489923, 0.000000, 0.000000, -68.300018, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(19279, 851.093017, -1856.353515, 12.659922, 0.000000, 0.000000, 106.799957, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(19279, 851.365051, -1851.372192, 12.659922, 0.000000, 0.000000, 106.799957, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(19279, 851.416381, -1860.883422, 12.659922, 0.000000, 0.000000, 52.399955, -1, -1, -1, 300.00, 300.00);
//near df ls - close
//grove
tmpobjid = CreateDynamicObject(19054, 2493.585693, -1687.499023, 13.044038, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(19054, 2497.156005, -1687.499023, 13.044038, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(19076, 2510.633789, -1694.010498, 11.715305, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(19063, 2490.961181, -1689.843627, 16.310142, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(19063, 2498.790527, -1689.843627, 16.310142, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(19061, 2497.736816, -1689.931396, 16.234943, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(19061, 2493.797119, -1689.931396, 16.234943, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(19063, 2494.822265, -1689.843627, 16.310142, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(19061, 2490.054931, -1689.931396, 16.234943, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(19062, 2496.437500, -1689.907592, 16.336297, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(19062, 2492.347167, -1689.907592, 16.336297, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(19059, 2515.632812, -1689.888916, 15.628143, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(19059, 2513.182373, -1692.079223, 15.628143, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(19060, 2521.788085, -1677.478515, 17.063268, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(19060, 2521.788085, -1678.948730, 17.063268, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(19061, 2523.407958, -1659.160644, 17.039932, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(19061, 2523.407958, -1657.780029, 17.039932, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(19062, 2514.977783, -1651.203247, 15.853446, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(19062, 2512.555419, -1649.874389, 15.853446, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(19056, 2506.948242, -1652.636718, 13.009641, 0.000000, 0.000000, -39.000000, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(19056, 2509.631103, -1657.822143, 13.219640, 0.000000, 0.000000, -62.299999, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(19055, 2500.945800, -1647.428344, 13.064141, 0.000000, 0.000000, -9.900000, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(19055, 2496.878417, -1647.114990, 13.064141, 0.000000, 0.000000, -9.900000, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(19063, 2499.634033, -1644.002929, 15.558877, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(19063, 2497.302734, -1644.002929, 15.558877, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(19059, 2487.649902, -1647.716430, 15.876352, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(19059, 2485.939941, -1647.716430, 15.876352, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(19054, 2488.932128, -1649.681884, 13.119666, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(19054, 2485.490478, -1649.681884, 13.119666, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(19076, 2444.271484, -1672.417724, 12.061472, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
//ls near police
tmpobjid = CreateDynamicObject(970, 1491.724731, -1636.015258, 14.396038, 0.000000, 0.000000, 103.399948, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(970, 1490.659667, -1633.668579, 14.396038, 0.000000, 0.000000, 121.000015, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(970, 1488.051513, -1630.471069, 14.396038, 0.000000, 0.000000, 137.300079, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(970, 1484.691650, -1628.183471, 14.396038, 0.000000, 0.000000, 153.600082, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(970, 1480.732055, -1627.098266, 14.396038, 0.000000, 0.000000, 175.500152, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(970, 1476.670532, -1627.411254, 14.396038, 0.000000, 0.000000, -166.999710, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(970, 1472.949829, -1628.992553, 14.396038, 0.000000, 0.000000, -148.399703, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(970, 1469.906982, -1631.717163, 14.396038, 0.000000, 0.000000, -128.699615, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(970, 1467.952026, -1635.145263, 14.396038, 0.000000, 0.000000, -110.599601, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(970, 1467.137939, -1639.068237, 14.396038, 0.000000, 0.000000, -92.599594, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(970, 1467.527709, -1643.107910, 14.396038, 0.000000, 0.000000, -76.099617, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(970, 1469.221069, -1646.838134, 14.396038, 0.000000, 0.000000, -55.299617, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(970, 1472.097900, -1649.682983, 14.396038, 0.000000, 0.000000, -33.599617, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(970, 1475.842407, -1651.436523, 14.396038, 0.000000, 0.000000, -17.399614, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(970, 1479.827514, -1652.142700, 14.396038, 0.000000, 0.000000, -1.799615, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(970, 1483.773315, -1651.574218, 14.396038, 0.000000, 0.000000, 18.500394, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(970, 1487.250732, -1649.668457, 14.396038, 0.000000, 0.000000, 38.800354, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(970, 1489.772338, -1646.814697, 14.396038, 0.000000, 0.000000, 57.400341, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(14407, 1494.771484, -1640.054687, 10.974942, 0.000000, 0.000000, -88.799987, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(970, 1490.969970, -1644.712890, 14.396038, 0.000000, 0.000000, 65.900306, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(14467, 1493.029174, -1635.865112, 15.713924, 0.000000, 0.000000, 94.499954, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(14467, 1493.581420, -1642.903686, 15.713924, 0.000000, 0.000000, 87.799942, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(3877, 1490.398315, -1633.707641, 15.579391, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(3877, 1490.398315, -1633.707641, 15.579391, 0.000000, 0.000000, 30.200000, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(3877, 1484.205810, -1627.938598, 15.579391, 0.000000, 0.000000, 30.200000, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(3877, 1487.742065, -1630.336303, 15.579391, 0.000000, 0.000000, 30.200000, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(3877, 1467.353759, -1642.201293, 15.579391, 0.000000, 0.000000, 30.200000, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(3877, 1468.366333, -1645.174316, 15.579391, 0.000000, 0.000000, 30.200000, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(3877, 1470.710449, -1648.484008, 15.579391, 0.000000, 0.000000, 30.200000, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(3877, 1473.293579, -1650.438354, 15.579391, 0.000000, 0.000000, 30.200000, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(3877, 1468.814208, -1633.295532, 15.579391, 0.000000, 0.000000, 30.200000, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(3877, 1471.848388, -1629.921752, 15.579391, 0.000000, 0.000000, 30.200000, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(3877, 1478.578979, -1627.253051, 15.579391, 0.000000, 0.000000, 30.200000, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(3877, 1467.077758, -1638.285888, 15.579391, 0.000000, 0.000000, 30.200000, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(3877, 1482.035400, -1652.083984, 15.579391, 0.000000, 0.000000, 30.200000, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(3877, 1478.683837, -1652.229980, 15.579391, 0.000000, 0.000000, 30.200000, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(3877, 1486.248779, -1650.339233, 15.579391, 0.000000, 0.000000, 30.200000, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(3877, 1490.401367, -1646.002075, 15.579391, 0.000000, 0.000000, 30.200000, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(3524, 1492.554931, -1636.214965, 14.877551, 0.000000, 0.000000, 98.299964, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(3524, 1493.125000, -1643.306396, 14.877551, 0.000000, 0.000000, 98.299964, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(654, 1479.527099, -1638.791625, 13.272961, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(19076, 1478.453735, -1638.910766, 12.492962, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(3472, 1479.758178, -1640.452758, 11.142171, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(3472, 1480.209228, -1637.751220, 11.142171, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
}
public OnGameModeInit()
{
//main - location 3 - open
printf("Ако конзолата не се пусне до 15 секунди, натиснете ENTER.");
printf("Ако сървърът не дава да се влиза в него до 2 минути след пускането му, натиснете ENTER.");
SetGameModeText("INTENSE 0.9 RC2");
SendRconCommand("hostname [G-T-A][I-N-T-E-N-S-E][S-E-R-V-E-R][0.3]");
SendRconCommand("rcon_password BulgariaN");
//SendRconCommand("loadfs ls_elevator");
SendRconCommand("weburl none");
SendRconCommand("mapname Las Venturas");
SendRconCommand("language Bulgarian");
SendRconCommand("reloadbans");
SendRconCommand("lanmode 0");
SetTimer("GeneralTimer1s", 1000, 1);
SetTimer("GeneralTimer500ms", 500, 1);
DisableInteriorEnterExits();
EnableStuntBonusForAll(0);
AntiDeAMX();
DefineGangRankSkins();
DefineTop();
GetDateAndHours();
if(month==12)
{
AddXmasObjects();
}
DefineGeneralTexts();
LoadPrivateVehicles();
LoadStreetRaces();
new teams[64];
for(new alt=0; alt<MAX_TEAMS; alt++)
{
format(teams, 64, "/Teams/%d.ini", alt);
if(!dini_Exists(teams))
{//open [0]
dini_Create(teams);
dini_Set(teams,"tRank1",TeamInfo[alt][tRank1]);
dini_Set(teams,"tRank2",TeamInfo[alt][tRank2]);
dini_Set(teams,"tRank3",TeamInfo[alt][tRank3]);
dini_Set(teams,"tRank4",TeamInfo[alt][tRank4]);
dini_Set(teams,"tRank5",TeamInfo[alt][tRank5]);
dini_Set(teams,"tRank6",TeamInfo[alt][tRank6]);
}//close [0]
else
{
format(TeamInfo[alt][tRank1],256, "%s", dini_Get(teams, "tRank1"));
format(TeamInfo[alt][tRank2],256, "%s", dini_Get(teams, "tRank2"));
format(TeamInfo[alt][tRank3],256, "%s", dini_Get(teams, "tRank3"));
format(TeamInfo[alt][tRank4],256, "%s", dini_Get(teams, "tRank4"));
format(TeamInfo[alt][tRank5],256, "%s", dini_Get(teams, "tRank5"));
format(TeamInfo[alt][tRank6],256, "%s", dini_Get(teams, "tRank6"));
}
}
for(new i=0;i<25;i++)
{
fuelStationsFuel[i]=5000;
}
for(new aveh=0;aveh<MAX_VEHICLES;aveh++)
{
VehicleInfo[aveh][vAdminVehSpawnedBy]=-1;
vehfuel[aveh]=100;
}
for(new alb=0; alb<MAX_BIZZ; alb++)
{
HouseInfo[alb][hLevel]=-1;
new bizz[64]; format(bizz, 64, "/Bizz/%d.ini", alb);
if(dini_Exists(bizz))
{
maxbiz+=1;
BizInfo[alb][bX]=dini_Float(bizz, "bX");
BizInfo[alb][bY]=dini_Float(bizz, "bY");
BizInfo[alb][bZ]=dini_Float(bizz, "bZ");
BizInfo[alb][bLevel]=dini_Int(bizz, "bLevel");
BizInfo[alb][bOwner]=dini_Int(bizz, "bOwner");
BizInfo[alb][bEP]=dini_Int(bizz, "bEP");
BizInfo[alb][bLocked]=dini_Int(bizz, "bLocked");
BizInfo[alb][bPrice]=dini_Int(bizz, "bPrice");
BizInfo[alb][bFee]=dini_Int(bizz, "bFee");
BizInfo[alb][bPayOut]=dini_Int(bizz, "bPayOut");
BizInfo[alb][bEarnings]=dini_Int(bizz, "bEarnings");
BizInfo[alb][bType]=dini_Int(bizz, "bType");
format(BizInfo[alb][bOwnerName],256,"%s",dini_Get(bizz,"bOwnerName"));
format(BizInfo[alb][bName],256,"%s",dini_Get(bizz,"bName"));
bizpickup[alb]=CreatePickup(1272, 1,BizInfo[alb][bX],BizInfo[alb][bY],BizInfo[alb][bZ] ,0);
new stringbiz[828];
if(BizInfo[alb][bEP] >= 1)
{
format(stringbiz,828,"{00FF00}Ако притежаваш този бизнес\n ще получаваш {FFFFFF}%d EP{00FF00} на всеки {FF0000}Payday",BizInfo[alb][bEP]);
BizInfo[alb][bText] = Create3DTextLabel(stringbiz ,0x00FF00AA,BizInfo[alb][bX], BizInfo[alb][bY], BizInfo[alb][bZ],25, 0, 1);
}
}
}
for(new alh=0; alh<maxhouses+2; alh++)
{
HouseInfo[alh][hLevel]=-1;
new house[64]; format(house, 64, "/Houses/%d.ini", alh);
if(dini_Exists(house))
{
maxhouses+=1;
HouseInfo[alh][hX]=dini_Float(house, "hX");
HouseInfo[alh][hY]=dini_Float(house, "hY");
HouseInfo[alh][hZ]=dini_Float(house, "hZ");
HouseInfo[alh][hcX]=dini_Float(house, "hcX");
HouseInfo[alh][hcY]=dini_Float(house, "hcY");
HouseInfo[alh][hcZ]=dini_Float(house, "hcZ");
HouseInfo[alh][hcA]=dini_Float(house, "hcA");
HouseInfo[alh][hcC]=dini_Int(house, "hcC");
HouseInfo[alh][hcC2]=dini_Int(house, "hcC2");
HouseInfo[alh][hHealth]=dini_Int(house, "hHealth");
HouseInfo[alh][hArmour]=dini_Int(house, "hArmour");
HouseInfo[alh][hcV]=dini_Int(house, "hcV");
HouseInfo[alh][hcVeh]=dini_Int(house, "hcVeh");
HouseInfo[alh][hLevel]=dini_Int(house, "hLevel");
HouseInfo[alh][hOwner]=dini_Int(house, "hOwner");
HouseInfo[alh][hLocked]=dini_Int(house, "hLocked");
HouseInfo[alh][hcVeh]=dini_Int(house, "hcVeh");
HouseInfo[alh][hPrice]=dini_Int(house, "hPrice");
HouseInfo[alh][hInterior]=dini_Int(house, "hInterior");
format(HouseInfo[alh][hOwnerName],256,"%s",dini_Get(house,"hOwnerName"));
housepickup[alh]=CreatePickup(1273, 1,HouseInfo[alh][hX],HouseInfo[alh][hY],HouseInfo[alh][hZ] ,0);
if(HouseInfo[alh][hcV]!=0 && HouseInfo[alh][hcX] !=0.0)
{
HouseInfo[alh][hcVeh]=CreateVehicle(HouseInfo[alh][hcV],HouseInfo[alh][hcX],HouseInfo[alh][hcY],HouseInfo[alh][hcZ],HouseInfo[alh][hcA],HouseInfo[alh][hcC],HouseInfo[alh][hcC2],1800000);
}
}
}
//main - location 3 - close
//texts - location 2 - open
RESTART=TextDrawCreate(400.000000,328.000000," ");
TextDrawBackgroundColor(RESTART, 250);
TextDrawFont(RESTART, 1);
TextDrawLetterSize(RESTART, 0.2700,1.5500);
TextDrawColor(RESTART, -1);
TextDrawSetOutline(RESTART, 1);
TextDrawSetProportional(RESTART, 1);
ClockDate=TextDrawCreate(528.000000,25.500000,"  ~w~15:16:24"); //23.0
TextDrawBackgroundColor(ClockDate, 250);
TextDrawFont(ClockDate, 1);
TextDrawLetterSize(ClockDate, 0.5299,1.8999);
TextDrawColor(ClockDate, -1);
TextDrawSetOutline(ClockDate, 1);
TextDrawSetProportional(ClockDate, 1);
DMONKillText=TextDrawCreate(528.000000,328.000000,"~g~ + 1 Kill~n~+ 25 Armour");
TextDrawAlignment(DMONKillText,0);
TextDrawBackgroundColor(DMONKillText,0x000000ff);
TextDrawFont(DMONKillText,1);
TextDrawLetterSize(DMONKillText, 0.2800,1.8000);
TextDrawSetProportional(DMONKillText,1);
TextDrawSetShadow(DMONKillText,1);
intensetext=TextDrawCreate(499.000000,7.600000,"~w~intense");
TextDrawBackgroundColor(intensetext, 250);
TextDrawFont(intensetext, 1);
TextDrawLetterSize(intensetext, 0.5,2);
TextDrawColor(intensetext, -1);
TextDrawSetOutline(intensetext, 1);
TextDrawSetProportional(intensetext, 1);
Intro[0]=TextDrawCreate(642.0, 1.0, "~n~");
TextDrawLetterSize(Intro[0], 0.5, 49.5);
TextDrawUseBox(Intro[0], 1);
TextDrawBoxColor(Intro[0], 0x000000FF);
TextDrawTextSize(Intro[0], -2.0, 0.0);
Intro[1]=TextDrawCreate(190.000000, 190.000000, "~y~~h~intense team");
TextDrawFont(Intro[1], 2);
TextDrawLetterSize(Intro[1], 0.570000, 1.799999);
Intro[2]=TextDrawCreate(310.000000, 190.000000, "        ~w~presents...");
TextDrawFont(Intro[2], 2);
TextDrawColor(Intro[2], 0xFFFFFFFF);
TextDrawLetterSize(Intro[2], 0.570000, 1.799999);
Intro[3]=TextDrawCreate(190.0, 202.0, ".");
TextDrawFont(Intro[3], 1);
TextDrawLetterSize(Intro[3], 23.250051, 1.099999);
Intro[4]=TextDrawCreate(304.00, 223.0, "~w~g-t-a ~g~i-n-t-e-n-s-e ~r~s-e-r-v-e-r");
TextDrawFont(Intro[4], 2);
TextDrawLetterSize(Intro[4], 0.340000, 1.099999);
Intro[5]=TextDrawCreate(331.0, 235.0, "~p~official site soon");
TextDrawFont(Intro[5], 2);
TextDrawLetterSize(Intro[5], 0.340000, 1.099999);
//texts - location 2 - close
//classes - location - open
AddPlayerClass(28, 1481.2080,	-1770.6204,	18.7958,	359.4039, -1, -1, -1, -1, -1, -1);
AddPlayerClass(29, 1481.2080,	-1770.6204,	18.7958,	359.4039, -1, -1, -1, -1, -1, -1);
AddPlayerClass(30, 1481.2080,	-1770.6204,	18.7958,	359.4039, -1, -1, -1, -1, -1, -1);
AddPlayerClass(143, 1481.2080,	-1770.6204,	18.7958,	359.4039, -1, -1, -1, -1, -1, -1);
AddPlayerClass(144, 1481.2080,	-1770.6204,	18.7958,	359.4039, -1, -1, -1, -1, -1, -1);
AddPlayerClass(145, 1481.2080,	-1770.6204,	18.7958,	359.4039, -1, -1, -1, -1, -1, -1);
AddPlayerClass(146, 1481.2080,	-1770.6204,	18.7958,	359.4039, -1, -1, -1, -1, -1, -1);
AddPlayerClass(101, 1481.2080,	-1770.6204,	18.7958,	359.4039, -1, -1, -1, -1, -1, -1);
AddPlayerClass(98, 1481.2080,	-1770.6204,	18.7958,	359.4039, -1, -1, -1, -1, -1, -1);
AddPlayerClass(60, 1481.2080,	-1770.6204,	18.7958,	359.4039, -1, -1, -1, -1, -1, -1);
AddPlayerClass(59, 1481.2080,	-1770.6204,	18.7958,	359.4039, -1, -1, -1, -1, -1, -1);
AddPlayerClass(55, 1481.2080,	-1770.6204,	18.7958,	359.4039, -1, -1, -1, -1, -1, -1);
AddPlayerClass(56, 1481.2080,	-1770.6204,	18.7958,	359.4039, -1, -1, -1, -1, -1, -1);
AddPlayerClass(17, 1481.2080,	-1770.6204,	18.7958,	359.4039, -1, -1, -1, -1, -1, -1);
AddPlayerClass(141, 1481.2080,	-1770.6204,	18.7958,	359.4039, -1, -1, -1, -1, -1, -1);
AddPlayerClass(237, 1481.2080,	-1770.6204,	18.7958,	359.4039, -1, -1, -1, -1, -1, -1);
AddPlayerClass(244, 1481.2080,	-1770.6204,	18.7958,	359.4039, -1, -1, -1, -1, -1, -1);
AddPlayerClass(246, 1481.2080,	-1770.6204,	18.7958,	359.4039, -1, -1, -1, -1, -1, -1);
AddPlayerClass(93, 1481.2080,	-1770.6204,	18.7958,	359.4039, -1, -1, -1, -1, -1, -1);
AddPlayerClass(91, 1481.2080,	-1770.6204,	18.7958,	359.4039, -1, -1, -1, -1, -1, -1);
AddPlayerClass(90, 1481.2080,	-1770.6204,	18.7958,	359.4039, -1, -1, -1, -1, -1, -1);
//classes - location - close
//3dtextlabels - location - open
CreateDynamic3DTextLabel("Такса за вход $50\n{FFFF00}/enter", 0x3FBF03AA, 478.2492,-19.3125,1000.6797, 5.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 5.0);
Create3DTextLabel("{FF0000}За да влезеш в бизнеса {FFFFFF}24/7{FF0000} отиди до синята къщичка и напиши {FFFFFF}/enter\n{FF0000}За да излезеш от бизнеса напиши {FFFFFF}/exit{FF0000} до вратата.\n{FF0000}Като влезеш в бизнеса отиди до жълтия удивителен и напиши {FFFFFF}/buy{FF0000} за да видиш какво можеш да си купиш.", 0x08FF08FF, 2181.8801,1991.3766,10.8203, 20, 0);
Create3DTextLabel("{FF0000}За да влезеш в{FFFFFF} бизнеса за шофьорски книжки{FF0000} отиди до синята къщичка и напиши {FFFFFF}/enter\n{FF0000}За да излезеш от бизнеса напиши {FFFFFF}/exit {FF0000}до вратата\nКато влезеш в бизнеса отиди до монитора с въртяща се книжка и \nнапиши {FFFFFF}/dmv{FF0000} за да видиш каква шофьорска книжка може да си вземеш.", 0x08FF08FF, 1933.1718,2184.6824,10.8125, 20, 0);
Create3DTextLabel("{A4A400}Само за Delta Force\n{00FF00}Натисни {FF0000}SCROLL{00FF00} за да отвориш портата, ако си пеша.\nНатисни {FF0000}2 (над W){00FF00} за да отвориш портата, ако си с превозно средство. ", 0x08FF08FF, 836.2711,-2068.5017,12.8459, 20, 0);
Create3DTextLabel("{A4A400}Само за Delta Force\n{00FF00}Натисни {FF0000}SCROLL{00FF00} за да отвориш портата, ако си пеша.\nНатисни {FF0000}2 (над W){00FF00} за да отвориш портата, ако си с превозно средство. ", 0x08FF08FF, 837.4003,-2025.4377,12.8672, 20, 0);
Create3DTextLabel("{0040FF}Само за LVPD\n{00FF00}Натисни {FF0000}SCROLL{00FF00} за да отвориш портата, ако си пеша.\nНатисни {FF0000}2 (над W){00FF00} за да отвориш портата, ако си с превозно средство. ", 0x08FF08FF, 2336.8582,2443.3186,6.1081, 20, 0);
Create3DTextLabel("{0040FF}Само за LVPD\n{00FF00}Натисни {FF0000}SCROLL{00FF00} за да отвориш бариерата, ако си пеша.\nНатисни {FF0000}2 (над W){00FF00} за да отвориш бариерата, ако си с превозно средство. ", 0x08FF08FF, 2237.7688,2453.5955,10.7848, 20, 0);
Create3DTextLabel("{FF0000}VIP's Gun Machine\n{FF4000}Натисни {FFFF00}SCROLL{FF4000} за да си вземеш оръжие", 0xFFFFFFFF,1230.4954,-2005.5513,60.8984, 10, 0);
Create3DTextLabel("San Fierro Triads's Gun Machine\n{FF4000}Натисни {FFFF00}SCROLL{FF4000} за да си вземеш оръжие", COLOR_RTRIADS,1969.2216,953.4484,10.8203, 10, 0);
Create3DTextLabel("Italian Mafia's Gun Machine\n{FF4000}Натисни {FFFF00}SCROLL{FF4000} за да си вземеш оръжие", COLOR_RITALIAN,-691.5956,935.6432,13.6328, 10, 0);
Create3DTextLabel("{A4A400}Delta Force's Gun Machine\n{FF4000}Натисни {FFFF00}SCROLL{FF4000} за да си вземеш оръжие", 0xFFFFFFFF,213.2412,1806.7898,17.6406, 10, 0);
Create3DTextLabel("{33AA33}Grove's Gun Machine\n{FF4000}Натисни {FFFF00}SCROLL{FF4000} за да си вземеш оръжие", 0xFFFFFFFF,2497.0251,-1703.2537,1014.7422, 10, 1);
Create3DTextLabel("{276BA9}Syndicate Texas's Gun Machine\n{FF4000}Натисни {FFFF00}SCROLL{FF4000} за да си вземеш оръжие", 0xFFFFFFFF,2497.0251,-1703.2537,1014.7422, 10, 2);
Create3DTextLabel("{0080FF}Rifa's Gun Machine\n{FF4000}Натисни {FFFF00}SCROLL{FF4000} за да си вземеш оръжие", 0xFFFFFFFF,2449.6282,-1696.3843,1013.5078, 10, 1);
Create3DTextLabel("{FF40FF}Bulgarian Mafia's Gun Machine\n{FF4000}Натисни {FFFF00}SCROLL{FF4000} за да си вземеш оръжие", 0xFFFFFFFF,1267.0983,-784.8137,1091.9063, 10, 1);
Create3DTextLabel("Mara Salvatrucha 13's Gun Machine\n{FF4000}Натисни {FFFF00}SCROLL{FF4000} за да си вземеш оръжие", COLOR_RMS13,-38.7398,1078.9197,20.2060, 10, 0);
Create3DTextLabel("{33AA33}Grove Street Families\n{FF4000}Натисни {FFFF00}ENTER{FF4000} за да влезеш",0xFFFFFFFF,2495.3496,-1690.8401,14.7656,10,0,0);
Create3DTextLabel("{33AA33}Grove Street Families\n{FF4000}Натисни {FFFF00}ENTER{FF4000} за да излезеш",0xFFFFFFFF,2496.049804,-1695.238159,1014.742187,10,1,0);
Create3DTextLabel("{FF0000}Напиши {FFFFFF}/plate{FF0000} за да смениш номера на твоята кола", 0xFFFFFFFF,1838.5139,-1856.2627,13.3828, 10, 0);
Create3DTextLabel("{FF0000}Напиши {FFFFFF}/plate{FF0000} за да смениш номера на твоята кола", 0xFFFFFFFF,-1786.8502,1205.3788,25.1250, 10, 0);
Create3DTextLabel("{FF0000}Напиши {FFFFFF}/plate{FF0000} за да смениш номера на твоята кола", 0xFFFFFFFF,2005.9323,2298.5537,10.8203, 10, 0);
Create3DTextLabel("{FF0000}За да влезете в бизнеса напишете {FFFFFF}/enter",0xFFFFFFFF,1942.1660,2184.6045,10.8203,20,0,0);
Create3DTextLabel("{FF0000}За да влезете в бизнеса напишете {FFFFFF}/enter\n{FF0000}Когато искате да излезете от него напишете {FFFFFF}/exit ",0xFFFFFFFF,1122.7079,-2037.0201,69.8942,20,0,0);
Create3DTextLabel("{FF0000}За да станете VIP потребител и да имате повече команди прочетете {FFFFFF}/viphelp ",0xFFFFFFFF,1203.2736,-2011.3766,85.1735,20,0,0);
Create3DTextLabel("{FF0000}За да станете VIP потребител и да имате повече команди прочетете {FFFFFF}/viphelp ",0xFFFFFFFF,1706.1938,1448.5729,10.8181,20,0,0);
Create3DTextLabel("{FF0000}За да станете VIP потребител и да имате повече команди прочетете {FFFFFF}/viphelp ",0xFFFFFFFF,1240.1112,-2038.7124,61.8419,20,0,0);
Create3DTextLabel("{FF0000}За да станете VIP потребител и да имате повече команди прочетете {FFFFFF}/viphelp ",0xFFFFFFFF,1125.4641,-2029.7620,75.8093,20,0,0);
Create3DTextLabel("{FF0000}За да станете VIP потребител и да имате повече команди прочетете {FFFFFF}/viphelp ",0xFFFFFFFF,1510.7715,-1607.2186,15.3986,20,0,0);
Create3DTextLabel("{FF0000}За да станете VIP потребител и да имате повече команди прочетете {FFFFFF}/viphelp ",0xFFFFFFFF,1176.9319,-2037.2865,69.1413,20,0,0);
Create3DTextLabel("{FF0000}За да станете VIP потребител и да имате повече команди прочетете {FFFFFF}/viphelp ",0xFFFFFFFF,1152.7411,1342.2012,10.8203,20,0,0);
Create3DTextLabel("{FF0000}За да видите правилата на сървъра използвайте командата {FFFFFF}/rules ",0xFFFFFFFF,1125.4333,-2044.1055,75.8093,20,0,0);
//Create3DTextLabel("{FF0000}За да станете VIP потребител и да имате повече команди прочетете {FFFFFF}/viphelp ",0xFFFFFFFF,1538.7894,-1690.8087,13.5469,20,0,0);
Create3DTextLabel("{FF0000}За да станете VIP потребител и да имате повече команди прочетете {FFFFFF}/viphelp ",0xFFFFFFFF,1480.1886,-1639.7046,14.1484,20,0,0);
Create3DTextLabel("{FF0000}За да станете VIP потребител и да имате повече команди прочетете {FFFFFF}/viphelp ",0xFFFFFFFF,2115.0881,962.9519,15.7348,20,0,0);
Create3DTextLabel("{FF0000}Сайт на сървъра -{FFFFFF} soon\n{FF0000}Форум на сървъра -{FFFFFF} soon",0xFFFFFFFF,1347.9866,-1742.0200,13.3906,20,0,0);
Create3DTextLabel("{FF0000}Сайт на сървъра -{FFFFFF} soon\n{FF0000}Форум на сървъра -{FFFFFF} soon",0xFFFFFFFF,1174.8677,-2037.0220,77.3178,20,0,0);
Create3DTextLabel("{FF0000}Сайт на сървъра -{FFFFFF} soon\n{FF0000}Форум на сървъра -{FFFFFF} soon",0xFFFFFFFF,1246.3448,-2052.0242,64.5867,20,0,0);
Create3DTextLabel("{FF0000}Сайт на сървъра -{FFFFFF} soon\n{FF0000}Форум на сървъра -{FFFFFF} soon",0xFFFFFFFF,2097.7795,963.0507,15.7348,20,0,0);
Create3DTextLabel("{FF0000}За да влезете в бизнеса напишете {FFFFFF}/enter ",0xFFFFFFFF,2194.6130,1990.9689,12.2969,15,0,0);
//Create3DTextLabel("{FF0000}За да станете VIP потребител и да имате повече команди прочетете {FFFFFF}/viphelp ",0xFFFFFFFF,1481.1449,-1739.6332,13.5469,20,0,0);
Create3DTextLabel("{FF0000}За да си тунинговате колата влезте вътре и пишете {FFFFFF}/tune ",0xFFFFFFFF,1249.7540,-2058.7312,59.7104,20,0,0);
Create3DTextLabel("{FF0000}За да си тунинговате колата влезте вътре и пишете {FFFFFF}/tune ",0xFFFFFFFF,1248.7421,-2051.7422,59.7570,20,0,0);
Create3DTextLabel("{FF0000}{FF0000}Сайт на сървъра -{FFFFFF} soon\n{FF0000}Форум на сървъра -{FFFFFF} soon",0xFFFFFFFF,1262.4489,-2026.9534,59.3499,20,0,0);
Create3DTextLabel("{FF0000}{FF0000}Сайт на сървъра -{FFFFFF} soon\n{FF0000}Форум на сървъра -{FFFFFF} soon",0xFFFFFFFF,1262.4489,-2026.9534,59.3499,20,0,0);
Create3DTextLabel("{FF0000}{FF0000}Сайт на сървъра -{FFFFFF} soon\n{FF0000}Форум на сървъра -{FFFFFF} soon",0xFFFFFFFF,1538.1416,-1674.9762,13.5469,20,0,0);
Create3DTextLabel("{FF0000}{FF0000}Сайт на сървъра -{FFFFFF} soon\n{FF0000}Форум на сървъра -{FFFFFF} soon",0xFFFFFFFF,2397.0432,1019.7305,10.8203,20,0,0);
Create3DTextLabel("{FF0000}{FF0000}Сайт на сървъра -{FFFFFF} soon\n{FF0000}Форум на сървъра -{FFFFFF} soon",0xFFFFFFFF,2005.7382,1545.0450,13.5198,20,0,0);
Create3DTextLabel("{C600C6}Натисни {FFFFFF}ENTER{C600C6} за да преминеш в другия {FFFFFF}Virtual World",0xFFFFFFFF,-1392.2205,2111.2021,42.1264,20,0,0);
Create3DTextLabel("{C600C6}Натисни {FFFFFF}ENTER{C600C6} за да преминеш в другия {FFFFFF}Virtual World",0xFFFFFFFF,-1392.2205,2111.2021,42.1264,20,1,0);
Create3DTextLabel("{FF0000}Ако искате да се телепортирате можете да използвате някой от тези телепорти:\n{FFFFFF}/dm /dm2 /ls /lv ",0xFFFFFFFF,1240.0763,-2036.8870,59.9441,20,0,0);
Create3DTextLabel("{FF0000}За да се качите в колата като шофьор използвайте {FFFFFF}F {FF0000}или {FFFFFF}ENTER\n{FF0000}За да се качите като пътник натиснете {FFFFFF}G\n{FF0000}За да се покажете през прозореца натиснете {FFFFFF}CAPS LOCK{FF0000} или {FFFFFF}H",0xFFFFFFFF,1240.4271,-2007.6287,59.9621,20,0,0);
Create3DTextLabel("{FF0000}За да се качите в колата като шофьор използвайте {FFFFFF}F {FF0000}или {FFFFFF}ENTER\n{FF0000}За да се качите като пътник натиснете {FFFFFF}G\n{FF0000}За да се покажете през прозореца натиснете {FFFFFF}CAPS LOCK{FF0000} или {FFFFFF}H",0xFFFFFFFF,1240.7898,-2049.2617,59.9841,20,0,0);
Create3DTextLabel("{FF0000}За да се качите в колата като шофьор използвайте {FFFFFF}F {FF0000}или {FFFFFF}ENTER\n{FF0000}За да се качите като пътник натиснете {FFFFFF}G\n{FF0000}За да се покажете през прозореца натиснете {FFFFFF}CAPS LOCK{FF0000} или {FFFFFF}H",0xFFFFFFFF,1279.9983,-2045.3997,59.1966,20,0,0);
Create3DTextLabel("{FF0000}За да се качите в колата като шофьор използвайте {FFFFFF}F {FF0000}или {FFFFFF}ENTER\n{FF0000}За да се качите като пътник натиснете {FFFFFF}G\n{FF0000}За да се покажете през прозореца натиснете {FFFFFF}CAPS LOCK{FF0000} или {FFFFFF}H",0xFFFFFFFF,1278.9470,-2007.0658,59.0642,20,0,0);
Create3DTextLabel("{FF0000}За да пишете в сървъра натиснете {FFFFFF}T {FF0000}или {FFFFFF}~\n{FF0000}За да видите всички команди напишете {FFFFFF}/help",0xFFFFFFFF,1203.2736,-2011.3766,85.1735,20,0,0);
Create3DTextLabel("{FF0000}За да пишете в сървъра натиснете {FFFFFF}T {FF0000}или {FFFFFF}~\n{FF0000}За да видите всички команди напишете {FFFFFF}/help",0xFFFFFFFF,1183.0652,-2011.4884,85.1735,20,0,0);
Create3DTextLabel("{FF0000}За да пишете в сървъра натиснете {FFFFFF}T {FF0000}или {FFFFFF}~\n{FF0000}За да видите всички команди напишете {FFFFFF}/help",0xFFFFFFFF,1183.2747,-2062.8635,85.1735,20,0,0);
Create3DTextLabel("{FF0000}За да пишете в сървъра натиснете {FFFFFF}T {FF0000}или {FFFFFF}~\n{FF0000}За да видите всички команди напишете {FFFFFF}/help",0xFFFFFFFF,1204.5096,-2063.1487,84.7134,20,0,0);
Create3DTextLabel("{FF0000}За да пишете в сървъра натиснете {FFFFFF}T {FF0000}или {FFFFFF}~\n{FF0000}За да видите всички команди напишете {FFFFFF}/help",0xFFFFFFFF,1243.5411,-2044.7922,75.9834,20,0,0);
Create3DTextLabel("{FF0000}За да пишете в сървъра натиснете {FFFFFF}T {FF0000}или {FFFFFF}~\n{FF0000}За да видите всички команди напишете {FFFFFF}/help",0xFFFFFFFF,1241.7443,-2007.1014,76.0035,20,0,0);
Create3DTextLabel("{FF0000}За да пишете в сървъра натиснете {FFFFFF}T {FF0000}или {FFFFFF}~\n{FF0000}За да видите всички команди напишете {FFFFFF}/help",0xFFFFFFFF,1280.7434,-2006.4984,74.9713,20,0,0);
Create3DTextLabel("{FF0000}За да пишете в сървъра натиснете {FFFFFF}T {FF0000}или {FFFFFF}~\n{FF0000}За да видите всички команди напишете {FFFFFF}/help",0xFFFFFFFF,1280.3582,-2041.9338,75.0235,20,0,0);
Create3DTextLabel("{FF0000}За да започнеш {FFFFFF}Boat Job {FF0000}влез в някоя от лодките и напиши {FFFFFF}/boat", -1, 2127.8530,-87.0102,2.1304, 40.0, 0, 0);
Create3DTextLabel("{FF0000}За да започнеш {FFFFFF}Coalmine Job {FF0000}влез в някой от самосвалите и напиши {FFFFFF}/coalmine", -1, 852.7022,851.3765,13.3516, 40.0, 0, 0);
Create3DTextLabel("{FF0000}За да започнеш {FFFFFF}Pilot Job {FF0000}влез в някой от самолетите и напиши {FFFFFF}/pilot", -1, 402.0841,2529.5537,16.5748, 40.0, 0, 0);
Create3DTextLabel("{FF0000}За да започнеш {FFFFFF}Truck Job {FF0000}влез в някой от камионите и напиши {FFFFFF}/truck", -1, 76.4991,-258.7651,1.5781, 40.0, 0, 0);
Create3DTextLabel("{FF0000}За да започнеш {FFFFFF}Bus Job {FF0000}влез в някой от автобусите и напиши {FFFFFF}/bus", -1, -543.4083,2592.2168,53.5156, 40.0, 0, 0);
Create3DTextLabel("{FF0000}За да започнеш {FFFFFF}Pizzaboy Job {FF0000}влез в някой от моторите и напиши {FFFFFF}/pizza", -1, 1363.4863,249.8157,19.5669, 40.0, 0, 0);
Create3DTextLabel("{FF0000}За да започнеш {FFFFFF}Deliver Job {FF0000}влез в някой от камионите и напиши {FFFFFF}/deliver", -1, -15.7992,-316.2803,5.4229, 40.0, 0, 0);
Create3DTextLabel("{FF0000}За да вдигате левел трябва да събирате {FFFFFF}EP.\n {FF0000}На всеки кръгъл час има Payday и получавате {FFFFFF}1 EP\n{FF0000}EP можете да събирате от мисиите Moneybox, Streetrace, Deathmatch.\nОт {FFFFFF}/stats{FF0000} може да видите колко EP имате.\nЗа да вдигнете вашия левел напишете {FFFFFF}/buylevel\n{FF0000}За повече информация моля посетете нашия форум!",0xFFFFFFFF,1210.2579,-2036.9921,69.0078,20,0,0);
Create3DTextLabel("{FFFFFF}Използвай {008000}/tow\n{FF0000}за да закачите кола", -1, 1015.7611,-1025.3098,32.1016, 20.0, 0, 0);
Create3DTextLabel("{FFFFFF}Използвай {008000}/tow\n{FF0000}за да закачите кола", -1, 1652.8636,2200.3342,12.1981, 20.0, 0, 0);
Create3DTextLabel("{FFFFFF}Механик\n{FF4000}Напиши {FFFF00}/mduty{FF4000} за да си смениш скина\nИзползвай {FFFF00}/mdutyoff{FF4000} за да го премахнеш", -1, 1015.9524,-1026.5002,32.1016, 20.0, 0, 0);
Create3DTextLabel("{FFFFFF}Механик\n{FF4000}Напиши {FFFF00}/mduty{FF4000} за да си смениш скина\nИзползвай {FFFF00}/mdutyoff{FF4000} за да го премахнеш", -1, 1652.8765,2199.9587,10.8203, 20.0, 0, 0);
Create3DTextLabel("{FF0000}Зареди цистерната\n{FFFF00}/refillpt", -1, 264.4190,1455.0266,10.5859, 30.0, 0, 0);
//gas stations texts - location - open
fuelStationText[0]=Create3DTextLabel("{0040FF}[ Бензиностанция ]\n{FF0000}5000/5000 литра\n{C14124}1 литър {FFFFFF}= {00BF00}1 долар\n{F97804}Напиши {FFFF00}/refuel {F97804}за да заредиш",0xFFFFFFFF,1004.0327,-937.5370,42.3281,40,0,0);
fuelStationText[1]=Create3DTextLabel("{0040FF}[ Бензиностанция ]\n{FF0000}5000/5000 литра\n{C14124}1 литър {FFFFFF}= {00BF00}1 долар\n{F97804}Напиши {FFFF00}/refuel {F97804}за да заредиш",0xFFFFFFFF,1942.3719,-1772.8666,13.6406,40,0,0);
fuelStationText[2]=Create3DTextLabel("{0040FF}[ Бензиностанция ]\n{FF0000}5000/5000 литра\n{C14124}1 литър {FFFFFF}= {00BF00}1 долар\n{F97804}Напиши {FFFF00}/refuel {F97804}за да заредиш",0xFFFFFFFF,-1606.7223,-2713.3562,48.5335,40,0,0);
fuelStationText[3]=Create3DTextLabel("{0040FF}[ Бензиностанция ]\n{FF0000}5000/5000 литра\n{C14124}1 литър {FFFFFF}= {00BF00}1 долар\n{F97804}Напиши {FFFF00}/refuel {F97804}за да заредиш",0xFFFFFFFF,-2026.7813,156.5509,29.0391,40,0,0);
fuelStationText[4]=Create3DTextLabel("{0040FF}[ Бензиностанция ]\n{FF0000}5000/5000 литра\n{C14124}1 литър {FFFFFF}= {00BF00}1 долар\n{F97804}Напиши {FFFF00}/refuel {F97804}за да заредиш",0xFFFFFFFF,-2243.8149,-2559.8899,31.9219,40,0,0);
fuelStationText[5]=Create3DTextLabel("{0040FF}[ Бензиностанция ]\n{FF0000}5000/5000 литра\n{C14124}1 литър {FFFFFF}= {00BF00}1 долар\n{F97804}Напиши {FFFF00}/refuel {F97804}за да заредиш",0xFFFFFFFF,-1676.2601,413.5443,7.1797,40,0,0);
fuelStationText[6]=Create3DTextLabel("{0040FF}[ Бензиностанция ]\n{FF0000}5000/5000 литра\n{C14124}1 литър {FFFFFF}= {00BF00}1 долар\n{F97804}Напиши {FFFF00}/refuel {F97804}за да заредиш",0xFFFFFFFF,2201.8296,2475.1350,10.8203,40,0,0);
fuelStationText[7]=Create3DTextLabel("{0040FF}[ Бензиностанция ]\n{FF0000}5000/5000 литра\n{C14124}1 литър {FFFFFF}= {00BF00}1 долар\n{F97804}Напиши {FFFF00}/refuel {F97804}за да заредиш",0xFFFFFFFF,615.3391,1690.0454,6.9922,40,0,0);
fuelStationText[8]=Create3DTextLabel("{0040FF}[ Бензиностанция ]\n{FF0000}5000/5000 литра\n{C14124}1 литър {FFFFFF}= {00BF00}1 долар\n{F97804}Напиши {FFFF00}/refuel {F97804}за да заредиш",0xFFFFFFFF,-1328.2731,2677.5278,50.0625,40,0,0);
fuelStationText[9]=Create3DTextLabel("{0040FF}[ Бензиностанция ]\n{FF0000}5000/5000 литра\n{C14124}1 литър {FFFFFF}= {00BF00}1 долар\n{F97804}Напиши {FFFF00}/refuel {F97804}за да заредиш",0xFFFFFFFF,70.3842,1219.0177,18.8116,40,0,0);
fuelStationText[10]=Create3DTextLabel("{0040FF}[ Бензиностанция ]\n{FF0000}5000/5000 литра\n{C14124}1 литър {FFFFFF}= {00BF00}1 долар\n{F97804}Напиши {FFFF00}/refuel {F97804}за да заредиш",0xFFFFFFFF,2113.3835,919.5655,10.8203,40,0,0);
fuelStationText[11]=Create3DTextLabel("{0040FF}[ Бензиностанция ]\n{FF0000}5000/5000 литра\n{C14124}1 литър {FFFFFF}= {00BF00}1 долар\n{F97804}Напиши {FFFF00}/refuel {F97804}за да заредиш",0xFFFFFFFF,2641.0115,1106.6252,10.8203,40,0,0);
fuelStationText[12]=Create3DTextLabel("{0040FF}[ Бензиностанция ]\n{FF0000}5000/5000 литра\n{C14124}1 литър {FFFFFF}= {00BF00}1 долар\n{F97804}Напиши {FFFF00}/refuel {F97804}за да заредиш",0xFFFFFFFF,2146.7964,2747.8115,10.8203,40,0,0);
fuelStationText[13]=Create3DTextLabel("{0040FF}[ Бензиностанция ]\n{FF0000}5000/5000 литра\n{C14124}1 литър {FFFFFF}= {00BF00}1 долар\n{F97804}Напиши {FFFF00}/refuel {F97804}за да заредиш",0xFFFFFFFF,1595.7935,2199.5996,10.8203,40,0,0);
fuelStationText[14]=Create3DTextLabel("{0040FF}[ Бензиностанция ]\n{FF0000}5000/5000 литра\n{C14124}1 литър {FFFFFF}= {00BF00}1 долар\n{F97804}Напиши {FFFF00}/refuel {F97804}за да заредиш",0xFFFFFFFF,-1471.1836,1863.7598,32.6328,40,0,0);
fuelStationText[15]=Create3DTextLabel("{0040FF}[ Бензиностанция ]\n{FF0000}5000/5000 литра\n{C14124}1 литър {FFFFFF}= {00BF00}1 долар\n{F97804}Напиши {FFFF00}/refuel {F97804}за да заредиш",0xFFFFFFFF,655.7673,-565.0798,16.3359,40,0,0);
fuelStationText[16]=Create3DTextLabel("{0040FF}[ Бензиностанция ]\n{FF0000}5000/5000 литра\n{C14124}1 литър {FFFFFF}= {00BF00}1 долар\n{F97804}Напиши {FFFF00}/refuel {F97804}за да заредиш",0xFFFFFFFF,1381.8230,459.1453,20.3452,40,0,0);
//gas stations texts - location - close
Create3DTextLabel("{FF0000}Cell 2\n{FFFFFF}ENTER", 0x08FF08FF, 266.2491,84.4284,1001.7091, 6, 1);
Create3DTextLabel("{FF0000}Cell 1\n{FFFFFF}ENTER", 0x08FF08FF, 266.2492,88.6102,1001.7091, 6, 1);
//3dtextlabels - location - close
//advert - location - open
CreateObject(2165, 1720.055175, -1672.107788, 19.166679, 0.000000, 0.000000, 0.000000);
CreateObject(1714, 1720.824707, -1672.834228, 19.220752, 0.000000, 0.000000, -172.900039);
//advert - location - close
//FUEL COMPANY - location - open
CreateObject(11546, 285.549499, 1386.814086, 9.519872, 0.000000, 0.000000, -88.500015);
CreateObject(9193, 286.184661, 1398.065063, 14.108742, 0.000000, 0.000000, 0.000000);
CreateObject(9193, 286.184661, 1423.356567, 14.108742, 0.000000, 0.000000, 0.000000);
CreateObject(16083, 264.158660, 1459.661010, 14.346237, 0.000000, 0.000000, 79.399955);
//FUEL COMPANY - location - close
//DUEL, DMON elevator door - open
CreateObject(18757, 1416.280761, 5.712075, 1008.918090, 0.000000, 0.000000, -89.599983);
//DUEL, DMON elevator door - close
//порти - location - open
CreateObject(19313, 344.711486, 1797.858520, 18.126768, 0.000000, 0.000000, 34.900020);
CreateObject(19313, 96.767890, 1914.917602, 20.396505, 0.000000, 0.000000, -89.899971);
CreateObject(19312, 191.151473, 1870.016113, 21.471294, 0.000000, 0.000000, 0.000000);
lvpd1 = CreateObject(968, 2238.197509, 2450.464599, 10.341962, -4.799997, -89.000000, -89.499954);
lvpd2 = CreateObject(16773, 2335.417236, 2444.029785, 6.957778, 0.000000, 0.000000, 59.200016);
//IFC cars - location - open
AddStaticVehicle(411,253.5484,1421.1823,10.2937,270.3137,1,1); // 1
AddStaticVehicle(411,252.2402,1395.5558,10.3130,270.6192,0,0); // 2
AddStaticVehicle(411,251.1108,1371.1488,10.3136,267.5901,79,79); // infernussin
//IFC cars - location - close
//порти - location - close
mechanicDutyVehs[0]=AddStaticVehicle(525,1013.5110,-1008.8167,31.9396,182.8166,2,2); // tow1
mechanicDutyVehs[1]=AddStaticVehicle(525,1013.4527,-1016.3772,31.9344,179.2090,3,3); // tow2
mechanicDutyVehs[2]=AddStaticVehicle(525,1013.4238,-1024.0668,31.9341,179.0988,86,86); // tow3
mechanicDutyVehs[3]=AddStaticVehicle(525,1649.4435,2195.0776,10.6423,179.4986,2,2); // car1
mechanicDutyVehs[4]=AddStaticVehicle(525,1643.7000,2194.9663,10.6532,179.4869,3,3); // car2
mechanicDutyVehs[5]=AddStaticVehicle(525,1638.0636,2194.9373,10.6503,179.9552,5,5); // car3
mechanicDutyVehs[6]=AddStaticVehicle(525,1632.8521,2194.8706,10.6565,186.1603,6,6); // car4
mechanicDutyVehs[7]=AddStaticVehicle(525,1626.6609,2194.7981,10.6556,178.8269,86,86); // car5
//carshop - location - open
carshopcars2[0] = AddStaticVehicle(411,-1420.4337,1100.1154,1039.9402,104.6863,201,201);
carshopobjects[0] = CreateObject(18646,0,0,-1000,0,0,0,100);
AttachObjectToVehicle(carshopobjects[0], carshopcars2[0], -0.43060, -0.07840, 0.75010, 0.00000, 0.00000, 0.00000);
LinkVehicleToInterior(carshopcars2[0], 15);
carshopcars2[1] = AddStaticVehicle(560,-1412.7379,1101.3435,1039.9102,95.3560,198,198);
carshopobjects[0] = CreateObject(359,0,0,-1000,0,0,0,100);
carshopobjects[1] = CreateObject(362,0,0,-1000,0,0,0,100);
carshopobjects[2] = CreateObject(362,0,0,-1000,0,0,0,100);
AttachObjectToVehicle(carshopobjects[0], carshopcars2[1], -0.04339, -0.14813, 0.80910, 0.00000, 0.00000, 89.00000);
AttachObjectToVehicle(carshopobjects[1], carshopcars2[1], -0.69998, 0.24154, 0.69210, 87.00000, 32.00000, 93.00000);
AttachObjectToVehicle(carshopobjects[2], carshopcars2[1], 0.77690, 0.33100, 0.69210, -91.00000, 32.00000, 93.00000);
LinkVehicleToInterior(carshopcars2[1], 15);
carshopcars2[2] = AddStaticVehicle(470,-1403.6010,1102.5607,1040.1947,95.9597,0,0);
carshopobjects[0] = CreateObject(3267,0,0,-1000,0,0,0,100);
AttachObjectToVehicle(carshopobjects[0], carshopcars2[2], -0.05540, -0.84780, 0.59140, 0.00000, 0.00000, 0.00000);
LinkVehicleToInterior(carshopcars2[2], 15);
carshopcars2[3] = AddStaticVehicle(578,-1390.5123,1102.8654,1040.8193,82.5598,160,0);
carshopobjects[0] = CreateObject(2669,0,0,-1000,0,0,0,100);
AttachObjectToVehicle(carshopobjects[0], carshopcars2[3], 0.00780, -0.31770, 0.94820, 0.00000, 0.00000, 0.00000);
LinkVehicleToInterior(carshopcars2[3], 15);
carshopcars2[4] = AddStaticVehicle(451,-1378.7549,1100.9178,1039.8777,80.6452,3,3);
LinkVehicleToInterior(carshopcars2[4], 15);
carshopcars2[5] = AddStaticVehicle(409,-1365.6467,1097.3064,1039.9639,69.2179,0,0);
carshopobjects[0] = CreateObject(19314,0,0,-1000,0,0,0,100);
AttachObjectToVehicle(carshopobjects[0], carshopcars2[5], 0.00160, 3.57950, 0.21160, 120.00000, 90.00000, 0.00000);
LinkVehicleToInterior(carshopcars2[5], 15);
carshopcars2[6] = AddStaticVehicle(411,-1440.3612,1092.9755,1039.9569,117.9431,0,0);
LinkVehicleToInterior(carshopcars2[6], 15);
carshopobjects[0] = CreateObject(1006,0,0,-1000,0,0,0,100);
carshopobjects[1] = CreateObject(1161,0,0,-1000,0,0,0,100);
carshopobjects[2] = CreateObject(1161,0,0,-1000,0,0,0,100);
carshopobjects[3] = CreateObject(1059,0,0,-1000,0,0,0,100);
carshopobjects[4] = CreateObject(1146,0,0,-1000,0,0,0,100);
carshopobjects[5] = CreateObject(1006,0,0,-1000,0,0,0,100);
carshopobjects[6] = CreateObject(1006,0,0,-1000,0,0,0,100);
carshopobjects[7] = CreateObject(1006,0,0,-1000,0,0,0,100);
carshopobjects[8] = CreateObject(1006,0,0,-1000,0,0,0,100);
carshopobjects[9] = CreateObject(1027,0,0,-1000,0,0,0,100);
carshopobjects[10] = CreateObject(1027,0,0,-1000,0,0,0,100);
AttachObjectToVehicle(carshopobjects[0], carshopcars2[6], -0.300000,0.000000,0.675000,0.000000,0.000000,0.000000);
AttachObjectToVehicle(carshopobjects[1], carshopcars2[6], 1.049999,2.174999,-0.599999,0.000005,180.899887,180.899963);
AttachObjectToVehicle(carshopobjects[2], carshopcars2[6], -1.049999,-1.950001,-0.599999,0.000005,180.899887,361.799743);
AttachObjectToVehicle(carshopobjects[3], carshopcars2[6], 0.000000,0.000000,0.000000,0.000000,0.000000,0.000000);
AttachObjectToVehicle(carshopobjects[4], carshopcars2[6], -0.074999,-2.325000,0.375000,0.000000,0.000000,0.000000);
AttachObjectToVehicle(carshopobjects[5], carshopcars2[6], 0.225000,0.000000,0.674999,0.000000,0.000000,0.000000);
AttachObjectToVehicle(carshopobjects[6], carshopcars2[6], 0.000000,1.800000,0.149999,0.000000,0.000000,0.000000);
AttachObjectToVehicle(carshopobjects[7], carshopcars2[6], 0.000000,1.650000,0.150000,0.000000,0.000000,0.000000);
AttachObjectToVehicle(carshopobjects[8], carshopcars2[6], 0.000000,1.950000,0.150000,-10.800001,0.000000,0.000000);
AttachObjectToVehicle(carshopobjects[9], carshopcars2[6], -1.049999,-0.824999,-0.599999,0.000000,0.000000,0.000000);
AttachObjectToVehicle(carshopobjects[10], carshopcars2[6], 0.974999,-0.824999,-0.599999,0.000000,0.000000,0.000000);
carshopcars2[7] = AddStaticVehicle(415,-1428.3811,1098.0699,1039.9996,103.7194,74,74);
carshopobjects[0] = CreateObject(18646,0,0,-1000,0,0,0,100);
AttachObjectToVehicle(carshopcars2[7], carshopobjects[0], 0.30450, 0.46970, 0.26350, 0.00000, 0.00000, 0.00000);
LinkVehicleToInterior(carshopcars2[7], 15);
AttachObjectToVehicle(carshopcars2[8], carshopobjects[0], 0.00160, 3.57950, 0.21160, 120.00000, 90.00000, 0.00000);
LinkVehicleToInterior(carshopcars2[8], 15);
SetVehicleVirtualWorld(carshopcars2[0], 1); SetVehicleVirtualWorld(carshopcars2[1], 1); SetVehicleVirtualWorld(carshopcars2[2], 1); SetVehicleVirtualWorld(carshopcars2[3], 1);
SetVehicleVirtualWorld(carshopcars2[4], 1); SetVehicleVirtualWorld(carshopcars2[5], 1); SetVehicleVirtualWorld(carshopcars2[6], 1); SetVehicleVirtualWorld(carshopcars2[7], 1);
SetVehicleVirtualWorld(carshopcars2[8], 1);
carshopcars[0] = AddStaticVehicle(411,-1420.4337,1100.1154,1039.9402,104.6863,201,201);
carshopobjects[0] = CreateObject(18646,0,0,-1000,0,0,0,100);
AttachObjectToVehicle(carshopobjects[0], carshopcars[0], -0.43060, -0.07840, 0.75010, 0.00000, 0.00000, 0.00000);
LinkVehicleToInterior(carshopcars[0], 15);
carshopcars[1] = AddStaticVehicle(560,-1412.7379,1101.3435,1039.9102,95.3560,198,198);
carshopobjects[0] = CreateObject(359,0,0,-1000,0,0,0,100);
carshopobjects[1] = CreateObject(362,0,0,-1000,0,0,0,100);
carshopobjects[2] = CreateObject(362,0,0,-1000,0,0,0,100);
AttachObjectToVehicle(carshopobjects[0], carshopcars[1], -0.04339, -0.14813, 0.80910, 0.00000, 0.00000, 89.00000);
AttachObjectToVehicle(carshopobjects[1], carshopcars[1], -0.69998, 0.24154, 0.69210, 87.00000, 32.00000, 93.00000);
AttachObjectToVehicle(carshopobjects[2], carshopcars[1], 0.77690, 0.33100, 0.69210, -91.00000, 32.00000, 93.00000);
LinkVehicleToInterior(carshopcars[1], 15);
carshopcars[2] = AddStaticVehicle(470,-1403.6010,1102.5607,1040.1947,95.9597,0,0);
carshopobjects[0] = CreateObject(3267,0,0,-1000,0,0,0,100);
AttachObjectToVehicle(carshopobjects[0], carshopcars[2], -0.05540, -0.84780, 0.59140, 0.00000, 0.00000, 0.00000);
LinkVehicleToInterior(carshopcars[2], 15);
carshopcars[3] = AddStaticVehicle(578,-1390.5123,1102.8654,1040.8193,82.5598,160,0);
carshopobjects[0] = CreateObject(2669,0,0,-1000,0,0,0,100);
AttachObjectToVehicle(carshopobjects[0], carshopcars[3], 0.00780, -0.31770, 0.94820, 0.00000, 0.00000, 0.00000);
LinkVehicleToInterior(carshopcars[3], 15);
carshopcars[4] = AddStaticVehicle(451,-1378.7549,1100.9178,1039.8777,80.6452,3,3);
LinkVehicleToInterior(carshopcars[4], 15);
carshopcars[5] = AddStaticVehicle(409,-1365.6467,1097.3064,1039.9639,69.2179,0,0);
carshopobjects[0] = CreateObject(19314,0,0,-1000,0,0,0,100);
AttachObjectToVehicle(carshopobjects[0], carshopcars[5], 0.00160, 3.57950, 0.21160, 120.00000, 90.00000, 0.00000);
LinkVehicleToInterior(carshopcars[5], 15);
carshopcars[6] = AddStaticVehicle(411,-1440.3612,1092.9755,1039.9569,117.9431,0,0);
LinkVehicleToInterior(carshopcars[6], 15);
carshopobjects[0] = CreateObject(1006,0,0,-1000,0,0,0,100);
carshopobjects[1] = CreateObject(1161,0,0,-1000,0,0,0,100);
carshopobjects[2] = CreateObject(1161,0,0,-1000,0,0,0,100);
carshopobjects[3] = CreateObject(1059,0,0,-1000,0,0,0,100);
carshopobjects[4] = CreateObject(1146,0,0,-1000,0,0,0,100);
carshopobjects[5] = CreateObject(1006,0,0,-1000,0,0,0,100);
carshopobjects[6] = CreateObject(1006,0,0,-1000,0,0,0,100);
carshopobjects[7] = CreateObject(1006,0,0,-1000,0,0,0,100);
carshopobjects[8] = CreateObject(1006,0,0,-1000,0,0,0,100);
carshopobjects[9] = CreateObject(1027,0,0,-1000,0,0,0,100);
carshopobjects[10] = CreateObject(1027,0,0,-1000,0,0,0,100);
AttachObjectToVehicle(carshopobjects[0], carshopcars[6], -0.300000,0.000000,0.675000,0.000000,0.000000,0.000000);
AttachObjectToVehicle(carshopobjects[1], carshopcars[6], 1.049999,2.174999,-0.599999,0.000005,180.899887,180.899963);
AttachObjectToVehicle(carshopobjects[2], carshopcars[6], -1.049999,-1.950001,-0.599999,0.000005,180.899887,361.799743);
AttachObjectToVehicle(carshopobjects[3], carshopcars[6], 0.000000,0.000000,0.000000,0.000000,0.000000,0.000000);
AttachObjectToVehicle(carshopobjects[4], carshopcars[6], -0.074999,-2.325000,0.375000,0.000000,0.000000,0.000000);
AttachObjectToVehicle(carshopobjects[5], carshopcars[6], 0.225000,0.000000,0.674999,0.000000,0.000000,0.000000);
AttachObjectToVehicle(carshopobjects[6], carshopcars[6], 0.000000,1.800000,0.149999,0.000000,0.000000,0.000000);
AttachObjectToVehicle(carshopobjects[7], carshopcars[6], 0.000000,1.650000,0.150000,0.000000,0.000000,0.000000);
AttachObjectToVehicle(carshopobjects[8], carshopcars[6], 0.000000,1.950000,0.150000,-10.800001,0.000000,0.000000);
AttachObjectToVehicle(carshopobjects[9], carshopcars[6], -1.049999,-0.824999,-0.599999,0.000000,0.000000,0.000000);
AttachObjectToVehicle(carshopobjects[10], carshopcars[6], 0.974999,-0.824999,-0.599999,0.000000,0.000000,0.000000);
carshopcars[7] = AddStaticVehicle(415,-1428.3811,1098.0699,1039.9996,103.7194,74,74);
carshopobjects[0] = CreateObject(18646,0,0,-1000,0,0,0,100);
AttachObjectToVehicle(carshopcars[7], carshopobjects[0], 0.30450, 0.46970, 0.26350, 0.00000, 0.00000, 0.00000);
LinkVehicleToInterior(carshopcars[7], 15);
AttachObjectToVehicle(carshopcars[8], carshopobjects[0], 0.00160, 3.57950, 0.21160, 120.00000, 90.00000, 0.00000);
LinkVehicleToInterior(carshopcars[8], 15);
Create3DTextLabel("{FFFF00}Информация:\n{FF0000}Всички превозни средства могат да се закупят за определен играч и за банда.\nКогато го закупите за банда цената е по евтина с 5 лв.\nДо всяко превозно средство са написани цените, които струват за определен играч!\nАко имате идеи за нови превозни средства споделете ги на скайп {FFFFFF}didko.bg@abv.bg", 0xFFFFFFFF, -1444.0856,1087.5129,1040.7969, 10, 1);
Create3DTextLabel("{FFFF00}Информация:\n{FF0000}Всички превозни средства могат да се закупят за определен играч и за банда.\nКогато го закупите за банда цената е по евтина с 5 лв.\nДо всяко превозно средство са написани цените, които струват за определен играч!\nАко имате идеи за нови превозни средства споделете ги на скайп {FFFFFF}didko.bg@abv.bg", 0xFFFFFFFF, -1444.0856,1087.5129,1040.7969, 10, 0);
Create3DTextLabel("{FF0000}Ако искате да закупите кола пишете на скайп - {FFFFFF}didko.bg@abv.bg", 0xFFFFFFFF, 2006.8207,1167.4012,10.8203, 10, 0);
Create3DTextLabel("{FF0000}Ако искате да закупите кола пишете на скайп - {FFFFFF}didko.bg@abv.bg", 0xFFFFFFFF, 1411.5128,-1699.5909,13.5395, 10, 0);
Create3DTextLabel("{FFFF00}Infernus с тунинг\n{FFFFFF}Цена: {40BF00}20 лв. по касата\n{FF0000}ВНИМАНИЕ: Колата може да е само черна, защото броните са черни!", 0xFFFFFFFF, -1443.0841,1091.4852,1040.2311, 20, 0);
Create3DTextLabel("{FFFF00}Cheetah с полицейски буркан отвътре\n{FFFFFF}Цена: {40BF00}7,50 лв. по касата\n{FF0000}ВНИМАНИЕ: Бурканът свети само когато е тъмно!", 0xFFFFFFFF, -1431.2561,1097.3242,1040.2306, 20, 0);
Create3DTextLabel("{FFFF00}Infernus с полицейски буркан отвътре\n{FFFFFF}Цена: {40BF00}7,50 лв. по касата\n{FF0000}ВНИМАНИЕ: Бурканът свети само когато е тъмно!", 0xFFFFFFFF, -1423.4561,1099.3093,1040.2233, 20, 0);
Create3DTextLabel("{FFFF00}Sultan с Minigun и RPG\n{FFFFFF}Цена: {40BF00}10 лв. по касата\n{FF0000}ВНИМАНИЕ: Minigun-ните и RPG-то НЕ стрелят!", 0xFFFFFFFF, -1415.6876,1101.0677,1040.2094, 20, 0);
Create3DTextLabel("{FFFF00}Patriot с оръдие за ракети\n{FFFFFF}Цена: {40BF00}7,50 лв. по касата\n{FF0000}ВНИМАНИЕ: Оръдието с ракети НЕ стреля!", 0xFFFFFFFF, -1406.2703,1102.2839,1040.2030, 20, 0);
Create3DTextLabel("{FFFF00}DFT-30 с контейнер\n{FFFFFF}Цена: {40BF00}15 лв. по касата\n{FF0000}ВНИМАНИЕ: Вратите на контейнера могат да се отварят и затварят с команда!", 0xFFFFFFFF, -1395.2511,1103.4880,1040.1986, 20, 0);
Create3DTextLabel("{FFFF00}Turismo с огън\n{FFFFFF}Цена: {40BF00}7,50 лв. по касата\n{FF0000}ВНИМАНИЕ: Огъня може да се слага на всяка кола!", 0xFFFFFFFF, -1381.5884,1101.3951,1040.1764, 20, 0);
Create3DTextLabel("{FFFF00}Лимозина с рога\n{FFFFFF}Цена: {40BF00}7,50 лв. по касата\n{FF0000}ВНИМАНИЕ: Рогата може да се слага на всяка кола!", 0xFFFFFFFF, -1369.5228,1098.7689,1040.1676, 20, 0);
Create3DTextLabel("{FFFF00}Infernus с тунинг\n{FFFFFF}Цена: {40BF00}20 лв. по касата\n{FF0000}ВНИМАНИЕ: Колата може да е само черна, защото броните са черни!", 0xFFFFFFFF, -1443.0841,1091.4852,1040.2311, 20, 1);
Create3DTextLabel("{FFFF00}Cheetah с полицейски буркан отвътре\n{FFFFFF}Цена: {40BF00}7,50 лв. по касата\n{FF0000}ВНИМАНИЕ: Бурканът свети само когато е тъмно!", 0xFFFFFFFF, -1431.2561,1097.3242,1040.2306, 20, 1);
Create3DTextLabel("{FFFF00}Infernus с полицейски буркан отвътре\n{FFFFFF}Цена: {40BF00}7,50 лв. по касата\n{FF0000}ВНИМАНИЕ: Бурканът свети само когато е тъмно!", 0xFFFFFFFF, -1423.4561,1099.3093,1040.2233, 20, 1);
Create3DTextLabel("{FFFF00}Sultan с Minigun и RPG\n{FFFFFF}Цена: {40BF00}10 лв. по касата\n{FF0000}ВНИМАНИЕ: Minigun-ните и RPG-то НЕ стрелят!", 0xFFFFFFFF, -1415.6876,1101.0677,1040.2094, 20, 1);
Create3DTextLabel("{FFFF00}Patriot с оръдие за ракети\n{FFFFFF}Цена: {40BF00}7,50 лв. по касата\n{FF0000}ВНИМАНИЕ: Оръдието с ракети НЕ стреля!", 0xFFFFFFFF, -1406.2703,1102.2839,1040.2030, 20, 1);
Create3DTextLabel("{FFFF00}DFT-30 с контейнер\n{FFFFFF}Цена: {40BF00}15 лв. по касата\n{FF0000}ВНИМАНИЕ: Вратите на контейнера могат да се отварят и затварят с команда!", 0xFFFFFFFF, -1395.2511,1103.4880,1040.1986, 20, 1);
Create3DTextLabel("{FFFF00}Turismo с огън\n{FFFFFF}Цена: {40BF00}7,50 лв. по касата\n{FF0000}ВНИМАНИЕ: Огъня може да се слага на всяка кола!", 0xFFFFFFFF, -1381.5884,1101.3951,1040.1764, 20, 1);
Create3DTextLabel("{FFFF00}Лимозина с рога\n{FFFFFF}Цена: {40BF00}7,50 лв. по касата\n{FF0000}ВНИМАНИЕ: Рогата може да се слага на всяка кола!", 0xFFFFFFFF, -1369.5228,1098.7689,1040.1676, 20, 1);
//carshop - location - close
//menus - location - open
TuningMenu = CreateMenu("TuneMenu",1,20,120,150,40);
AddMenuItem(TuningMenu,0,"Paint Jobs");
AddMenuItem(TuningMenu,0,"Colors");
AddMenuItem(TuningMenu,0,"Exhausts");
AddMenuItem(TuningMenu,0,"Front Bumper");
AddMenuItem(TuningMenu,0,"Rear Bumper");
AddMenuItem(TuningMenu,0,"Roof");
AddMenuItem(TuningMenu,0,"Spoilers");
AddMenuItem(TuningMenu,0,"Side Skirts");
AddMenuItem(TuningMenu,0,"Wheels");
AddMenuItem(TuningMenu,0,"Others");
// Paintjobs
Paintjobs = CreateMenu("TuneMenu",1,20,120,150,40);
SetMenuColumnHeader(Paintjobs,0,"PaintJobs");
AddMenuItem(Paintjobs,0,"Paintjob 1");
AddMenuItem(Paintjobs,0,"Paintjob 2");
AddMenuItem(Paintjobs,0,"Paintjob 3");
AddMenuItem(Paintjobs,0,"Paintjob 4");
AddMenuItem(Paintjobs,0,"Paintjob 5");
AddMenuItem(Paintjobs,0,"Main Menu");
// Colors
Colors = CreateMenu("TuneMenu",1,20,120,150,40);
SetMenuColumnHeader(Colors,0,"Colors");
AddMenuItem(Colors,0,"Black");
AddMenuItem(Colors,0,"White");
AddMenuItem(Colors,0,"Red");
AddMenuItem(Colors,0,"Blue");
AddMenuItem(Colors,0,"Green");
AddMenuItem(Colors,0,"Yellow");
AddMenuItem(Colors,0,"Pink");
AddMenuItem(Colors,0,"Brown");
AddMenuItem(Colors,0,"Next Page");
// Colors 2
Colors1 = CreateMenu("TuneMenu",1,20,120,150,40);
SetMenuColumnHeader(Colors1,0,"Colors");
AddMenuItem(Colors1,0,"Grey");
AddMenuItem(Colors1,0,"Gold");
AddMenuItem(Colors1,0,"Dark Blue");
AddMenuItem(Colors1,0,"Light Blue");
AddMenuItem(Colors1,0,"Green");
AddMenuItem(Colors1,0,"Light Grey");
AddMenuItem(Colors1,0,"Dark Red");
AddMenuItem(Colors1,0,"Dark Brown");
AddMenuItem(Colors1,0,"Main Menu");
// Exhausts
Exhausts = CreateMenu("TuneMenu",1,20,120,150,40);
SetMenuColumnHeader(Exhausts,0,"Exhausts");
AddMenuItem(Exhausts,0,"Wheel Arch Alien Exhaust");
AddMenuItem(Exhausts,0,"Wheel Arch X-Flow Exhaust");
AddMenuItem(Exhausts,0,"Loco Low-Co Chromer Exhaust");
AddMenuItem(Exhausts,0,"Loco Low-Co Slamin Exhaust");
AddMenuItem(Exhausts,0,"Main Menu");
// Front bumpers
Frontbumper = CreateMenu("TuneMenu",1,20,120,150,40);
SetMenuColumnHeader(Frontbumper,0,"Frontbumpers");
AddMenuItem(Frontbumper,0,"Wheel Arch Alien bumper");
AddMenuItem(Frontbumper,0,"Wheel Arch X-Flow bumper");
AddMenuItem(Frontbumper,0,"Loco Low-Co Chromer bumper");
AddMenuItem(Frontbumper,0,"Loco Low-Co Slamin bumper");
AddMenuItem(Frontbumper,0,"Main Menu");
// Rear bumpers
Rearbumper = CreateMenu("TuneMenu",1,20,120,150,40);
SetMenuColumnHeader(Rearbumper,0,"Rearbumpers");
AddMenuItem(Rearbumper,0,"Wheel Arch Alien bumper");
AddMenuItem(Rearbumper,0,"Wheel Arch X-Flow bumper");
AddMenuItem(Rearbumper,0,"Loco Low-Co Chromer bumper");
AddMenuItem(Rearbumper,0,"Loco Low-Co Slamin bumper");
AddMenuItem(Rearbumper,0,"Main Menu");
// Roof
Roof = CreateMenu("TuneMenu",1,20,120,150,40);
SetMenuColumnHeader(Roof,0,"Roof");
AddMenuItem(Roof,0,"Wheel Arch Alien Roof Vent");
AddMenuItem(Roof,0,"Wheel Arch X-Flow Roof Vent");
AddMenuItem(Roof,0,"Loco Low-Co Hardtop Roof");
AddMenuItem(Roof,0,"Loco Low-Co Softtop Roof");
AddMenuItem(Roof,0,"Main Menu");
// Spoilers
Spoilers = CreateMenu("TuneMenu",1,20,120,150,40);
SetMenuColumnHeader(Spoilers,0,"Spoliers");
AddMenuItem(Spoilers,0,"Alien Spoiler");
AddMenuItem(Spoilers,0,"X-Flow Spoiler");
AddMenuItem(Spoilers,0,"Main Menu");
// Side skirts
Sideskirts = CreateMenu("TuneMenu",1,20,120,150,40);
SetMenuColumnHeader(Sideskirts,0,"SideSkirts");
AddMenuItem(Sideskirts,0,"Wheel Arch Alien Side Skirts");
AddMenuItem(Sideskirts,0,"Wheel Arch X-Flow Side Skirts");
AddMenuItem(Sideskirts,0,"Loco Low-Co Chrome Strip");
AddMenuItem(Sideskirts,0,"Loco Low-Co Chrome Flames");
AddMenuItem(Sideskirts,0,"Loco Low-Co Chrome Arches");
AddMenuItem(Sideskirts,0,"Loco Low-Co Chrome Trim");
AddMenuItem(Sideskirts,0,"Loco Low-Co Wheelcovers");
AddMenuItem(Sideskirts,0,"Main Menu");
// Wheels
Wheels = CreateMenu("TuneMenu",1,20,120,150,40);
SetMenuColumnHeader(Wheels,0,"Wheels");
AddMenuItem(Wheels,0,"Offroad");
AddMenuItem(Wheels,0,"Mega");
AddMenuItem(Wheels,0,"Wires");
AddMenuItem(Wheels,0,"Twist");
AddMenuItem(Wheels,0,"Grove");
AddMenuItem(Wheels,0,"Import");
AddMenuItem(Wheels,0,"Atomic");
AddMenuItem(Wheels,0,"Ahab");
AddMenuItem(Wheels,0,"Virtual");
AddMenuItem(Wheels,0,"Access");
AddMenuItem(Wheels,0,"Next Page");
AddMenuItem(Wheels,0,"Main Menu");
// wheels 2
Wheels1 = CreateMenu("TuneMenu",1,20,120,150,40);
SetMenuColumnHeader(Wheels1,0,"Wheels");
AddMenuItem(Wheels1,0,"Trance");
AddMenuItem(Wheels1,0,"Shadow");
AddMenuItem(Wheels1,0,"Rimshine");
AddMenuItem(Wheels1,0,"Classic");
AddMenuItem(Wheels1,0,"Cutter");
AddMenuItem(Wheels1,0,"Switch");
AddMenuItem(Wheels1,0,"Dollar");
AddMenuItem(Wheels1,0,"Main Menu");
// Nitro
Nitro = CreateMenu("TuningMenu",1,20,120,150,40);
SetMenuColumnHeader(Nitro,0,"Nitro");
AddMenuItem(Nitro,0,"2x Nitrous");
AddMenuItem(Nitro,0,"5x Nitrous");
AddMenuItem(Nitro,0,"10x Nitrous");
AddMenuItem(Nitro,0,"Main Menu");
// Others
Others = CreateMenu("TuneMenu",1,20,120,150,40);
SetMenuColumnHeader(Others,0, "Other addons");
AddMenuItem(Others,0,"Hydraulics");
AddMenuItem(Others,0,"Car Stereo");
AddMenuItem(Others,0,"Nitro");
AddMenuItem(Others,0,"Main Menu");
//menus - location - close
//pickups - location - open
IFCDUTY=CreatePickup(1275, 1, 283.4191,1387.8158,10.5859, 0);
WSPickup=CreatePickup(1239, 1, 305.5214,-141.7592,1004.0625, 0);
DFDUTY=CreatePickup(1239, 1, 211.5823,1812.2897,21.8594, 0);
CreatePickup(1239, 1, 2005.9323,2298.5537,10.8203, 0);
CreatePickup(1239, 1, 1838.5139,-1856.2627,13.3828, 0);
CreatePickup(1275, 1, 1015.9524,-1026.5002,32.1016,0);
CreatePickup(1275, 1, 1652.8765,2199.9587,10.8203,0);
CreatePickup(1318, 1, -1392.2205,2111.2021,42.1264,-1);
LSPDPickup[0]=CreatePickup(1318, 1, 1555.2531,-1675.6143,16.1953,0);
LSPDPickup[1]=CreatePickup(1318, 1, 246.7372,63.0483,1003.6406,1);
BloodPickup[0]=CreatePickup(1318,1, 1083.0112,-1226.7196,15.8203,0);
BloodPickup[1]=CreatePickup(1318, 1, 1416.6842,3.6414,1000.9269,3);
YakuzaPickup[0]=CreatePickup(1318,1, 2595.7300,2790.6204,10.8203,0);
YakuzaPickup[1]=CreatePickup(1318, 1, 1416.6842,3.6414,1000.9269,2);
RifaPickup[0]=CreatePickup(1318, 1, -2182.9065,956.6106,80.0000,0);
RifaPickup[1]=CreatePickup(1318, 1, -2173.5759,974.2741,80.0000,0);
RifaPickup[2]=CreatePickup(1318, 1, 1416.6842,3.6414,1000.9269,1);
SyndicatePickup[0]=CreatePickup(1318, 1, 1733.4287,2814.9548,14.2735,0);
SyndicatePickup[1]=CreatePickup(1318, 1, 2496.049804,-1695.238159,1014.742187,2);
CripzPickup[0]=CreatePickup(1318, 1, 300.2113,-1154.4961,81.3665,0);
CripzPickup[1]=CreatePickup(1318, 1, 140.1744,1366.1003,1083.8594,1);
SoldierPickup[0]=CreatePickup(1318, 1, 2324.4341,-1149.4835,1050.7101,1);
SoldierPickup[1]=CreatePickup(1318, 1, -1754.2659,964.0753,24.8906,0);
BallasPickup[0]=CreatePickup(1318, 1, 2146.7976,-1470.4761,26.0426,0);
BallasPickup[1]=CreatePickup(1318, 1, 318.5974,1115.6239,1083.8828,1);
BountyPickup[0]=CreatePickup(1318, 1, 691.5796,-1275.8766,13.5607,0);
BountyPickup[1]=CreatePickup(1318, 1, 1261.3009,-785.4238,1091.9063,2);
BGMPickup[0]=CreatePickup(1318, 1, 1259.6387,-785.5069,92.0313,0);
BGMPickup[1]=CreatePickup(1318, 1, 1261.3009,-785.4238,1091.9063,1);
BGMPickup[2]=CreatePickup(1318, 1, 1260.7024,-781.2197,1091.9063,1);
BGMPickup[3]=CreatePickup(1318, 1, 1416.6842,3.6414,1000.9269,4);
CarShopPickup2[0] = CreatePickup(1318, 1, 1411.5128,-1699.5909,13.5395,0);
CarShopPickup2[1] = CreatePickup(1318, 1, -1444.0856,1087.5129,1040.7969,1);
CarShopPickup[0] = CreatePickup(1318, 1, 2006.8207,1167.4012,10.8203,0);
CarShopPickup[1] = CreatePickup(1318, 1, -1444.0856,1087.5129,1040.7969,0);
TowerPickup[0] = CreatePickup(1318, 1, 1570.4105,-1337.3629,16.4844,0);
TowerPickup[1] = CreatePickup(1318, 1, 1548.6501,-1363.8597,326.2183,0);
BankPickup[5]=CreatePickup(1274, 1,-1492.1313,920.0684,7.1875);
BankPickup[0]=CreatePickup(1274, 1, 1481.0358,-1772.3138,18.7958);
BankPickup[1]=CreatePickup(1274, 1, 2412.5020,1123.8976,10.8203);
BankPickup[2]=CreatePickup(1274, 1, 2305.5884,-16.3410,26.7496,1);
BankPickup[3]=CreatePickup(1274, 1, 2305.5884,-16.3410,26.7496,2);
BankPickup[4]=CreatePickup(1274, 1, 2305.5884,-16.3410,26.7496,3);
//BankPickup[6]=CreatePickup(1274, 1, 2315.5828,-0.0715,26.7422,1);
//BankPickup[7]=CreatePickup(1274, 1, 2315.5828,-0.0715,26.7422,2);
//BankPickup[8]=CreatePickup(1274, 1, 2315.5828,-0.0715,26.7422,3);
BankCommandPickup[0]=CreatePickup(1274, 1, 2316.6213,-9.9516,26.7422, 1);
BankCommandPickup[1]=CreatePickup(1274, 1, 2316.6213,-9.9516,26.7422, 2);
BankCommandPickup[2]=CreatePickup(1274, 1, 2316.6213,-9.9516,26.7422, 3);
bountyhealarmour[0]=CreatePickup(1240, 1, 1264.1427,-778.0394,1091.9063,2);
bountyhealarmour[1]=CreatePickup(1242, 1, 1264.1427,-778.0394,1091.9063,2);
ms13healarmour[0]=CreatePickup(1240, 1, -39.4799,1077.1060,20.2422,0);
ms13healarmour[1]=CreatePickup(1242, 1, -39.4799,1077.1060,20.2422,0);
vagoshealarmour[0]=CreatePickup(1240, 1, 1879.9246,2337.5054,10.9799,0);
vagoshealarmour[1]=CreatePickup(1242, 1, 1879.9246,2337.5054,10.9799,0);
triadshealarmour[0]=CreatePickup(1240, 1, 1967.2881,953.4484,10.8203,0);
triadshealarmour[1]=CreatePickup(1242, 1, 1967.2881,953.4484,10.8203,0);
italianhealarmour[0]=CreatePickup(1240, 1, -684.9741,942.3038,13.6328,0);
italianhealarmour[1]=CreatePickup(1242, 1, -684.9741,942.3038,13.6328,0);
nanghealarmour[0]=CreatePickup(1240, 1, 2632.2979,1815.6191,11.0161,0);
nanghealarmour[1]=CreatePickup(1242, 1, 2632.2979,1815.6191,11.0161,0);
bloodhealarmour[0]=CreatePickup(1240, 1, 1083.0128,-1229.4845,15.8203,0);
bloodhealarmour[1]=CreatePickup(1242, 1, 1083.0128,-1229.4845,15.8203,0);
cripzhealarmour[0]=CreatePickup(1240, 1, 140.3037,1368.5403,1083.8630,1);
cripzhealarmour[1]=CreatePickup(1242, 1, 140.3037,1368.5403,1083.8630,1);
bgmhealarmour[0]=CreatePickup(1240, 1, 1267.1973,-787.3447,1091.9063,1);
bgmhealarmour[1]=CreatePickup(1242, 1, 1267.1973,-787.3447,1091.9063,1);
syndicatehealarmour[0]=CreatePickup(1240, 1, 1736.4424,2803.6094,11.3438,0);
syndicatehealarmour[1]=CreatePickup(1242, 1, 1736.4424,2803.6094,11.3438,0);
blackstreethealarmour[0]=CreatePickup(1240, 1, -818.2010,1551.0867,27.1172,0);
blackstreethealarmour[1]=CreatePickup(1242, 1, -818.2010,1551.0867,27.1172,0);
yakuzahealarmour[0]=CreatePickup(1240, 1, 2594.0845,2793.8118,10.8203,0);
yakuzahealarmour[1]=CreatePickup(1242, 1, 2594.0845,2793.8118,10.8203,0);
grovehealarmour[0] = CreatePickup(1240, 1, 2498.2009,-1705.7358,1014.7422,1);
grovehealarmour[1] = CreatePickup(1242, 1, 2498.2009,-1705.7358,1014.7422,1);
soldierhealarmour[0] = CreatePickup(1240, 1, 2324.3743,-1147.4288,1050.7101,1);
soldierhealarmour[1] = CreatePickup(1242, 1, 2324.3743,-1147.4288,1050.7101,1);
viphealarmour[0] = CreatePickup(1240, 1, 1262.4489,-2026.9534,59.3499,0);
viphealarmour[1] = CreatePickup(1242, 1, 1262.4489,-2026.9534,59.3499,0);
dfhealarmour[0] = CreatePickup(1240, 1, 213.4277,1809.0309,21.8672,0);
dfhealarmour[1] = CreatePickup(1242, 1, 213.4277,1809.0309,21.8672,0);
rifahealarmour[0] = CreatePickup(1240, 1, 2451.2534,-1696.0654,1013.5078,1);
rifahealarmour[1] = CreatePickup(1242, 1, 2451.2534,-1696.0654,1013.5078,1);
ElevatorPickup[0] = CreatePickup(1318, 1, 1806.0117,-1303.7578,125.7266,0);
ElevatorPickup[1] = CreatePickup(1318, 1, 1801.1755,-1303.1967,131.7344,0);
ROBPICKUP2[0]=CreatePickup(1274, 1, 2144.2419,1639.6534,993.5761, -1 );
ROBPICKUP2[1]=CreatePickup(1274, 1, 1710.7833,-1643.9384,27.2035, -1 );
ROBPICKUP2[2]=CreatePickup(1274, 1, -1292.2670,490.4918,11.1953, -1 );
ROBPICKUPBOX[0]=CreatePickup(1254, 1, 2799.0291,-2393.8811,13.9560, -1 );
ROBPICKUP[0]=CreatePickup(1314 , 1, 2447.8630,-1963.3013,13.5469);
ROBPICKUP[1]=CreatePickup(1314 , 1, 2145.2324,2834.2690,10.8203);
VILNAPICKUP=CreatePickup(1318, 1, 279.1491,1833.1394,18.0874, 0);
ATMPICKUP[1]=CreatePickup(1274, 1, 1538.5005,-1614.0280,13.5469, 0);
ATMPICKUP[2]=CreatePickup(1274, 1, 386.5083,-1827.4729,7.8359, 0);
ATMPICKUP[3]=CreatePickup(1274, 1, 1239.6632,-2041.0039,59.9210, 0);
ATMPICKUP[4]=CreatePickup(1274, 1, 379.5750,-2060.4958,7.8359, 0);
ATMPICKUP[5]=CreatePickup(1274, 1, 672.7897,-503.1278,16.3359, 0);
ATMPICKUP[6]=CreatePickup(1274, 1, 2489.7417,923.2555,11.0234, 0);
ATMPICKUP[7]=CreatePickup(1274, 1, 2181.0786,2461.8982,10.8203, 0);
ATMPICKUP[8]=CreatePickup(1274, 1, -174.5244,1139.4585,19.7500, 0);
ATMPICKUP[9]=CreatePickup(1274, 1, -1487.1859,2583.0183,55.8359, 0);
ATMPICKUP[10]=CreatePickup(1274, 1, -2491.7312,2366.4600,10.2736, 0);
ATMPICKUP[11]=CreatePickup(1274, 1, 210.3036,1809.4667,21.8672, 0);
ATMPICKUP[12]=CreatePickup(1274, 1, 2194.2754,1986.2334,12.2969, 0);
ATMPICKUP[13]=CreatePickup(1274, 1, 398.4085,-1805.4634,7.8379, 0);
BIZPICKUP[0]=CreatePickup(1239, 1, 497.4557,-75.6231,998.7578, -1);
BIZPICKUP[1]=CreatePickup(1239, 1, 287.8558,-109.2027,1001.5156, -1);
BIZPICKUP[2]=CreatePickup(1581, 1,-2026.8839,-115.1081,1035.1719, -1);
BIZPICKUP[3]=CreatePickup(1239, 1, -30.9303,-28.3415,1003.557, -1);
BIZPICKUP[4]=CreatePickup(1239, 1, 206.9638,-129.8357,1003.5078, -1);
BIZPICKUP[5]=CreatePickup(1239, 1, 376.6553,-68.1552,1001.5151, -1);
BIZPICKUP[6]=CreatePickup(1239, 1, 822.8092,1.7616,1004.1797, -1);
BIZPICKUP[7]=CreatePickup(1239, 1, 203.8465,-44.4779,1001.8047, -1);
BIZPICKUP[8]=CreatePickup(1239, 1, 499.3484,-20.5936,1000.6797, -1);
BIZPICKUP[9]=CreatePickup(1239, 1, 755.7616,1440.6393,1102.7031, -1);
BIZPICKUP[10]=CreatePickup(1239, 1, 773.6641,-72.9778,1000.6484, -1);
BIZPICKUP[11]=CreatePickup(1239, 1, 1215.0492,-12.2688,1000.9219, -1);
BIZPICKUP[12]=CreatePickup(1239, 1, 369.5925,-6.7357,1001.8589, -1);
BIZPICKUP[13]=CreatePickup(1239, 1, 450.5178,-84.4856,999.5547, -1);
BIZPICKUP[14]=CreatePickup(1239, 1, 1720.5767,-1671.2698,20.2241, -1);
BIZPICKUP[15]=CreatePickup(1239, 1, -23.3775,-55.2958,1003.5469, -1);
BIZPICKUP[16]=CreatePickup(1239, 1, 773.0745,-39.3959,1000.6865, -1);
BIZPICKUP[17]=CreatePickup(1239, 1, 2568.4888,-1296.4260,1037.7734, -1);
BIZPICKUP[18]=CreatePickup(1239, 1, 2548.3892,-1293.2520,1044.1250, -1);
BIZPICKUP[19]=CreatePickup(1239, 1, 2537.1509,-1286.3304,1054.6406, -1);
BIZPICKUP[20]=CreatePickup(1239, 1, -1395.4200,1245.6000,1039.8672, -1);
CreatePickup(1240, 2, 2029.7926,1550.6443,13.1209, 0);
CreatePickup(1242, 2, 2028.0229,1540.1416,13.1209, 0);
CreatePickup(1240, 2, 1492.2445,-1639.6790,15.0469, 0);
CreatePickup(1242, 2, 1466.9248,-1638.8812,15.0469, 0);
//pickups - location - close
//vehicles - location - open
carpilot[1] = AddStaticVehicle(511,382.7576,2536.0332,17.9922,176.6510,3,3); // pilot1
carpilot[2] = AddStaticVehicle(511,359.8245,2536.8083,18.0109,177.6166,3,3); // pilot2
carpilot[3] = AddStaticVehicle(511,268.3786,2535.4526,18.0536,180.3932,3,3); // pilot3
carpilot[4] = AddStaticVehicle(511,243.3229,2535.4875,18.0442,179.8697,3,3); // pilot4
carpilot[5] = AddStaticVehicle(511,363.8391,2470.6494,17.8039,359.7092,3,3); // pilot5
carsweeper[1] = AddStaticVehicle(574,570.7686,1217.6624,11.5150,212.5410,1,1); // sweepcar
carsweeper[2] = AddStaticVehicle(574,572.4439,1218.8262,11.4516,211.8157,1,1); // sweepcar2
carsweeper[3] = AddStaticVehicle(574,577.4621,1220.9525,11.4364,212.9591,1,1); // sweepcar3
carsweeper[4] = AddStaticVehicle(574,578.9632,1221.9869,11.4364,212.8099,1,1); // sweepcar4
carcoalmine[1] = AddStaticVehicleEx(406,858.2269,879.6721,14.7627,201.0449,1,1,5); //
carcoalmine[2] = AddStaticVehicleEx(406,850.8806,876.3572,14.9247,202.1210,1,1,5); //
carcoalmine[3] = AddStaticVehicleEx(406,843.9622,873.7372,14.7720,202.0721,1,1,5); //
carcoalmine[4] = AddStaticVehicleEx(406,837.6867,870.4841,14.7916,201.2635,1,1,5); //
afterwork[0]=CreateVehicle(411,832.4344,837.6809,11.5070,20.8823,0,0,900); // veh1
afterwork[1]=CreateVehicle(411,835.9622,838.5618,11.8255,21.4923,1,1,900); // veh
afterwork[2]=CreateVehicle(411,839.2482,839.3900,12.1361,19.7798,7,7,900); // veh
afterwork[3]=CreateVehicle(522,841.9667,840.9456,12.2186,22.4552,0,0,900); // veh
afterwork[4]=CreateVehicle(522,843.3854,841.7632,12.3236,26.6766,1,1,900); // veh
afterwork[5]=CreateVehicle(522,845.2407,842.2749,12.5161,14.0011,7,7,900); // veh
afterwork[6]=CreateVehicle(411,615.0783,1227.1151,11.4458,118.5010,0,0,900); // veh
afterwork[7]=CreateVehicle(411,613.5852,1230.2531,11.4458,118.3363,1,1,900); // veh
afterwork[8]=CreateVehicle(411,611.6678,1232.9268,11.4458,118.2612,7,7,900); // veh
afterwork[9]=CreateVehicle(522,609.0194,1236.0812,11.2933,115.5268,0,0,900); // veh
afterwork[10]=CreateVehicle(522,608.2195,1237.7094,11.2850,108.2882,1,1,900); // veh
afterwork[11]=CreateVehicle(522,608.1815,1238.8450,11.2928,115.8031,7,7,900); // veh
afterwork[12]=CreateVehicle(411,425.6216,2529.6577,16.3437,184.5891,0,0,900); // veh
afterwork[13]=CreateVehicle(411,422.0308,2528.8699,16.3254,185.0556,1,1,900); // veh
afterwork[14]=CreateVehicle(411,418.9781,2528.9233,16.3172,179.7733,7,7,900); // veh
afterwork[15]=CreateVehicle(522,415.1333,2528.9492,16.1791,175.1624,0,0,900); // veh
afterwork[16]=CreateVehicle(522,414.0790,2528.9260,16.1763,166.9628,1,1,900); // veh
afterwork[17]=CreateVehicle(522,412.5888,2528.7742,16.1676,171.5464,7,7,900); // veh
afterwork[18]=CreateVehicle(411,47.3786,-253.7540,1.3749,265.0179,0,0,900); // veh
afterwork[19]=CreateVehicle(411,46.9400,-256.5018,1.4171,270.1889,1,1,900); // veh
afterwork[20]=CreateVehicle(411,47.0149,-259.3380,1.4477,268.6745,7,7,900); // veh
afterwork[21]=CreateVehicle(522,46.4583,-262.1669,1.3404,262.7072,0,0,900); // veh
afterwork[22]=CreateVehicle(522,46.8016,-263.2418,1.3455,263.0025,1,1,900); // veh
afterwork[23]=CreateVehicle(522,46.7809,-264.1643,1.3557,262.4278,7,7,900); // veh
afterwork[24]=CreateVehicle(411,1378.1586,269.0237,19.2940,338.4818,0,0,900); // veh
afterwork[25]=CreateVehicle(411,1381.5187,267.4872,19.2940,337.8664,1,1,900); // veh
afterwork[26]=CreateVehicle(411,1384.6252,266.0334,19.2940,334.1597,7,7,900); // veh
afterwork[27]=CreateVehicle(522,1387.2539,263.5329,19.1194,337.2061,0,0,900); // veh
afterwork[28]=CreateVehicle(522,1387.9193,263.0052,19.1409,336.3415,1,1,900); // veh
afterwork[29]=CreateVehicle(522,1388.9036,262.2971,19.1392,335.0469,7,7,900); // veh
afterwork[30]=CreateVehicle(411,-539.4708,2565.8433,53.1425,268.6549,0,0,900); // veh
afterwork[31]=CreateVehicle(411,-539.5480,2563.2871,53.1418,268.1252,1,1,900); // veh
afterwork[32]=CreateVehicle(411,-539.3613,2560.2180,53.1418,268.8858,7,7,900); // veh
afterwork[33]=CreateVehicle(522,-540.8374,2556.6814,52.9886,269.0560,0,0,900); // veh
afterwork[34]=CreateVehicle(522,-540.7065,2555.1716,52.9886,263.3294,1,1,900); // veh
afterwork[35]=CreateVehicle(522,-540.2985,2553.9404,52.9845,260.8280,7,7,900); // veh
afterwork[36]=CreateVehicle(411,0.4873,-333.9484,5.1568,93.2239,0,0,900); // veh
afterwork[37]=CreateVehicle(411,0.5126,-336.6106,5.1568,88.4291,1,1,900); // veh
afterwork[38]=CreateVehicle(411,-0.2487,-339.4753,5.1568,86.2355,7,7,900); // veh
afterwork[39]=CreateVehicle(522,-1.0375,-343.6505,5.0041,89.6106,0,0,900); // veh
afterwork[40]=CreateVehicle(522,-1.4598,-344.5724,5.0028,92.8479,1,1,900); // veh
afterwork[41]=CreateVehicle(522,-2.0090,-346.2775,5.0055,85.8586,7,7,900); // veh
for(new i=0;i<42;i++)
{
ToggleEngine(afterwork[i], VEHICLE_PARAMS_OFF);
}
fuelremarke[0]=AddStaticVehicle(584,271.4840,1341.2374,11.7400,0.5160,0,0); // remarke1
fuelremarke[1]=AddStaticVehicle(584,263.8116,1340.9697,11.7545,0.3961,0,0); // remarke2
fuelremarke[2]=AddStaticVehicle(584,280.3829,1341.1115,11.7410,1.0650,0,0); // remarke3
fueltruck[0]=AddStaticVehicle(403,284.3264,1360.4240,11.1927,88.2289,0,0); // veh1
//ToggleEngine(fueltruck[0], VEHICLE_PARAMS_OFF);
fueltruck[1]=AddStaticVehicle(403,284.4374,1371.9625,11.1927,90.2667,8,8); // veh2
//ToggleEngine(fueltruck[1], VEHICLE_PARAMS_OFF);
fueltruck[2]=AddStaticVehicle(403,284.4071,1365.9193,11.1926,89.6312,9,9); // veh3
//ToggleEngine(fueltruck[2], VEHICLE_PARAMS_OFF);
carbus[1] = AddStaticVehicle(431,-521.3267,2569.4219,53.5132,358.5933,1,1); // bus
carbus[2] = AddStaticVehicle(431,-512.0872,2553.7710,53.5170,88.0071,1,1); // bus
carbus[3] = AddStaticVehicle(431,-513.0065,2548.9106,53.5151,88.9376,1,1); // bus
carbus[4] = AddStaticVehicle(431,-510.6169,2579.8213,53.5219,87.5477,1,1); // bus
carbus[5] = AddStaticVehicle(431,-511.0210,2582.8525,53.5136,86.0736,1,1); // bus
carpizza[1] = AddStaticVehicle(448,1356.7051,243.4740,19.1688,65.4089,3,6); // piza
carpizza[2] = AddStaticVehicle(448,1355.9683,241.1347,19.1421,62.2654,3,6); // piza2
carpizza[3] = AddStaticVehicle(448,1356.5350,242.4410,19.1596,63.2474,3,6); // piza3
carpizza[4] = AddStaticVehicle(448,1363.1876,259.8902,19.1605,69.1960,3,6); // piza4
carpizza[5] = AddStaticVehicle(448,1364.0146,260.9592,19.1494,63.5487,3,6); // piza5
carpizza[6] = AddStaticVehicle(448,1364.0315,262.2966,19.1587,61.9309,3,6); // piza6
cartruck[1] = AddStaticVehicle(515,65.7177,-285.2350,2.6372,1.4777,0,0); // Job - Truck Car 1
cartruck[2] = AddStaticVehicle(514,53.2033,-285.1273,2.3195,358.3466,3,3); // Job - Truck Car 2
cartruck[3] = AddStaticVehicle(403,35.6616,-266.8764,2.7455,266.1551,24,24); // Job - Truck Car 3
cartruck[4] = AddStaticVehicle(515,43.0861,-231.5357,2.6533,266.6200,3,3); // Job - Truck Car 4
cartruck[5] = AddStaticVehicle(514,44.8290,-224.5736,2.2295,268.1153,0,0); // Job - Truck Car 5
cardeliver[1] = AddStaticVehicle(609,-31.8258,-290.1678,5.4251,269.3731,86,86); // Deliver - Car1
cardeliver[2] = AddStaticVehicle(609,-23.2258,-273.9886,5.4273,179.0741,86,86); // Deliver - Car2
cardeliver[3] = AddStaticVehicle(609,0.3479,-301.1396,5.4233,89.4623,86,86); // Deliver - Car3
cardeliver[4] = AddStaticVehicle(609,0.0413,-311.8060,5.4393,89.6039,86,86); // Deliver - Car4
cardeliver[5] = AddStaticVehicle(609,-0.0081,-322.3448,5.4393,89.5987,86,86); // Deliver - Car5
vipVehs[1]=CreateVehicle(579,1140.7024,-2030.0927,68.9443,271.9881,181,181,900);  // vipcar1
vipVehs[2]=CreateVehicle(409,1243.9410,-2021.2043,59.7309,177.9704,181,181,900);  // vipcar2
vipVehs[3]=CreateVehicle(409,1243.9419,-2037.4746,59.7307,181.8856,181,181,900);  // vipcar3
vipVehs[4]=CreateVehicle(468,1274.2704,-2048.9709,58.9283,178.9933,181,181,900);  // vipcar4
vipVehs[5]=CreateVehicle(468,1276.4502,-2048.5881,58.8944,193.5808,181,181,900);  // vipcar5
vipVehs[6]=CreateVehicle(468,1279.2736,-2048.9507,58.8003,190.0562,181,181,900);  // vipcar6
vipVehs[7]=CreateVehicle(560,1277.1289,-2042.6338,58.7295,92.2990,181,181,900);  // vipcar7
vipVehs[8]=CreateVehicle(560,1277.3984,-2031.0327,58.6496,83.0665,181,181,900);  // vipcar8
vipVehs[9]=CreateVehicle(560,1277.5686,-2024.5355,58.6122,80.3641,181,181,900);  // vipcar9
vipVehs[10]=CreateVehicle(411,1277.0298,-2010.4761,58.6602,183.4705,181,181,900);  // vipcar10
vipVehs[11]=CreateVehicle(411,1270.0671,-2010.0409,58.8562,177.6457,181,181,900);  // vipcar11
vipVehs[12]=CreateVehicle(411,1244.2449,-2009.8389,59.6042,181.7225,181,181,900);  // vipcar12
vipVehs[13]=CreateVehicle(522,1237.1691,-2007.3179,59.4209,261.3344,181,181,900);  // vipcar13
vipVehs[14]=CreateVehicle(522,1237.4316,-2030.3452,60.5957,269.5838,181,181,900);  // vipcar14
vipVehs[15]=CreateVehicle(522,1237.6796,-2042.7904,60.5584,271.8774,181,181,900);  // vipcar15
vipVehs[16]=CreateVehicle(522,1175.1260,-2041.3722,68.5540,185.4893,181,181,900);  // vipcar16
vipVehs[17]=CreateVehicle(522,1175.0313,-2032.8108,68.5775,0.9233,181,181,900);  // vipcar17
vipVehs[18]=CreateVehicle(579,1140.4346,-2041.7124,69.0015,270.5126,181,181,900);  // vipcar18
vipVehs[19]=CreateVehicle(562,1138.6312,-2063.9949,68.6584,2.5424,181,181,900);
vipVehs[20]=CreateVehicle(559,1138.4088,-2010.0665,68.6807,181.0400,181,181,900);
vipVehs[21]=CreateVehicle(513,1264.4708,-2009.5179,59.8866,178.2558,181,0,900);
vipVehs[22]=CreateVehicle(513,1252.4545,-2009.0323,60.2322,175.9293,181,0,900);
for(new i; i<sizeof(vipVehs); i++)
{
isVipGangVeh[vipVehs[i]]=true;
}
soldierVehs[1]=CreateVehicle(409, -1754.4410, 938.3846, 24.6129, 270.5095, 171, 171, 900);  //Stretch
soldierVehs[2] = CreateVehicle(560, -1777.6790, 957.8425, 24.5874, 269.9056, 171, 171, 900);  //Sultan
soldierVehs[3] = CreateVehicle(560, -1730.1558, 957.8041, 24.5873, 90.0371, 171, 171, 900);  //Sultan
soldierVehs[4] = CreateVehicle(411, -1764.1466, 947.2263, 24.5391, 269.7079, 171, 171, 900);  //Infernus
soldierVehs[5] = CreateVehicle(411, -1746.6165, 947.1942, 24.5377, 269.2019, 171, 171, 900);  //Infernus
soldierVehs[6] = CreateVehicle(579, -1730.8681, 945.4312, 24.7422, 178.1536, 171, 171, 900);  //Huntley
soldierVehs[7] = CreateVehicle(579, -1777.0849, 945.6668, 24.7440, 180.4462, 171, 171, 900);  //Huntley
soldierVehs[8] = CreateVehicle(487, -1724.0946, 955.3264, 25.0706, 179.4173, 171, 171, 900);  //Maverick
soldierVehs[9] = CreateVehicle(522, -1739.0638, 962.4121, 24.4531, 162.8123, 171, 171, 900);  //NRG-500
soldierVehs[10] = CreateVehicle(522, -1737.6507, 962.4368, 24.4540, 160.2843, 171, 171, 900);  //NRG-500
for(new i; i<sizeof(soldierVehs); i++)
{
isSoldierGangVeh[soldierVehs[i]]=true;
}
yakuzaVehs[1] = CreateVehicle(411, 2586.6418, 2780.4836, 10.5473, 89.7078, 251, 251, 900);  //Infernus
yakuzaVehs[2] = CreateVehicle(411, 2570.3603, 2791.9453, 10.5473, 180.6495, 251, 251, 900);  //Infernus
yakuzaVehs[3] = CreateVehicle(560, 2574.4729, 2768.8718, 10.5252, 359.9030, 251, 251, 900);  //Sultan
yakuzaVehs[4] = CreateVehicle(579, 2566.2109, 2769.1118, 10.7518, 359.2712, 251, 251, 900);  //Huntley
yakuzaVehs[5] = CreateVehicle(579, 2586.4331, 2772.6333, 10.7529, 89.5541, 251, 251, 900);  //Huntley
yakuzaVehs[6] = CreateVehicle(560, 2562.0100, 2792.0656, 10.5255, 179.2442, 251, 251, 900);  //Sultan
yakuzaVehs[7] = CreateVehicle(562, 2557.8300, 2768.9558, 10.4797, 359.6143, 251, 251, 900);  //Elegy
yakuzaVehs[8] = CreateVehicle(487, 2541.2998, 2769.2536, 11.1501, 359.7666, 251, 251, 900);  //Maverick
yakuzaVehs[9] = CreateVehicle(522, 2583.3645, 2794.2092, 10.3880, 128.7462, 251, 251, 900);  //NRG-500
yakuzaVehs[10] = CreateVehicle(522, 2585.6254, 2794.2553, 10.3881, 127.4658, 251, 251, 900); //NRG-500
for(new i; i<sizeof(yakuzaVehs); i++)
{
isYakuzaGangVeh[yakuzaVehs[i]]=true;
}
syndicateVehs[1] = CreateVehicle(579, 1783.7011, 2821.2512, 10.7664, 343.0036, 79, 79, 900);  //Huntley
syndicateVehs[2] = CreateVehicle(579, 1749.5639, 2820.7910, 10.7672, 17.6556, 79, 79, 900);  //Huntley
syndicateVehs[3] = CreateVehicle(411, 1778.0570, 2801.7602, 10.5630, 344.4429, 79, 79, 900);  //Infernus
syndicateVehs[4] = CreateVehicle(560, 1755.2161, 2801.8525, 10.5383, 16.5927, 79, 79, 900);  //Sultan
syndicateVehs[5] = CreateVehicle(487, 1766.6214, 2767.2133, 10.9074, 0.0176, 79, 79, 900);  //Maverick
syndicateVehs[6] = CreateVehicle(451, 1766.5034, 2780.9904, 10.5423, 91.5007, 79, 79, 900);  //Turismo
syndicateVehs[7] = CreateVehicle(541, 1766.8874, 2853.9028, 10.4572, 271.1266, 79, 79, 900);  //Bullet
syndicateVehs[8] = CreateVehicle(522, 1779.9742, 2774.1992, 10.6723, 46.1928, 79, 79, 900);  //NRG-500
syndicateVehs[9] = CreateVehicle(522, 1779.6837, 2772.7128, 10.6914, 50.1116, 79, 79, 900);  //NRG-500
for(new i; i<sizeof(syndicateVehs); i++)
{
isSyndicateGangVeh[syndicateVehs[i]]=true;
}
bloodMafiaVehs[1] = CreateVehicle(487, 1131.1058, -1232.8121, 25.4786, 359.0727, 3, 3 , 900);  //Maverick
bloodMafiaVehs[2] = CreateVehicle(560, 1092.8414, -1225.3471, 15.5251, 180.4128, 3, 3, 900);  //Sultan
bloodMafiaVehs[3] = CreateVehicle(578, 1116.0975, -1247.3536, 16.4970, 0.4791, 3, 3, 900);  //DFT-30
bloodMafiaVehs[4] = CreateVehicle(439, 1097.3837, -1225.5856, 15.7161, 181.0876, 3, 3, 900);  //Stallion
bloodMafiaVehs[5] = CreateVehicle(541, 1102.0024, -1225.0908, 15.4486, 180.2831, 3, 3, 900);  //Bullet
bloodMafiaVehs[6] = CreateVehicle(522, 1106.9692, -1224.3183, 15.3949, 183.6737, 3, 3, 900);  //NRG-500
bloodMafiaVehs[7] = CreateVehicle(522, 1105.3911, -1224.3166, 15.3949, 181.0514, 3, 3, 900);  //NRG-500
bloodMafiaVehs[8] = CreateVehicle(451, 1109.9226, -1225.4902, 15.5302, 179.8953, 3, 3, 900);  //Turismo
bloodMafiaVehs[9] = CreateVehicle(579, 1085.8339, -1250.1539, 15.7590, 269.1950, 3, 3, 900);  //Huntley
bloodMafiaVehs[10] = CreateVehicle(411, 1085.5162, -1241.4329, 15.5542, 269.3987, 3, 3, 900);  //Infernus
for(new i; i<sizeof(bloodMafiaVehs); i++)
{
isBloodMafiaGangVeh[bloodMafiaVehs[i]]=true;
}
ms13Vehs[1] = CreateVehicle(522,-43.7467,1090.7900,19.3100,313.1989,98,98, 900);  // mara car1
ms13Vehs[2] = CreateVehicle(522,-41.3642,1090.5417,19.3100,312.1312,98,98, 900);  // mara car2
ms13Vehs[3] = CreateVehicle(566,-25.8431,1117.7206,19.5322,180.2623,98,98, 900);  // mara car3
ms13Vehs[4] = CreateVehicle(567,-9.1512,1113.1694,19.7791,180.2317,98,98, 900);  // mara car4
ms13Vehs[5] = CreateVehicle(411,4.9422,1083.8176,19.4745,90.6888,98,98, 900);  // mara car5
ms13Vehs[6] = CreateVehicle(411,-2.7396,1083.7994,19.4710,89.5072,98,98, 900);  // mara car6
ms13Vehs[7] = CreateVehicle(579,0.4540,1067.7860,19.8970,90.2868,98,98, 900);  // mara car7
ms13Vehs[8] = CreateVehicle(560,-30.3721,1066.7074,19.4498,359.9763,98,98, 900);  // mara car8
ms13Vehs[9] = CreateVehicle(560,-30.3590,1084.8069,19.4481,359.4691,98,98, 900);  // mara car9
ms13Vehs[10] = CreateVehicle(487,-43.7323,1083.2986,23.3676,269.2445,98,98, 900);  // mara car10
for(new i; i<sizeof(ms13Vehs); i++)
{
isMS13GangVeh[ms13Vehs[i]]=true;
}
bgMafiaVehs[0] = CreateVehicle(487,1291.2058,-789.7775,96.6011,179.8307,0,0, 900);  // BGM Car 1
bgMafiaVehs[1] = CreateVehicle(560,1243.4724,-809.0154,87.8661,303.3171,0,0, 900);  // BGM Car 2
bgMafiaVehs[2] = CreateVehicle(560,1235.8627,-811.3358,87.5092,275.4814,0,0, 900);  // BGM Car 3
bgMafiaVehs[3] = CreateVehicle(560,1227.4371,-811.8135,87.2921,271.7863,0,0, 900);  // BGM Car 4
bgMafiaVehs[4] = CreateVehicle(579,1225.8682,-803.0211,88.5512,271.9268,0,0, 900);  // BGM Car 5
bgMafiaVehs[5] = CreateVehicle(579,1232.8867,-802.7137,88.6010,273.3310,0,0, 900);  // BGM Car 6
bgMafiaVehs[6] = CreateVehicle(562,1213.3787,-830.7581,84.7358,52.4480,0,0, 900);  // BGM Car 7
bgMafiaVehs[7] = CreateVehicle(559,1219.3944,-834.1917,84.2755,66.2540,0,0, 900);  // BGM Car 8
bgMafiaVehs[8] = CreateVehicle(411,1242.9226,-803.3868,83.8676,178.9484,0,0, 900);  // BGM Car 9
bgMafiaVehs[9] = CreateVehicle(487,1291.2115,-789.7786,96.6327,179.8968,0,0, 900);  // BGM Car 10
for(new i; i<sizeof(bgMafiaVehs); i++)
{
isBGMafiaGangVeh[bgMafiaVehs[i]]=true;
}
Gang343Vehs[0] = CreateVehicle(560, -813.5150, 1566.0947, 26.7411, 180.0169, 0, 30, -1);  //Sultan
Gang343Vehs[1] = CreateVehicle(567, -813.4089, 1555.0924, 26.9023, 359.1227, 0, 169, -1);  //Savanna
Gang343Vehs[2] = CreateVehicle(541, -820.8497, 1542.1290, 26.7335, 308.8533, 0, 0, -1);  //Bullet
Gang343Vehs[3] = CreateVehicle(451, -821.9215, 1577.9213, 26.7548, 228.5114, 0, 253, -1);  //Turismo
Gang343Vehs[4] = CreateVehicle(579, -793.9832, 1542.1098, 26.9094, 88.5361, 0, 118, -1);  //Huntley
Gang343Vehs[5] = CreateVehicle(411, -793.1918, 1572.3433, 26.7002, 91.5546, 0, 148, -1);  //Infernus
Gang343Vehs[6] = CreateVehicle(487, -822.4821, 1568.9770, 30.4314, 270.8357, 0, 0, -1);  //Maverick
Gang343Vehs[7] = CreateVehicle(487, -823.2189, 1555.6975, 30.8420, 270.8032, 0, 0, -1);  //Maverick
Gang343Vehs[8] = CreateVehicle(522, -794.7127, 1564.0701, 26.6853, 125.8678, 0, 0, -1);  //NRG-500
Gang343Vehs[9] = CreateVehicle(522, -795.6697, 1565.4379, 26.6849, 127.0733, 0, 0, -1);  //NRG-500*
for(new i; i<sizeof(Gang343Vehs); i++)
{
is343GangVeh[Gang343Vehs[i]]=true;
}
groveVehs[1]=CreateVehicle(522,2482.3757,-1652.5487,13.0282,142.6509,86,86,900);
groveVehs[2]=CreateVehicle(566,2498.3342,-1649.1823,13.3081,157.4072,86,86,900);
groveVehs[3]=CreateVehicle(492,2515.5366,-1665.1935,13.5741,91.9201,86,86,900);
groveVehs[4]=CreateVehicle(429,2516.7124,-1672.0027,13.6131,60.6237,86,0,900);
groveVehs[5]=CreateVehicle(411,2509.9509,-1686.9349,13.2954,50.8308,86,86,900);
groveVehs[6]=CreateVehicle(567,2488.0681,-1682.6639,13.1949,92.3377,86,86,900);
groveVehs[7]=CreateVehicle(560,2473.2893,-1695.6903,13.1662,0.0001,86,86,900);
groveVehs[8]=CreateVehicle(560,2473.2490,-1704.8604,13.1925,359.8790,86,86,900);
groveVehs[9]=CreateVehicle(482,2466.2520,-1688.1406,13.6778,267.1897,86,86,900);
groveVehs[10]=CreateVehicle(579,2470.4138,-1670.1687,13.2181,11.2582,86,86,900);
groveVehs[11]=CreateVehicle(409,2443.2847,-1644.2251,13.3183,181.7236,86,86,900);
groveVehs[12]=CreateVehicle(562,2425.2075,-1636.3978,13.0753,180.8151,86,86,900);
for(new i; i<sizeof(groveVehs); i++)
{
isGroveGangVeh[groveVehs[i]]=true;
}
ballasVehs[1]=CreateVehicle(517,2142.6514,-1413.9413,24.6928,89.5360,242,0,900);  // kola1 - ballas
ballasVehs[2]=CreateVehicle(522,2150.4158,-1412.9873,25.4909,181.1308,242,0,900);  // motor - ballas
ballasVehs[3]=CreateVehicle(522,2150.4785,-1416.4919,25.4929,180.3405,242,0,900);  // motor2 - ballas
ballasVehs[4]=CreateVehicle(560,2157.7717,-1423.7246,25.2054,89.1576,242,242,900);  // sultan - ballas
ballasVehs[5]=CreateVehicle(536,2141.6545,-1429.4076,24.3500,89.7899,242,242,900);  // kola2 - ballas
ballasVehs[6]=CreateVehicle(566,2155.0444,-1454.5491,25.3726,90.0047,242,242,900);  // kola3 - ballas
ballasVehs[7]=CreateVehicle(576,2162.3745,-1454.5953,25.1046,90.2217,242,242,900);  // kola4 - ballas
ballasVehs[8]=CreateVehicle(487,2163.9646,-1465.8907,25.7057,1.0011,242,0,900);  // heli - ballas
ballasVehs[9]=CreateVehicle(411,2130.9939,-1491.8048,23.5404,359.6788,242,242,900);  // infernus - ballas
ballasVehs[10]=CreateVehicle(508,2121.8989,-1495.8799,24.3548,323.1362,242,242,900);  // kola za interior - ballas
ballascars10text = Create3DTextLabel("{C2A2DA}Само за Rolling Heights Ballas\n{00FF00}Натисни {FF0000}G {00FF00}за да влезеш в караваната.\nНатисни {FF0000}ENTER {00FF00}за да излезеш, когато си в нея.", 0x00FF00FF, 0.0, 0.0, 0.0, 15.0, 0, 1 );
Attach3DTextLabelToVehicle(ballascars10text, ballasVehs[10], 0.0, 0.0, 0.0);
ballasVehs[11]=CreateVehicle(481,2128.7788,-1497.3928,23.4840,358.7587,242,242,900);  // kolelo - ballas
ballasVehs[12]=CreateVehicle(481,2130.0701,-1497.3970,23.4555,1.2986,242,242,900);  // kolelo2 - ballas
for(new i; i<sizeof(ballasVehs); i++)
{
isBallasGangVeh[ballasVehs[i]]=true;
}
vagosVehs[1]=CreateVehicle(474,1880.3109,2286.1875,10.7425,269.7603,6,6,900);  // vagos1
vagosVehs[2]=CreateVehicle(412,1909.2897,2289.5784,10.6562,91.3783,6,6,900);  // vagos2
vagosVehs[3]=CreateVehicle(541,1912.0590,2302.3689,10.4453,0.6415,6,6,900);  // bulleta
vagosVehs[4]=CreateVehicle(534,1911.9614,2309.6794,10.5437,359.1782,6,6,900);  // vagos4
vagosVehs[5]=CreateVehicle(411,1912.0503,2318.0942,10.5474,356.3801,6,6,900);  // vagos5
vagosVehs[6]=CreateVehicle(560,1912.1449,2325.5798,10.5248,356.6646,6,6,900);  // vagos6
vagosVehs[7]=CreateVehicle(411,1909.1853,2348.1267,10.6149,273.3006,6,6,900);  // infernus
vagosVehs[8]=CreateVehicle(487,1875.9656,2290.4939,16.1995,269.9442,6,0,900);  // helivagos1
vagosVehs[9]=CreateVehicle(487,1875.6268,2339.5623,16.1990,269.4076,6,0,900);  // helivagos2
vagosVehs[10]=CreateVehicle(506,1890.2362,2323.3767,10.5249,180.8689,6,6,900);  // vagoscar
for(new i; i<sizeof(vagosVehs); i++)
{
isVagosGangVeh[vagosVehs[i]]=true;
}
triadsVehs[1]=CreateVehicle(522,1947.9634,949.1880,10.3873,230.9314,0,0,900);  // triads2
triadsVehs[2]=CreateVehicle(522,1949.7938,950.5921,10.3918,232.6649,0,0,900);  // triads1
triadsVehs[3]=CreateVehicle(409,1964.9244,938.4307,10.5423,269.1901,0,0,900);  // triads3
triadsVehs[4]=CreateVehicle(560,1957.6072,938.5424,10.4487,268.5377,0,0,900);  // triads4
triadsVehs[5]=CreateVehicle(579,1951.4574,938.7516,10.6755,268.7814,0,0,900);  // triads5
triadsVehs[6]=CreateVehicle(409,1882.8169,963.8494,10.6203,270.8264,0,0,900);  // triads6
triadsVehs[7]=CreateVehicle(409,1882.9513,957.3453,10.6203,270.1068,0,0,900);  // triads7
triadsVehs[8]=CreateVehicle(560,1911.7120,963.5993,10.5250,184.1433,0,0,900);  // triads8
triadsVehs[9]=CreateVehicle(411,1916.3330,963.6063,10.5474,183.2727,0,0,900);  // triads9
triadsVehs[10]=CreateVehicle(578,1930.8434,949.9053,11.4402,90.0164,0,0,900);  // triads10
for(new i; i<sizeof(triadsVehs); i++)
{
isTriadsGangVeh[triadsVehs[i]]=true;
}
aztecasVehs[1]=CreateVehicle(560,752.0851,-503.2887,16.9567,180.3046,2,2,900);  // sultan - aztecas
aztecasVehs[2]=CreateVehicle(560,752.1932,-495.7025,17.0342,179.0867,2,2,900);  // sultan2 - aztecas
aztecasVehs[3]=CreateVehicle(522,748.9619,-522.2308,15.9083,180.3538,2,2,900);  // motor - aztecas
aztecasVehs[4]=CreateVehicle(522,747.5856,-521.9755,15.9080,180.3337,2,2,900);  // motor2 - aztecas
aztecasVehs[5]=CreateVehicle(579,762.8350,-514.2790,16.7327,180.0451,2,2,900);  // djipka - aztecas
aztecasVehs[6]=CreateVehicle(579,762.8936,-506.9639,17.2283,179.3087,2,2,900);  // djipka2 - aztecas
aztecasVehs[7]=CreateVehicle(567,771.9294,-545.5295,16.6317,358.3828,2,2,900);  // kola - aztecas
aztecasVehs[8]=CreateVehicle(411,785.6984,-502.3122,16.9807,180.6297,2,2,900);  // infernus - aztecas
aztecasVehs[9]=CreateVehicle(411,785.8930,-510.4932,16.5555,181.4656,2,2,900);  // infernus - aztecas
aztecasVehs[10]=CreateVehicle(487,743.9529,-541.0137,16.6115,358.6243,2,2,900);  // heli - aztecas
aztecasVehs[11]=CreateVehicle(562,750.7774,-545.9088,16.4508,359.3824,2,2,900);  // elegy - aztecas
aztecasVehs[12]=CreateVehicle(573,726.5473,-516.5283,16.9103,179.7132,2,2,900);  // interior - aztecas
aztecascars12text = Create3DTextLabel("{33CCFF}Само за Varrio Los Aztecas\n{00FF00}Натисни {FF0000}G {00FF00}за да влезеш в камиона.\nНатисни {FF0000}ENTER {00FF00}за да излезеш, когато си в него.", 0x00FF00FF, 0.0, 0.0, 0.0, 15.0, 0, 1 );
Attach3DTextLabelToVehicle(aztecascars12text, aztecasVehs[12], 0.0, 0.0, 0.0);
for(new i; i<sizeof(aztecasVehs); i++)
{
isAztecasGangVeh[aztecasVehs[i]]=true;
}
italianVehs[1]= CreateVehicle(533,-689.1786,968.2943,11.8831,93.4251,0,0,900);  // Italian Mafia Car1
italianVehs[2]= CreateVehicle(445,-688.9850,963.5048,12.0415,88.5025,0,0,900);  // Italian Mafia Car2
italianVehs[3]= CreateVehicle(579,-679.3967,963.2996,12.0695,89.6264,0,0,900);  // Italian Mafia Car3
italianVehs[4]= CreateVehicle(579,-679.9169,968.8642,12.0639,92.4501,0,0,900);  // Italian Mafia Car4
italianVehs[5]= CreateVehicle(487,-656.1565,954.9906,12.2760,178.0132,0,0,900);  // Italian Mafia Car5
italianVehs[6]= CreateVehicle(421,-674.0872,946.0048,12.0159,28.7546,0,0,900);  // Italian Mafia Car6
italianVehs[7]= CreateVehicle(545,-682.3112,946.6027,11.9397,23.2160,0,0,900);  // Italian Mafia Car7
italianVehs[8]= CreateVehicle(522,-693.6101,944.4960,11.8058,271.0218,0,0,900);  // Italian Mafia Car8
italianVehs[9]= CreateVehicle(522,-690.4867,944.4437,11.7571,88.6222,0,0,900);  // Italian Mafia Car9
for(new i; i<sizeof(italianVehs); i++)
{
isItalianGangVeh[italianVehs[i]]=true;
}
nangVehs[1]=CreateVehicle(487,2622.4138,1879.6233,10.9970,178.6253,21,21,900);  // nang1
nangVehs[2]=CreateVehicle(409,2619.7512,1833.4093,10.7184,178.8567,21,21,900); // nang2
nangVehs[3]=CreateVehicle(409,2619.5876,1816.2043,10.7149,179.8992,21,21,900); // nang3
nangVehs[4]=CreateVehicle(522,2633.1260,1837.3751,10.4041,92.0362,21,21,900); // nang4
nangVehs[5]=CreateVehicle(522,2633.3562,1838.3010,10.4482,85.0043,21,21,900); // nang5
nangVehs[6]=CreateVehicle(518,2631.2344,1808.0491,10.4913,92.0208,21,21,900); // nang6
nangVehs[7]=CreateVehicle(560,2630.7720,1858.4489,10.5257,88.0735,21,21,900); // nang7
nangVehs[8]=CreateVehicle(562,2630.7546,1855.1859,10.4795,91.5200,21,21,900); // nang8
nangVehs[9]=CreateVehicle(559,2631.0073,1852.1052,10.4766,86.3341,21,21,900); // nang9
nangVehs[10]=CreateVehicle(567,2602.9399,1802.3368,10.6974,88.6509,21,21,900); // nang10
for(new i; i<sizeof(nangVehs); i++)
{
isNangGangVeh[nangVehs[i]]=true;
}
soaVehs[1]=CreateVehicle(463,2607.5100,2328.5344,10.3606,209.8055,0,0,900);  // soa1
soaVehs[2]=CreateVehicle(463,2609.4705,2328.9753,10.3566,208.2699,0,0,900);  // soa2
soaVehs[3]=CreateVehicle(463,2610.9456,2329.4771,10.3568,209.6774,0,0,900);  // soa3
soaVehs[4]=CreateVehicle(463,2612.0383,2329.6987,10.3569,209.8093,0,0,900);  // soa4
soaVehs[5]=CreateVehicle(463,2613.3054,2330.0266,10.3569,206.1571,0,0,900);  // soa5
soaVehs[6]=CreateVehicle(463,2614.3750,2330.3340,10.3566,206.5669,0,0,900);  // soa6
soaVehs[7]=CreateVehicle(461,2619.5137,2330.8586,10.4088,188.5789,0,0,900);  // soa7
soaVehs[8]=CreateVehicle(554,2624.4563,2343.3042,10.8312,39.4545,79,0,900);  // soa8
soaVehs[9]=CreateVehicle(554,2640.7495,2349.6467,10.7933,220.9568,79,0,900);  // soa9
soaVehs[10]=CreateVehicle(434,2632.3479,2350.0049,10.7170,118.1949,0,0,900);  // soa10
for(new i; i<sizeof(soaVehs); i++)
{
isSoaGangVeh[soaVehs[i]]=true;
}
rifaVehs[1] = CreateVehicle(496,-2197.5461,965.4709,79.7530,270.4769,152,152,900);  // rifacar
rifaVehs[2] = CreateVehicle(560,-2197.2048,971.6678,79.6639,271.0227,152,152,900);  // rifacar
rifaVehs[3] = CreateVehicle(560,-2197.3442,977.9351,79.6632,271.3475,152,152,900);  // rifacar
rifaVehs[4] = CreateVehicle(411,-2197.3025,983.6387,79.7338,269.3553,152,152,900);  // rifacar
rifaVehs[5] = CreateVehicle(567,-2196.9644,989.8078,79.8977,269.2165,152,152,900);  // rifacar
rifaVehs[6] = CreateVehicle(541,-2197.5020,996.1154,79.6346,270.3678,152,152,900);  // rifacar
rifaVehs[7] = CreateVehicle(495,-2197.2754,1002.1566,80.2880,270.2743,152,152,900);  // rifacar
rifaVehs[8] = CreateVehicle(522,-2198.6465,1007.2259,79.5743,270.2843,152,152,900);  // rifacar
rifaVehs[9] = CreateVehicle(522,-2198.4402,1008.5887,79.5686,269.3019,152,152,900);  // rifacar
rifaVehs[10] = CreateVehicle(487,-2214.6382,1049.4929,80.1886,180.5292,152,152,900);  // rifacar
rifaVehs[11] = CreateVehicle(513,-2205.5764,973.1305,85.4048,2.3496,0,152,900);  // rifacar
for(new i; i<sizeof(rifaVehs); i++)
{
isRifaGangVeh[rifaVehs[i]]=true;
}
deltaForceVehs[1] =AddStaticVehicle(520,330.1985,1823.2595,18.5732,100.4614,0,0);  // hidra1
deltaForceVehs[2] =AddStaticVehicle(520,330.5229,1842.0887,18.3642,86.0958,0,0);  // hidra
deltaForceVehs[3] =AddStaticVehicle(470,294.5775,1814.6425,17.6358,277.0992,0,0);  // djip1
deltaForceVehs[4] =AddStaticVehicle(470,294.8195,1809.5286,17.6345,268.6466,0,0);  // djip2
deltaForceVehs[5] =AddStaticVehicle(470,295.2057,1803.5889,17.6396,274.0068,0,0);  // djip2
deltaForceVehs[6] =AddStaticVehicle(470,294.9793,1798.5293,17.6356,269.2413,0,0);  // djip3
deltaForceVehs[7] =AddStaticVehicle(470,294.7609,1793.6522,17.6335,270.4687,0,0);   // djip4
deltaForceVehs[8] =AddStaticVehicle(520,330.1041,1862.6323,18.4510,93.0016,1,1);   // hidra--
deltaForceVehs[9] =AddStaticVehicle(425,326.8470,1878.5598,18.1873,100.2761,0,0);   // heli 1
deltaForceVehs[10] =AddStaticVehicle(425,328.2083,1896.0977,18.1806,101.7742,1,1);   // heli 2
deltaForceVehs[11] =AddStaticVehicle(425,330.6170,1919.6134,18.2126,101.5579,1,1);   // hili3
deltaForceVehs[12] =AddStaticVehicle(432,385.1636,1927.8258,17.6523,84.4203,0,0);   // tank1
deltaForceVehs[13] =AddStaticVehicle(432,385.4187,1916.1744,17.6621,90.8079,1,1);   // tank2
deltaForceVehs[14] =AddStaticVehicle(432,385.4432,1907.8527,17.6093,89.9892,0,0);   // tank3
deltaForceVehs[15] =AddStaticVehicle(432,385.4331,1937.3391,17.6412,89.2096,0,0);   // tank4
deltaForceVehs[16] =AddStaticVehicle(432,385.4144,1944.0114,17.6338,87.6963,0,0);   // tank5
deltaForceVehs[17] =AddStaticVehicle(432,385.2762,1950.0592,17.6205,81.2982,0,0);   // tank6
deltaForceVehs[18] =AddStaticVehicle(447,358.8727,1968.4592,17.6600,89.3739,0,0);   // hili1
deltaForceVehs[19] =AddStaticVehicle(447,357.9221,1979.4791,17.6745,81.7223,0,0);   // hili2
deltaForceVehs[20] =AddStaticVehicle(447,359.0941,1987.4917,18.3275,88.5564,0,0);   // hili2
deltaForceVehs[21] =AddStaticVehicle(455,283.4998,1961.1588,18.0763,269.0667,120,120);   // kamion1
deltaForceVehs[22] =AddStaticVehicle(455,285.3535,1949.4858,18.0773,272.5787,120,120);   // kamion2
deltaForceVehs[23] =AddStaticVehicle(455,285.4825,1954.6948,18.0773,272.8464,120,120);   // kamion3
deltaForceVehs[24] =AddStaticVehicle(487,325.8565,1970.4243,17.8173,95.3850,120,120);   // hili1
deltaForceVehs[25] =AddStaticVehicle(487,322.2999,1978.7515,17.8172,96.1665,120,120);   // hili1
deltaForceVehs[26] =AddStaticVehicle(487,321.0127,1989.1082,17.7841,91.9413,120,120);   // hili
deltaForceVehs[28] =AddStaticVehicle(601,285.6362,2016.9946,17.3994,275.0342,120,120);   // swat1
deltaForceVehs[29] =AddStaticVehicle(601,284.4478,2021.6348,17.3994,268.2248,120,120);   // swat2
deltaForceVehs[30] =AddStaticVehicle(601,284.7347,2025.6781,17.3994,266.3577,120,120);   // swat3
deltaForceVehs[31] =AddStaticVehicle(609,284.8653,2029.7720,17.7093,271.6387,120,120);   // kamion
deltaForceVehs[32] =AddStaticVehicle(593,292.6227,1850.5432,18.1002,278.3638,120,120);   // samoletdf1
deltaForceVehs[33] =AddStaticVehicle(593,292.3923,1863.6865,18.1043,269.1595,120,120);   // samoletdf2
deltaForceVehs[34] =AddStaticVehicle(586,287.2446,1874.3721,17.1609,261.1524,120,120);   // motor1
deltaForceVehs[35] =AddStaticVehicle(586,287.7965,1876.4424,17.1605,276.5327,120,120);   // motor2
deltaForceVehs[36] =AddStaticVehicle(586,287.0294,1878.3141,17.1608,279.3047,120,120);   // motor3
deltaForceVehs[37] =AddStaticVehicle(530,287.2961,1888.5565,17.4062,276.4915,120,120);   // kola
deltaForceVehs[38] =AddStaticVehicle(530,287.1822,1891.7783,17.4047,269.3364,120,120);   // kola
deltaForceVehs[39] =AddStaticVehicle(530,286.9659,1895.1188,17.4103,267.9124,120,120);   // kola
deltaForceVehs[40] =AddStaticVehicle(505,288.5142,1900.4742,17.7823,268.5080,120,120);   // kola
deltaForceVehs[41] =AddStaticVehicle(505,289.0280,1909.2083,17.7839,273.7659,120,120);   // kola
deltaForceVehs[42] =AddStaticVehicle(505,288.5133,1904.4833,17.7828,267.7601,120,120);   // kola
deltaForceVehs[43] = AddStaticVehicle(548,299.3055,2046.1487,19.2917,185.5962,0,0);
deltaForceVehs[44] = AddStaticVehicle(548,817.0307,-2245.9573,14.4755,179.0173,0,0);  // dfcar
deltaForceVehs[45] = AddStaticVehicle(548,770.9144,-2241.8374,14.5284,178.7060,0,0);   // dfcar2
deltaForceVehs[46] = AddStaticVehicle(470,824.8119,-2157.0513,12.8390,269.5110,0,0);   // dfcar3
deltaForceVehs[47] = AddStaticVehicle(470,824.8430,-2147.7466,12.8430,268.2695,0,0);   // dfcar4
deltaForceVehs[48] = AddStaticVehicle(470,824.8992,-2141.6255,12.8437,265.4050,0,0);   // dfcar5
deltaForceVehs[49] = AddStaticVehicle(470,824.8854,-2131.8750,12.8442,269.2822,0,0);   // dfcar6
deltaForceVehs[50] = AddStaticVehicle(470,824.9623,-2125.6196,12.8456,269.8185,0,0);   // dfcar7
deltaForceVehs[51] = AddStaticVehicle(470,825.0194,-2116.0430,12.8429,264.3820,0,0);   // dfcar8
deltaForceVehs[52] = AddStaticVehicle(470,825.0418,-2107.2092,12.8426,265.8801,0,0);   // dfcar9
deltaForceVehs[53] = AddStaticVehicle(470,825.0038,-2100.4587,12.8480,269.3357,0,0);   // dfcar10
deltaForceVehs[54] = AddStaticVehicle(470,825.0626,-2090.7229,12.8441,268.4541,0,0);   // dfcar11
deltaForceVehs[55] = AddStaticVehicle(470,825.1733,-2084.6230,12.8837,266.3433,0,0);   // dfcar12
specialForceCars[1] = AddStaticVehicle(430,808.3689,-2306.0146,-0.1026,154.1122,1,1);  specialForceCarsmax+=1; // sforce1
specialForceCars[2] = AddStaticVehicle(430,784.4291,-2325.0977,-0.0137,65.8529,1,1);  specialForceCarsmax+=1; // sforce2
specialForceCars[3] = AddStaticVehicle(430,785.1269,-2315.0447,-0.4699,67.2432,1,1);  specialForceCarsmax+=1; // sforce3
specialForceCars[4] = AddStaticVehicle(432,882.1873,-2248.5005,12.8664,94.4960,0,0);  specialForceCarsmax+=1; // sforce4
specialForceCars[5] = AddStaticVehicle(432,882.2750,-2242.9099,12.8656,95.9650,0,0);  specialForceCarsmax+=1; // sforce5
specialForceCars[6] = AddStaticVehicle(432,892.8770,-2248.5293,12.8427,91.6792,0,0);  specialForceCarsmax+=1; // sforce6
specialForceCars[7] = AddStaticVehicle(432,892.4963,-2241.7083,12.8589,92.8191,0,0);  specialForceCarsmax+=1; // sforce7
specialForceCars[8] = AddStaticVehicle(520,878.3239,-2297.6335,13.3822,87.3091,0,0);  specialForceCarsmax+=1; // sforce8
specialForceCars[9] = AddStaticVehicle(520,878.9005,-2317.0137,13.3822,79.9242,0,0);  specialForceCarsmax+=1; // sforce9
specialForceCars[10] = AddStaticVehicle(520,880.2167,-2329.3601,13.3822,89.8608,0,0);  specialForceCarsmax+=1; // sforce10
specialForceCars[11] = AddStaticVehicle(520,878.2840,-2342.0686,13.3822,86.5012,0,0);  specialForceCarsmax+=1; // sforce11
specialForceCars[12] = AddStaticVehicle(520,878.0682,-2357.1230,13.3821,81.1244,0,0); specialForceCarsmax+=1; // sforce12
specialForceCars[13] = AddStaticVehicle(520,878.8068,-2370.3452,13.3822,90.4048,0,0);  specialForceCarsmax+=1; // sforce13
specialForceCars[14] = AddStaticVehicle(425,854.8376,-2374.7275,13.2311,280.4905,0,0); specialForceCarsmax+=1;  // sforce14
specialForceCars[15] = AddStaticVehicle(425,854.7662,-2359.4111,13.2310,263.6804,0,0);  specialForceCarsmax+=1; // sforce15
specialForceCars[16] = AddStaticVehicle(425,852.2786,-2346.5659,13.2152,272.1270,0,0);  specialForceCarsmax+=1; // sforce16
specialForceCars[17] = AddStaticVehicle(425,852.2847,-2328.1987,13.2146,270.5380,0,0); specialForceCarsmax+=1;  // sforce17
specialForceCars[18] = AddStaticVehicle(425,852.2910,-2315.2180,13.2133,268.6584,0,0); specialForceCarsmax+=1;  // sforce18
specialForceCars[19] = AddStaticVehicle(425,852.2875,-2297.5378,13.2046,266.1672,0,0); specialForceCarsmax+=1;  // sforce19
for(new i; i<sizeof(specialForceCars); i++)
{
isDeltaForceGangVeh[deltaForceVehs[i]]=true;
}
//for(new i; i<sizeof(deltaForceVehs); i++)
//{
// isDeltaForceGangVeh[specialForceCars[i]]=true;
//}
lvpdVehs[1]=CreateVehicle(598,2251.6960,2461.1604,10.5647,0.7289,0,1,900);  // policecar1
lvpdVehs[2]=CreateVehicle(598,2281.7688,2477.1084,10.5665,359.6116,0,1,900);  // policecar2
lvpdVehs[3]=CreateVehicle(599,2278.2905,2443.0581,11.0037,359.6354,0,1,900);  // policecar3
lvpdVehs[4]=CreateVehicle(599,2269.5115,2442.8984,11.0052,0.0001,0,1,900);  // policecar4
lvpdVehs[5]=CreateVehicle(427,2313.4092,2490.0430,3.4570,89.8919,0,1,900);  // policecar5
lvpdVehs[6]=CreateVehicle(427,2300.4929,2456.4758,3.4689,270.9489,0,1,900);  // policecar6
lvpdVehs[7]=CreateVehicle(601,2315.9565,2470.5745,3.0322,89.3433,0,1,900);  // policecar7
lvpdVehs[8]=CreateVehicle(598,2241.8032,2437.7478,3.0233,270.0572,0,1,900);  // policecar8
lvpdVehs[9]=CreateVehicle(523,2277.7908,2476.9065,10.3955,3.4096,0,1,900);  // bike1
lvpdVehs[10]=CreateVehicle(523,2251.6497,2441.2209,10.3816,181.8576,0,1,900);  // bike2
lvpdVehs[11]=CreateVehicle(497,2312.0928,2452.2563,10.9972,179.6904,0,1,900);  // hili
for(new i; i<sizeof(lvpdVehs); i++)
{
isLvpdGangVeh[lvpdVehs[i]]=true;
}
lspdVehs[1]=CreateVehicle(596,1536.5079,-1666.0378,13.1041,0.6715,0,1,900);  // lspd1
lspdVehs[2]=CreateVehicle(596,1536.4453,-1679.0817,13.1042,0.7565,0,1,900);  // lspd2
lspdVehs[3]=CreateVehicle(497,1560.0056,-1611.9402,13.5597,0.0283,0,1,900);  // lspd3
lspdVehs[4]=CreateVehicle(596,1591.3870,-1709.9634,5.6102,178.5953,0,1,900);  // lspd4
lspdVehs[5]=CreateVehicle(596,1601.7644,-1704.0433,5.6105,90.0638,0,1,900);  // lspd5
lspdVehs[6]=CreateVehicle(599,1586.3292,-1671.7924,6.0801,270.3832,0,1,900);  // lspd6
lspdVehs[7]=CreateVehicle(601,1561.9191,-1693.7473,5.6510,180.8680,0,0,900);  // lspd7
lspdVehs[8]=CreateVehicle(427,1578.7659,-1711.7460,6.0328,0.4362,0,1,900);  // lspd8
lspdVehs[9]=CreateVehicle(523,1584.7627,-1668.9755,5.4647,88.8122,0,1,900);  // lspd9
lspdVehs[10]=CreateVehicle(523,1584.9321,-1666.3895,5.4579,91.6474,0,1,900);  // lspd10
for(new i; i<sizeof(lspdVehs); i++)
{
isLspdGangVeh[lspdVehs[i]]=true;
}
bountyVehs[1]=CreateVehicle(411,660.6033,-1283.4000,13.2719,180.1347,154,154,900);  // bhunters1
bountyVehs[2]=CreateVehicle(579,660.3755,-1276.7418,13.4738,183.3500,154,154,900);  // bhunters2
bountyVehs[3]=CreateVehicle(562,660.0196,-1270.5104,13.2035,181.9810,154,154,900);  // bhunters3
bountyVehs[4]=CreateVehicle(560,669.5075,-1282.5005,13.2498,180.0450,154,154,900);  // bhunters4
bountyVehs[5]=CreateVehicle(409,669.4095,-1274.9530,13.3426,179.6351,154,154,900);  // bhunters5
bountyVehs[6]=CreateVehicle(560,669.6331,-1266.8650,13.2453,178.6060,154,154,900);  // bhunters6
bountyVehs[7]=CreateVehicle(481,688.2662,-1286.6830,13.0898,117.8503,154,154,900);  // bhunters7
bountyVehs[8]=CreateVehicle(481,688.2577,-1287.6053,13.0891,125.6551,154,154,900);  // bhunters8
bountyVehs[9]=CreateVehicle(487,742.4998,-1259.4336,13.7324,269.1596,154,154,900);  // bhunters9
bountyVehs[10]=CreateVehicle(487,765.3352,-1259.5431,13.7472,266.0747,154,154,900);  // bhunters10
for(new i; i<sizeof(bountyVehs); i++)
{
isBountyGangVeh[bountyVehs[i]]=true;
}
cripzVehs[1]=CreateVehicle(411,282.6102,-1160.0824,80.6411,225.3297,53,53,900);  // infernus - vcripz
cripzVehs[2]=CreateVehicle(411,286.7418,-1156.0349,80.6380,225.1132,53,53,900);  // infernus2 - vcripz
cripzVehs[3]=CreateVehicle(487,263.3456,-1171.7356,79.6268,278.1578,53,53,900);  // heli - cripz
cripzVehs[4]=CreateVehicle(560,278.0644,-1174.9341,80.4535,288.3980,53,53,900);  // sultan - vcripz
cripzVehs[5]=CreateVehicle(560,280.8209,-1177.5951,80.5118,290.0709,53,53,900);  // sultan2 - vcripz
cripzVehs[6]=CreateVehicle(562,286.8073,-1183.2435,80.5736,290.7241,53,53,900);  // elegy - cripz
cripzVehs[7]=CreateVehicle(562,283.8889,-1180.3596,80.5570,292.7408,53,53,900);  // elegy2 - cripz
cripzVehs[8]=CreateVehicle(541,273.3555,-1159.8564,80.5399,224.3608,53,53,900);  // kola - vcripz
cripzVehs[9]=CreateVehicle(573,288.1286,-1147.2111,81.5615,222.8329,53,53,900);  // interior - vcripz
cripzcars9text = Create3DTextLabel("{000099}Само за Vinewood Cripz\n{00FF00}Натисни {FF0000}G {00FF00}за да влезеш в камиона.\nНатисни {FF0000}ENTER {00FF00}за да излезеш, когато си в него.", 0x00FF00FF, 0.0, 0.0, 0.0, 15.0, 0, 1 );
Attach3DTextLabelToVehicle(cripzcars9text, cripzVehs[9], 0.0, 0.0, 0.0);
cripzVehs[10]=CreateVehicle(522,305.4707,-1159.1051,80.4810,131.6496,53,53,900);  // motor - vcripz
cripzVehs[11]=CreateVehicle(522,304.4301,-1157.9576,80.4809,136.7975,53,53,900);  // motor2 - vcripz
cripzVehs[12]=CreateVehicle(579,317.2428,-1166.5176,80.8455,133.5803,53,53,900);  // djip - vcripz
for(new i; i<sizeof(cripzVehs); i++)
{
isCripzGangVeh[cripzVehs[i]]=true;
}
AddStaticVehicleEx(537,602.2946,1285.0413,13.3495,300.1335,1,1,900); // veh
AddStaticVehicleEx(538,2864.7500,1343.2275,12.1256,0.0000,1,1,900); // vlak
AddStaticVehicleEx(449,1449.6514,2632.2500,11.2473,270.0000,1,74,900); // 2
AddStaticVehicleEx(449,1417.1182,2632.2500,11.2473,90.0000,1,74,900); // 1
CreateVehicle(492,771.5253,-1334.1238,13.2469,359.8254,64,0,900);
CreateVehicle(467,1376.2993,-993.1086,29.0882,354.3479,48,0,900); // car1
CreateVehicle(420,2200.8689,1277.5786,10.6284,90.6522,6,6,900); // car1
CreateVehicle(559,2201.0156,1285.6396,10.4998,90.2617,11,11,900); // car2
CreateVehicle(420,2200.7776,1293.7927,10.6284,89.2013,6,6,900); // car3
CreateVehicle(416,1177.6736,-1308.3738,13.9052,269.5979,1,3,900); // car
CreateVehicle(463,1419.7723,-1323.8895,13.0992,85.9360,46,0,900); // car
CreateVehicle(471,1250.3735,-1229.2214,13.0730,183.1282,51,51,900); // car
CreateVehicle(522,2099.8950,943.9579,10.3912,268.7346,5,85,900); // car
CreateVehicle(521,1994.6298,1075.9277,10.3904,354.3320,5,6,900); // car
CreateVehicle(603,1866.7584,1179.1772,10.5856,179.8083,0,1,900); // car
CreateVehicle(471,1707.7780,1253.3064,10.1819,1.6518,1,3,900); // car
CreateVehicle(445,1685.8378,1316.6997,10.6322,179.6370,66,66,900); // car
CreateVehicle(541,1640.8036,1296.2123,10.3646,269.7993,16,0,900); // car
CreateVehicle(438,1701.2408,1406.9891,10.5765,322.9780,6,6,900); // car
CreateVehicle(420,1698.8855,1420.6882,10.5292,312.4913,6,6,900); // car
CreateVehicle(587,1698.1412,1471.9504,10.4319,262.1092,98,98,900); // car
CreateVehicle(522,1698.4799,1482.5646,10.3257,257.0431,3,1,900); // car
CreateVehicle(560,1704.2808,1498.6833,10.4875,245.7231,80,80,900); // car
CreateVehicle(416,1624.0270,1822.6215,10.8584,1.9184,1,3,900); // car
CreateVehicle(416,1591.6675,1821.1727,11.0130,359.5998,3,1,900); // car
CreateVehicle(468,1609.7186,1851.3127,10.4882,182.6533,6,6,900); // car
CreateVehicle(411,1673.1298,1834.5892,10.4783,179.0714,61,61,900); // car
CreateVehicle(451,1685.2889,1851.3425,10.4465,89.9739,114,114,900); // car
CreateVehicle(506,1742.8035,1912.5298,10.4819,271.3684,3,3,900); // car
CreateVehicle(544,1763.7312,2074.6404,10.9848,181.4266,3,3,900); // car
CreateVehicle(407,1757.2053,2075.1086,10.9696,180.9546,3,3,900); // car
CreateVehicle(522,1527.8496,2204.9924,10.3920,181.4801,0,0,900); // car
CreateVehicle(541,1386.1497,2249.2932,10.4589,89.6190,3,4,900); // car
CreateVehicle(506,442.9023,-1802.7012,5.2099,354.2754,72,0,900);
CreateVehicle(562,1465.7566,2352.7119,10.4478,357.7283,3,4,900); // car
CreateVehicle(471,1806.2070,2623.6116,10.2252,178.7413,6,0,900); // car
CreateVehicle(481,959.9683,-1522.0959,13.0149,359.8105,57,0,900);
CreateVehicle(418,1849.3011,2578.9045,10.8492,0.3017,7,7,900); // car
CreateVehicle(521,367.5635,-1340.2676,14.1076,119.6715,80,0,900);
CreateVehicle(477,1110.8416,-1630.7823,13.2713,90.0069,53,0,900);
CreateVehicle(507,343.8066,-1808.6891,4.2620,179.5384,73,0,900);
CreateVehicle(522,361.6628,-2029.4879,7.3878,307.3224,43,43,900); //
CreateVehicle(462,361.6710,-2033.1227,7.4226,310.4334,33,33,900); //
CreateVehicle(510,183.8260,-1581.6919,13.1857,48.3526,76,0,900);
CreateVehicle(411,374.7554,-2024.4861,7.4067,357.6782,50,50,900); //
CreateVehicle(560,375.0436,-2015.5992,7.3990,359.3605,3,3,900); //
CreateVehicle(462,1422.0930,2842.7683,10.4136,243.2839,44,44,900); // car
CreateVehicle(518,437.6488,-1295.2046,14.8682,32.1277,79,0,900);
CreateVehicle(533,1470.1700,2839.4609,10.5652,180.2008,12,12,900); // car
CreateVehicle(415,1529.5582,2827.1646,10.5410,89.7498,6,6,900); // car
CreateVehicle(603,1527.8746,2858.9084,10.6582,265.3276,125,0,900); // car
CreateVehicle(439,1682.0747,2762.7502,10.6553,179.5395,65,65,900); // car
CreateVehicle(549,2531.2766,2511.3635,10.4234,91.4351,2,4,900); // car
CreateVehicle(535,2460.6541,2528.2312,10.4951,1.5184,3,3,900); // car
CreateVehicle(477,2402.5583,2557.0559,10.6130,270.3061,1,1,900); // car
CreateVehicle(562,2239.6018,2235.8860,10.4459,269.6897,3,0,900); // car
CreateVehicle(560,2503.9712,2238.2419,10.3764,89.0506,0,5,900); // car
CreateVehicle(522,2441.2786,2013.2446,10.3922,268.6646,66,66,900); // car
CreateVehicle(536,2486.2520,1991.3601,10.6100,359.6808,6,7,900); // car
CreateVehicle(559,2363.2822,2089.0911,10.4186,1.2506,254,2,900); // car
CreateVehicle(521,2236.4492,2130.2256,10.3938,271.5005,3,4,900); // car
CreateVehicle(510,2100.4424,2169.3293,10.4026,2.0098,3,0,900); // car
CreateVehicle(475,2102.9392,2082.5645,10.6711,89.0067,0,0,900); // car
CreateVehicle(411,2186.5762,1974.9695,10.4760,89.0564,158,158,900); // car
CreateVehicle(579,2203.2639,1788.1034,10.6066,1.9540,17,17,900); // car
CreateVehicle(461,2156.2139,1788.2894,10.4033,0.1878,12,12,900); // car
CreateVehicle(542,2174.2043,1821.9380,10.5990,179.8946,22,22,900); // car
CreateVehicle(422,2604.6572,1378.2987,10.7430,89.8924,56,4,900); // car
CreateVehicle(578,2647.7517,813.0166,6.0297,90.5862,4,4,900); // car
CreateVehicle(551,2647.5747,744.8439,10.6319,181.4257,67,67,900); // car
CreateVehicle(424,981.2684,-1332.2112,13.2060,273.1884,22,22,900); // car
CreateVehicle(434,1016.4972,-1360.9585,13.2592,90.3659,100,100,900); // car2
CreateVehicle(461,2540.3374,741.3383,10.4002,272.2441,25,25,900); // car
CreateVehicle(461,1553.9242,-1785.0142,13.1305,90.0535,43,0,900); // car
CreateVehicle(475,974.3016,-1305.6052,13.2307,179.8655,131,131,900);
CreateVehicle(570,1749.2616,-1953.7760,14.9954,269.9383,1,1,900); // train LS
//vehicles - location - close
//disco - location - open
CreateObject(19799, 479.225524, -20.957792, 1001.509704, 0.000000, 0.000000, 0.000000);
//disco - location - close
//objects - location - open
lspdCell1 = CreateObject(19302, 266.282501, 80.981002, 1001.280395, 0.000000, 0.000000, -91.799995);
lspdCell2 = CreateObject(19302, 266.431854, 85.738708, 1001.280395, 0.000000, 0.000000, -91.799995);
//tune garage - location - open
CreateObject(17950, 2405.544189, 1023.192443, 12.076158, 0.000000, 0.000000, 91.600059);
CreateObject(17950, 2405.352294, 1029.979125, 12.076158, 0.000000, 0.000000, 91.600059);
CreateObject(19121, 2408.763671, 1020.295471, 9.667904, 0.000000, 0.000000, 0.000000);
CreateObject(19121, 2408.763671, 1026.327514, 9.737903, 0.000000, 0.000000, 0.000000);
CreateObject(19121, 2408.763671, 1027.126708, 9.737903, 0.000000, 0.000000, 0.000000);
CreateObject(19121, 2408.763671, 1033.117431, 9.737903, 0.000000, 0.000000, 0.000000);
CreateObject(19304, 2400.780273, 1034.938232, 10.429325, 0.000000, 0.000000, 92.899993);
CreateObject(19121, 2400.675292, 1036.858398, 10.307898, 0.000000, 0.000000, 0.000000);
CreateObject(19304, 2400.425292, 1041.928955, 10.429325, 0.000000, 0.000000, 92.899993);
CreateObject(19121, 2400.515136, 1039.968872, 10.367891, 0.000000, 0.000000, 0.000000);
CreateObject(1280, 2404.259277, 1042.232421, 10.225398, 0.000000, 0.000000, 92.300064);
CreateObject(1280, 2407.677734, 1042.369628, 10.225398, 0.000000, 0.000000, 92.300064);
CreateObject(3507, 2401.594726, 1041.901977, 9.639088, 0.000000, 0.000000, 0.000000);
CreateObject(3507, 2410.294677, 1041.901977, 9.639088, 0.000000, 0.000000, 0.000000);
CreateObject(19314, 2401.015380, 1026.503417, 13.641248, 89.599952, 0.000000, 0.000000);
//tune garage - location - close
//DF BAZA
dfPort1 = CreateDynamicObject(980, 836.487792, -2069.757812, 14.618954, 0.000000, 0.000000, 0.000000);
dfPort2 = CreateDynamicObject(980, 836.365417, -2027.369750, 14.646684, 0.000000, 0.000000, 0.000000);
CreateObject(4585, 838.197326, -2091.250244, -87.991020, 0.000000, 0.000000, 0.000000);
CreateObject(4585, 809.826354, -2091.250244, -87.991020, 0.000000, 0.000000, 0.000000);
CreateObject(4585, 869.766296, -2091.250244, -87.991020, 0.000000, 0.000000, 0.000000);
CreateObject(4585, 900.604187, -2091.250244, -87.991020, 0.000000, 0.000000, 0.000000);
CreateObject(4585, 778.814208, -2091.250244, -87.991020, 0.000000, 0.000000, 0.000000);
CreateObject(4585, 778.814208, -2128.983642, -87.991020, 0.000000, 0.000000, 0.000000);
CreateObject(4585, 778.814208, -2167.389892, -87.991020, 0.000000, 0.000000, 0.000000);
CreateObject(4585, 778.814208, -2205.367675, -87.991020, 0.000000, 0.000000, 0.000000);
CreateObject(4585, 778.814208, -2243.125976, -87.991020, 0.000000, 0.000000, 0.000000);
CreateObject(4585, 815.823974, -2243.125976, -87.991020, 0.000000, 0.000000, 0.000000);
CreateObject(4585, 847.703552, -2243.125976, -87.991020, 0.000000, 0.000000, 0.000000);
CreateObject(4585, 847.703552, -2208.197509, -87.991020, 0.000000, 0.000000, 0.000000);
CreateObject(4585, 847.703552, -2169.537841, -87.991020, 0.000000, 0.000000, 0.000000);
CreateObject(4585, 847.703552, -2129.957275, -87.991020, 0.000000, 0.000000, 0.000000);
CreateObject(4585, 808.544006, -2129.957275, -87.991020, 0.000000, 0.000000, 0.000000);
CreateObject(4585, 810.361206, -2171.278076, -87.991020, 0.000000, 0.000000, 0.000000);
CreateObject(4585, 810.361206, -2202.869384, -87.991020, 0.000000, 0.000000, 0.000000);
CreateObject(4585, 883.081054, -2202.869384, -87.991020, 0.000000, 0.000000, 0.000000);
CreateObject(4585, 882.577819, -2168.588623, -87.991020, 0.000000, 0.000000, 0.000000);
CreateObject(4585, 882.577819, -2243.432861, -87.991020, 0.000000, 0.000000, 0.000000);
CreateObject(4585, 882.577819, -2130.613037, -87.991020, 0.000000, 0.000000, 0.000000);
CreateObject(4585, 901.378356, -2130.540283, -87.991020, 0.000000, 0.000000, 0.000000);
CreateObject(4585, 901.378356, -2168.619628, -87.991020, 0.000000, 0.000000, 0.000000);
CreateObject(4585, 901.378356, -2206.968017, -87.991020, 0.000000, 0.000000, 0.000000);
CreateObject(4585, 901.378356, -2243.368408, -87.991020, 0.000000, 0.000000, 0.000000);
CreateObject(8148, 759.284545, -2151.047363, 14.962260, 0.000000, 0.000000, 0.000000);
CreateObject(8148, 759.284545, -2183.484375, 14.962260, 0.000000, 0.000000, 0.000000);
CreateObject(8148, 919.654968, -2151.047363, 14.962260, 0.000000, 0.000000, 0.000000);
CreateObject(8148, 919.654968, -2182.510742, 14.962260, 0.000000, 0.000000, 0.000000);
CreateObject(987, 759.586059, -2070.185791, 11.661706, 0.000000, 0.000000, 0.000000);
CreateObject(987, 759.586059, -2070.185791, 14.601703, 0.000000, 0.000000, 0.000000);
CreateObject(987, 771.615783, -2070.185791, 14.601703, 0.000000, 0.000000, 0.000000);
CreateObject(987, 771.615783, -2070.185791, 10.311701, 0.000000, 0.000000, 0.000000);
CreateObject(987, 783.405822, -2070.185791, 10.311701, 0.000000, 0.000000, 0.000000);
CreateObject(987, 783.405822, -2070.185791, 14.511699, 0.000000, 0.000000, 0.000000);
CreateObject(987, 795.275939, -2070.185791, 14.511699, 0.000000, 0.000000, 0.000000);
CreateObject(987, 795.275939, -2070.185791, 9.631697, 0.000000, 0.000000, 0.000000);
CreateObject(987, 807.076110, -2070.185791, 9.631697, 0.000000, 0.000000, 0.000000);
CreateObject(987, 807.046081, -2070.185791, 14.641714, 0.000000, 0.000000, 0.000000);
CreateObject(987, 854.142333, -2070.517333, 14.339406, 0.000000, 0.000000, 0.000000);
CreateObject(987, 854.073547, -2070.185791, 9.591712, 0.000000, 0.000000, 0.000000);
CreateObject(987, 866.073974, -2070.185791, 9.591712, 0.000000, 0.000000, 0.000000);
CreateObject(987, 878.063659, -2070.185791, 9.591712, 0.000000, 0.000000, 0.000000);
CreateObject(987, 890.113464, -2070.185791, 9.591712, 0.000000, 0.000000, 0.000000);
CreateObject(987, 902.023132, -2070.185791, 9.591712, 0.000000, 0.000000, 0.000000);
CreateObject(987, 907.973815, -2070.185791, 9.591712, 0.000000, 0.000000, 0.000000);
CreateObject(987, 907.973815, -2070.185791, 14.611725, 0.000000, 0.000000, 0.000000);
CreateObject(987, 896.093750, -2070.185791, 14.611725, 0.000000, 0.000000, 0.000000);
CreateObject(987, 884.144042, -2070.185791, 14.611725, 0.000000, 0.000000, 0.000000);
CreateObject(987, 872.094055, -2070.185791, 14.611725, 0.000000, 0.000000, 0.000000);
CreateObject(987, 861.053588, -2070.185791, 14.611725, 0.000000, 0.000000, 0.000000);
CreateObject(987, 919.919067, -2264.012939, 11.826725, 0.000000, 0.000000, -174.800018);
CreateObject(987, 919.919067, -2264.012939, 14.626738, 0.000000, 0.000000, -174.800018);
CreateObject(987, 908.018188, -2265.096923, 14.626738, 0.000000, 0.000000, -174.800018);
CreateObject(987, 908.018188, -2265.096923, 10.196736, 0.000000, 0.000000, -174.800018);
CreateObject(987, 896.426330, -2266.151611, 10.196736, 0.000000, 0.000000, -174.800018);
CreateObject(987, 884.475402, -2267.239501, 10.196736, 0.000000, 0.000000, -174.800018);
CreateObject(987, 861.780639, -2266.685791, 11.716729, 0.000000, 0.000000, 179.600006);
CreateObject(987, 849.730529, -2266.601806, 11.716729, 0.000000, 0.000000, 179.600006);
CreateObject(987, 837.880554, -2266.518798, 11.716729, 0.000000, 0.000000, 179.600006);
CreateObject(987, 825.921081, -2266.436035, 11.716729, 0.000000, 0.000000, 179.600006);
CreateObject(987, 813.971130, -2266.351562, 11.716729, 0.000000, 0.000000, 179.600006);
CreateObject(987, 802.001708, -2266.267089, 11.716729, 0.000000, 0.000000, 179.600006);
CreateObject(987, 790.011901, -2266.184082, 11.716729, 0.000000, 0.000000, 179.600006);
CreateObject(987, 778.002014, -2266.100341, 11.716729, 0.000000, 0.000000, 179.600006);
CreateObject(987, 771.831176, -2266.056640, 11.716729, 0.000000, 0.000000, 179.600006);
CreateObject(987, 771.831176, -2266.056640, 14.666730, 0.000000, 0.000000, 179.600006);
CreateObject(987, 783.810485, -2266.141113, 14.666730, 0.000000, 0.000000, 179.600006);
CreateObject(987, 795.800720, -2266.225341, 14.666730, 0.000000, 0.000000, 179.600006);
CreateObject(987, 807.710998, -2266.308593, 14.666730, 0.000000, 0.000000, 179.600006);
CreateObject(987, 819.640502, -2266.391357, 14.666730, 0.000000, 0.000000, 179.600006);
CreateObject(987, 831.650451, -2266.474365, 14.666730, 0.000000, 0.000000, 179.600006);
CreateObject(987, 843.600585, -2266.558837, 14.666730, 0.000000, 0.000000, 179.600006);
CreateObject(987, 855.570556, -2266.642822, 14.666730, 0.000000, 0.000000, 179.600006);
CreateObject(987, 861.700622, -2266.685546, 14.666730, 0.000000, 0.000000, 179.600006);
CreateObject(987, 885.840881, -2266.854248, 14.666730, 0.000000, 0.000000, 179.600006);
CreateObject(987, 897.840576, -2266.937255, 14.666730, 0.000000, 0.000000, 179.600006);
CreateObject(987, 757.960754, -2266.936767, 14.666730, 0.000000, 0.000000, 0.000000);
CreateObject(987, 757.956665, -2265.785644, 11.386724, 0.000000, 0.000000, 0.000000);
CreateObject(987, 820.092590, -2027.803222, 11.850197, 0.000000, 0.000000, 0.000000);
CreateObject(987, 820.092590, -2027.803222, 15.310198, 0.000000, 0.000000, 0.000000);
CreateObject(987, 841.303161, -2027.803222, 11.840193, 0.000000, 0.000000, 0.000000);
CreateObject(987, 841.303161, -2027.803222, 15.860177, 0.000000, 0.000000, 0.000000);
CreateObject(987, 820.073059, -2027.803222, 20.310178, 0.000000, 0.000000, 0.000000);
CreateObject(987, 841.133178, -2027.803222, 20.310178, 0.000000, 0.000000, 0.000000);
CreateObject(987, 830.412902, -2027.803222, 20.310178, 0.000000, 0.000000, 0.000000);
CreateObject(3528, 826.434936, -2026.530273, 24.639692, 0.000000, 0.000000, 87.700004);
CreateObject(3528, 846.362731, -2025.989013, 24.639692, 0.000000, 0.000000, 87.700004);
CreateObject(987, 841.611206, -2039.449218, 11.845917, 0.000000, 0.000000, 90.799964);
CreateObject(987, 841.777465, -2051.337402, 11.845917, 0.000000, 0.000000, 90.799964);
CreateObject(987, 841.940734, -2063.061767, 11.845917, 0.000000, 0.000000, 90.799964);
CreateObject(987, 842.038940, -2070.074951, 11.845917, 0.000000, 0.000000, 90.799964);
CreateObject(987, 842.038940, -2070.074951, 11.845917, 0.000000, 0.000000, -1.400006);
CreateObject(987, 832.153747, -2027.829345, 11.845917, 0.000000, 0.000000, -89.200187);
CreateObject(987, 832.152038, -2039.022583, 11.845917, 0.000000, 0.000000, -90.800094);
CreateObject(987, 831.987060, -2050.821044, 11.845917, 0.000000, 0.000000, -90.800094);
CreateObject(987, 831.882812, -2058.282958, 11.845917, 0.000000, 0.000000, -90.800094);
CreateObject(987, 831.458374, -2069.631103, 11.845917, 0.000000, 0.000000, -176.900085);
CreateObject(987, 830.769104, -2069.667724, 11.845917, 0.000000, 0.000000, -176.900085);
CreateObject(987, 830.769104, -2069.667724, 14.495929, 0.000000, 0.000000, -179.100128);
CreateObject(987, 831.489196, -2069.655517, 14.495929, 0.000000, 0.000000, -179.100128);
CreateObject(987, 853.896240, -2069.303955, 14.495929, 0.000000, 0.000000, -179.100128);
CreateObject(987, 842.487731, -2069.484863, 16.215896, 0.000000, 0.000000, -179.100128);
CreateObject(3464, 892.028015, -2086.043457, 14.214990, 0.000000, 0.000000, 0.000000);
CreateObject(3464, 892.028015, -2112.745605, 14.214990, 0.000000, 0.000000, 0.000000);
CreateObject(3464, 892.028015, -2139.313476, 14.214990, 0.000000, 0.000000, 0.000000);
CreateObject(3464, 892.028015, -2165.366699, 14.214990, 0.000000, 0.000000, 0.000000);
CreateObject(3464, 892.028015, -2191.177001, 14.214990, 0.000000, 0.000000, 0.000000);
CreateObject(3464, 892.028015, -2217.870361, 14.214990, 0.000000, 0.000000, 0.000000);
CreateObject(3279, 846.334899, -2075.705810, 11.810224, 0.000000, 0.000000, 178.900085);
CreateObject(3279, 826.744873, -2075.705810, 11.810224, 0.000000, 0.000000, 0.000000);
CreateObject(1231, 847.466430, -2025.762939, 14.636410, 0.000000, 0.000000, 0.000000);
CreateObject(1231, 850.666442, -2025.762939, 14.526410, 0.000000, 0.000000, 0.000000);
CreateObject(1231, 831.016418, -2025.762939, 14.526410, 0.000000, 0.000000, 0.000000);
CreateObject(1231, 824.560546, -2025.762939, 14.526410, 0.000000, 0.000000, 0.000000);
CreateObject(7021, 797.706970, -2113.315673, 15.438562, 0.000000, 0.000000, -0.199970);
CreateObject(6522, 798.324035, -2195.433593, 20.330322, 0.000000, 0.000000, 90.599983);
CreateObject(3598, 767.498474, -2166.142578, 13.959624, 0.000000, 0.000000, 88.899986);
CreateObject(3598, 768.002502, -2138.904785, 13.959624, 0.000000, 0.000000, 88.899986);
CreateObject(3598, 768.529785, -2111.417724, 13.959624, 0.000000, 0.000000, 88.899986);
CreateObject(3598, 769.053466, -2084.142089, 13.959624, 0.000000, 0.000000, 88.899986);
CreateObject(16093, 881.974914, -2253.761230, 11.698994, 0.000000, 0.000000, -174.599990);
CreateObject(4585, 815.823974, -2243.125976, -87.991020, 0.000000, 0.000000, 0.000000);
CreateObject(8171, 865.214660, -2331.259277, 11.658988, 0.000000, 0.000000, 0.000000);
CreateObject(3092, 835.018859, -2027.055175, 21.408720, 0.000000, 0.000000, 0.000000);
CreateObject(3092, 837.814819, -2027.697875, 21.640621, 0.000000, 0.000000, 0.000000);
CreateObject(18885, 880.052551, -2256.146240, 12.884333, 0.000000, 0.000000, 140.300003);
CreateObject(2942, 884.644592, -2256.028320, 12.464345, 0.000000, 0.000000, -154.699981);
CreateObject(7021, 797.563781, -2154.332275, 15.438562, 0.000000, 0.000000, -0.199970);
CreateObject(11493, 822.785827, -2284.706054, 4.800974, 0.000000, 0.000000, -76.799980);
CreateObject(17068, 806.152893, -2300.848876, 1.993783, 0.000000, 0.000000, 150.799987);
CreateObject(17068, 798.887756, -2313.852050, 1.993783, 0.000000, 0.000000, 150.799987);
CreateObject(17068, 784.206176, -2319.484375, 1.993783, 0.000000, 0.000000, -117.999847);
CreateObject(8546, 874.673278, -2186.790771, -121.204551, 0.000000, 0.000000, 0.000000);
CreateObject(987, 831.230346, -2028.613403, 17.104427, 0.000000, 0.000000, 0.000000);
CreateObject(980, 836.569641, -2069.956542, 8.990184, 0.000000, 0.000000, 0.000000);
//delta force
//ctfon objects - location - open
//stulbi - open
CreateDynamicObject(14416, -1132.42932, 1091.83655, 1345.34094,   0.00000, 0.00000, 181.00000);
CreateDynamicObject(14416, -1132.41956, 1084.23792, 1349.30164,   0.00000, 0.00000, 181.00000);
CreateDynamicObject(14416, -974.37787, 1027.54846, 1344.57214,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(14416, -974.41656, 1035.03833, 1348.52173,   0.00000, 0.00000, 0.00000);
//stulbi - close
//ctfon objects - location - close
//vip gang objects - location - open
CreateDynamicObject(18750, 1349.838256, -2015.776977, 104.971832, 90.099983, 0.000000, -92.000007, -1, -1, -1, 300.00, 300.00);
CreateDynamicObject(13592, 1336.585205, -2056.992187, 66.133399, 0.000000, 0.000000, 5.999993, -1, -1, -1, 300.00, 300.00);
CreateObject(2942, 1239.006103, -2041.014038, 59.432590, -1.099997, -0.799997, 90.199966);
CreateObject(3279, 1241.051147, -2043.976196, 58.905319, 0.000000, 0.000000, 0.000000);
CreateObject(3279, 1203.600952, -2065.467285, 67.635322, 0.000000, 0.000000, 90.899925);
CreateObject(3279, 1282.641479, -2042.881103, 57.945407, 0.000000, 0.000000, 178.199783);
CreateObject(3279, 1281.517333, -2004.784667, 57.797393, -0.599999, -2.400002, -94.100044);
CreateObject(3279, 1242.842773, -2004.757324, 58.925418, 0.000000, 0.000000, -94.100044);
CreateObject(3279, 1204.103149, -2009.043457, 68.095352, 0.000000, 0.000000, -90.100067);
CreateObject(3279, 1183.862060, -2009.009277, 68.095352, 0.000000, 0.000000, -88.300079);
CreateObject(3279, 1182.549072, -2065.147460, 68.095352, 0.000000, 0.000000, 89.399948);
CreateObject(17950, 1248.374389, -2058.932617, 61.324588, 0.000000, 0.000000, -91.199989);
CreateObject(17950, 1248.495239, -2052.140869, 61.324588, 0.000000, 0.000000, -91.199989);
CreateObject(3437, 1326.764160, -2114.153808, 163.643829, -0.199999, 0.000000, 0.000000);
CreateObject(3437, 1321.949096, -2114.135986, 168.360702, -0.199999, -89.800003, 0.000000);
//vip gang objects - location - close
//gunmachines - location - open
CreateDynamicObject(18885, 2497.7666,-1703.1995,1014.7422, 0.000000, 0.000000, 269.7191, 2);
CreateDynamicObject(18885, 2497.7666,-1703.1995,1014.7422, 0.000000, 0.000000, 269.7191, 1);
CreateDynamicObject(18885, 1229.758789, -2005.632934, 60.969139, 0.000000, 0.000000, 94.200027, 0);
CreateDynamicObject(18885, 213.2412,1806.7898,17.6406,0,0,0, 0);
CreateDynamicObject(18885, 2449.6282,-1696.3843,1013.5078,0,0,180.0, 0);
CreateDynamicObject(18885, -39.4808,1078.9188,20.2422,0,0,86.8247, 0);
CreateDynamicObject(18885, 1969.2216,953.4484,10.8203,0,0,356.8830, 0);
CreateDynamicObject(18885, -692.3365,935.6404,13.6328,0,0,93.0680, 0);
CreateDynamicObject(18885, 1267.8367,-784.8399,1091.9063,0,0,267.2830, 1);
CreateDynamicObject(18885, 2449.6523,-1696.3839,1013.5078,0,0,179.3034, 1);
//gunmachines - location - close
//atm objects - location - open
CreateObject(2942, 1539.162475, -1613.974609, 13.134112, 0.000000, 0.000000, -89.500000);
CreateObject(2942, 387.170196, -1827.512084, 7.415833, 0.000000, 0.000000, -91.399955);
CreateObject(2942, 378.918457, -2060.627929, 7.453046, 0.000000, 0.000000, 92.900016);
CreateObject(2942, 672.134521, -503.247589, 15.964093, 0.000000, 0.000000, 94.699989);
CreateObject(2942, 2490.404541, 923.318664, 10.840134, 0.000000, 0.000000, -90.099914);
CreateObject(2942, 2181.033691, 2462.734130, 10.424777, 0.000000, 0.000000, -0.599999);
CreateObject(2942, -174.470657, 1138.796386, 19.313276, 0.000000, 0.000000, -179.500106);
CreateObject(2942, -1486.528686, 2583.155517, 55.317409, 0.000000, 0.000000, -86.799980);
CreateObject(2942, -2492.394775, 2366.457519, 9.587511, 0.000000, 0.000000, 89.600021);
CreateObject(2942, 1239.006103, -2041.014038, 59.432590, -1.099999, -0.799999, 90.199966);
CreateObject(2942, 210.3416,1808.8025,21.4672, 0,0,180);
CreateObject(2942, 2194.9380,1986.2362,11.9, 0,0,270);
CreateObject(2942, 398.4207,-1806.1260,7.5381, 0,0,179.8874);
//atm - objects - location - close
//bus - objects - location - open
CreateObject(2631, 2022.0, 2236.7, 2102.9, 0.0, 0.0, 90.0);
CreateObject(2631, 2022.0, 2240.6, 2102.9, 0.0, 0.0, 90.0);
CreateObject(2631, 2022.0, 2244.5, 2102.9, 0.0, 0.0, 90.0);
CreateObject(2631, 2022.0, 2248.4, 2102.9, 0.0, 0.0, 90.0);
CreateObject(16501, 2022.1, 2238.3, 2102.8, 0.0, 90.0, 0.0);
CreateObject(16501, 2022.1, 2245.3, 2102.8, 0.0, 90.0, 0.0);
CreateObject(16000, 2024.2, 2240.1, 2101.2, 0.0, 0.0, 90.0);
CreateObject(16000, 2019.8, 2240.6, 2101.2, 0.0, 0.0, -90.0);
CreateObject(16000, 2022.2, 2248.7, 2101.2, 0.0, 0.0, 180.0);
CreateObject(16501, 2021.8, 2246.5, 2107.3, 0.0, 270.0, 90.0);
CreateObject(16501, 2022.0, 2240.8, 2107.3, 0.0, 270.0, 0.0);
CreateObject(16501, 2022.0, 2233.7, 2107.3, 0.0, 270.0, 0.0);
CreateObject(18098, 2024.3, 2239.6, 2104.8, 0.0, 0.0, 90.0);
CreateObject(18098, 2024.3, 2239.7, 2104.7, 0.0, 0.0, 450.0);
CreateObject(18098, 2020.1, 2239.6, 2104.8, 0.0, 0.0, 90.0);
CreateObject(18098, 2020.0, 2239.6, 2104.7, 0.0, 0.0, 90.0);
CreateObject(2180, 2023.6, 2236.1, 2106.7, 0.0, 180.0, 90.0);
CreateObject(2180, 2023.6, 2238.1, 2106.7, 0.0, 180.0, 90.0);
CreateObject(2180, 2023.6, 2240.1, 2106.7, 0.0, 180.0, 90.0);
CreateObject(2180, 2023.6, 2242.1, 2106.7, 0.0, 180.0, 90.0);
CreateObject(2180, 2023.6, 2244.1, 2106.7, 0.0, 180.0, 90.0);
CreateObject(2180, 2023.6, 2246.1, 2106.7, 0.0, 180.0, 90.0);
CreateObject(2180, 2023.6, 2248.1, 2106.7, 0.0, 180.0, 90.0);
CreateObject(2180, 2020.3, 2235.1, 2106.7, 0.0, 180.0, 270.0);
CreateObject(2180, 2020.3, 2237.1, 2106.7, 0.0, 180.0, 270.0);
CreateObject(2180, 2020.3, 2239.1, 2106.7, 0.0, 180.0, 270.0);
CreateObject(2180, 2020.3, 2241.1, 2106.7, 0.0, 180.0, 270.0);
CreateObject(2180, 2020.3, 2243.1, 2106.7, 0.0, 180.0, 270.0);
CreateObject(2180, 2020.3, 2245.1, 2106.7, 0.0, 180.0, 270.0);
CreateObject(2674, 2023.4, 2238.3, 2102.9, 0.0, 0.0, 600.0);
CreateObject(2674, 2020.4, 2242.3, 2102.9, 0.0, 0.0, 600.0);
CreateObject(2674, 2023.4, 2246.3, 2102.9, 0.0, 0.0, 600.0);
CreateObject(14405, 2022.0, 2242.1, 2103.5, 0.0, 0.0, 540.0);
CreateObject(14405, 2022.0, 2243.6, 2103.5, 0.0, 0.0, 180.0);
CreateObject(14405, 2022.0, 2245.1, 2103.5, 0.0, 0.0, 180.0);
CreateObject(14405, 2022.0, 2246.6, 2103.5, 0.0, 0.0, 180.0);
CreateObject(14405, 2022.0, 2248.1, 2103.5, 0.0, 0.0, 180.0);
CreateObject(14405, 2022.0, 2249.6, 2103.5, 0.0, 0.0, 180.0);
CreateObject(14405, 2022.0, 2251.1, 2103.5, 0.0, 0.0, 180.0);
CreateObject(14405, 2024.6, 2242.1, 2103.5, 0.0, 0.0, 180.0);
CreateObject(14405, 2024.6, 2243.6, 2103.5, 0.0, 0.0, 180.0);
CreateObject(14405, 2024.6, 2245.1, 2103.5, 0.0, 0.0, 180.0);
CreateObject(14405, 2024.6, 2246.6, 2103.5, 0.0, 0.0, 180.0);
CreateObject(14405, 2024.6, 2248.1, 2103.5, 0.0, 0.0, 180.0);
CreateObject(14405, 2024.6, 2249.6, 2103.5, 0.0, 0.0, 180.0);
CreateObject(14405, 2024.6, 2251.1, 2103.5, 0.0, 0.0, 180.0);
CreateObject(14405, 2019.4, 2242.1, 2103.5, 0.0, 0.0, 180.0);
CreateObject(14405, 2019.4, 2243.6, 2103.5, 0.0, 0.0, 180.0);
CreateObject(14405, 2019.4, 2245.1, 2103.5, 0.0, 0.0, 180.0);
CreateObject(14405, 2019.4, 2246.6, 2103.5, 0.0, 0.0, 180.0);
CreateObject(14405, 2019.4, 2248.1, 2103.5, 0.0, 0.0, 180.0);
CreateObject(14405, 2019.4, 2249.6, 2103.5, 0.0, 0.0, 180.0);
CreateObject(14405, 2019.4, 2251.1, 2103.5, 0.0, 0.0, 180.0);
CreateObject(14405, 2022.0, 2253.6, 2104.0, -6.0, 0.0, 180.0);
CreateObject(14405, 2021.1, 2253.6, 2104.0, -6.0, 0.0, 180.0);
CreateObject(14405, 2024.6, 2253.6, 2103.5, 0.0, 0.0, 180.0);
CreateObject(2674, 2020.4, 2235.7, 2102.9, 0.0, 0.0, 52.0);
CreateObject(2673, 2020.4, 2246.7, 2102.9, 0.0, 0.0, 270.0);
CreateObject(2700, 2023.5, 2235.1, 2105.5, 180.0, -4.0, 90.0);
CreateObject(2700, 2020.4, 2235.1, 2105.5, 180.0, 0.0, 90.0);
CreateObject(2700, 2023.5, 2242.1, 2105.5, 180.0, -4.0, 90.0);
CreateObject(2700, 2020.4, 2242.1, 2105.5, 180.0, 0.0, 90.0);
CreateObject(1799, 2023.1, 2234.2, 2105.7, 270.0, 0.0, 360.0);
CreateObject(1799, 2019.8, 2234.2, 2105.7, 270.0, 0.0, 0.0);
CreateObject(1538, 2022.7, 2234.7, 2102.8, 0.0, 0.0, 180.0);
CreateObject(1799, 2022.1, 2234.2, 2106.1, 720.0, 90.0, 450.0);
CreateObject(1799, 2021.8, 2234.2, 2105.1, 0.0, 270.0, 270.0);
CreateObject(1799, 2022.1, 2234.2, 2107.3, 0.0, 90.0, 90.0);
CreateObject(1799, 2021.6, 2234.2, 2106.3, 0.0, 270.0, 270.0);
CreateObject(1799, 2022.3, 2234.2, 2104.3, 90.0, 0.0, 180.0);
//tune garage 2
//CreateObject(17950, 2199.891357, 939.109558, 12.079811, 0.000000, 0.000000, -90.599998);
//CreateObject(17950, 2199.769042, 927.040588, 12.079811, 0.000000, 0.000000, -90.599998);
//CreateObject(3461, 2196.332275, 935.138366, 10.308668, 0.000000, 0.000000, 0.000000);
//CreateObject(3461, 2196.332275, 930.977844, 10.308668, 0.000000, 0.000000, 0.000000);
//CreateObject(3666, 2204.706787, 930.316101, 10.333226, 0.000000, 0.000000, 0.000000);
//CreateObject(3666, 2204.706787, 923.686157, 10.333226, 0.000000, 0.000000, 0.000000);
//CreateObject(3666, 2204.706787, 935.656494, 10.333226, 0.000000, 0.000000, 0.000000);
//CreateObject(3666, 2204.706787, 942.406982, 10.333226, 0.000000, 0.000000, 0.000000);
//CreateObject(1232, 2199.335205, 932.972412, 10.840268, 0.000000, 0.000000, 0.000000);
//tune garage 2
/*   CreateObject(8558,2583.55273438,-2921.90820312,1001.35871506,0.00000000,0.00000000,0.00000000); // 1)
CreateObject(8558,2623.75903320,-2921.92407227,1001.35871506,0.00000000,0.00000000,0.00000000); // 2)
CreateObject(8558,2663.91845703,-2921.92724609,1001.35871506,0.00000000,0.00000000,0.00000000); // 3)
CreateObject(8558,2681.58496094,-2943.59521484,1001.35871506,0.00000000,0.00000000,90.00000000); // 4)
CreateObject(8558,2681.58984375,-2983.88793945,1001.35871506,0.00000000,0.00000000,90.00000000); // 5)
CreateObject(8558,2681.56201172,-3024.05273438,1001.35871506,0.00000000,0.00000000,90.00000000); // 6)
CreateObject(8558,2658.91650391,-3041.70947266,1001.35871506,0.00000000,0.00000000,180.00000000); // 7)
CreateObject(8558,2618.93896484,-3041.70922852,1001.35871506,0.00000000,0.00000000,179.99450684); // 8)
CreateObject(8558,2579.22973633,-3041.67895508,1001.35871506,0.00000000,0.00000000,179.99450684); // 9)
CreateObject(8558,2561.60351562,-3019.28930664,1001.35871506,0.00000000,0.00000000,90.00000000); // 10)
CreateObject(8558,2561.60791016,-2979.25610352,1001.35871506,0.00000000,0.00000000,90.00000000); // 11)
CreateObject(8558,2561.60058594,-2939.54589844,1001.35871506,0.00000000,0.00000000,90.00000000); // 12)
CreateObject(8558,2561.60351562,-3019.28906250,1001.35871506,0.00000000,0.00000000,90.00000000); // 13)
CreateObject(8558,2583.98046875,-2978.90551758,1001.35871506,0.00000000,0.00000000,0.00000000); // 1)
CreateObject(8558,2658.91259766,-2978.71704102,1001.35871506,0.00000000,0.00000000,0.00000000); // 1)
CreateObject(8558,2622.16528320,-3019.43432617,1001.35871506,0.00000000,0.00000000,90.00000000); // 13)
CreateObject(8558,2622.04321289,-2941.63378906,1001.35871506,0.00000000,0.00000000,90.00000000); // 13)
CreateObject(1634,2621.95776367,-2959.33129883,1003.68449116,0.00000000,0.00000000,180.00000000); // 1)
CreateObject(1634,2600.51269531,-2978.81298828,1003.68449116,0.00000000,0.00000000,270.00000000); // 2)
CreateObject(1634,2622.16284180,-3003.88330078,1003.68449116,0.00000000,0.00000000,0.00000000); // 3)
CreateObject(1634,2643.73681641,-2978.61230469,1003.68449116,0.00000000,0.00000000,90.00000000); // 4)
CreateObject(8558,2581.15527344,-2958.77563477,1001.35871506,0.00000000,0.00000000,90.00000000); // 12)
CreateObject(8558,2581.12744141,-2942.96484375,1001.35871506,0.00000000,0.00000000,90.00000000); // 12)
CreateObject(8558,2583.78588867,-2960.45166016,1001.35871506,0.00000000,0.00000000,0.00000000); // 1)
CreateObject(8558,2582.97290039,-2940.23608398,1001.35871506,0.00000000,0.00000000,0.00000000); // 1)
CreateObject(8558,2601.40527344,-2942.78515625,1001.35871506,0.00000000,0.00000000,90.00000000); // 12)
CreateObject(8558,2613.96875000,-2972.66796875,1001.35871506,0.00000000,0.00000000,136.00000000); // 12)
CreateObject(8558,2627.50952148,-2985.75268555,1001.35871506,0.00000000,0.00000000,136.00003052); // 12)
CreateObject(8558,2662.98852539,-2997.44946289,1001.35871506,0.00000000,0.00000000,90.00000000); // 12)
CreateObject(8558,2662.98754883,-3020.35913086,1001.35871506,0.00000000,0.00000000,90.00000000); // 12)
CreateObject(8558,2660.61303711,-3000.07495117,1001.35871506,0.00000000,0.00000000,0.00000000); // 1)
CreateObject(8558,2660.71166992,-3021.18383789,1001.35871506,0.00000000,0.00000000,0.00000000); // 1)
CreateObject(8558,2642.74194336,-3020.76025391,1001.35871506,0.00000000,0.00000000,90.00000000); // 12)
CreateObject(8558,2617.92700195,-2982.91992188,1001.35871506,0.00000000,0.00000000,226.25000000); // 12)
CreateObject(8558,2581.16992188,-2996.62011719,1001.35871506,0.00000000,0.00000000,90.00000000); // 12)
CreateObject(8558,2581.16650391,-3020.93725586,1001.35871506,0.00000000,0.00000000,90.00000000); // 12)
CreateObject(8558,2583.53076172,-2997.95751953,1001.35871506,0.00000000,0.00000000,0.00000000); // 1)
CreateObject(8558,2583.85302734,-3021.10888672,1001.35871506,0.00000000,0.00000000,0.00000000); // 1)
CreateObject(8558,2603.62939453,-3017.48510742,1001.35871506,0.00000000,0.00000000,90.00000000); // 12)
CreateObject(8558,2603.62231445,-3021.84985352,1001.35871506,0.00000000,0.00000000,90.00000000); // 12)
CreateObject(8558,2662.96679688,-2963.67480469,1001.35871506,0.00000000,0.00000000,90.00000000); // 12)
CreateObject(8558,2662.94287109,-2939.53588867,1001.35871506,0.00000000,0.00000000,90.00000000); // 12)
CreateObject(8558,2660.06127930,-2960.21826172,1001.35871506,0.00000000,0.00000000,0.00000000); // 1)
CreateObject(8558,2659.75219727,-2940.42773438,1001.35871506,0.00000000,0.00000000,0.00000000); // 1)
CreateObject(8558,2625.03808594,-2975.54052734,1001.35871506,0.00000000,0.00000000,226.24694824); // 12)
CreateObject(8558,2639.40380859,-2941.73388672,1001.35871506,0.00000000,0.00000000,90.00000000); // 12)
CreateObject(8558,2621.37939453,-2940.33618164,1001.35871506,0.00000000,0.00000000,0.00000000); // 1)
CreateObject(8558,2621.35986328,-3021.18725586,1001.35871506,0.00000000,0.00000000,0.00000000); // 1)
CreateObject(8558,3795.19995117,-2472.10009766,48.00000000+952,0.00000000,0.00000000,0.00000000); // 1)
CreateObject(8558,3830.60009766,-2472.10009766,48.00000000+952,0.00000000,0.00000000,0.00000000); // 2)
CreateObject(8558,3828.19995117,-2454.30004883,48.00000000+952,0.00000000,0.00000000,90.00000000); // 3)
CreateObject(8558,3797.60009766,-2454.30004883,48.00000000+952,0.00000000,0.00000000,90.00000000); // 4)
CreateObject(8558,3795.19995117,-2436.80004883,48.00000000+952,0.00000000,0.00000000,0.00000000); // 5)
CreateObject(8558,3830.60009766,-2436.80004883,48.00000000+952,0.00000000,0.00000000,0.00000000); // 6)
CreateObject(8558,3849.30004883,-2454.30004883,48.00000000+952,0.00000000,0.00000000,90.00000000); // 7)
CreateObject(8558,3777.69995117,-2454.30004883,48.00000000+952,0.00000000,0.00000000,90.00000000); // 8)
CreateObject(8558,3770.00000000,-2454.30004883,61.00000000+952,0.00000000,0.00000000,90.00000000); // 9)
CreateObject(8558,3789.30004883,-2453.50000000,51.09999847+952,0.00000000,30.00000000,0.00000000); // 10)
CreateObject(8558,3810.50000000,-2453.50000000,48.00000000+952,0.00000000,0.00000000,0.00000000); // 11)
CreateObject(8558,3836.50000000,-2453.50000000,51.09999847+952,0.00000000,30.00000000,180.00000000); // 12)
CreateObject(8558,3855.30004883,-2454.30004883,61.00000000+952,0.00000000,0.00000000,90.00000000); // 14)
CreateObject(8558,3832.55004883,-2472.00000000,61.00000000+952,0.00000000,0.00000000,0.00000000); // 15)
CreateObject(8558,3792.30004883,-2472.00000000,61.00000000+952,0.00000000,0.00000000,0.00000000); // 16)
CreateObject(8558,3832.55004883,-2436.66992188,61.00000000+952,0.00000000,0.00000000,0.00000000); // 17)
CreateObject(8558,3792.30004883,-2436.66992188,61.00000000+952,0.00000000,0.00000000,0.00000000); // 18)
CreateObject(8558,3797.60009766,-2454.30004883,61.00000000+952,0.00000000,0.00000000,90.00000000); // 19)
CreateObject(8558,3828.19995117,-2454.30004883,61.00000000+952,0.00000000,0.00000000,90.00000000); //20)
*/
//bus - objects - location - close
CreateObject(2886, 266.349578, 84.394371, 1001.709106,  0.000000,0.000000,89.1308);
specialobject=CreateObject(2886, 266.372955, 88.574554,1001.709106,  0.000000,0.000000,89.1308);
//CreateObject(16773, 2335.417236, 2484.029785, 6.957778,  0.000000,0.000000,89.1308);
//CreateObject(16773, 2335.417236, 2484.029785, 0.557772,  0.000000,0.000000,89.1308);
//objects - location - close
//respawn cars - location - open
for(new cars=0; cars<MAX_VEHICLES; cars++)
{
SetVehicleToRespawn(cars);
}
//respawn cars - location - close
LockAllJobVehicles();
return 1;
}
public OnGameModeExit()
{
for(new i; i<MAX_PLAYERS; i++)
{
SavePlayerStats(i);
}
for(new i; i<MAX_PLAYERS; i++)
{
//reststats - location 2 - open
logged[i]=0;
loadedtexts[i]=0;
firstspawn[i]=1;
wrongpassword[i]=0;
para1[i]=-1;
//reststats - location 2 - close
//resttexts - location 2 - open
TextDrawHideForPlayer(i, Intro[0]);
TextDrawHideForPlayer(i, Intro[1]);
TextDrawHideForPlayer(i, Intro[2]);
TextDrawHideForPlayer(i, Intro[3]);
TextDrawHideForPlayer(i, Intro[4]);
TextDrawHideForPlayer(i, Intro[5]);
//TextDrawHideForPlayer(i, Clock);
TextDrawHideForPlayer(i, epeps[i]);
TextDrawHideForPlayer(i, levelms[i]);
//resttexts - location 2 - close
//resttimers - location 2 - openp
PlayerInfo[i][pFuel]=0;
PlayerInfo[i][pKick]=0;
PlayerInfo[i][pFixT]=0;
PlayerInfo[i][pHealT]=0;
PlayerInfo[i][pVGuns]=0;
PlayerInfo[i][pRefuel20LitTimer]=0;
PlayerInfo[i][pBan]=0;
PlayerInfo[i][pAFKBack]=0;
PlayerInfo[i][pStartIntro]=0;
PlayerInfo[i][pTextSpamTimer]=0;
PlayerInfo[i][pCommandSpamTimer]=0;
PlayerInfo[i][pIntro]=0;
PlayerInfo[i][pIntro1]=0;
PlayerInfo[i][pIntro2]=0;
PlayerInfo[i][pIntro3]=0;
PlayerInfo[i][pIntro4]=0;
PlayerInfo[i][pIntro5]=0;
PlayerInfo[i][pIntro6]=0;
//resttimers - location 2 - close
}
return 1;
}
public GeneralTimer1s()
{ //open Generaltimer1s
getdate(year, month, day);
gettime(hours,minutes,seconds);

if(minutes==25 && seconds==0 || minutes==35 && seconds==0 || minutes == 45 && seconds==0)
{
new reactTestStringIndex = randomex(1,7);
if(reactTestStringIndex==1) format(reactionTestString,32,"ysi2Zsd");
else if(reactTestStringIndex==2) format(reactionTestString,32,"dels2S");
else if(reactTestStringIndex==3) format(reactionTestString,32,"oruMx2");
else if(reactTestStringIndex==4) format(reactionTestString,32,"pteSzer");
else if(reactTestStringIndex==5) format(reactionTestString,32,"oUmEnst2");
else if(reactTestStringIndex==6) format(reactionTestString,32,"Gen23ms");
reactionTestOn=true;
format(string256,256,"[REACTION]: Първият, който напише %s печели 1 EP!",reactionTestString);
SendClientMessageToAll(COLOR_REACTIONTEST,string256);
}

if(minutes==0 && seconds==0)
{
new noerrorstring2[115];
if(hours==0) SetWorldTime(0); if(hours==6) SetWorldTime(0); if(hours==12) SetWorldTime(12); if(hours==18) SetWorldTime(23);
if(hours==1) SetWorldTime(0); if(hours==7) SetWorldTime(6); if(hours==13) SetWorldTime(12); if(hours==19) SetWorldTime(23);
if(hours==2) SetWorldTime(0); if(hours==8) SetWorldTime(6); if(hours==14) SetWorldTime(12); if(hours==20) SetWorldTime(0);
if(hours==3) SetWorldTime(0); if(hours==9) SetWorldTime(12); if(hours==15) SetWorldTime(12); if(hours==21) SetWorldTime(0);
if(hours==4) SetWorldTime(0); if(hours==10) SetWorldTime(12); if(hours==16) SetWorldTime(12); if(hours==22) SetWorldTime(0);
if(hours==5) SetWorldTime(0); if(hours==11) SetWorldTime(12); if(hours==17) SetWorldTime(12); if(hours==23) SetWorldTime(0);
for(new i=0; i<MAX_PLAYERS; i++)
{
zaplatakinti[i]=0;
lastpaydaykinti[i]=0;
format(noerrorstring2,115,"SERVER: Часът е %d:00",hours);
SendClientMessage(i,0xFFFF84FF,noerrorstring2);
if(PlayerInfo[i][pLastPayday]<30)
{
SendClientMessage(i,0xFFFFFFFF, "Ти не си играл достатъчно за да получиш Payday!");
}
else
{
SendClientMessage(i,0xC6A2DEFF,"|____ LV BANK STATEMENT ____|");
format(noerrorstring2, 115, "Обща сума: $%d", PlayerInfo[i][pAccount]);
SendClientMessage(i, 0xF97804FF, noerrorstring2);
if(PlayerInfo[i][pLastPayday]>29)
{
}
if(PlayerInfo[i][pLastPayday]>29 && PlayerInfo[i][pLastPayday]<100)
{
if(PlayerInfo[i][pAFK]==0)
{
GivePlayerEP(i,1);
}
else
{
if(PlayerInfo[i][pAFK]<30)
{
GivePlayerEP(i,2);
}
}
}
if(PlayerInfo[i][pLastPayday]>1799)
{
if(PlayerInfo[i][pAFK]==0)
{
GivePlayerEP(i,2);
}
}
if(PlayerInfo[i][pAFK] >= 30)
{
GivePlayerEP(i,4);
}
PlayerInfo[i][pAccount]+=PlayerInfo[i][pLastPayday]*3;
lastpaydaykinti[i]=PlayerInfo[i][pLastPayday];
lastpaydaykinti[i]=lastpaydaykinti[i]*3;
if(PlayerInfo[i][pLevel]<31)
{
PlayerInfo[i][pAccount]+=PlayerInfo[i][pLevel]*1000;
zaplatakinti[i]=PlayerInfo[i][pLevel]*1000;
}
else
{
PlayerInfo[i][pAccount]+=30000;
zaplatakinti[i]=30000;
}
format(noerrorstring2, 115, "Заплата: $%d", zaplatakinti[i]);
SendClientMessage(i, 0xF97804FF, noerrorstring2);
format(noerrorstring2, 115, "Онлайн бонус: $%d",PlayerInfo[i][pLastPayday]*3);
SendClientMessage(i,0xF97804FF, noerrorstring2);
if(PlayerInfo[i][pTeam]==FACTION_DELTAFORCE)
{
if(PlayerInfo[i][pRank]==1)
{
format(noerrorstring2, 115, "Delta Force: + 2 EP и 10000$");
SendClientMessage(i,0xA4A400FF, noerrorstring2);
GivePlayerEP(i,2);
PlayerInfo[i][pAccount]+=10000;
}
if(PlayerInfo[i][pRank]==2)
{
format(noerrorstring2, 115, "Delta Force: + 4 EP и 20000$");
SendClientMessage(i,0xA4A400FF, noerrorstring2);
GivePlayerEP(i,4);
PlayerInfo[i][pAccount]+=20000;
}
if(PlayerInfo[i][pRank]==3)
{
format(noerrorstring2, 115, "Delta Force: + 6 EP и 30000$");
SendClientMessage(i,0xA4A400FF, noerrorstring2);
GivePlayerEP(i,6);
PlayerInfo[i][pAccount]+=30000;
}
if(PlayerInfo[i][pRank]==4)
{
format(noerrorstring2, 115, "Delta Force: + 8 EP и 40000$");
SendClientMessage(i,0xA4A400FF, noerrorstring2);
GivePlayerEP(i,8);
PlayerInfo[i][pAccount]+=40000;
}
if(PlayerInfo[i][pRank]==5)
{
format(noerrorstring2, 115, "Delta Force: + 10 EP и 50000$");
SendClientMessage(i,0xA4A400FF, noerrorstring2);
GivePlayerEP(i,10);
PlayerInfo[i][pAccount]+=50000;
}
if(PlayerInfo[i][pRank]==6)
{
format(noerrorstring2, 115, "Delta Force: + 15 EP и 65000$");
SendClientMessage(i,0xA4A400FF, noerrorstring2);
GivePlayerEP(i,15);
PlayerInfo[i][pAccount]+=65000;
}
}
if(PlayerInfo[i][pTeam]==FACTION_VIP)
{
if(PlayerInfo[i][pRank]==2)
{
format(noerrorstring2, 115, "VIP Gang: + 2 EP и 2000$");
SendClientMessage(i,0xFF3737FF, noerrorstring2);
GivePlayerEP(i,2);
PlayerInfo[i][pAccount]+=2000;
}
if(PlayerInfo[i][pRank]==3)
{
format(noerrorstring2, 115, "VIP Gang: + 3 EP и 3000$");
SendClientMessage(i,0xFF3737FF, noerrorstring2);
GivePlayerEP(i,3);
PlayerInfo[i][pAccount]+=3000;
}
if(PlayerInfo[i][pRank]==4)
{
format(noerrorstring2, 115, "VIP Gang: + 4 EP и 4000$");
SendClientMessage(i,0xFF3737FF, noerrorstring2);
GivePlayerEP(i,4);
PlayerInfo[i][pAccount]+=4000;
}
if(PlayerInfo[i][pRank]==5)
{
format(noerrorstring2, 115, "VIP Gang: + 5 EP и 5000$");
SendClientMessage(i,0xFF3737FF, noerrorstring2);
GivePlayerEP(i,5);
PlayerInfo[i][pAccount]+=5000;
}
if(PlayerInfo[i][pRank]==6)
{
format(noerrorstring2, 115, "VIP Gang: + 6 EP и 6000$");
SendClientMessage(i,0xFF3737FF, noerrorstring2);
GivePlayerEP(i,6);
PlayerInfo[i][pAccount]+=6000;
}
}
if(PlayerInfo[i][pBizO]>-1)
{
format(noerrorstring2, 115, "Bizz: + %d$",BizInfo[PlayerInfo[i][pBizO]][bPayOut]);
SendClientMessage(i,0x00CCCCFF, noerrorstring2);
PlayerInfo[i][pAccount]+=BizInfo[PlayerInfo[i][pBizO]][bPayOut];
}
if(PlayerInfo[i][pBizO]>-1 && BizInfo[PlayerInfo[i][pBizO]][bEP]>0)
{
format(noerrorstring2, 115, "Bizz: + %d EP", BizInfo[PlayerInfo[i][pBizO]][bEP]);
SendClientMessage(i, 0x00CCCCFF, noerrorstring2);
GivePlayerEP(i,BizInfo[PlayerInfo[i][pBizO]][bEP]);
}
if(PlayerInfo[i][pOffice]>0)
{
format(noerrorstring2, 115, "Office: + 20 EP и 50000$");
SendClientMessage(i,0x00FF00FF, noerrorstring2);
GivePlayerEP(i,20);
PlayerInfo[i][pAccount]+=50000;
}
if (PlayerInfo[i][pVip]==2)
{
format(noerrorstring2, 115, "VIP Level 2: + 1 EP и 1000$");
SendClientMessage(i,0xE65B00FF, noerrorstring2);
GivePlayerEP(i,1);
PlayerInfo[i][pAccount]+=1000;
}
if (PlayerInfo[i][pVip]==3)
{
format(noerrorstring2, 115, "VIP Level 3: + 2 EP и 2000$");
SendClientMessage(i,0xE65B00FF, noerrorstring2);
GivePlayerEP(i,2);
PlayerInfo[i][pAccount]+=2000;
}
if (PlayerInfo[i][pVip]==4)
{
format(noerrorstring2, 115, "VIP Level 4: + 3 EP и 3000$");
SendClientMessage(i,0xE65B00FF, noerrorstring2);
GivePlayerEP(i,3);
PlayerInfo[i][pAccount]+=3000;
}
if (PlayerInfo[i][pVip]==5)
{
format(noerrorstring2, 115, "VIP Level 5: + 4 EP и 4000$");
SendClientMessage(i,0xE65B00FF, noerrorstring2);
GivePlayerEP(i,4);
PlayerInfo[i][pAccount]+=4000;
}
if (PlayerInfo[i][pVip]==6 || freevip==1)
{
format(noerrorstring2, 115, "VIP Level 6: + 5 EP и 5000$");
SendClientMessage(i,0xE65B00FF, noerrorstring2);
GivePlayerEP(i,5);
PlayerInfo[i][pAccount]+=5000;
}
if(PlayerInfo[i][pEPS]>0)
{
format(noerrorstring2, 115, "EP Skill: + %d EP", PlayerInfo[i][pEPS]);
SendClientMessage(i, 0x80D5FFFF, noerrorstring2);
}
GivePlayerEP(i,PlayerInfo[i][pEPS]);
SendClientMessage(i,0xC6A2DEFF,"|----------------------------|");
format(noerrorstring2, 115, "Нова обща сума: $%d", PlayerInfo[i][pAccount]);
SendClientMessage(i, 0x40BF00FF, noerrorstring2);
format(noerrorstring2,115,"~y~PAYDAY~n~~w~PAYCHECK:~n~~g~$%d",zaplatakinti[i]);
GameTextForPlayer(i, noerrorstring2, 3000, 1);
PlayerInfo[i][pLastPayday]=0;
if(PlayerInfo[i][pAFK]>1)
{
PlayerInfo[i][pAFK]=1;
}
}
}
}

if(minutes==59 && seconds==0)
{
new lottowinners;
new lotteryWinningNum=randomex(1,101);
new lottostring[256];
new oldLotteryWin=lottowin;
format(lottostring, 256, "[Intense Lottery] печелившото число е %d", lotteryWinningNum);
SendClientMessageToAll(0xFF00FFFF, lottostring);
for(new i; i<MAX_PLAYERS; i++)
{
if(lottonumber[i]>0)
{
format(lottostring, 256, "Твоето число е %d", lottonumber[i]);
SendClientMessage(i,0xFF00FFFF, lottostring);
}
if(lottonumber[i]==lotteryWinningNum)
{
lottowinners+=1;
}
}
if(lottowinners>=2)
{
format(lottostring,115, "Имаме %d победители в лотарията! Стойността на джакпота е %d и всеки победител получава по $%d и 10 EP!",lottowinners,oldLotteryWin,oldLotteryWin/lottowinners);
SendClientMessageToAll(0xFF80C0FF,lottostring);
format(lottostring,115, "Победители:");
SendClientMessageToAll(0xFF80C0FF,lottostring);
}
for(new i; i<MAX_PLAYERS; i++)
{
if(lottonumber[i] == lotteryWinningNum)
{
GivePlayerCash(i,oldLotteryWin/lottowinners);
if(lottowinners>=2)
{
SendClientMessageToAll(0xFF80C0FF,pname[i]);
}
else if(lottowinners==1)
{
format(lottostring,115, "%s победи в лотарията! Стойността на джакпота е %d + 10 EP!",pname[i],oldLotteryWin);
SendClientMessageToAll(0xFF80C0FF,lottostring);
}
}
}
if(lottowinners>0)
{
lottowin = 5000;
}
else if(lottowinners==0)
{
lottowin += 5000;
format(lottostring,115, "Няма победител за тази лотария. Следващият път стойността на джакпота ще е $%d",lottowin);
SendClientMessageToAll(0xFF80C0FF,lottostring);
}

}

if(minutes==54 && seconds==0)
{
SendClientMessageToAll(0xFF80C0FF,"Тегленето на лотарията ще е след 5 минути. Ако все още нямаш фиш използвай /lotto [1-100]");
}
if(minutes==44 && seconds==0)
{
SendClientMessageToAll(0xFF80C0FF,"Тегленето на лотарията ще е след 10 минути. Ако все още нямаш фиш използвай /lotto [1-100]");
}
if(minutes==57 && seconds==0)
{
SendClientMessageToAll(0xFF80C0FF,"Тегленето на лотарията ще е след 2 минути. Ако все още нямаш фиш използвай /lotto [1-100]");
}

if(minutes==2 && seconds==0)
{
SendClientMessageToAll(0x6BF7DEFF,"Announcement: Търсят се хора, готови да помогнат за развитието на гейммода. Skype: didko.bg@abv.bg");
}
if(minutes==47 && seconds==0)
{
SendClientMessageToAll(0x6BF7DEFF,"Announcement: За да се свържете със създателя на мода, потърсете Discord: danielandreevofficial#1084");
}
if(minutes==20 && seconds==0)
{
SendClientMessageToAll(0x6BF7DEFF,"Announcement: Ако имате нужда да говорите със скриптъра, потърсете Skype didko.bg@abv.bg");
}

if(hours==0 && minutes==0 && seconds==0)
{
isMadeRefuel=0;
}

if(serverrestarttimer>0)
{
format(string115n2, sizeof string115n2, "~n~~w~The server will be restarted after %d seconds",serverrestarttimer);
TextDrawSetString(RESTART, string115n2);
}
format(string115n2, sizeof string115n2, "  ~w~%s%d:%s%d:%s%d~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~%d.%s%d.%s%d", (hours<10) ? ("0") : (""), hours, (minutes<10) ? ("0") : (""), minutes, (seconds<10) ? ("0") : (""), seconds, day, ((month<10) ? ("0") : ("")), month, (year<10) ? ("0") : (""), year);
TextDrawSetString(ClockDate, string115n2);

if(respawnVehsVoteTimer>0)
{
if(respawnVehsVoteTimer>0)
{
respawnVehsVoteTimer-=1;
}
if(respawnVehsVoteTimer == 0)
{
if(voteResultsYes<voteResultsNo)
{
new stringvote[256];
format(stringvote, 256, "SERVER: Резултат от гласуването - %d ДА срещу %d НЕ", voteResultsYes ,voteResultsNo);
SendClientMessageToAll(0x33CC00FF, stringvote);
format(stringvote, 256, "SERVER: Превозните средства няма да бъдат RESPAWN-нати !");
SendClientMessageToAll(0x33CC00FF, stringvote);
}
if(voteResultsYes>voteResultsNo)
{
new stringvote[256];
format(stringvote, 256, "SERVER: Резултат от гласуването - %d ДА срещу %d НЕ", voteResultsYes ,voteResultsNo);
SendClientMessageToAll(0x33CC00FF, stringvote);
format(stringvote, 256, "SERVER: Превозните средства ще се RESPAWN-нат след 10 секунди!");
SendClientMessageToAll(0x33CC00FF, stringvote);
respawnVehsTimer=10;
}
voteResultsNo=0;
voteResultsYes=0;
respawnVehsVoteTimer=0;
for(new i=0; i<MAX_PLAYERS; i++)
{
PlayerInfo[i][pYes]=0;
PlayerInfo[i][pNo]=0;
}}
}

if(voteTimer>0)
{
if(voteTimer>0)
{
voteTimer-=1;
}
if(voteTimer == 0)
{
new stringvote[256];
format(stringvote, 256, "Резултатите от гласуванията на последния въпрос - %s са %d ДА %d НЕ",voteQuestion, voteResultsYes ,voteResultsNo);
SendClientMessageToAll(0x33CC00FF, stringvote);
voteResultsNo=0;
voteResultsYes=0;
voteTimer=0;
for(new i=0; i<MAX_PLAYERS; i++)
{
PlayerInfo[i][pYes]=0;
PlayerInfo[i][pNo]=0;
}}
}

if(robberyToStopTimer>0)
{
if(robberyToStopTimer>0)
{
robberyToStopTimer-=1;
}
if(robberyToStopTimer == 0)
{
SendClientMessageToAll(0xFF8200FF,"Robbery: Обирът спира автоматично, защото крадеца не успя да се върне навреме!");
for(new i=0; i<MAX_PLAYERS; i++)
{
if(PlayerInfo[i][pRobber] == 1)
{
GivePlayerCash(i,robCollectedMoney/robberyMembers);
format(string256, 256, "Robbery: Ти получи своя дял от обира - $%d.",robCollectedMoney/robberyMembers);
SendClientMessage(i, 0xFF8200FF, string256);
PlayerInfo[i][pRobber]=0;
PlayerInfo[i][pRobberLead]=0;
}
}
robberyMembers=0;
robberyTimeToStartAgain=30*60;
}
}

if(robberyTimerToCollect>0)
{
if(robberyTimerToCollect>0)
{
robberyTimerToCollect-=1;
}
if(robberyTimerToCollect == 0)
{
new stringrobbery[256];
for(new i=0; i<MAX_PLAYERS; i++)
{
format(stringrobbery, 256, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~w~STOLEN CASH:~n~~g~$%d",robCollectedMoney);
if(PlayerInfo[i][pRobber] == 1 || PlayerInfo[i][pRobberLead]==1)
{
GameTextForPlayer(i, stringrobbery, 3000, 3);
}
if(IsPlayerInRobPlace(i))
{
if(PlayerInfo[i][pRobber] == 1 || PlayerInfo[i][pRobberLead]==1)
{
robCollectedMoney+=70;
}
if(PlayerInfo[i][pRobberLead]==1 && robberyToStopTimer>0)
{
robberyToStopTimer=0;
}
}
else if(!IsPlayerInRobPlace(i))
{
if(PlayerInfo[i][pRobberLead]==1)
{
if(robberyToStopTimer==0)
{
robberyToStopTimer=5*60;
SendClientMessage(i, 0xFF8200FF, "Robbery: Върни се на обира до 5 минути или той ще бъде спрян!");
}
}
}
}
robberyTimerToCollect=2;
}
}

if(robberyTimeToStartAgain<0)
{
if(robberyTimeToStartAgain>0)
{
robberyTimeToStartAgain-=1;
}
if(robberyTimeToStartAgain==0)
{
SendClientMessageToAll(0xFF8200FF, "Robbery: Вече може да бъде стартиран нов обир!");
}
}

if(respawnVehsTimer>0)
{
if(respawnVehsTimer>0)
{
respawnVehsTimer-=1;
}
if(respawnVehsTimer == 0)
{
SendClientMessageToAll(0xFFFFFFFF,"SERVER: All vehicles has been respawned!");
for(new cars=0; cars<MAX_VEHICLES; cars++)
{
if(drive[cars]==0)
{
SetVehicleToRespawn(cars);
}
}
}
}
if(robberyTimerRobberToStart<0)
{
if(robberyTimerRobberToStart>0)
{
robberyTimerRobberToStart-=1;
}
if(robberyTimerRobberToStart==0)
{
if(robCollectedMoney==0)
{
SendClientMessageToAll(0xFF8200FF, "Robbery: Лидерът не започна да краде, заради това обирът е спрян!");
for(new i5=0; i5<MAX_PLAYERS; i5++)
{
if(PlayerInfo[i5][pRobber] == 1 || PlayerInfo[i5][pRobberLead]==1)
{
PlayerInfo[i5][pRobberLead]=0;
PlayerInfo[i5][pRobber]=0;
}
}
robberyMembers=0;
startedrob=0;
robberyTimeToStartAgain=30*60;
}
}
}

if(deltaForceP1Timer>0)
{
if(deltaForceP1Timer>0)
{
deltaForceP1Timer-=1;
}
if(deltaForceP1Timer==0)
{
MoveDynamicObject(dfPort1,836.487792, -2069.757812, 14.618954,5.00, 0,0,0);
}
}
if(deltaForceP2Timer>0)
{
if(deltaForceP2Timer>0)
{
deltaForceP2Timer-=1;
}
if(deltaForceP2Timer==0)
{
MoveDynamicObject(dfPort2,836.365417, -2027.369750, 14.646684,5.00, 0,0,0);
}
}

if(lvpdB2Timer>0)
{
if(lvpdB2Timer>0)
{
lvpdB2Timer-=1;
}
if(lvpdB2Timer==0)
{
MoveObject(lvpd2,2335.417236, 2444.029785, 6.957778,5.00, 0.000000, 0.000000, 59.200016);
}
}
if(lvpdB1Timer>0)
{
if(lvpdB1Timer>0)
{
lvpdB1Timer-=1;
}
if(lvpdB1Timer==0)
{
MoveObject(lvpd1,2238.197509, 2450.464599, 10.341962,2.00, -4.799997, -89.000000, -89.499954);
}
}
if(eventCount0>0)
{
if(eventCount0>0)
{
eventCount0-=1;
}
if(eventCount0==0)
{
GameTextForAll("~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~r~-~b~ 2 ~r~-", 2500, 3);
eventCount1 = 2;
}
}
if(eventCount1>0)
{
if(eventCount1>0)
{
eventCount1-=1;
}
if(eventCount1==0)
{
GameTextForAll("~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~r~-~b~ 1 ~r~-", 2500, 3);
eventCount2 = 2;
}
}
if(eventCount2>0)
{
if(eventCount2>0)
{
eventCount2-=1;
}
if(eventCount2 == 0)
{
eventActiveCount=0;
GameTextForAll("~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~r~-]-~b~START~r~-]-",2000, 3);
for(new i33 = 0; i33 <= MAX_PLAYERS; i33++)
{
if(inevent[i33]==1)
{
TogglePlayerControllable(i33, 1);
}
}
}
}
if(counttime0>0)
{
if(counttime0>0)
{
counttime0-=1;
}
if(counttime0==0)
{
GameTextForAll("~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~g~-~y~ 2 ~g~-", 2500, 3);
counttime1 = 2;
}
}
if(counttime1>0)
{
if(counttime1>0)
{
counttime1-=1;
}
if(counttime1==0)
{
GameTextForAll("~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~g~-~y~ 1 ~g~-", 2500, 3);
counttime2 = 2;
}
}
if(counttime2>0)
{
if(counttime2>0)
{
counttime2-=1;
}
if(counttime2 == 0)
{
activecount=0;
for(new allplayers=0; allplayers<MAX_PLAYERS; allplayers++) PlayerPlaySound(allplayers, 1056, 0.0, 0.0, 0.0);
GameTextForAll("~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~g~-]-~y~START~g~-]-",2000, 3);
}
}
if(minutes==15 && seconds==0 || minutes==35 && seconds==0 || minutes==50 && seconds==0)
{
if(dmonArena==1)
{
dmonArena=2;
}
if(dmonArena==2)
{
dmonArena=1;
}
SendClientMessageToAll(0xFFFF81FF, "DM Area: Арената на DM се смени!");
for(new i=0; i<MAX_PLAYERS; i++)
{
IfPlayerInDmonChangePos(i);
}
}
if(deathmatchEndTimer>0)
{
if(deathmatchEndTimer>0)
{
deathmatchEndTimer--;
}
if(deathmatchEndTimer==60)
{
SendClientMessageToAll(COLOR_DEATHMATCH,"Deathmatch: Битката ще свърши след 1 минута!");
}
if(deathmatchEndTimer==0)
{
new mostKiller=BestDMKiller();
GivePlayerCMN1Status(mostKiller);
cmn1Mission[mostKiller]=MISSION_DEATHMATCH;
SetPlayerToLastCoors(mostKiller);
format(string256,256,"Deathmatch: Победител в битката е %s с %d убийства и той/тя печели %d",pname[mostKiller],cmn1Money);
SendClientMessageToAll(COLOR_DEATHMATCH,string256);
format(string256,256,"[SUSPECT]{0040FF} Ти си заподозрян в престъпление: Убийство, ниво на издирване: %d",PlayerInfo[mostKiller][pWanted]);
SendClientMessage(mostKiller,0xFF0000FF,string256);
format(string256,256,"CMN1: %s е заподозрян в убийства, убий го и ще получиш CMN1 Kill.",pname[mostKiller]);
SendClientMessageToAll(0xF97804FF,string256);
SendClientMessage(mostKiller,0xF97804FF,"CMN1: Трябва да оцелееш 5 минути за да не си преследван повече.");
if(missionActive==MISSION_DEATHMATCH)
{
missionActive=MISSION_NONE;
}
}
}

if(streetRaceStartTimer>0)
{
if(streetRaceStartTimer>0)
{
streetRaceStartTimer--;
}
if(streetRaceStartTimer==2)
{
FreezeSRacePlayers();
for(new i; i<MAX_PLAYERS;i++)
{
if(playerInStreetRace[i]==true)
{
GameTextForPlayer(i, "~r~READY", 3000, 3);
}
}
}
if(streetRaceStartTimer==1)
{
for(new i; i<MAX_PLAYERS;i++)
{
if(playerInStreetRace[i]==true)
{
GameTextForPlayer(i, "~y~SET", 3000, 3);
}
}
}
if(streetRaceStartTimer==0)
{
UnfreezeSRacePlayers();
for(new i; i<MAX_PLAYERS;i++)
{
if(playerInStreetRace[i]==true)
{
GameTextForPlayer(i, "~g~GO", 3000, 3);
GiveSRaceFirstCheckpoint(i);
}
}
//streetRaceTimerToEnd=3*60;
streetRacePositionIndex=1;
streetRaceStarted=true;
SendClientMessageToAll(COLOR_STREETRACE,"Streetrace: Състезанието започна, успех на всички участници!");
}
}


if(streetRaceTimerToEnd>0)
{
if(streetRaceTimerToEnd>0)
{
streetRaceTimerToEnd--;
}
if(streetRaceTimerToEnd==0)
{
SendClientMessageToAll(COLOR_STREETRACE,"Streetrace: Състезанието завърши, поздравления на победителите!");
streetRaceStarted=false;
streetRacePlayers=0;
streetRaceStartTimer=0;
streetRaceTimerToEnd=0;
for(new i; i<MAX_PLAYERS; i++)
{
if(IsPlayerConnected(i))
{
streetRacePlayerColorChange[i]=0;
RestartPlayerColor(i);
playerInStreetRace[i]=false;
}
}
if(missionActive==MISSION_STREETRACE)
{
missionActive=MISSION_NONE;
}
}
}


if(deathmatchStartTimer>0)
{
if(deathmatchStartTimer>0)
{
deathmatchStartTimer--;
}
if(deathmatchStartTimer==2)
{
for(new i; i<MAX_PLAYERS;i++)
{
if(playerInDeathmatch[i]==true)
{
GameTextForPlayer(i, "~r~READY", 3000, 3);
}
}
}
if(deathmatchStartTimer==1)
{
for(new i; i<MAX_PLAYERS;i++)
{
if(playerInDeathmatch[i]==true)
{
GameTextForPlayer(i, "~y~SET", 3000, 3);
}
}
}
if(deathmatchStartTimer==0)
{
for(new i; i<MAX_PLAYERS;i++)
{
if(playerInDeathmatch[i]==true)
{
GameTextForPlayer(i, "~g~GO", 3000, 3);
}
}
deathmatchEndTimer=3*60;
deathmatchStarted=true;
SendClientMessageToAll(COLOR_DEATHMATCH,"Deathmatch: Битката започна, успех на всички участници!");
}
}
for(new i=0; i<MAX_PLAYERS; i++)
{ //[i] > OPEN
if(PlayerInfo[i][pFMuted]>0 && PlayerInfo[i][pFMuted]<1000000000000)
{
if(PlayerInfo[i][pFMuted]>0)
{
PlayerInfo[i][pFMuted]--;
}
if(PlayerInfo[i][pFMuted] <= 0)
{
format(string256, 256, "[FACTION CHAT] %s was FACTION unmuted by THE SERVER. [Reason: Timed Out]");
for(new allPlayersInGang=0; allPlayersInGang<MAX_PLAYERS; allPlayersInGang++)
{
if(PlayerInfo[allPlayersInGang][pTeam] == PlayerInfo[i][pTeam])
{
SendClientMessage(allPlayersInGang, 0x33CCFFFF, string256);
}
}
}
}
//goto 1s

if(playerInStreetRace[i]==true && streetRaceStarted==true)
{
streetRaceSecondsCounter[i] += 1;
}

if(cmn1PlayerColorChange[i]>0)
{
if(cmn1PlayerColorChange[i]>0)
{
cmn1PlayerColorChange[i]--;
}
if(cmn1PlayerColorChange[i] == 1)
{
if(cmn1[i]==1)
{
SetPlayerColor(i,PLAYER_CMN1_GRAD);
}
}
if(cmn1PlayerColorChange[i] == 0)
{
if(cmn1[i]==1)
{
SetPlayerColor(i,PLAYER_CMN1_ORANGE);
cmn1PlayerColorChange[i]=2;
}
}
}

if(streetRacePlayerColorChange[i]>0)
{
if(streetRacePlayerColorChange[i]>0)
{
streetRacePlayerColorChange[i]--;
}
if(streetRacePlayerColorChange[i] == 1)
{
if(playerInStreetRace[i]==true)
{
SetPlayerColor(i,PLAYER_RACE_GREEN);
}
}
if(streetRacePlayerColorChange[i] == 0)
{
if(playerInStreetRace[i]==true)
{
SetPlayerColor(i,PLAYER_RACE_BLUE);
streetRacePlayerColorChange[i]=2;
}
}
}

if(PlayerInfo[i][pFuel]>0)
{
if(PlayerInfo[i][pFuel]>0)
{
PlayerInfo[i][pFuel]--;
}
if(PlayerInfo[i][pFuel] <= 0)
{
PlayerInfo[i][pFuel] = 70;
if(vehfuel[GetPlayerVehicleID(i)] > -1)
{
if(GetVehicleModel(GetPlayerVehicleID(i)) != 481
&& GetVehicleModel(GetPlayerVehicleID(i)) != 509
&& GetVehicleModel(GetPlayerVehicleID(i)) != 510
&& GetVehicleModel(GetPlayerVehicleID(i)) != 481)
{
vehfuel[GetPlayerVehicleID(i)] -= 1;
}
}
GetVehicleHealth(GetPlayerVehicleID(i),vehhealth[i]);
if(GetVehicleModel(GetPlayerVehicleID(i)) != 481
&& GetVehicleModel(GetPlayerVehicleID(i)) != 509
&& GetVehicleModel(GetPlayerVehicleID(i)) != 510
&& GetVehicleModel(GetPlayerVehicleID(i)) != 481)
{
if(speedo[i]==0)
{
if(kmh[i]==0)
{
format(stringvehicle[i],115,"~p~Speed: %dkm/h~n~~g~Health: %.0f~n~~b~Fuel: %dL",GetVehicleKmh(GetPlayerVehicleID(i)),vehhealth[i],vehfuel[GetPlayerVehicleID(i)]);
TextDrawSetString(vehstatus[i], stringvehicle[i]);
}
else
{
new vehicleid,Float:speed_x,Float:speed_y,Float:speed_z,final_speed_int;
vehicleid = GetPlayerVehicleID(i);
GetVehicleVelocity(vehicleid,speed_x,speed_y,speed_z);
final_speed_int = GetVehicleKmh(vehicleid);
format(stringvehicle[i],115,"~p~Speed: %dm/s~n~~g~Health: %.0f~n~~b~Fuel: %dL",final_speed_int,vehhealth[i],vehfuel[GetPlayerVehicleID(i)]);
TextDrawSetString(vehstatus[i], stringvehicle[i]);
}
}
}
else
{
if(speedo[i]==0)
{
if(kmh[i]==0)
{
format(stringvehicle[i],115,"~p~Speed: %dkm/h~n~~g~Health: %.0f",GetVehicleKmh(GetPlayerVehicleID(i)),vehhealth[i]);
TextDrawSetString(vehstatus[i], stringvehicle[i]);
}
else
{
new vehicleid,Float:speed_x,Float:speed_y,Float:speed_z,final_speed_int;
vehicleid = GetPlayerVehicleID(i);
GetVehicleVelocity(vehicleid,speed_x,speed_y,speed_z);
final_speed_int = GetVehicleKmh(vehicleid);
format(stringvehicle[i],115,"~p~Speed: %dm/s~n~~g~Health: %.0f",final_speed_int,vehhealth[i]);
TextDrawSetString(vehstatus[i], stringvehicle[i]);
}
}
}
}
}

if(PlayerInfo[i][pAFKBack]>0)
{
PlayerInfo[i][pAFKBack]--;
}
if(PlayerInfo[i][pBankSpawn]>0)
{
if(PlayerInfo[i][pBankSpawn]>0)
{
PlayerInfo[i][pBankSpawn]--;
}
if(PlayerInfo[i][pBankSpawn] <= 0)
{
TogglePlayerControllable(i,1);
}
}
if(PlayerInfo[i][pHealT]>0)
{
if(PlayerInfo[i][pHealT]>0)
{
PlayerInfo[i][pHealT]--;
}
if(PlayerInfo[i][pHealT] <= 0)
{
SendClientMessage(i,0xFFFF00FF, "Вече можеш да се хелнеш отново!");
}
}
if(PlayerInfo[i][pFixT]>0)
{
if(PlayerInfo[i][pFixT]>0)
{
PlayerInfo[i][pFixT]--;
}
if(PlayerInfo[i][pFixT] <= 0)
{
PlayerInfo[i][pFixT]=0;
SendClientMessage(i,0xFFFF00FF, "Вече можеш да използваш /fix и /tires отново!");
}
}
if(PlayerInfo[i][pVGuns]>0)
{
if(PlayerInfo[i][pVGuns]>0)
{
PlayerInfo[i][pVGuns]--;
}
if(PlayerInfo[i][pVGuns] <= 0)
{
PlayerInfo[i][pVGuns]=0;
SendClientMessage(i,0xFFFF00FF, "Вече можеш да използваш /vguns отново!");
}
}
if(PlayerInfo[i][pRefuel20LitTimer]>0)
{
if(PlayerInfo[i][pRefuel20LitTimer]>0)
{
PlayerInfo[i][pRefuel20LitTimer]--;
}
if(PlayerInfo[i][pRefuel20LitTimer] <= 0)
{
PlayerInfo[i][pRefuel20LitTimer]=0;
SendClientMessage(i,0xFFFF00FF, "Вече можеш да презаредиш отново!");
}
}
if(PlayerInfo[i][pKick]>0)
{
if(PlayerInfo[i][pKick]>0)
{
PlayerInfo[i][pKick]--;
}
if(PlayerInfo[i][pKick] <= 0)
{
hideexitserver[i]=1;
PlayerInfo[i][pKick]=0;
Kick(i);
}
}
if(PlayerInfo[i][pReSpawn]>0)
{
if(PlayerInfo[i][pReSpawn]>0)
{
PlayerInfo[i][pReSpawn]--;
}
if(PlayerInfo[i][pReSpawn] <= 0)
{
SpawnPlayer(i);
}
}

if(PlayerInfo[i][pStartIntro]>0)
{
if(PlayerInfo[i][pStartIntro]>0)
{
PlayerInfo[i][pStartIntro]--;
}
if(PlayerInfo[i][pStartIntro] <= 0)
{
TextDrawShowForPlayer(i, intensetext);
PlayerInfo[i][pIntro]=1;
}
}
if(PlayerInfo[i][pIntro]>0)
{
if(PlayerInfo[i][pIntro]>0)
{
PlayerInfo[i][pIntro]--;
}
if(PlayerInfo[i][pIntro] <= 0)
{
new stringaaaa[256];
format(stringaaaa, 115, "%s {FFFFFF}влезе в сървъра !", pname[i]);
if(ingmx==0)
SendClientMessageToAll(0x00e600FF, stringaaaa);
for(new i2=0; i2<16; i2++)
{
SendClientMessage(i, 0xFFFFFFFF, "");
}
TextDrawShowForPlayer(i, Intro[0]);
PlayerInfo[i][pIntro1]=2;
}
}
if(PlayerInfo[i][pIntro1]>0)
{
if(PlayerInfo[i][pIntro1]>0)
{
PlayerInfo[i][pIntro1]--;
}
if(PlayerInfo[i][pIntro1] <= 0)
{
TextDrawShowForPlayer(i, Intro[1]);
PlayerInfo[i][pIntro2]=2;
}
}
if(PlayerInfo[i][pIntro2]>0)
{
if(PlayerInfo[i][pIntro2]>0)
{
PlayerInfo[i][pIntro2]--;
}
if(PlayerInfo[i][pIntro2] <= 0)
{
TextDrawShowForPlayer(i, Intro[2]);
PlayerInfo[i][pIntro3]=2;
}
}
if(PlayerInfo[i][pIntro3]>0)
{
if(PlayerInfo[i][pIntro3]>0)
{
PlayerInfo[i][pIntro3]--;
}
if(PlayerInfo[i][pIntro3] <= 0)
{
TextDrawShowForPlayer(i, Intro[3]);
PlayerInfo[i][pIntro4]=3;
}
}
if(PlayerInfo[i][pIntro4]>0)
{
if(PlayerInfo[i][pIntro4]>0)
{
PlayerInfo[i][pIntro4]--;
}
if(PlayerInfo[i][pIntro4] <= 0)
{
TextDrawShowForPlayer(i, Intro[4]);
PlayerInfo[i][pIntro5]=3;
}
}
if(PlayerInfo[i][pIntro5]>0)
{
if(PlayerInfo[i][pIntro5]>0)
{
PlayerInfo[i][pIntro5]--;
}
if(PlayerInfo[i][pIntro5] <= 0)
{
TextDrawShowForPlayer(i, Intro[5]);
PlayerInfo[i][pIntro6]=3;
}
}

if(PlayerInfo[i][pIntro6]>0)
{
if(PlayerInfo[i][pIntro6]>0)
{
PlayerInfo[i][pIntro6]--;
}
if(PlayerInfo[i][pIntro6] <= 0)
{
TextDrawHideForPlayer(i, Intro[0]);
TextDrawHideForPlayer(i, Intro[1]);
TextDrawHideForPlayer(i, Intro[2]);
TextDrawHideForPlayer(i, Intro[3]);
TextDrawHideForPlayer(i, Intro[4]);
TextDrawHideForPlayer(i, Intro[5]);
TextDrawShowForPlayer(i,ClockDate);
//ForceClassSelection(i);
new randomcamera = random(15);
if(randomcamera <= 7)
{
InterpolateCameraPos(i,2056.4150,775.4052,92.4422,2108.5623,2804.5188,124.1592,160000,CAMERA_MOVE);
InterpolateCameraLookAt(i,2058.1169,937.4815,94.9746,2113.9653,3004.3350,127.2826,160000,CAMERA_MOVE);
}
if(randomcamera >= 8)
{
InterpolateCameraPos(i,2995.4114,-1630.6260,108.6881,-11.1817,-1708.6993,122.7864,160000,CAMERA_MOVE);
InterpolateCameraLookAt(i,2897.1233,-1633.1787,109.1490,-99.3358,-1710.9866,123.1997,160000,CAMERA_MOVE);
}
new accountfiles[115];
format(accountfiles, 115, "%s.ini", pname[i]);
if(!dini_Exists(accountfiles))
{
/*
format(string256,256,"");
strins(string256,"{00FF00}Моля, прочетете условията и правилата на сървъра!\n\n",strlen(string256));
strins(string256,"{FFFFFF}1.Всякакъв флууд(повтаряне) е забранено и дразнещно!\n",strlen(string256));
strins(string256,"{008000}2.Всякакъв вид писане на неценцензурирани думи се наказва за неупределен период от време (по преценка на админа)!\n",strlen(string256));
strins(string256,"{FF0000}3.Използването на всякакви хакове е строго забранено и наказуемо!\n",strlen(string256));
strins(string256,"{FFFFFF}- Ако има хакери докладвайте с /report а не да пишете в чата!\n",strlen(string256));
strins(string256,"{008000}4.Всякакви моднати скинове/оръжия/превозни средства са забранени!\n",strlen(string256));
strins(string256,"{FF0000}5.Използването на имена като или близки до тези на админи се наказва!\n",strlen(string256));
strins(string256,"{FFFFFF}6.Даването на всякакви IP-та на сървъри в сървъра и карането на хора да влизат в тях е забранено!\n",strlen(string256));
strins(string256,"{008000}7.Забранено е използването на PEDSTATS и CHEAT ENGINE!\n",strlen(string256));
strins(string256,"{FF0000}- Също така са забранени всякакви бъгове като бърз скин, SAWNOFF, noreload и т.н.\n",strlen(string256));
strins(string256,"{FFFFFF}8.Забранено е да лъжете наказва се с заглушаване в чата.\n",strlen(string256));
strins(string256,"{008000}9.Забранено е биенето на играчи, които участват в Street Race!\n",strlen(string256));
strins(string256,"{FF0000}- Наказва се по преценка на админа\n\n",strlen(string256));
strins(string256,"{00FF00}За да видите всички правила на сървъра напишете {FF0000}/rules\n\n",strlen(string256));
strins(string256,"{808040}Ние можем по всяко едно време да забраним достъпа ви до една или друга наша услуга дори и тя да бъде платена.\n",strlen(string256));
strins(string256,"{808040}Ние можем да спрем сайта и сървъра по всяко едно време поради технически или други причини.\n",strlen(string256));
strins(string256,"{808040}Ние сме с пълното си право да блокираме достъпа ви до сайта и сървъра на всеки един играч, ако за нас той не спазва правилата.\n",strlen(string256));
strins(string256,"{808040}Ако не влизате повече от месец, вашият акаунт ще бъде блокиран от сървъра!\n\n",strlen(string256));
strins(string256,"{00FF00}Съгласявате ли се да спазвате правилата и условията на сървъра?\n",strlen(string256));
ShowPlayerDialog(i,2,DIALOG_STYLE_MSGBOX,"{FFFFFF}ПРАВИЛА{008000} И {FF0000}УСЛОВИЯ",string256,"ДА","НЕ");
*/
format(string256,256,"{FFFFFF}Добре дошъл {40BF00}%s\n{FFFFFF}Моля регистрирай акаунта като въведеш паролата отдолу:",pname[i]);
ShowPlayerDialog(i,0,DIALOG_STYLE_PASSWORD,"Регистрация:",string256,"Регистрирай","Излез");
}
else
{
format(string256,256,"{FFFFFF}Добре дошъл {40BF00}%s\n{FFFFFF}Моля влез в акаунта като въведеш паролата отдолу:",pname[i]);
ShowPlayerDialog(i,1,DIALOG_STYLE_PASSWORD,"Влизане:",string256,"Влез","Излез");
}
}
}

if(PlayerInfo[i][pTextSpamTimer]>0)
{
if(PlayerInfo[i][pTextSpamTimer]>0)
{
PlayerInfo[i][pTextSpamTimer]--;
}
if(PlayerInfo[i][pTextSpamTimer] <= 0)
{
textspam[i]=0;
}
}
if(PlayerInfo[i][pPlayerRefuelTimer]>0)
{
if(PlayerInfo[i][pPlayerRefuelTimer]>0)
{
PlayerInfo[i][pPlayerRefuelTimer]--;
}
}
if(PlayerInfo[i][pInfiniteNosTimer]>0)
{
if(PlayerInfo[i][pInfiniteNosTimer]>0)
{
PlayerInfo[i][pInfiniteNosTimer]--;
}
if(PlayerInfo[i][pInfiniteNosTimer] <= 0)
{
if(PlayerInfo[i][pInfiniteNos]==1)
{
PlayerInfo[i][pInfiniteNosTimer]=2;
if(IsPlayerInAnyVehicle(i))
{
AddVehicleComponent(GetPlayerVehicleID(i),1010);
}
}
}
}
if(PlayerInfo[i][pCommandSpamTimer]>0)
{
if(PlayerInfo[i][pCommandSpamTimer]>0)
{
PlayerInfo[i][pCommandSpamTimer]--;
}
if(PlayerInfo[i][pCommandSpamTimer] <= 0)
{
commandspam[i]=0;
}
}

if(PlayerInfo[i][pMoonshineEffectTime]>0)
{
if(PlayerInfo[i][pMoonshineEffectTime]>0)
{
PlayerInfo[i][pMoonshineEffectTime]--;
}
if(PlayerInfo[i][pMoonshineEffectTime] <= 0)
{
if(rezachka[i]==0) RemovePlayerWeapon(i,9);
SetPlayerWeather(i, 1);
SendClientMessage(i, 0xFF2D2DFF, "Действието на спиртното питие премина!");
}
}
if(PlayerInfo[i][pWeedEffectTime]>0)
{
if(PlayerInfo[i][pWeedEffectTime]>0)
{
PlayerInfo[i][pWeedEffectTime]--;
}
if(PlayerInfo[i][pWeedEffectTime] <= 0)
{
if(rezachka[i]==0) RemovePlayerWeapon(i,9);
SetPlayerWeather(i, 1);
SendClientMessage(i, 0xFF2D2DFF, "Действието на тревата премина!");
}
}
if(PlayerInfo[i][pCocaineEffectTime]>0)
{
if(PlayerInfo[i][pCocaineEffectTime]>0)
{
PlayerInfo[i][pCocaineEffectTime]--;
}
if(PlayerInfo[i][pCocaineEffectTime] <= 0)
{
if(rezachka[i]==0) RemovePlayerWeapon(i,9);
SetPlayerWeather(i, 1);
SendClientMessage(i, 0xFF2D2DFF, "Действието на кокаина премина!");
}
}
if(PlayerInfo[i][pHeroinEffectTime]>0)
{
if(PlayerInfo[i][pHeroinEffectTime]>0)
{
PlayerInfo[i][pHeroinEffectTime]--;
}
if(PlayerInfo[i][pHeroinEffectTime] <= 0)
{
if(rezachka[i]==0) RemovePlayerWeapon(i,9);
SetPlayerWeather(i, 1);
SendClientMessage(i, 0xFF2D2DFF, "Действието на хероина премина!");
}
}

if(PlayerInfo[i][pHideDMONKillText]>0)
{
if(PlayerInfo[i][pHideDMONKillText]>0)
{
PlayerInfo[i][pHideDMONKillText]--;
}
if(PlayerInfo[i][pHideDMONKillText] <= 0)
{
TextDrawHideForPlayer(i, DMONKillText);
}
}
if(PlayerInfo[i][pDmon20SecWait]>0)
{
if(PlayerInfo[i][pDmon20SecWait]>0)
{
PlayerInfo[i][pDmon20SecWait]--;
}
}

if(PlayerInfo[i][pDuelCountTimer]>0)
{
if(PlayerInfo[i][pDuelCountTimer]>0)
{
PlayerInfo[i][pDuelCountTimer]--;
}
if(PlayerInfo[i][pDuelCountTimer] <= 0)
{
GameTextForPlayer(i, "~w~3", 3000, 3);
GameTextForPlayer(duelsend[i], "~w~3", 3000, 3);
PlayerInfo[i][pDuelCountTimer2]=2;
}
}
if(PlayerInfo[i][pDuelCountTimer2]>0)
{
if(PlayerInfo[i][pDuelCountTimer2]>0)
{
PlayerInfo[i][pDuelCountTimer2]--;
}
if(PlayerInfo[i][pDuelCountTimer2] <= 0)
{
GameTextForPlayer(i, "~w~2", 3000, 3);
GameTextForPlayer(duelsend[i], "~w~2", 3000, 3);
PlayerInfo[i][pDuelCountTimer3]=2;
}
}
if(PlayerInfo[i][pDuelCountTimer3]>0)
{
if(PlayerInfo[i][pDuelCountTimer3]>0)
{
PlayerInfo[i][pDuelCountTimer3]--;
}
if(PlayerInfo[i][pDuelCountTimer3] <= 0)
{
GameTextForPlayer(i, "~w~1", 3000, 3);
GameTextForPlayer(duelsend[i], "~w~1", 3000, 3);
PlayerInfo[i][pDuelCountTimer4]=2;
}
}
if(PlayerInfo[i][pDuelCountTimer4]>0)
{
if(PlayerInfo[i][pDuelCountTimer4]>0)
{
PlayerInfo[i][pDuelCountTimer4]--;
}
if(PlayerInfo[i][pDuelCountTimer4] <= 0)
{
GameTextForPlayer(i, "~r~FIGHT", 3000, 3);
GameTextForPlayer(duelsend[i], "~r~FIGHT", 3000, 3);
TogglePlayerControllable(i,1);
TogglePlayerControllable(duelsend[i],1);
}
}

if(PlayerInfo[i][pAdvertTime]>0)
{
if(PlayerInfo[i][pAdvertTime]>0)
{
PlayerInfo[i][pAdvertTime]--;
}
if(PlayerInfo[i][pAdvertTime] <= 0)
{
SendClientMessage(i, 0xFAF305FF, "Вече отново можеш да пуснеш обява!");
}
}
if(PlayerInfo[i][pRefuelCan]>0)
{
if(PlayerInfo[i][pRefuelCan]>0)
{
PlayerInfo[i][pRefuelCan]--;
}
if(PlayerInfo[i][pRefuelCan] <= 0)
{
new string156[156];
GameTextForPlayer(i, "  ", 1000, 3);
TogglePlayerControllable(i, 1);
vehfuel[GetPlayerVehicleID(i)]+=refuelcan[i];
format(string156, 156, "Превозното средство е заредено със {C14124}%d L.",refuelcan[i]);
SendClientMessage(i, 0xFFFFFFFF, string156);
}
}
if(PlayerInfo[i][pRefuelTankIFC]>0)
{
if(PlayerInfo[i][pRefuelTankIFC]>0)
{
PlayerInfo[i][pRefuelTankIFC]--;
}
if(PlayerInfo[i][pRefuelTankIFC] <= 0)
{
new string156[156];
TogglePlayerControllable(i, 1);
GameTextForPlayer(i, "  ", 1000, 3);
vehfuel2[GetVehicleTrailer(GetPlayerVehicleID(i))]+=refuelcisterna[i];
format(string156, 156, "Цистерната е заредена със {C14124}%d L{FFFFFF}.",refuelcisterna[i]);
SendClientMessage(i, 0xFFFFFFFF, string156);
new stringveha[115];
format(stringveha,115,"~n~~n~~n~~y~PT: %dL",vehfuel2[GetVehicleTrailer(GetPlayerVehicleID(i))]);
TextDrawSetString(vehstatus2[i], stringveha);
}
}
if(PlayerInfo[i][pRefuelTube]>0)
{
if(PlayerInfo[i][pRefuelTube]>0)
{
PlayerInfo[i][pRefuelTube]--;
}
if(PlayerInfo[i][pRefuelTube] <= 0)
{
new string156[156];
TogglePlayerControllable(i, 1);
GameTextForPlayer(i, "  ", 1000, 3);
PlayerInfo[i][pFuelcase]+=refuelcan[i];
format(string156, 156, "Тубата е заредена със {C14124}%d L{FFFFFF} за {00BF00}$%d.",refuelcan[i],refuelcan[i]*5);
SendClientMessage(i, 0xFFFFFFFF, string156);
}
}

if(PlayerInfo[i][pAfterWork]>0)
{
if(PlayerInfo[i][pAfterWork]>0)
{
PlayerInfo[i][pAfterWork]--;
}
}

if(PlayerInfo[i][pPizzaTimerWorkAgain]>0)
{
if(PlayerInfo[i][pPizzaTimerWorkAgain]>0)
{
PlayerInfo[i][pPizzaTimerWorkAgain]--;
}
if(PlayerInfo[i][pPizzaTimerWorkAgain] <= 0)
{
SendClientMessage(i, 0xB35900FF, "Вече можеш да работиш Pizza отново!");
}
}
if(PlayerInfo[i][pDeliverTimerWorkAgain]>0)
{
if(PlayerInfo[i][pDeliverTimerWorkAgain]>0)
{
PlayerInfo[i][pDeliverTimerWorkAgain]--;
}
if(PlayerInfo[i][pDeliverTimerWorkAgain] <= 0)
{
SendClientMessage(i, 0xB35900FF, "Вече можеш да работиш Deliver отново!");
}
}
if(PlayerInfo[i][pBusTimerWorkAgain]>0)
{
if(PlayerInfo[i][pBusTimerWorkAgain]>0)
{
PlayerInfo[i][pBusTimerWorkAgain]--;
}
if(PlayerInfo[i][pBusTimerWorkAgain] <= 0)
{
SendClientMessage(i, 0xB35900FF, "Вече можеш да работиш Bus отново!");
}
}
if(PlayerInfo[i][pCoalmineTimerWorkAgain]>0)
{
if(PlayerInfo[i][pCoalmineTimerWorkAgain]>0)
{
PlayerInfo[i][pCoalmineTimerWorkAgain]--;
}
if(PlayerInfo[i][pCoalmineTimerWorkAgain] <= 0)
{
SendClientMessage(i, 0xB35900FF, "Вече можеш да работиш Coalmine отново!");
}
}
if(PlayerInfo[i][pPilotTimerWorkAgain]>0)
{
if(PlayerInfo[i][pPilotTimerWorkAgain]>0)
{
PlayerInfo[i][pPilotTimerWorkAgain]--;
}
if(PlayerInfo[i][pPilotTimerWorkAgain] <= 0)
{
SendClientMessage(i, 0xB35900FF, "Вече можеш да работиш Pilot отново!");
}
}
if(PlayerInfo[i][pSweeperTimerWorkAgain]>0)
{
if(PlayerInfo[i][pSweeperTimerWorkAgain]>0)
{
PlayerInfo[i][pSweeperTimerWorkAgain]--;
}
if(PlayerInfo[i][pSweeperTimerWorkAgain] <= 0)
{
SendClientMessage(i, 0xB35900FF, "Вече можеш да работиш Sweeper отново!");
}
}

if(PlayerInfo[i][pActiveCheck]>0)
{
if(PlayerInfo[i][pActiveCheck]>0)
{
PlayerInfo[i][pActiveCheck]--;
}
if(PlayerInfo[i][pActiveCheck] <= 0)
{
if(PlayerInfo[i][pAFK]>0)
{
PlayerInfo[i][pAFK]+=1;
}
PlayerInfo[i][pLastPayday]+=1;
PlayerInfo[i][pActiveCheck]=60;
}
}

if(PlayerInfo[i][pCmn1Timer]>0)
{
if(PlayerInfo[i][pCmn1Timer]>0)
{
PlayerInfo[i][pCmn1Timer]--;
}
if(PlayerInfo[i][pCmn1Timer] <= 0)
{
new cmn1string[256];
format(cmn1string,256,"CMN1: %s оцеля след 5 минутно преследване и вече не е заподозрян.",pname[i]);
SendClientMessageToAll(0xF97804FF,cmn1string);
if(cmn1Mission[i]==MISSION_MONEYBOX)
{
PlayerInfo[i][pMoneyboxSuccess]+=1;
if(PlayerInfo[i][pMoneyboxSuccess]==4)
{
SendClientMessage(i,0xF2E93EFF,"Ти събра 4 успешни Moneybox мисии и за награда получаваш + 8EP");
GivePlayerEP(i,8); PlayerInfo[i][pMoneyboxSuccess]=0;
}
}
if(cmn1Mission[i]==MISSION_DEATHMATCH)
{
PlayerInfo[i][pDeathmatchSuccess]+=1;
if(PlayerInfo[i][pDeathmatchSuccess]==4)
{
SendClientMessage(i,COLOR_DEATHMATCH,"Ти събра 4 успешни Deathmatch мисии и за награда получаваш + 8EP");
GivePlayerEP(i,8); PlayerInfo[i][pDeathmatchSuccess]=0;
}
}
if(cmn1Mission[i]==MISSION_STREETRACE)
{
PlayerInfo[i][pStreetRaceSuccess]+=1;
if(PlayerInfo[i][pStreetRaceSuccess]==4)
{
SendClientMessage(i,COLOR_STREETRACE,"Ти събра 4 успешни Streetrace мисии и за награда получаваш + 8EP");
GivePlayerEP(i,8); PlayerInfo[i][pStreetRaceSuccess]=0;
}
}
cmn1PlayerColorChange[i]=0;
cmn1[i]=0;
RestartPlayerColor(i);
}
}
if(PlayerInfo[i][pMuted]>0)
{
if(PlayerInfo[i][pMuteReason]<6)
{
if(PlayerInfo[i][pMuted]>0)
{
PlayerInfo[i][pMuted]--;
}
if(PlayerInfo[i][pMuted] <= 0)
{
PlayerInfo[i][pMuteReason]=0;
for(new allPlayers;allPlayers<MAX_PLAYERS;allPlayers++)
SendClientMessage(allPlayers, 0x00E600FF, "SERVER: %s was unmuted by THE SERVER [Reason: Timed Out]");
}
}
}
if(PlayerInfo[i][pAMuted]>0)
{
if(PlayerInfo[i][pAMuted]>0)
{
PlayerInfo[i][pAMuted]--;
}
if(PlayerInfo[i][pAMuted] <= 0)
{
SendClientMessage(i, 0x00E600FF, "SERVER: Ти беше отглушен от админ чата!");
}
}
if(PlayerInfo[i][pPJail]>0)
{
if(PlayerInfo[i][pPJail]>0)
{
PlayerInfo[i][pPJail]--;
}
if(PlayerInfo[i][pPJail] <= 0)
{
SetPlayerHealth(i,0);
SendClientMessage(i, 0x0040FFFF, "Jail: Ти си освободен от затвора, внимавай в бъдеще!");
}
}
if(PlayerInfo[i][pJail]>0)
{
if(PlayerInfo[i][pJail]>0)
{
PlayerInfo[i][pJail]--;
}
if(PlayerInfo[i][pJail] <= 0)
{
SetPlayerHealth(i,0);
for(new allPlayers;allPlayers<MAX_PLAYERS;allPlayers++)
{
SendClientMessage(allPlayers, 0x00E600FF, "SERVER: %s was unjailed by THE SERVER [Reason: Timed Out]");
}
}
}
}// [i] > CLOSE
//other timers
if(minutes==50 && seconds==0)
{
if(missionActive==MISSION_STREETRACE)
{
SendClientMessageToAll(COLOR_STREETRACE,"Streetrace: Streetrace свърши и никой не успя да го спечели!");
EndStreetRaceBeforeNewMission();
}
deathmatchStartTimer=0;
deathmatchStarted=false;
missionActive=MISSION_DEATHMATCH;
for(new allPlayers; allPlayers<MAX_PLAYERS; allPlayers++)
{
if(IsPlayerConnected(allPlayers))
{
if(playerInStreetRace[allPlayers]==false)
{
DisablePlayerRaceCheckpoint(allPlayers);
}
GivePlayerDeathmatchPoint(allPlayers);
GameTextForPlayer(allPlayers, "~w~Mission~n~~r~Deathmatch", 1000, 1);
PlayerPlaySound(allPlayers, 1056, 0.0, 0.0, 0.0);
}
}
new randomGun=randomex(1,5);
new gunName[30];
if(randomGun==1)
{
format(gunName,30,"Katana");
deathmatchGun = 8;
}
if(randomGun==2)
{
format(gunName,30,"Chainsaw");
deathmatchGun = 9;
}
if(randomGun==3)
{
format(gunName,30,"Molotov");
deathmatchGun = 18;
}
if(randomGun==4)
{
format(gunName,30,"Deagle");
deathmatchGun = 24;
}
if(randomGun==5)
{
format(gunName,30,"Uzi");
deathmatchGun = 28;
}
format(string256,256,"SERVER: Време е за Deathmatch с оръжие %s! Отиди до червения маркер и чакай битката да започне!",gunName);
SendClientMessageToAll(COLOR_DEATHMATCH,string256);
}
if(minutes==30 && seconds==0)
{
if(missionActive==MISSION_MONEYBOX)
{
whoHaveMoneyBox=-1;
}
missionActive=MISSION_STREETRACE;
for(new allPlayers; allPlayers<MAX_PLAYERS; allPlayers++)
{
if(IsPlayerConnected(allPlayers))
{
if(missionActive==MISSION_MONEYBOX)
{
playerWithMoneyBox[allPlayers]=false;
DisableAllCheckPointsWithCon(allPlayers);
SendClientMessage(allPlayers, 0x40BF00FF,"SERVER: Moneybox-а свърши и никой не успя да занесе раницата!"); //todo streetrace
}
GameTextForPlayer(allPlayers, "~w~Mission~n~~b~StreetRace", 1000, 1);
PlayerPlaySound(allPlayers, 1056, 0.0, 0.0, 0.0);
new stringSRace[256];
streetRaceTypeIndex=randomex(0,MAX_RACES);
GivePlayerStreetRacePoint(allPlayers);
format(stringSRace,256,"SERVER: Време е за Streetrace тип %s! Отиди до червения маркер и чакай състезанието да започне!",StreetRaceInfo[streetRaceTypeIndex][stTypeName]);
SendClientMessage(allPlayers, COLOR_STREETRACE,stringSRace);
if(StreetRaceInfo[streetRaceTypeIndex][stWinTime]>0)
{
format(stringSRace,256,"Streetrace: Най-доброто време на това състезание е %d секунди, отбелязано от %s",StreetRaceInfo[streetRaceTypeIndex][stWinTime],StreetRaceInfo[streetRaceTypeIndex][stWinner]);
SendClientMessage(allPlayers, COLOR_STREETRACE,stringSRace);
}
else if(StreetRaceInfo[streetRaceTypeIndex][stWinTime]==0)
{
format(stringSRace,256,"Streetrace: Все още няма рекорд за това състезание");
SendClientMessage(allPlayers, COLOR_STREETRACE,stringSRace);
}
}
}
}
if(minutes==10 && seconds==0)
{
if(missionActive==MISSION_DEATHMATCH && deathmatchEndTimer==0)
{
for(new allPlayers; allPlayers<MAX_PLAYERS; allPlayers++)
{
SendClientMessage(allPlayers, COLOR_DEATHMATCH,"SERVER: Deathmatch свърши и никой не успя да го спечели!");
DisableAllCheckPointsWithCon(allPlayers);
}
}
missionActive=MISSION_MONEYBOX;
moneyBoxCPID=random(allMoneyBoxCheckPoints);
for(new allPlayers; allPlayers<MAX_PLAYERS; allPlayers++)
{
GivePlayerMoneyBoxPoint(allPlayers);
GameTextForPlayer(allPlayers, "~w~Mission~n~~g~Moneybox", 1000, 1);
PlayerPlaySound(allPlayers, 1056, 0.0, 0.0, 0.0);
SendClientMessage(allPlayers, 0x40BF00FF,"SERVER: Време е за Moneybox! Отиди до червения маркер и вземи куфара с пари!");
}
}
if(serverrestarttimer>0)
{
if(serverrestarttimer>0)
{
serverrestarttimer--;
}
if(serverrestarttimer==2)
{
SaveAllBizz();
for(new allPlayers; allPlayers<MAX_PLAYERS; allPlayers++)
{
SavePlayerStats(allPlayers);
}
}
if(serverrestarttimer==0)
{
ingmx=1;
SendRconCommand("gmx");
}
}
}//close Generaltimer1s
public GeneralTimer500ms()
{
getdate(year, month, day);
gettime(hours, minutes, seconds);

//PlayerInfo timers - location - open
//for(new i=0; i<MAX_PLAYERS; i++)
//{

//goto 5ms
//

//}
//PlayerInfo timers - location - close
return 1;
}
public OnPlayerRequestClass(playerid, classid)
{
firstskin[playerid]=classid;
spawned[playerid]=0;
/*
requestspawn[playerid]=1;
if(requestspawn2[playerid]==1)
{
SetTimerEx("ReSpawnTimer", 250, false, "i", playerid);
}*/
SetPVarInt(playerid, "color", 0);
if(nospawnselect[playerid]==1)
{
SpawnPlayer(playerid);
SpawnPlayer(playerid);
nospawnselect[playerid]=2;
}
switch(classid)
{
case 0..2:
{
SetPlayerPos(playerid,2183.4976,1284.9148,43.0672);
SetPlayerCameraPos(playerid,2179.9398,1284.6965,43.4799);
SetPlayerCameraLookAt(playerid, 2183.4976,1284.9148,43.0672);
SetPlayerFacingAngle(playerid,88.68);
GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~g~Drug Dealer", 2300, 3);
}
case 3..6:
{
SetPlayerPos(playerid,2183.4976,1284.9148,43.0672);
SetPlayerCameraPos(playerid,2179.9398,1284.6965,43.4799);
SetPlayerCameraLookAt(playerid, 2183.4976,1284.9148,43.0672);
SetPlayerFacingAngle(playerid,88.68);
GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~g~Drug Maker", 2300, 3);
}
case 7..10:
{
SetPlayerPos(playerid,2183.4976,1284.9148,43.0672);
SetPlayerCameraPos(playerid,2179.9398,1284.6965,43.4799);
SetPlayerCameraLookAt(playerid, 2183.4976,1284.9148,43.0672);
SetPlayerFacingAngle(playerid,88.68);
GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~w~Normal Ped Man", 2300, 3);
}
case 11..12:
{
SetPlayerPos(playerid,2183.4976,1284.9148,43.0672);
SetPlayerCameraPos(playerid,2179.9398,1284.6965,43.4799);
SetPlayerCameraLookAt(playerid, 2183.4976,1284.9148,43.0672);
SetPlayerFacingAngle(playerid,88.68);
GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~w~Normal Ped Woman", 2300, 3);
}
case 13:
{
SetPlayerPos(playerid,2183.4976,1284.9148,43.0672);
SetPlayerCameraPos(playerid,2179.9398,1284.6965,43.4799);
SetPlayerCameraLookAt(playerid, 2183.4976,1284.9148,43.0672);
SetPlayerFacingAngle(playerid,88.68);
GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~r~BUSSINESMAN", 2300, 3);
}
case 14:
{
SetPlayerPos(playerid,2183.4976,1284.9148,43.0672);
SetPlayerCameraPos(playerid,2179.9398,1284.6965,43.4799);
SetPlayerCameraLookAt(playerid, 2183.4976,1284.9148,43.0672);
SetPlayerFacingAngle(playerid,88.68);
GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~r~BUSSINESWOMAN", 2300, 3);
}
case 15..17:
{
SetPlayerPos(playerid,2183.4976,1284.9148,43.0672);
SetPlayerCameraPos(playerid,2179.9302,1284.6965,43.4799);
SetPlayerCameraLookAt(playerid, 2183.4976,1284.9148,43.0672);
SetPlayerFacingAngle(playerid,88.68);
GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~p~PROSTITUTE", 2300, 3);
}
case 18..23:
{
SetPlayerPos(playerid,2183.4976,1284.9148,43.0672);
SetPlayerCameraPos(playerid,2179.9398,1284.6965,43.4799);
SetPlayerCameraLookAt(playerid, 2183.4976,1284.9148,43.0672);
SetPlayerFacingAngle(playerid,88.68);
GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~p~WOMAN", 2300, 3);
}
}
return 1;
}
public ReSpawnTimer(playerid)
{
requestspawn2[playerid]=0;
SpawnPlayer(playerid);
return 1;
}
public OnPlayerClickTextDraw(playerid, Text:clickedid)
{
if(GetPVarInt(playerid, "skinc_active") == 0) return 0;
if(clickedid == Text:INVALID_TEXT_DRAW) {
DestroySelectionMenu(playerid);
SetPVarInt(playerid, "skinc_active", 0);
PlayerPlaySound(playerid, 1085, 0.0, 0.0, 0.0);
return 1;
}
return 0;
}
public OnPlayerClickPlayerTextDraw(playerid, PlayerText:playertextid)
{
if(GetPVarInt(playerid, "skinc_active") == 0) return 0;
new curpage = GetPVarInt(playerid, "skinc_page");
if(playertextid == gNextButtonTextDrawId[playerid]) {
if(curpage < (GetNumberOfPages() - 1)) {
SetPVarInt(playerid, "skinc_page", curpage + 1);
ShowPlayerModelPreviews(playerid);
UpdatePageTextDraw(playerid);
PlayerPlaySound(playerid, 1083, 0.0, 0.0, 0.0);
} else {
PlayerPlaySound(playerid, 1085, 0.0, 0.0, 0.0);
}
return 1;
}
if(playertextid == gPrevButtonTextDrawId[playerid]) {
if(curpage > 0) {
SetPVarInt(playerid, "skinc_page", curpage - 1);
ShowPlayerModelPreviews(playerid);
UpdatePageTextDraw(playerid);
PlayerPlaySound(playerid, 1084, 0.0, 0.0, 0.0);
} else {
PlayerPlaySound(playerid, 1085, 0.0, 0.0, 0.0);
}
return 1;
}
new x=0;
while(x != SELECTION_ITEMS) {
if(playertextid == gSelectionItems[playerid][x]) {
HandlePlayerItemSelection(playerid, x);
PlayerPlaySound(playerid, 1083, 0.0, 0.0, 0.0);
DestroySelectionMenu(playerid);
CancelSelectTextDraw(playerid);
SetPVarInt(playerid, "skinc_active", 0);
return 1;
}
x++;
}
return 0;
}
stock ResetPlayerStats(playerid)
{
PlayerInfo[playerid][pRobberLead]=0;
PlayerInfo[playerid][pRobber]=0;
PlayerInfo[playerid][pBan]=0;
PlayerInfo[playerid][pBlock]=0;
PlayerInfo[playerid][pKick]=0;
PlayerInfo[playerid][pRefuel20LitTimer]=0;
PlayerInfo[playerid][pFixT]=0;
PlayerInfo[playerid][pHealT]=0;
PlayerInfo[playerid][pFuel]=0;
PlayerInfo[playerid][pTogFaction]=0;
PlayerInfo[playerid][pTogLeader]=0;
PlayerInfo[playerid][pStartIntro]=0;
PlayerInfo[playerid][pReSpawn]=0;
PlayerInfo[playerid][pIntro]=0;
PlayerInfo[playerid][pIntro1]=0;
PlayerInfo[playerid][pIntro2]=0;
PlayerInfo[playerid][pIFCDuty]=0;
PlayerInfo[playerid][pIntro3]=0;
PlayerInfo[playerid][pRefuelTankIFC]=0;
PlayerInfo[playerid][pIntro4]=0;
PlayerInfo[playerid][pIntro5]=0;
PlayerInfo[playerid][pIntro6]=0;
PlayerInfo[playerid][pTogCB]=0;
PlayerInfo[playerid][pRegistred]=0;
PlayerInfo[playerid][pAdmin]=0;
PlayerInfo[playerid][pADMINMute]=0;
PlayerInfo[playerid][pReadTA]=0;
PlayerInfo[playerid][pArmour2]=0;
PlayerInfo[playerid][pHealth2]=0;
PlayerInfo[playerid][pMoonshineEffectTime]=0;
PlayerInfo[playerid][pRadio]=0;
PlayerInfo[playerid][pDice]=0;
PlayerInfo[playerid][pReactionTestsWon]=0;
PlayerInfo[playerid][pCigarettes]=0;
PlayerInfo[playerid][pBriefcase]=0;
PlayerInfo[playerid][pChantichki]=0;
PlayerInfo[playerid][pDMONKills2]=0;
PlayerInfo[playerid][pDFDuty]=0;
PlayerInfo[playerid][pFuelcase]=-1;
PlayerInfo[playerid][pBizEP]=0; PlayerInfo[playerid][pBizCash]=0;
PlayerInfo[playerid][pJob]=0;
PlayerInfo[playerid][pNone]=0;
PlayerInfo[playerid][pNo]=0;
for(new i; i<9; i++)
{
PlayerInfo[playerid][pClothes][i]=0;
}
for(new i=1; i<MAX_PRIVATEVEHS; i++)
{
PlayerInfo[playerid][pPrivateVeh][i]=0;
}
PlayerInfo[playerid][pYes]=0;
PlayerInfo[playerid][pPizzaTimerWorkAgain]=0;
PlayerInfo[playerid][pBoatTimerWorkAgain]=0;
PlayerInfo[playerid][pOrganisator]=0;
PlayerInfo[playerid][pCoalmineTimerWorkAgain]=0;
PlayerInfo[playerid][pSweeperTimerWorkAgain]=0;
PlayerInfo[playerid][pPilotTimerWorkAgain]=0;
PlayerInfo[playerid][pDeliverTimerWorkAgain]=0;
PlayerInfo[playerid][pBusTimerWorkAgain]=0;
PlayerInfo[playerid][pTruckTimerWorkAgain]=0;
PlayerInfo[playerid][pOffice]=0;
PlayerInfo[playerid][pCMN1]=0;
PlayerInfo[playerid][pStreetRaceSuccess]=0;
PlayerInfo[playerid][pMoneyboxSuccess]=0;
PlayerInfo[playerid][pAdvertTime]=0;
PlayerInfo[playerid][pIFC]=0;
PlayerInfo[playerid][pSpecialForce]=0;
PlayerInfo[playerid][pEvent]=0; PlayerInfo[playerid][pManage]=0;
PlayerInfo[playerid][pRNMute]=0; PlayerInfo[playerid][pAWarns]=0;
PlayerInfo[playerid][pLodka]=0; PlayerInfo[playerid][pVlak]=0; PlayerInfo[playerid][pSamolet]=0; PlayerInfo[playerid][pHelikopter]=0;
PlayerInfo[playerid][pDeathmatchSuccess]=0;
PlayerInfo[playerid][pADuty]=0;
PlayerInfo[playerid][pMoonshine]=0;
PlayerInfo[playerid][pMoonshine1]=0; PlayerInfo[playerid][pWeed1]=0; PlayerInfo[playerid][pHeroin1]=0; PlayerInfo[playerid][pCocaine1]=0;
PlayerInfo[playerid][pWeed]=0;
PlayerInfo[playerid][pCocaine]=0;
PlayerInfo[playerid][pDMONKills]=0;
PlayerInfo[playerid][pHeroin]=0;
PlayerInfo[playerid][pHook]=0;PlayerInfo[playerid][pStyle]=0;
PlayerInfo[playerid][pGLeader]=0;
PlayerInfo[playerid][pASkin]=0;
PlayerInfo[playerid][pParrot]=0;
PlayerInfo[playerid][pTest]=0;
PlayerInfo[playerid][pVip]=0;
PlayerInfo[playerid][pPlayerRefuelTimer]=0;
PlayerInfo[playerid][pVIPLabel]=0;
PlayerInfo[playerid][pWarns]=0;
PlayerInfo[playerid][pTGoto]=0;
PlayerInfo[playerid][pTSpec]=0;
PlayerInfo[playerid][pTimeJail]=0;
PlayerInfo[playerid][pTimeMute]=0;
PlayerInfo[playerid][pTeam]=0;
PlayerInfo[playerid][pRank]=1;
PlayerInfo[playerid][pLevel]=0;
PlayerInfo[playerid][pEP]=0;
PlayerInfo[playerid][pEPS]=0;
PlayerInfo[playerid][pCash]=0;
PlayerInfo[playerid][pBSpec]=0;
PlayerInfo[playerid][pJail]=0;
PlayerInfo[playerid][pComingBan]=0;
PlayerInfo[playerid][pLastPayday]=0;
PlayerInfo[playerid][pAHide]=0;
PlayerInfo[playerid][pWeaponS]=0;
PlayerInfo[playerid][pHouseO]=-1;
PlayerInfo[playerid][pSpawnO]=0;
PlayerInfo[playerid][pBizO]=-1;
PlayerInfo[playerid][pMuted]=0;
PlayerInfo[playerid][pKills]=0; PlayerInfo[playerid][pDeaths]=0;
PlayerInfo[playerid][pJailReason]=0;
PlayerInfo[playerid][pMuteReason]=0;
PlayerInfo[playerid][pLMuted]=0;
PlayerInfo[playerid][pAMuted]=0;
PlayerInfo[playerid][pFMuted]=0;
PlayerInfo[playerid][pFWarns]=0;
PlayerInfo[playerid][pYear]=0;
PlayerInfo[playerid][pMonth]=0;
PlayerInfo[playerid][pDay]=0;
PlayerInfo[playerid][pHours]=0;
PlayerInfo[playerid][pMinutes]=0;
PlayerInfo[playerid][pSeconds]=0;
PlayerInfo[playerid][pAFK]=0;
PlayerInfo[playerid][pActiveCheck]=0;
PlayerInfo[playerid][pAccount]=0;
PlayerInfo[playerid][pLaser]=0;
PlayerInfo[playerid][pWanted]=0;
PlayerInfo[playerid][pGSM]=0;
PlayerInfo[playerid][pPJail]=0;
PlayerInfo[playerid][pTogPM]=0;
PlayerInfo[playerid][pIgnorePM]=0;
PlayerInfo[playerid][pRefuelCan]=0;
PlayerInfo[playerid][pRefuelTube]=0;
PlayerInfo[playerid][pInfiniteNos]=0;
PlayerInfo[playerid][pLastPM]=-1;
format(adminprefix[playerid],35,"");
format(adminprefix[playerid],35,"");
format(VipText3D[playerid],26,"");
format(viptextformat[playerid],35,"");
format(stringvehicle[playerid],115,"");
logged[playerid]=0;
streetRacePlayerColorChange[playerid]=0;
playerInDeathmatch[playerid]=false;
attachedviptext[playerid]=0;
oldvehid[playerid]=-1;
rezachka[playerid]=0;
spawned[playerid]=0;
zaplatakinti[playerid]=0;
deathmatchKills[playerid]=0;
gpsOn[playerid]=false;
playerInDuel[playerid]=0;
InTuneGarage[playerid]=false;
playerInDMON[playerid]=0;
hidename[playerid]=0;
adutyskinchanged[playerid]=0;
vehStatus2On[playerid]=false;
lastpaydaykinti[playerid]=0;
firstskin[playerid]=0;
logged[playerid]=0;
playerInStreetRace[playerid]=false;
lastkey[playerid]=-1; oldkey[playerid]=-1;
radioff[playerid]=0;
cmn1[playerid]=0;
cbchat[playerid]=0;
replyPm[playerid]=false;
santaHat[playerid]=false;
enabledramp[playerid]=0;
nospam2[playerid]=0;
godmode[playerid]=0;
loadedClothes[playerid]=false;
playerWithMoneyBox[playerid]=false;
selectedTmpClothID[playerid] = 0;
WhatCar[playerid]=0;
g_bump[playerid] = false;
g_veh[playerid] = -1;
acuffed[playerid]=0;
scripterMode[playerid]=0;
specing[playerid]=0;
onWork[playerid]=0;
radion[playerid]=0;
duelsender[playerid]=-1;
rampobject[playerid]=-1;
houseSwitchSender[playerid]=-1;
houseSwitchReceiver[playerid]=-1;
bizSwitchSender[playerid]=-1;
bizSwitchReceiver[playerid]=-1;
bizSwitching[playerid]=false;
houseSwitching[playerid]=false;
houseSelling[playerid]=false;
AntiFallOfBike[playerid]=0;
duelsend[playerid]=-1;
refuelcisterna[playerid]=0;
enteredbiz[playerid]=0;
enteredhouse[playerid]=0;
hitmanby[playerid]=-1;
hitmanprice[playerid]=0;
refuelcan[playerid]=0;
nameon[playerid]=1;
introon[playerid]=0;
inevent[playerid]=0;
firstspawn[playerid]=1;
pDrunkLevelLast[playerid]=0;
timec[playerid]=0;
sitec[playerid]=0;
pFPS[playerid]=30;
onhousepick2[playerid]=0;
fly[playerid]=0;
Speed[playerid]=0;
kmh[playerid]=0;
Jump[playerid]=0;
duelzalog[playerid]=0;
afterjobcheckpoint[playerid]=0;
hideexitserver[playerid]=0;
driver[playerid]=0;
requestspawn2[playerid]=0;
playerInDMON[playerid]=0;
playerInDuel[playerid]=0;
hitmaner[playerid]=-1;
marked[playerid]=0;
togchat[playerid]=0;
isinhousepickup[playerid]=0;
passenger[playerid]=false;
nospawnselect[playerid]=0;
streetRaceSecondsCounter[playerid]=0;
BigEar[playerid]=0;
requestspawn[playerid]=0;
speedo[playerid]=0;
//active[playerid]=0;
lottonumber[playerid]=0;
X[playerid]=0.0; Y[playerid]=0.0; Z[playerid]=0.0;
AX[playerid]=0.0; AY[playerid]=0.0; AZ[playerid]=0.0; AZA[playerid]=0.0;
AINT[playerid]=0; AVW[playerid]=0;
para1[playerid]=-1;
spawnselectedskin[playerid]=0;
commandspam[playerid]=0; textspam[playerid]=0;
wrongpassword[playerid]=0;
loadedtexts[playerid]=0;
TeamInvite[playerid]=-1;
loadedtext[playerid]=0;
attachedviptext[playerid]=0;
spec[playerid] = 0;
houseSellSender[playerid]=-1;
houseSellReceiver[playerid]=-1;
houseSwitchSender[playerid]=-1;
houseSwitchReceiver[playerid]=-1;
objectright[playerid]=0;
vehhealth[playerid]=0.0;
for(new allids; allids<MAX_PLAYERS; allids++)
{
ignore[allids][playerid] = -1;
fignore[allids][playerid] = -1;
}
format(VipText3D[playerid],26,"");
UpdateDynamic3DTextLabelText(PlayerLabel[playerid], 0x800000FF, " ");
gHeaderTextDrawId[playerid] = PlayerText:INVALID_TEXT_DRAW;
gBackgroundTextDrawId[playerid] = PlayerText:INVALID_TEXT_DRAW;
gCurrentPageTextDrawId[playerid] = PlayerText:INVALID_TEXT_DRAW;
gNextButtonTextDrawId[playerid] = PlayerText:INVALID_TEXT_DRAW;
gPrevButtonTextDrawId[playerid] = PlayerText:INVALID_TEXT_DRAW;
for(new x=0; x < SELECTION_ITEMS; x++) gSelectionItems[playerid][x] = PlayerText:INVALID_TEXT_DRAW;
gItemAt[playerid] = 0;
//reststats - location - close
//resttexts - location - open
TextDrawHideForPlayer(playerid, Intro[0]);
TextDrawHideForPlayer(playerid, Intro[1]);
TextDrawHideForPlayer(playerid, Intro[2]);
TextDrawHideForPlayer(playerid, Intro[3]);
TextDrawHideForPlayer(playerid, Intro[4]);
TextDrawHideForPlayer(playerid, Intro[5]);
TextDrawHideForPlayer(playerid, epeps[playerid]);
TextDrawHideForPlayer(playerid, levelms[playerid]);
//resttexts - location - close
//resttimers - location - openp
PlayerInfo[playerid][pFuel]=0;
PlayerInfo[playerid][pDuelCountTimer]=0;
PlayerInfo[playerid][pDuelCountTimer2]=0;
PlayerInfo[playerid][pDuelCountTimer3]=0;
PlayerInfo[playerid][pDuelCountTimer4]=0;
PlayerInfo[playerid][pKick]=0;
PlayerInfo[playerid][pFixT]=0;
PlayerInfo[playerid][pHealT]=0;
PlayerInfo[playerid][pHideDMONKillText]=0;
PlayerInfo[playerid][pVGuns]=0;
PlayerInfo[playerid][pRefuel20LitTimer]=0;
PlayerInfo[playerid][pInfiniteNosTimer]=0;
PlayerInfo[playerid][pBankSpawn]=0;
PlayerInfo[playerid][pStartIntro]=0;
PlayerInfo[playerid][pIntro]=0;
PlayerInfo[playerid][pIntro1]=0;
PlayerInfo[playerid][pIntro2]=0;
PlayerInfo[playerid][pIntro3]=0;
PlayerInfo[playerid][pIntro4]=0;
PlayerInfo[playerid][pIntro5]=0;
PlayerInfo[playerid][pIntro6]=0;
PlayerInfo[playerid][pAfterWork]=0;
PlayerInfo[playerid][pCmn1Timer]=0;
}
stock LoadPlayerTexts(playerid)
{
levelms[playerid]=TextDrawCreate(477.000000, 100.000000, "");
TextDrawAlignment(levelms[playerid],0);
TextDrawBackgroundColor(levelms[playerid],0x000000ff);
TextDrawFont(levelms[playerid],1);
TextDrawLetterSize(levelms[playerid], 0.2800,1.8000);
TextDrawSetProportional(levelms[playerid],1);
TextDrawSetShadow(levelms[playerid],1);

epeps[playerid]=TextDrawCreate(477.000000, 117.000000, "");
TextDrawAlignment(epeps[playerid],0);
TextDrawBackgroundColor(epeps[playerid],0x000000ff);
TextDrawFont(epeps[playerid],1);
TextDrawLetterSize(epeps[playerid], 0.2800,1.8000);
TextDrawSetProportional(epeps[playerid],1);
TextDrawSetShadow(epeps[playerid],1);

vehstatus2[playerid]=TextDrawCreate(510.5190,363.0,"~n~~n~~n~~y~PT: 0L"); //369
TextDrawBackgroundColor(vehstatus2[playerid], 250);
TextDrawFont(vehstatus2[playerid], 1);
TextDrawLetterSize(vehstatus2[playerid], 0.4099,1.5000);
TextDrawColor(vehstatus2[playerid], -1);
TextDrawSetOutline(vehstatus2[playerid], 1);
TextDrawSetProportional(vehstatus2[playerid], 1);


vehstatus[playerid]=TextDrawCreate(510.5190,363.0,""); //369
TextDrawBackgroundColor(vehstatus[playerid], 250);
TextDrawFont(vehstatus[playerid], 1);
TextDrawLetterSize(vehstatus[playerid], 0.3900,1.4700);
TextDrawColor(vehstatus[playerid], -1);
TextDrawSetOutline(vehstatus[playerid], 1);
TextDrawSetProportional(vehstatus[playerid], 1);
GetPlayerName(playerid, pname[playerid], 25);
}
stock RemovePlayerObjectsForXmas(playerid)
{
RemoveBuildingForPlayer(playerid, 1280, 1493.130, -1639.449, 13.453, 0.250);
}
public OnPlayerConnect(playerid)
{
//TogglePlayerSpectating(playerid, false);
if(month==12)
{
RemovePlayerObjectsForXmas(playerid);
}
ResetPlayerStats(playerid);
CreateDMONText(playerid);
LoadPlayerTexts(playerid);
GetPlayerName(playerid, pname[playerid], 25);
new accountfiles[115];
format(accountfiles, 115, "%s.ini", pname[playerid]);
if(dini_Exists(accountfiles))
{
PlayerInfo[playerid][pWarns]= dini_Int(accountfiles,"pWarns");
PlayerInfo[playerid][pBlock]= dini_Int(accountfiles,"pBlock");
}
if(serverrestarttimer>0)
{
TextDrawShowForPlayer(playerid, RESTART);
}
if(PlayerInfo[playerid][pWarns]>4 || PlayerInfo[playerid][pBlock]==1)
{
ForceClassSelection(playerid);
SendClientMessage(playerid,0xE60000FF,"Този акаунт е баннат от сървъра!");
PlayerInfo[playerid][pKick]=1; ForceClassSelection(playerid);
return 1;
}
SendClientMessage(playerid,0xFFFF00FF,"Добре дошли в {FFFFFF}[> GTAINT <]{40BF00}[O-F-F-I-C-I-A-L]{FF0000}[0.3.7]{FFFFFF}[Версия: 0.9 RC2 © by sTrIx 2021 - official site soon]");
TogglePlayerSpectating(playerid, true);
ForceClassSelection(playerid);
PlayerInfo[playerid][pStartIntro] = 1;
PlayAudioStreamForPlayer(playerid, audiostreams[random(sizeof(audiostreams))]);
RemoveBuildingsForPlayer(playerid);
AddMapIconsForPlayer(playerid);
GetPlayerCurrentIP(playerid);
return 1;
}
stock AddMapIconsForPlayer(playerid)
{
SetPlayerMapIcon(playerid, 0, 837.2157,-2027.8276,12.8672, 44, 0);
}
stock RemoveBuildingsForPlayer(playerid)
{
RemoveBuildingForPlayer(playerid, 1596, -1132.6953, 1073.9922, 1354.7500, 0.25);
RemoveBuildingForPlayer(playerid, 1596, -973.5625, 1046.0703, 1353.9688, 0.25);
RemoveBuildingForPlayer(playerid, 16094, 191.1406, 1870.0391, 21.4766, 0.25);
RemoveBuildingForPlayer(playerid, 1411, 347.1953, 1799.2656, 18.7578, 0.25);
RemoveBuildingForPlayer(playerid, 985, 2497.4063, 2777.0703, 11.5313, 0.25);
RemoveBuildingForPlayer(playerid, 986, 2497.4063, 2769.1094, 11.5313, 0.25);
RemoveBuildingForPlayer(playerid, 1411, 342.9375, 1796.2891, 18.7578, 0.25);
}
stock GivePlayerLostMoneyBox(playerWithMB,playerid)
{
GetPlayerPos(playerWithMB,LX,LY,LZ);
if(onWork[playerid]==0 && gpsOn[playerid]==false)
{
SetPlayerCheckpoint(playerid, LX,LY,LZ, 5.0);
}
}
stock ExitWithMoneyBox(playerid)
{
if(isMoneyBoxGet==true)
{
if(playerWithMoneyBox[playerid]==true)
{
new stringmoneybox[256];
format(stringmoneybox,256,"Moneybox: %s изпусна куфара с пари. Отиди до червения маркер и пребири куфара.",pname[playerid]);
SendClientMessageToAll(0x40BF00FF,stringmoneybox);
lostMoneyBox=true;
playerWithMoneyBox[playerid]=false;
whoHaveMoneyBox=-1;
GetPlayerPos(playerid,LX,LY,LZ);
for(new i=0; i<MAX_PLAYERS; i++)
{
GivePlayerLostMoneyBox(playerid, i);
}
}
}
}
stock KilledWithMoneyBox(playerid)
{
if(isMoneyBoxGet==true)
{
if(playerWithMoneyBox[playerid]==true)
{
new stringmoneybox[256];
format(stringmoneybox,256,"Moneybox: %s изпусна куфара с пари. Отиди до червения маркер и пребири куфара.",pname[playerid]);
SendClientMessageToAll(0x40BF00FF,stringmoneybox);
lostMoneyBox=true;
playerWithMoneyBox[playerid]=false;
whoHaveMoneyBox=-1;
GetPlayerPos(playerid,LX,LY,LZ);
for(new i=0; i<MAX_PLAYERS; i++)
{
GivePlayerLostMoneyBox(playerid, i);
}
}
}
}
stock KilledWithCMN1(killerid, playerid)
{
if(cmn1[playerid]==1)
{
if(killerid!=INVALID_PLAYER_ID)
{
new cmn1string[256];
format(cmn1string,256,"CMN1: %s успя да убие %s и получава CMN1 Kill.",pname[killerid],pname[playerid]);
SendClientMessageToAll(0xF97804FF,cmn1string);
PlayerInfo[killerid][pCMN1]+=1;
if(PlayerInfo[killerid][pCMN1]==4)
{
SendClientMessage(killerid,0xF2E93EFF,"Ти събра 4 CMN1 убийства и за награда получаваш + 8EP");
GivePlayerEP(killerid,8); PlayerInfo[killerid][pCMN1]=0;
}
}
else if(killerid==INVALID_PLAYER_ID)
{
new cmn1string[256];
format(cmn1string,256,"CMN1: %s се самоуби и вече не е CMN1, но той загуби неговата точка от мисията!",pname[playerid]);
SendClientMessageToAll(0xF97804FF,cmn1string);
}
//MinusOneCMN1(playerid);
GivePlayerCash(playerid,-cmn1Money);
cmn1[playerid]=0;
PlayerInfo[playerid][pCmn1Timer]=0;
}
}

stock ExitWithCMN1(playerid)
{
if(cmn1[playerid]==1)
{
new cmn1string[256];
format(cmn1string,256,"CMN1: %s излезе от сървъра и изгуби своята награда.",pname[playerid]);
SendClientMessageToAll(0xF97804FF,cmn1string);
GivePlayerCash(playerid,-cmn1Money);
//MinusOneCMN1(playerid);
cmn1[playerid]=0;
PlayerInfo[playerid][pCmn1Timer]=0;
}
}

stock MinusOneCMN1(playerid)
{

switch(cmn1Mission[playerid])
{
case MISSION_DEATHMATCH:
{
if(PlayerInfo[playerid][pDeathmatchSuccess]>0)
{
PlayerInfo[playerid][pDeathmatchSuccess]-=1;
}
else if(PlayerInfo[playerid][pDeathmatchSuccess]==0)
{
PlayerInfo[playerid][pDeathmatchSuccess]=3;
}
}
case MISSION_MONEYBOX:
{
if(PlayerInfo[playerid][pMoneyboxSuccess]>0)
{
PlayerInfo[playerid][pMoneyboxSuccess]-=1;
}
else if(PlayerInfo[playerid][pMoneyboxSuccess]==0)
{
PlayerInfo[playerid][pMoneyboxSuccess]=3;
}
}
case MISSION_STREETRACE:
{
if(PlayerInfo[playerid][pStreetRaceSuccess]>0)
{
PlayerInfo[playerid][pStreetRaceSuccess]-=1;
}
else if(PlayerInfo[playerid][pStreetRaceSuccess]==0)
{
PlayerInfo[playerid][pStreetRaceSuccess]=3;
}
}

}
}
stock LastPlayerInRace()
{
new lastRacerID;
for(new i; i<MAX_PLAYERS; i++)
{
if(IsPlayerConnected(i))
{
if(playerInStreetRace[i]==true)
{
lastRacerID=i;
}
}
}
return lastRacerID;
}
stock EndStreetRaceBeforeNewMission()
{
streetRaceStartTimer=0;
streetRacePlayers=0;
for(new i; i<MAX_PLAYERS; i++)
{
if(IsPlayerConnected(i))
{
if(playerInStreetRace[i]==true)
{
DisablePlayerRaceCheckpoint(i);
streetRacePlayerColorChange[i]=0;
playerInStreetRace[i]=false;
RestartPlayerColor(i);
SetPlayerToVirtualWorldNull(i);
}
}
}

}
stock LeaveStreetRace(playerid)
{
streetRacePlayerColorChange[playerid]=0;
RestartPlayerColor(playerid);
playerInStreetRace[playerid]=false;
DisablePlayerRaceCheckpoint(playerid);
streetRacePlayers-=1;
new Float:health; GetPlayerHealth(playerid, health);
if(health>0)
{
SetPlayerToVirtualWorldNull(playerid);
}

if(streetRaceStarted==false) //goto 3
{
if(streetRacePlayers<=1)
{
if(streetRaceStartTimer>=1)
{
UnfreezeSRacePlayers();
SendClientMessageToAll(COLOR_STREETRACE,"Streetrace: Състезанието няма да започне сега, защото не останаха играчи!");
}
streetRaceStartTimer=0;
}
}
else if(streetRaceStarted==true)
{
if(streetRacePlayers==1) //last player wins the race
{
new lastRacerID=LastPlayerInRace();
GivePlayerCMN1Status(lastRacerID);
cmn1Mission[lastRacerID]=MISSION_STREETRACE;
streetRaceSecondsCounter[lastRacerID]=0;
format(string256,256,"Streetrace: Състезанието приключи, победител е %s, той спечели %d",pname[lastRacerID],cmn1Money);
SendClientMessageToAll(COLOR_STREETRACE,string256);
format(string256,256,"[SUSPECT]{0040FF} Ти си заподозрян в престъпление: Състезание, ниво на издирване: %d",PlayerInfo[lastRacerID][pWanted]);
SendClientMessage(lastRacerID,0xFF0000FF,string256);
format(string256,256,"CMN1: %s е заподозрян в състезание,убий го и ще получиш CMN1 Kill.",pname[lastRacerID]);
SendClientMessageToAll(0xF97804FF,string256);
SendClientMessage(lastRacerID,0xF97804FF,"CMN1: Трябва да оцелееш 5 минути за да не си преследван повече.");
if(missionActive==MISSION_STREETRACE)
{
missionActive=MISSION_NONE;
}
}
if(streetRacePlayers==0)
{
streetRaceSecondsCounter[playerid]=0;
SendClientMessageToAll(COLOR_STREETRACE,"Streetrace: Състезанието завърши без победител!");
streetRaceStarted=false;
streetRacePlayers=0;
streetRaceStartTimer=0;
streetRaceTimerToEnd=0;
}
}

}

stock UnfreezeSRacePlayers()
{
for(new i; i<MAX_PLAYERS; i++)
{
if(IsPlayerConnected(i))
{
if(playerInStreetRace[i]==true)
{
TogglePlayerControllable(i, 1);
}
}
}
}

stock FreezeSRacePlayers()
{
for(new i; i<MAX_PLAYERS; i++)
{
if(IsPlayerConnected(i))
{
if(playerInStreetRace[i]==true)
{
TogglePlayerControllable(i, 0);
}
}
}
}

stock LeaveDeathmatch(playerid)
{
playerInDeathmatch[playerid]=false;
deathmatchPlayers--;
if(deathmatchPlayers<2 && deathmatchStartTimer>0)
{
deathmatchStartTimer=0;
}
if(deathmatchEndTimer>0)
{
if(deathmatchPlayers==1)
{
for(new i; i<MAX_PLAYERS; i++)
{
if(IsPlayerConnected(i))
{
if(playerInDeathmatch[i]==true)
{
deathmatchEndTimer=0;
GivePlayerCMN1Status(i);
cmn1Mission[i]=MISSION_DEATHMATCH;
SetPlayerToLastCoors(i);
format(string256,256,"Deathmatch: Битката приключи, победител е %s, той спечели %d",pname[i],cmn1Money);
SendClientMessageToAll(COLOR_DEATHMATCH,string256);
format(string256,256,"[SUSPECT]{0040FF} Ти си заподозрян в престъпление: Убийство, ниво на издирване: %d",PlayerInfo[i][pWanted]);
SendClientMessage(i,0xFF0000FF,string256);
format(string256,256,"CMN1: %s е заподозрян в убийства, убий го и ще получиш CMN1 Kill.",pname[i]);
SendClientMessageToAll(0xF97804FF,string256);
SendClientMessage(i,0xF97804FF,"CMN1: Трябва да оцелееш 5 минути за да не си преследван повече.");
if(missionActive==MISSION_DEATHMATCH)
{
missionActive=MISSION_NONE;
}
}
}
}
}
}
}

stock GivePlayerCMN1Status(playerid)
{
cmn1Money =randomex(10000, 50000);
GivePlayerCash(playerid,cmn1Money);
GivePlayerWantedLevel(playerid,1);
cmn1[playerid]=1;
PlayerInfo[playerid][pCmn1Timer]=60*5;
cmn1PlayerColorChange[playerid]=2;
}

public OnPlayerDisconnect(playerid, reason)
{
if(IsPlayerConnected(playerid))
{
//new houseSwitchSender[MAX_PLAYERS]=-1;
//new houseSwitchReceiver[MAX_PLAYERS]=-1;
ExitWithMoneyBox(playerid);
ExitWithCMN1(playerid);
if(playerInStreetRace[playerid]==true)
{
LeaveStreetRace(playerid);
}
if(houseSellSender[playerid]!=-1)
{
new stringSender[256];
new sendedHouseInviteID=houseSellSender[playerid];
houseSellReceiver[sendedHouseInviteID]=-1;
houseSelling[sendedHouseInviteID]=false;
format(stringSender,256,"%s излезе от сървъра и поканата му за продажба на къща отпадна",pname[playerid]);
SendClientMessage(sendedHouseInviteID,0x00FF40FF,stringSender);
}
if(houseSellReceiver[playerid]!=-1)
{
new stringReceiver[256];
new receivedHouseInviteID=houseSellReceiver[playerid];
houseSellSender[receivedHouseInviteID]=-1;
houseSelling[receivedHouseInviteID]=false;
format(stringReceiver,256,"%s излезе от сървъра и поканата ти за продажба на къща отпадна",pname[playerid]);
SendClientMessage(receivedHouseInviteID,0x00FF40FF,stringReceiver);
}
if(houseSwitchSender[playerid]!=-1)
{
new stringSender[256];
new sendedHouseInviteID=houseSwitchSender[playerid];
houseSwitchReceiver[sendedHouseInviteID]=-1;
houseSwitching[sendedHouseInviteID]=false;
format(stringSender,256,"%s излезе от сървъра и поканата му за размяна на къщи отпадна",pname[playerid]);
SendClientMessage(sendedHouseInviteID,0x00FF40FF,stringSender);
}
if(houseSwitchReceiver[playerid]!=-1)
{
new stringReceiver[256];
new receivedHouseInviteID=houseSwitchReceiver[playerid];
houseSwitchSender[receivedHouseInviteID]=-1;
houseSwitching[receivedHouseInviteID]=false;
format(stringReceiver,256,"%s излезе от сървъра и поканата ти за размяна на къщи отпадна",pname[playerid]);
SendClientMessage(receivedHouseInviteID,0x00FF40FF,stringReceiver);
}
if(bizSwitchSender[playerid]!=-1)
{
new stringSender[256];
new sendedBizInviteID=bizSwitchSender[playerid];
bizSwitchReceiver[sendedBizInviteID]=-1;
bizSwitching[sendedBizInviteID]=false;
format(stringSender,256,"%s излезе от сървъра и поканата му за размяна на бизнеси отпадна",pname[playerid]);
SendClientMessage(sendedBizInviteID,0x00CCCCFF,stringSender);
}
if(bizSwitchReceiver[playerid]!=-1)
{
new stringReceiver[256];
new receivedBizInviteID=bizSwitchReceiver[playerid];
bizSwitchSender[receivedBizInviteID]=-1;
bizSwitching[receivedBizInviteID]=false;
format(stringReceiver,256,"%s излезе от сървъра и поканата ти за размяна на бизнеси отпадна",pname[playerid]);
SendClientMessage(receivedBizInviteID,0x00CCCCFF,stringReceiver);
}
if(vehLocker[playerid]!=-1)
{
for(new i=0; i < MAX_PLAYERS; i++)
{
SetVehicleParamsForPlayer(vehLocker[playerid],i,0,0);
}
}
else
vehLocker[playerid]=-1;
new accountfiles[115];
format(accountfiles, 115, "%s.ini", pname[playerid]);
//saveaccs - location - open
SavePlayerStats(playerid);
//saveaccs - location - close
format(adminprefix[playerid],35,"");
format(adminprefix[playerid],35,"");
format(viptextformat[playerid],35,"");
format(stringvehicle[playerid],115,"");
new stringmoneybox[256];
if(playerInDeathmatch[playerid]==true)
{
LeaveDeathmatch(playerid);
}
if(PlayerInfo[playerid][pRobberLead]==1)
{
PlayerInfo[playerid][pRobber]=0;
PlayerInfo[playerid][pRobberLead]=0;
GameTextForPlayer(playerid, "   ", 1000, 3);
for(new i; i<MAX_PLAYERS; i++)
{
if(PlayerInfo[i][pRobber]==1)
{
GameTextForPlayer(i, "   ", 1000, 3);
PlayerInfo[i][pRobber]=0;
}
}
if(inevent[playerid]==1)
{
eventmembers-=1;
}
robberyMembers=0;
robCollectedMoney=0;
startedrob=0;
robberyTimerToCollect=0;
robberyPlace=0;
robberyToStopTimer=0;
SendClientMessageToAll(0xFF8200FF,"Robbery: Обирът се спира автоматично, защото лидерът излезе от сървъра !");
}
if(GetPlayerVehicleID(playerid)>-1)
{
drive[GetPlayerVehicleID(playerid)]=0;
}
if(playerInDuel[playerid]==1)
{
RestartPlayerColor(duelprotivnik[playerid]);
new stringduel[256];
GivePlayerCash(playerid,-duelzalog[playerid]);
GivePlayerCash(duelprotivnik[playerid],duelzalog[playerid]);
PlayerInfo[duelprotivnik[playerid]][pDuelCountTimer]=0;
PlayerInfo[duelprotivnik[playerid]][pDuelCountTimer2]=0;
PlayerInfo[duelprotivnik[playerid]][pDuelCountTimer3]=0;
PlayerInfo[duelprotivnik[playerid]][pDuelCountTimer4]=0;
format(stringduel, 256, "Duel: Ти победи служебно, защото %s излезе от сървъра и получаваш $%d от залога", pname[playerid],duelzalog[playerid]);
SendClientMessage(duelprotivnik[playerid], 0xFFE400FF, stringduel);
duelzalog[duelprotivnik[playerid]]=0;
SetPlayerPos(duelprotivnik[duelprotivnik[playerid]],prediduelX[duelprotivnik[playerid]],prediduelY[duelprotivnik[playerid]],prediduelZ[duelprotivnik[playerid]]);
SetPlayerHealth(duelprotivnik[playerid],prediduelhealth[duelprotivnik[playerid]]);
SetPlayerArmour(duelprotivnik[playerid],prediduelarmour[duelprotivnik[playerid]]);
SetPlayerInterior(duelprotivnik[playerid],prediduelinterior[duelprotivnik[playerid]]);
SetPlayerVirtualWorld(duelprotivnik[playerid],prediduelvw[duelprotivnik[playerid]]);
duelsend[duelprotivnik[playerid]]=-1;
duelsender[duelprotivnik[playerid]]=-1;
duelprotivnik[duelprotivnik[playerid]]=-1;
}
if(duelsend[playerid]>-1)
{
new string[256];
format(string, 256, "Duel: %s излезе от сървъра и поканата за дуел е отменена", pname[duelsender[duelsend[playerid]]]);
SendClientMessage(duelsender[playerid], 0xFFE400FF,string);
duelsend[playerid]=-1;
playerInDuel[duelsend[playerid]]=0;
duelsender[duelsend[playerid]]=-1;
}
if(duelsender[playerid]>-1)
{
new string[256];
format(string, 256, "Duel: %s излезе от сървъра и поканата за дуел е отменена", pname[playerid]);
SendClientMessage(duelsender[playerid], 0xFFE400FF,string);
duelsender[playerid]=-1;
playerInDuel[duelsender[playerid]]=0;
duelsend[duelsender[playerid]]=-1;
}
if(hitmanby[playerid]!=-1)
{
format(string256, 256, "Hitman: %s излезе от сървъра и цената за главата му е отменена", pname[playerid]);
SendClientMessageToAll(0xA4A400FF, string256);
GivePlayerCash(hitmanby[playerid],hitmanprice[playerid]);
hitmaner[hitmanby[playerid]]=-1;
}
if(hitmaner[playerid]!=-1)
{
format(string256, 256, "Hitman: %s излезе от сървъра и цената за главата на %s е отменена", pname[playerid],pname[hitmaner[playerid]]);
SendClientMessageToAll(0xA4A400FF, string256);
GivePlayerCash(hitmaner[playerid],hitmanprice[para1[playerid]]);
hitmanby[hitmaner[playerid]]=-1;
}
if(ingmx==0)
{
if(hideexitserver[playerid]==0){ new noerrorstring2[115]; format(noerrorstring2, 115, "%s {FFFFFF}излезе от сървъра !", pname[playerid]); SendClientMessageToAll(0xFF1400FF, noerrorstring2); }
}
//resttimers - location - openp
PlayerInfo[playerid][pFuel]=0;
PlayerInfo[playerid][pKick]=0;
PlayerInfo[playerid][pFixT]=0;
PlayerInfo[playerid][pHealT]=0;
PlayerInfo[playerid][pVGuns]=0;
PlayerInfo[playerid][pRefuel20LitTimer]=0;
PlayerInfo[playerid][pInfiniteNosTimer]=0;
PlayerInfo[playerid][pIntro]=0;
PlayerInfo[playerid][pIntro1]=0;
PlayerInfo[playerid][pIntro2]=0;
PlayerInfo[playerid][pIntro3]=0;
PlayerInfo[playerid][pIntro4]=0;
PlayerInfo[playerid][pIntro5]=0;
PlayerInfo[playerid][pIntro6]=0;
//resttimers - location - close
//MAX_PLAYERS-=1;
if(PlayerInfo[playerid][pADuty]==1)
{
UpdateDynamic3DTextLabelText(PlayerLabel[playerid], 0x800000FF, " ");
}
if(PlayerInfo[playerid][pVIPLabel]==1)
{
UpdateDynamic3DTextLabelText(PlayerLabel[playerid], 0x800000FF, " ");
}
}
return 1;
}
public OnPlayerSpawn(playerid)
{
spawned[playerid]=1;
towTruckSkin[playerid]=false;
SetTimerEx("OnPlayerUpdate", 62, true, "i", playerid);
SetPlayerVirtualWorld(playerid,0);
if(PlayerInfo[playerid][pStyle]==0)
{
SetPlayerFightingStyle(playerid, FIGHT_STYLE_NORMAL);
}
if(PlayerInfo[playerid][pStyle]==1)
{
SetPlayerFightingStyle(playerid, FIGHT_STYLE_GRABKICK);
}
if(PlayerInfo[playerid][pStyle]==2)
{
SetPlayerFightingStyle(playerid, FIGHT_STYLE_BOXING);
}
if(PlayerInfo[playerid][pStyle]==3)
{
SetPlayerFightingStyle(playerid, FIGHT_STYLE_KUNGFU);
}
if(PlayerInfo[playerid][pStyle]==4)
{
SetPlayerFightingStyle(playerid, FIGHT_STYLE_KNEEHEAD);
}
if(PlayerInfo[playerid][pStyle]==5)
{
SetPlayerFightingStyle(playerid, FIGHT_STYLE_ELBOW);
}
if(PlayerInfo[playerid][pTeam]==FACTION_VIP)
{
SetPVarInt(playerid, "color", 18643);
}
if(PlayerInfo[playerid][pTeam]==FACTION_GROVE)
{
SetPVarInt(playerid, "color", 19083);
}
if(PlayerInfo[playerid][pTeam]==13 || PlayerInfo[playerid][pTeam]==FACTION_LVPD)
{
SetPVarInt(playerid, "color", 19080);
}
if(PlayerInfo[playerid][pTeam]==FACTION_RIFA)
{
SetPVarInt(playerid, "color", 19080);
}
if(PlayerInfo[playerid][pTeam]==FACTION_DELTAFORCE)
{
SetPVarInt(playerid, "color", 19084);
}
if(PlayerInfo[playerid][pLaser]==1)
{
if(objectright[playerid]==0)
{
objectright[playerid]=1;
}
}
if(PlayerInfo[playerid][pWeaponS]==1)
{
GivePlayerWeapon(playerid, 23, 30);
GivePlayerWeapon(playerid, 25, 50);
GivePlayerWeapon(playerid, 29, 100);
GivePlayerWeapon(playerid, 30, 60);
}
if(PlayerInfo[playerid][pWeaponS]==2)
{
GivePlayerWeapon(playerid, 23, 50);
GivePlayerWeapon(playerid, 25, 70);
GivePlayerWeapon(playerid, 29, 200);
GivePlayerWeapon(playerid, 30, 100);
}
if(PlayerInfo[playerid][pWeaponS]==3)
{
GivePlayerWeapon(playerid, 23, 80);
GivePlayerWeapon(playerid, 25, 80);
GivePlayerWeapon(playerid, 29, 250);
GivePlayerWeapon(playerid, 30, 150);
}
if(PlayerInfo[playerid][pWeaponS]==4)
{
GivePlayerWeapon(playerid, 23, 100);
GivePlayerWeapon(playerid, 25, 100);
GivePlayerWeapon(playerid, 29, 300);
GivePlayerWeapon(playerid, 30, 200);
}
if(PlayerInfo[playerid][pWeaponS]==5)
{
GivePlayerWeapon(playerid, 22, 80);
GivePlayerWeapon(playerid, 27, 50);
GivePlayerWeapon(playerid, 28, 200);
GivePlayerWeapon(playerid, 31, 70);
GivePlayerWeapon(playerid, 5, 1);
}
if(PlayerInfo[playerid][pWeaponS]==6)
{
GivePlayerWeapon(playerid, 22, 80);
GivePlayerWeapon(playerid, 27, 70);
GivePlayerWeapon(playerid, 28, 300);
GivePlayerWeapon(playerid, 31, 100);
GivePlayerWeapon(playerid, 33, 20);
GivePlayerWeapon(playerid, 5, 1);
}
if(PlayerInfo[playerid][pWeaponS]==7)
{
GivePlayerWeapon(playerid, 22, 100);
GivePlayerWeapon(playerid, 27, 100);
GivePlayerWeapon(playerid, 28, 500);
GivePlayerWeapon(playerid, 31, 200);
GivePlayerWeapon(playerid, 33, 40);
GivePlayerWeapon(playerid, 5, 1);
}
if(PlayerInfo[playerid][pWeaponS]==8)
{
GivePlayerWeapon(playerid, 24, 30);
GivePlayerWeapon(playerid, 26, 50);
GivePlayerWeapon(playerid, 32, 200);
GivePlayerWeapon(playerid, 31, 100);
GivePlayerWeapon(playerid, 34, 30);
GivePlayerWeapon(playerid, 5, 1);
}
if(PlayerInfo[playerid][pWeaponS]==9)
{
GivePlayerWeapon(playerid, 24, 50);
GivePlayerWeapon(playerid, 26, 80);
GivePlayerWeapon(playerid, 32, 300);
GivePlayerWeapon(playerid, 31, 200);
GivePlayerWeapon(playerid, 34, 40);
GivePlayerWeapon(playerid, 5, 1);
}
if(PlayerInfo[playerid][pWeaponS]==10)
{
GivePlayerWeapon(playerid, 24, 100);
GivePlayerWeapon(playerid, 26, 100);
GivePlayerWeapon(playerid, 32, 500);
GivePlayerWeapon(playerid, 31, 300);
GivePlayerWeapon(playerid, 34, 50);
GivePlayerWeapon(playerid, 4, 1);
}
if(attachedviptext[playerid]==1)
{
}
if(PlayerInfo[playerid][pVip]==5 || freevip==1)
{
if(PlayerInfo[playerid][pChantichki]==0)
GivePlayerWeapon(playerid, 16, 5);
else
GivePlayerWeapon(playerid, 39, 5);
}
if(PlayerInfo[playerid][pVip]==6 || freevip==1)
{
if(PlayerInfo[playerid][pChantichki]==0)
GivePlayerWeapon(playerid, 16, 5);
else
GivePlayerWeapon(playerid, 39, 5);
}
if(PlayerInfo[playerid][pVip] >= 4 || freevip==1)
{
SetPlayerArmour(playerid,100);
}
if(requestspawn[playerid]==1)
{
GameTextForPlayer(playerid, "     ",1000, 3);
}
if(firstspawn[playerid]==1)
{
requestspawn2[playerid]=1;
nospawnselect[playerid]=1;
//ForceClassSelection(playerid);
StopAudioStreamForPlayer(playerid);
firstspawn[playerid]=0;
GameTextForPlayer(playerid, "     ",1000, 3);
if(month==12)
{
santaHat[playerid]=true;
santaHatObject[playerid] = SetPlayerAttachedObject(playerid, 9, 19065, 2, 0.120000, 0.040000, -0.003500, 0, 100, 100, 1.4, 1.4,1.4);
SendClientMessage(playerid,0xFFFFFFFF,"CHRISTMAS: Ако искаш да премахнеш коледната шапка от главата ти, напиши /removehat");
SendClientMessage(playerid,0xFFFFFFFF,"CHRISTMAS: Ако искаш пак да си я сложиш, напиши /santahat");
}
}
if(PlayerInfo[playerid][pSpawnO]==1)
{
SetPlayerVirtualWorld(playerid,0);
SetPlayerInterior(playerid,0);
new spawn=random(10);
if(spawn==0)
{
SetPlayerPos(playerid,2178.9063,1285.6537,10.8203);
SetPlayerFacingAngle(playerid,270.3970);
}
if(spawn==1)
{
SetPlayerPos(playerid,1027.0188,-1344.9539,13.7266);
SetPlayerFacingAngle(playerid,1.2900);
}
if(spawn==2)
{
SetPlayerPos(playerid,2216.9980,-1170.4368,25.7266);
SetPlayerFacingAngle(playerid,359.7421);
}
if(spawn==3)
{
SetPlayerPos(playerid,2097.3970,2490.7754,14.8390);
SetPlayerFacingAngle(playerid,179.1149);
}
if(spawn==4)
{
SetPlayerPos(playerid,386.7134,-2028.5282,7.8359);
SetPlayerFacingAngle(playerid,89.3663);
}
if(spawn==5)
{
SetPlayerPos(playerid,1676.4705,-1634.6233,14.2266);
SetPlayerFacingAngle(playerid,269.8728);
}
if(spawn==6)
{
SetPlayerPos(playerid,2225.3550,1838.6611,10.8203);
SetPlayerFacingAngle(playerid,90.2421);
}
if(spawn==7)
{
SetPlayerPos(playerid,2551.8250,2244.6887,10.8203);
SetPlayerFacingAngle(playerid,167.6396);
}
if(spawn==8)
{
SetPlayerPos(playerid,1742.8735,-1863.2289,13.5753);
SetPlayerFacingAngle(playerid,359.7475);
}
if(spawn==9)
{
SetPlayerPos(playerid,1688.3342,1447.8641,10.7678);
SetPlayerFacingAngle(playerid,269.8827);
}
if(spawn==10)
{
SetPlayerPos(playerid,2216.9980,-1170.4368,25.7266);
SetPlayerFacingAngle(playerid,359.7421);
}
SetCameraBehindPlayer(playerid);
}
if(PlayerInfo[playerid][pSpawnO]==3)
{
SetPlayerInterior(playerid,0); SetPlayerVirtualWorld(playerid,0);
SetPlayerPos(playerid,280.9982,1410.2089,10.4179);
}
if(PlayerInfo[playerid][pSpawnO]==2)
{
if(PlayerInfo[playerid][pTeam]==FACTION_VIP)
{
SetPlayerVirtualWorld(playerid,0);
SetPlayerInterior(playerid,0);
new spawn=random(5);
if(spawn==0)
{
SetPlayerPos(playerid,1204.3077,-2066.5664,84.7134);
SetPlayerFacingAngle(playerid,2.7804);
}
if(spawn==1)
{
SetPlayerPos(playerid,1183.0295,-2008.9454,85.1735);
SetPlayerFacingAngle(playerid,182.6776);
}
if(spawn==2)
{
SetPlayerPos(playerid,1242.3442,-2003.8608,76.0035);
SetPlayerFacingAngle(playerid,179.7874);
}
if(spawn==3)
{
SetPlayerPos(playerid,1281.2172,-2002.7297,74.8102);
SetPlayerFacingAngle(playerid,174.3698);
}
if(spawn==4)
{
SetPlayerPos(playerid,1281.2172,-2002.7297,74.8102);
SetPlayerFacingAngle(playerid,174.3698);
}
if(spawn==5)
{
SetPlayerPos(playerid,1281.2172,-2002.7297,74.8102);
SetPlayerFacingAngle(playerid,179.7682);
}
SetCameraBehindPlayer(playerid);
}
if(PlayerInfo[playerid][pTeam]==FACTION_BALLAS)
{
new spawn=random(2);
if(spawn==0)
{
SetPlayerPos(playerid,2146.5444,-1432.6128,25.5391);
SetPlayerFacingAngle(playerid,90.9074);
}
if(spawn==1)
{
SetPlayerPos(playerid,2147.8428,-1489.3254,26.6198);
SetPlayerFacingAngle(playerid,88.7140);
}
if(spawn==2)
{
SetPlayerPos(playerid,2146.5444,-1432.6128,25.5391);
SetPlayerFacingAngle(playerid,90.9074);
}
SetPlayerVirtualWorld(playerid,0);
SetPlayerInterior(playerid,0);
SetCameraBehindPlayer(playerid);
}
if(PlayerInfo[playerid][pTeam]==FACTION_TRIADS)
{
new spawn=random(2);
if(spawn==0)
{
SetPlayerPos(playerid,1958.0376,951.1666,10.8203);
SetPlayerFacingAngle(playerid,180.1847);
}
if(spawn==1)
{
SetPlayerPos(playerid,1969.9386,942.0911,10.8126);
SetPlayerFacingAngle(playerid,176.1113);
}
if(spawn==2)
{
SetPlayerPos(playerid,1928.6168,945.8361,10.8127);
SetPlayerFacingAngle(playerid,85.2205);
}
SetPlayerVirtualWorld(playerid,0);
SetPlayerInterior(playerid,0);
SetCameraBehindPlayer(playerid);
}
if(PlayerInfo[playerid][pTeam]==FACTION_AZTECAS)
{
new spawn=random(2);
if(spawn==0)
{
SetPlayerPos(playerid,743.6805,-498.7406,18.0129);
SetPlayerFacingAngle(playerid,276.3322);
}
if(spawn==1)
{
SetPlayerPos(playerid,745.5961,-511.2993,18.0129);
SetPlayerFacingAngle(playerid,176.9813);
}
if(spawn==2)
{
SetPlayerPos(playerid,739.9612,-554.7196,18.0129);
SetPlayerFacingAngle(playerid,5.9559);
}
SetPlayerVirtualWorld(playerid,0);
SetPlayerInterior(playerid,0);
SetCameraBehindPlayer(playerid);
}
if(PlayerInfo[playerid][pTeam]==FACTION_CRIPZ)
{
new spawn=random(2);
if(spawn==0)
{
SetPlayerPos(playerid,297.6942,-1155.6418,80.9099);
SetPlayerFacingAngle(playerid,125.8933);
}
if(spawn==1)
{
SetPlayerPos(playerid,320.8712,-1170.3861,80.9141);
SetPlayerFacingAngle(playerid,88.6063);
}
if(spawn==2)
{
SetPlayerPos(playerid,274.3722,-1167.7781,80.8616);
SetPlayerFacingAngle(playerid,276.8981);
}
SetPlayerVirtualWorld(playerid,0);
SetPlayerInterior(playerid,0);
SetCameraBehindPlayer(playerid);
}
if(PlayerInfo[playerid][pTeam]==FACTION_BGMAFIA)
{
SetPlayerArmour(playerid,100);
SetPlayerPos(playerid,1267.1464,-777.3041,1091.9063);
SetPlayerVirtualWorld(playerid,1);
SetPlayerInterior(playerid,5);
SetCameraBehindPlayer(playerid);
}
if(PlayerInfo[playerid][pTeam]==FACTION_RIFA)
{
SetPlayerPos(playerid,2449.8516,-1688.9565,1013.5078);
SetPlayerFacingAngle(playerid,182.1234);
SetPlayerVirtualWorld(playerid,1);
SetPlayerInterior(playerid,2);
SetCameraBehindPlayer(playerid);
}
if(PlayerInfo[playerid][pTeam]==FACTION_SOLDIER)
{
SetPlayerArmour(playerid,100);
SetPlayerPos(playerid,2331.0933,-1137.6527,1054.3047);
SetPlayerVirtualWorld(playerid,1);
SetPlayerInterior(playerid,12);
SetCameraBehindPlayer(playerid);
}
if(PlayerInfo[playerid][pTeam]==FACTION_SOA)
{
new spawn=random(2);
if(spawn==0)
{
SetPlayerPos(playerid,2615.6545,2313.8264,10.8203);
SetPlayerFacingAngle(playerid,253.6507);
}
if(spawn==1)
{
SetPlayerPos(playerid,2622.7986,2335.3406,10.8203);
SetPlayerFacingAngle(playerid,185.9700);
}
if(spawn==2)
{
SetPlayerPos(playerid,2655.8208,2347.8174,10.8203);
SetPlayerFacingAngle(playerid,149.9362);
}
SetPlayerVirtualWorld(playerid,0);
SetPlayerInterior(playerid,0);
SetCameraBehindPlayer(playerid);
}
if(PlayerInfo[playerid][pTeam]==FACTION_NANG)
{
new spawn=random(2);
if(spawn==0)
{
SetPlayerPos(playerid,2621.7190,1825.1489,11.0234);
SetPlayerFacingAngle(playerid,91.7867);
}
if(spawn==1)
{
SetPlayerPos(playerid,2635.7065,1797.4092,11.0234);
SetPlayerFacingAngle(playerid,87.7133);
}
if(spawn==2)
{
SetPlayerPos(playerid,2599.0176,1812.4899,10.9766);
SetPlayerFacingAngle(playerid,279.7651);
}
SetPlayerVirtualWorld(playerid,0);
SetPlayerInterior(playerid,0);
SetCameraBehindPlayer(playerid);
}
if(PlayerInfo[playerid][pTeam]==FACTION_BOUNTY)
{
SetPlayerArmour(playerid,100);
new spawn=random(2);
if(spawn==0)
{
SetPlayerPos(playerid,681.9958,-1276.5922,13.5755);
SetPlayerFacingAngle(playerid,88.3163);
}
if(spawn==1)
{
SetPlayerPos(playerid,673.2634,-1292.6874,13.6328);
SetPlayerFacingAngle(playerid,82.0496);
}
if(spawn==2)
{
SetPlayerPos(playerid,658.6101,-1251.8407,13.7522);
SetPlayerFacingAngle(playerid,190.7540);
}
SetPlayerVirtualWorld(playerid,0);
SetPlayerInterior(playerid,0);
SetCameraBehindPlayer(playerid);
}
if(PlayerInfo[playerid][pTeam]==FACTION_LSPD)
{
new spawn=random(2);
if(spawn==0)
{
SetPlayerPos(playerid,1580.2686,-1634.2051,13.5625);
SetPlayerFacingAngle(playerid,1.1300);
}
if(spawn==1)
{
SetPlayerPos(playerid,1546.5138,-1619.8557,13.5546);
SetPlayerFacingAngle(playerid,89.8041);
}
if(spawn==2)
{
SetPlayerPos(playerid,1542.3820,-1682.4557,13.5544);
SetPlayerFacingAngle(playerid,92.3108);
}
SetPlayerVirtualWorld(playerid,0);
SetPlayerInterior(playerid,0);
SetCameraBehindPlayer(playerid);
}
if(PlayerInfo[playerid][pTeam]==FACTION_DELTAFORCE)
{
new spawn=random(2);
if(spawn==0)
{
SetPlayerPos(playerid,846.8574,-2074.4707,28.8883);
}
if(spawn==1)
{
SetPlayerPos(playerid,825.6746,-2075.2439,28.8883);
}
if(spawn==2)
{
SetPlayerPos(playerid,842.2432,-2074.0789,20.4884);
}
SetPlayerArmour(playerid,100);
SetPlayerVirtualWorld(playerid,0);
SetPlayerInterior(playerid,0);
SetCameraBehindPlayer(playerid);
}
if(PlayerInfo[playerid][pTeam]==FACTION_LVPD)
{
new spawn=random(2);
if(spawn==0)
{
SetPlayerPos(playerid,2250.5913,2489.1421,10.9908);
SetPlayerFacingAngle(playerid,91.9914);
}
if(spawn==1)
{
SetPlayerPos(playerid,2250.5913,2489.1421,10.9908);
SetPlayerFacingAngle(playerid,91.9914);
}
if(spawn==2)
{
SetPlayerPos(playerid,2290.5657,2471.1653,10.8203);
SetPlayerFacingAngle(playerid,88.8813);
}
SetPlayerVirtualWorld(playerid,0);
SetPlayerInterior(playerid,0);
SetCameraBehindPlayer(playerid);
}
if(PlayerInfo[playerid][pTeam]==FACTION_ITALIAN)
{
new spawn=random(2);
if(spawn==0)
{
SetPlayerPos(playerid,-688.8886,938.8144,13.6328);
}
if(spawn==1)
{
SetPlayerPos(playerid,-688.0349,926.8151,13.6293);
}
if(spawn==2)
{
SetPlayerPos(playerid,-708.7231,950.2300,12.4724);
}
SetPlayerVirtualWorld(playerid,0);
SetPlayerInterior(playerid,0);
SetCameraBehindPlayer(playerid);
}
if(PlayerInfo[playerid][pTeam]==FACTION_VAGOS)
{
SetPlayerArmour(playerid,100);
new spawn=random(2);
if(spawn==0)
{
SetPlayerPos(playerid,1881.9993,2339.8398,10.9799);
SetPlayerFacingAngle(playerid,264.6255);
}
if(spawn==1)
{
SetPlayerPos(playerid,1910.1119,2349.9846,10.9799);
SetPlayerFacingAngle(playerid,176.9813);
}
if(spawn==2)
{
SetPlayerPos(playerid,1883.3551,2295.4844,10.9799);
SetPlayerFacingAngle(playerid,267.4223);
}
SetPlayerVirtualWorld(playerid,0);
SetPlayerInterior(playerid,0);
SetCameraBehindPlayer(playerid);
}
if(PlayerInfo[playerid][pTeam]==FACTION_MS13)
{
new spawn=random(2);
if(spawn==0)
{
SetPlayerPos(playerid,-37.7534,1079.9067,20.0710);
}
if(spawn==1)
{
SetPlayerPos(playerid,-22.8780,1063.8611,19.7422);
}
if(spawn==2)
{
SetPlayerPos(playerid,-7.8116,1075.0288,19.7422);
}
SetPlayerVirtualWorld(playerid,0);
SetPlayerInterior(playerid,0);
SetCameraBehindPlayer(playerid);
}
if(PlayerInfo[playerid][pTeam]==FACTION_SYNDICATE)
{
SetPlayerArmour(playerid,100);
new spawn=random(2);
if(spawn==0)
{
SetPlayerPos(playerid,1757.1570,2766.8816,10.8359);
}
if(spawn==1)
{
SetPlayerPos(playerid,1749.6184,2797.0723,10.8359);
}
if(spawn==2)
{
SetPlayerPos(playerid,1783.9874,2787.4541,10.8359);
}
SetPlayerVirtualWorld(playerid,0);
SetPlayerInterior(playerid,0);
SetCameraBehindPlayer(playerid);
}
if(PlayerInfo[playerid][pTeam]==FACTION_BLOODMAFIA)
{
new spawn=random(2);
if(spawn==0)
{
SetPlayerPos(playerid,1100.7185,-1220.8761,17.8047);
}
if(spawn==1)
{
SetPlayerPos(playerid,1117.1194,-1237.0652,15.9510);
}
if(spawn==2)
{
SetPlayerPos(playerid,1122.6483,-1247.2380,25.3020);
}
SetPlayerVirtualWorld(playerid,0);
SetPlayerInterior(playerid,0);
SetCameraBehindPlayer(playerid);
}
if(PlayerInfo[playerid][pTeam]==FACTION_343)
{
new spawn=random(2);
if(spawn==0)
{
SetPlayerPos(playerid,-799.6035,1569.4238,27.1172);
}
if(spawn==1)
{
SetPlayerPos(playerid,-814.1357,1542.5577,27.1172);
}
if(spawn==2)
{
SetPlayerPos(playerid,-800.3713,1531.4137,27.1172);
}
SetPlayerVirtualWorld(playerid,0);
SetPlayerInterior(playerid,0);
SetCameraBehindPlayer(playerid);
}
if(PlayerInfo[playerid][pTeam]==FACTION_YAKUZA)
{
new spawn=random(2);
if(spawn==0)
{
SetPlayerPos(playerid,2584.7444,2787.1177,10.8203);
}
if(spawn==1)
{
SetPlayerPos(playerid,2581.6055,2747.6665,10.8203);
}
if(spawn==2)
{
SetPlayerPos(playerid,2531.0698,2794.3374,10.8203);
}
SetPlayerVirtualWorld(playerid,0);
SetPlayerInterior(playerid,0);
SetCameraBehindPlayer(playerid);
}
if(PlayerInfo[playerid][pTeam]==FACTION_GROVE)
{
new spawn=random(5);
if(spawn==0)
{
SetPlayerPos(playerid,2496.0024,-1709.4805,1014.7422);
SetPlayerFacingAngle(playerid,2.1533);
}
if(spawn==1)
{
SetPlayerPos(playerid,2496.0024,-1709.4805,1014.7422);
SetPlayerFacingAngle(playerid,2.1533);
}
if(spawn==2)
{
SetPlayerPos(playerid,2496.0024,-1709.4805,1014.7422);
SetPlayerFacingAngle(playerid,2.1533);
}
if(spawn==3)
{
SetPlayerPos(playerid,2492.2722,-1703.3955,1018.3438);
SetPlayerFacingAngle(playerid,179.7682);
}
if(spawn==4)
{
SetPlayerPos(playerid,2492.2722,-1703.3955,1018.3438);
SetPlayerFacingAngle(playerid,179.7682);
}
if(spawn==5)
{
SetPlayerPos(playerid,2496.0024,-1709.4805,1014.7422);
SetPlayerFacingAngle(playerid,2.1533);
}
SetPlayerVirtualWorld(playerid,1);
SetPlayerInterior(playerid,3);
SetCameraBehindPlayer(playerid);
}
}
RestartPlayerColor(playerid);
RestartVIPLaser(playerid);
RestartPlayerSkin(playerid);
if(adutyskinchanged[playerid]==0)
{
spawnselectedskin2[playerid]=GetPlayerSkin(playerid);
spawnselectedskin[playerid]=GetPlayerSkin(playerid);
}
else
{
spawnselectedskin2[playerid]=GetPlayerSkin(playerid);
spawnselectedskin[playerid]=PlayerInfo[playerid][pASkin];
}
if(PlayerInfo[playerid][pSpawnO]==4)
{
SetPlayerVirtualWorld(playerid,0); SetPlayerInterior(playerid,0);
SetPlayerPos(playerid,HouseInfo[PlayerInfo[playerid][pHouseO]][hX],HouseInfo[PlayerInfo[playerid][pHouseO]][hY],HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
if(PlayerInfo[playerid][pSpawnO]==5)
{
SetPlayerVirtualWorld(playerid,0); SetPlayerInterior(playerid,0);
SetPlayerPos(playerid,BizInfo[PlayerInfo[playerid][pBizO]][bX],BizInfo[PlayerInfo[playerid][pBizO]][bY],BizInfo[PlayerInfo[playerid][pBizO]][bZ]);
}
if(PlayerInfo[playerid][pADuty]==0)
{
if(PlayerInfo[playerid][pVIPLabel]==1)
{
UpdateDynamic3DTextLabelText(PlayerLabel[playerid], 0x800000FF, " ");
format(VipText3D[playerid],26,"");
PlayerLabel[playerid] = CreateDynamic3DTextLabel(VipText3D[playerid], 0x800000FF, 0.0, 0.0, 0.0, 15.0, playerid, INVALID_VEHICLE_ID, 0, GetPlayerVirtualWorld(playerid), GetPlayerInterior(playerid), -1, 15.0);
}
}
if(PlayerInfo[playerid][pADuty]==1)
{
UpdateDynamic3DTextLabelText(PlayerLabel[playerid], 0x800000FF, " ");
format(VipText3D[playerid],26,"");
PlayerLabel[playerid] = CreateDynamic3DTextLabel(VipText3D[playerid], 0x800000FF, 0.0, 0.0, 0.0, 15.0, playerid, INVALID_VEHICLE_ID, 0, GetPlayerVirtualWorld(playerid), GetPlayerInterior(playerid), -1, 15.0);
PlayerLabel[playerid] = CreateDynamic3DTextLabel("ADMIN ON-DUTY", 0xE60000FF, 0.0, 0.0, 0.0, 15.0, playerid, INVALID_VEHICLE_ID, 0, GetPlayerVirtualWorld(playerid), GetPlayerInterior(playerid), -1, 15.0);
SetPlayerColor(playerid, 0x7BFFFFFF);
adutyskinchanged[playerid]=1;
SendClientMessage(playerid, 0x40BF00FF,"Ти все-още си On-Duty и трябва да помагаш на играчите");
SetPlayerSkin(playerid,PlayerInfo[playerid][pASkin]);
if(godmode[playerid]==1)
{
SetPlayerHealth(playerid, 99999);
SetPlayerArmour(playerid, 99999);
}
ResetPlayerWeapons(playerid);
}
if(PlayerInfo[playerid][pJail]>0)
{
ResetPlayerWeapons(playerid);
SetPlayerVirtualWorld(playerid,1);
SetPlayerInterior(playerid,4);
SetPlayerPos(playerid,299.7077,303.4193,999.1484);
SetPlayerAttachedObject(playerid, 1, 19418, 6, -0.011000, 0.028000, -0.022000, -15.600012, -33.699977,-81.700035, 0.891999, 1.000000, 1.168000);
SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CUFFED);
}
if(PlayerInfo[playerid][pAFK]>0)
{
ResetPlayerWeapons(playerid);
SetPlayerInterior(playerid,15);
SetPlayerColor(playerid, 0xD6F34AFF);
SetPlayerPos(playerid,2215.454833,-1147.475585,1025.796875);
SetPlayerVirtualWorld(playerid, playerid+500);
}
if(playerInDMON[playerid]==1)
{
SetPlayerVirtualWorld(playerid,3233);
SetPlayerColor(playerid,0xFFFF81FF);
ResetPlayerWeapons(playerid);
SetPlayerArmour(playerid,0);
new r = random(sizeof(DmonRandomWeapons));
GivePlayerWeapon(playerid, DmonRandomWeapons[r][0], DmonRandomWeapons[r][1]);
if(dmonArena==1)
{
new spawnpos=randomex(1,5);
if(spawnpos<3)
{
SetPlayerPos(playerid, 1411.2889,1.3799,1000.9237);
}
if(spawnpos>2)
{
SetPlayerPos(playerid, 1360.4244,-39.4643,1007.8828);
}
SetPlayerInterior(playerid,1);
}
if(dmonArena==2)
{
new spawnpos=randomex(1,5);
if(spawnpos<3)
{
SetPlayerPos(playerid, -1426.4996,1054.9972,1038.4913);
}
if(spawnpos>2)
{
SetPlayerPos(playerid, -1473.7843,948.4413,1036.7908);
}
SetPlayerInterior(playerid,15);
}
}
if(hidedf==1)
{
if(PlayerInfo[playerid][pTeam] == 15)
{
SetPlayerColor(playerid, 0xFFFFFF00);
}
}
if(playerInDeathmatch[playerid]==true)
{
DisablePlayerCheckpoint(playerid); DisablePlayerRaceCheckpoint(playerid);
SetPlayerVirtualWorld(playerid,1);
SetPlayerInterior(playerid,0);
SetPlayerHealth(playerid,100);
SetPlayerArmour(playerid,0);
ResetPlayerWeapons(playerid);
GivePlayerWeapon(playerid,deathmatchGun,10000);
if(deathmatchFightArea==1)
{
new randomSpawn=randomex(1,3);
if(randomSpawn==1)
{
SetPlayerPos(playerid,DeathmatchPlace1Spawn1);
}
else if(randomSpawn==2)
{
SetPlayerPos(playerid,DeathmatchPlace1Spawn2);
}
else if(randomSpawn==3)
{
SetPlayerPos(playerid,DeathmatchPlace1Spawn3);
}
}
else if(deathmatchFightArea==2)
{
new randomSpawn=randomex(1,3);
if(randomSpawn==1)
{
SetPlayerPos(playerid,DeathmatchPlace2Spawn1);
}
else if(randomSpawn==2)
{
SetPlayerPos(playerid,DeathmatchPlace2Spawn2);
}
else if(randomSpawn==3)
{
SetPlayerPos(playerid,DeathmatchPlace2Spawn3);
}
}
}
if(PlayerInfo[playerid][pPJail]>0)
{
SetPlayerInterior(playerid,3);
SendClientMessage(playerid, 0x0040FFFF, "Jail: Ти все още си в затвора на полицията!");
SetPlayerPos(playerid,197.9882,175.4870,1003.0234);
}
return 1;
}
public OnPlayerGiveDamage(playerid, damagedid, Float: amount, weaponid, bodypart)
{
}
public OnPlayerDeath(playerid, killerid, reason)
{
if(playerInStreetRace[playerid]==true)
{
LeaveStreetRace(playerid);
}
KilledWithMoneyBox(playerid);
KilledWithCMN1(killerid, playerid);
PlayerInfo[playerid][pDMONKills2]=0;
inevent[playerid]=0;
if(playerInDeathmatch[killerid]==true && playerInDeathmatch[playerid]==true)
{
if(deathmatchStarted==true)
{
deathmatchKills[killerid]+=1;
format(string256,256,"%d",deathmatchKills[killerid]);
GameTextForPlayer(killerid, string256, 1000, 1);
}
}
if(vehLocker[playerid]!=-1)
{
for(new i=0; i < MAX_PLAYERS; i++)
{
SetVehicleParamsForPlayer(vehLocker[playerid],i,0,0);
}
}
else
vehLocker[playerid]=-1;
if(GetPlayerState(killerid) == PLAYER_STATE_DRIVER)
{
SetPlayerHealth(killerid,0);
SendClientMessage(killerid, 0xE60000FF, "SERVER: Ти беше убит за Drive-By убийство!");
}
if(onWork[playerid]==1)
{
onWork[playerid]=0;
DisablePlayerRaceCheckpoint(playerid);
DisablePlayerCheckpoint(playerid);
SendClientMessage(playerid, 0xB35900FF, "Job: Ти умря и загуби твоята работа, но може да се пробваш отново!");
}
if(PlayerInfo[killerid][pTeam]== 14 && PlayerInfo[playerid][pWanted]>0 && killerid!=playerid
|| PlayerInfo[killerid][pTeam]== 13 && PlayerInfo[playerid][pWanted]>0 && killerid!=playerid)
{
CaughtedWanted(playerid, killerid);
}
if(PlayerInfo[playerid][pMoonshineEffectTime]>0 || PlayerInfo[playerid][pWeed]>0 || PlayerInfo[playerid][pCocaine]>0 || PlayerInfo[playerid][pHeroin]>0)
{
PlayerInfo[playerid][pMoonshineEffectTime]=0;
SetPlayerWeather(playerid,1);
}
if(killerid!=INVALID_PLAYER_ID && killerid!=playerid)
{
LoseDrugs(playerid, killerid);
}
if(inevent[playerid]==1 || PlayerInfo[playerid][pOrganisator]==1)
{
if(cbchat[playerid]>0)
{
SendClientMessage(playerid, 0xFF9933FF, "CB Chanel: Твоят CB Chanel беше изключен, защото вече не си в евента!");
}
cbchat[playerid] = 0;
eventmembers-=1;
inevent[playerid]=0;
cbchat[playerid]=0;
if(hidename[playerid]==1)
{
hidename[playerid]=0;
for(new i; i<MAX_PLAYERS; i++)
{
ShowPlayerNameTagForPlayer(i, playerid, 1);
}
}
SetPlayerWeather(playerid,1);
if(hours==0) {SetPlayerTime(playerid,0,0);} if(hours==6){ SetPlayerTime(playerid,0,0);} if(hours==12){ SetPlayerTime(playerid,12,0);} if(hours==18){ SetPlayerTime(playerid,23,0);}
if(hours==1) {SetPlayerTime(playerid,0,0);} if(hours==7){ SetPlayerTime(playerid,6,0);} if(hours==13){ SetPlayerTime(playerid,12,0);} if(hours==19){ SetPlayerTime(playerid,23,0);}
if(hours==2) {SetPlayerTime(playerid,0,0);} if(hours==8){ SetPlayerTime(playerid,6,0);} if(hours==14){ SetPlayerTime(playerid,12,0);} if(hours==20){ SetPlayerTime(playerid,0,0);}
if(hours==3) {SetPlayerTime(playerid,0,0);} if(hours==9){ SetPlayerTime(playerid,12,0);} if(hours==15){ SetPlayerTime(playerid,12,0);} if(hours==21){ SetPlayerTime(playerid,0,0);}
if(hours==4) {SetPlayerTime(playerid,0,0);} if(hours==10){ SetPlayerTime(playerid,12,0);} if(hours==16){ SetPlayerTime(playerid,12,0);} if(hours==22){ SetPlayerTime(playerid,0,0);}
if(hours==5) {SetPlayerTime(playerid,0,0);} if(hours==11) {SetPlayerTime(playerid,12,0);} if(hours==17){ SetPlayerTime(playerid,12,0);} if(hours==23) {SetPlayerTime(playerid,0,0);}
}
new stringmoneybox[256];
SendDeathMessage(killerid, playerid, reason);
PlayerInfo[playerid][pDeaths]+=1; PlayerInfo[killerid][pKills]+=1;
if(playerInDMON[playerid]==1 && playerInDMON[killerid]==1)
{
PlayerInfo[killerid][pDMONKills2]+=1;
PlayerInfo[killerid][pDMONKills]+=1;
TextDrawShowForPlayer(killerid, DMONKillText);
PlayerInfo[killerid][pHideDMONKillText]=3;
if(PlayerInfo[killerid][pDMONKills]>=20)
{
GivePlayerEP(playerid,1);
PlayerInfo[killerid][pDMONKills]=0;
SendClientMessage(killerid,0xFFFF81FF,"DM Area: Ти събра 20 убийства и за награда получаваш + 1 EP!");
}
if(PlayerInfo[killerid][pDMONKills2]>dmTopKills)
{
new stringaz[256];
format(stringaz, 256, "~w~DM AREA~n~~n~~r~NEW RECORD: ~g~%d",PlayerInfo[killerid][pDMONKills2]);
for(new i = 0; i < MAX_PLAYERS; i++)
{
GameTextForPlayer(i, stringaz, 3000, 3);
}
new stringa[256];
if(dmTopKills>20)
{
format(stringa,256,"TOP: %s надмина %s по най-много убийства без умиране в {FF0000}DM Area",pname[killerid],dmTopNickname);
SendClientMessageToAll(0x80FF80FF,stringa);
format(stringa,256,"TOP: Новият резултат е %d убийства без умиране!",PlayerInfo[killerid][pDMONKills2]);
SendClientMessageToAll(0x80FF80FF,stringa);
}
else
{
format(stringa,256,"TOP: %s направи рекорд по най-много убийства без умиране в {FF0000}DM Area",pname[killerid]);
SendClientMessageToAll(0x80FF80FF,stringa);
format(stringa,256,"TOP: Новият резултат е %d убийства без умиране!",PlayerInfo[killerid][pDMONKills2]);
SendClientMessageToAll(0x80FF80FF,stringa);
}
dmTopKills=PlayerInfo[killerid][pDMONKills2];
new dmon[64]; format(dmon, 64, "/Top/dmon.ini");
dini_Set(dmon,"Killer",pname[killerid]);
dini_IntSet(dmon,"Kills",dmTopKills);
format(dmTopNickname,64,"%s",pname[killerid]);
PlayerInfo[killerid][pDMONKills2]=0;
}
new stringtext[115];
TextDrawHideForPlayer(killerid, DMON[killerid]);
format(stringtext, 115, " ~r~Kills: ~w~%d/~g~20",PlayerInfo[killerid][pDMONKills]);
TextDrawSetString(DMON[killerid], stringtext);
TextDrawShowForPlayer(killerid, DMON[killerid]);
new Float:myarmour;
GetPlayerArmour(killerid,myarmour);
SetPlayerArmour(killerid,myarmour+25);
}
if(playerInDuel[playerid]==1)
{
new level=PlayerInfo[duelprotivnik[playerid]][pTeam];
RestartPlayerColor(duelprotivnik[playerid]);
new stringduel[256];
GivePlayerCash(playerid,-duelzalog[playerid]);
GivePlayerCash(duelprotivnik[playerid],duelzalog[playerid]);
GameTextForPlayer(duelprotivnik[playerid], "~g~WINNER", 5000, 3);
format(stringduel, 256, "Ти спечели дуела срещу %s и получаваш $%d от залога.", pname[playerid],duelzalog[playerid]);
SendClientMessage(duelprotivnik[playerid], 0xFFE400FF, stringduel);
format(stringduel, 256, "Ти загуби дуела срещу %s и загуби $%d от залога.", pname[duelprotivnik[playerid]],duelzalog[playerid]);
SendClientMessage(playerid, 0xFFE400FF, stringduel);
duelzalog[playerid]=0;
PlayerInfo[duelprotivnik[playerid]][pDuelCountTimer]=0;
PlayerInfo[duelprotivnik[playerid]][pDuelCountTimer2]=0;
PlayerInfo[duelprotivnik[playerid]][pDuelCountTimer3]=0;
PlayerInfo[duelprotivnik[playerid]][pDuelCountTimer4]=0;
PlayerInfo[playerid][pDuelCountTimer]=0;
PlayerInfo[playerid][pDuelCountTimer2]=0;
PlayerInfo[playerid][pDuelCountTimer3]=0;
PlayerInfo[duelprotivnik[playerid]][pDuelCountTimer4]=0;
duelzalog[duelprotivnik[playerid]]=0;
SetPlayerPos(duelprotivnik[playerid],prediduelX[duelprotivnik[playerid]],prediduelY[duelprotivnik[playerid]],prediduelZ[duelprotivnik[playerid]]);
SetPlayerHealth(duelprotivnik[playerid],prediduelhealth[duelprotivnik[playerid]]);
SetPlayerArmour(duelprotivnik[playerid],prediduelarmour[duelprotivnik[playerid]]);
SetPlayerInterior(duelprotivnik[playerid],prediduelinterior[duelprotivnik[playerid]]);
SetPlayerVirtualWorld(duelprotivnik[playerid],prediduelvw[duelprotivnik[playerid]]);
duelsend[playerid]=-1; duelsend[duelprotivnik[playerid]]=-1;
playerInDuel[duelprotivnik[playerid]]=0;
playerInDuel[playerid]=0;
duelsender[playerid]=-1; duelsender[duelprotivnik[playerid]]=-1;
duelprotivnik[duelprotivnik[playerid]]=-1;
duelprotivnik[playerid]=-1;
}
if(PlayerInfo[playerid][pRobberLead]==1)
{
PlayerInfo[playerid][pRobber]=0;
PlayerInfo[playerid][pRobberLead]=0;
GameTextForPlayer(playerid, "   ", 1000, 3);
for(new i; i<MAX_PLAYERS; i++)
{
if(PlayerInfo[i][pRobber]==1)
{
GameTextForPlayer(i, "   ", 1000, 3);
PlayerInfo[i][pRobber]=0;
}
}
robberyMembers=0;
robCollectedMoney=0;
startedrob=0;
robberyTimerToCollect=0;
robberyPlace=0;
robberyToStopTimer=0;
SendClientMessage(playerid,0xFF8200FF,"Robbery: Ти беше убит и обирът е прекратен !");
SendClientMessageToAll(0xFF8200FF,"Robbery: Обирът се спира автоматично, защото лидерът беше убит !");
}
if(PlayerInfo[playerid][pRobberLead]==0 && PlayerInfo[playerid][pRobber]==1)
{
PlayerInfo[playerid][pRobber]=0;
GameTextForPlayer(playerid, "   ", 1000, 3);
robberyMembers-=1;
SendClientMessage(playerid,0xFF8200FF,"Robbery: Ти беше убит и си отстранен от обира !");
}
if(hitmanby[playerid]!=-1)
{
new hitmanstring[256];
format(hitmanstring, 256, "Hitman: %s уби %s и спечели $%d", pname[killerid],pname[playerid],hitmanprice[playerid]);
SendClientMessageToAll(0xA4A400FF, hitmanstring);
GivePlayerCash(killerid,hitmanprice[playerid]);
hitmaner[hitmanby[playerid]]=-1;
hitmanprice[playerid]=0;
hitmanby[playerid]=-1;
}
if(PlayerInfo[playerid][pVip]==0)
{
GivePlayerCash(playerid,-100);
}
if(PlayerInfo[playerid][pVip]>0 || freevip==1)
{
GivePlayerCash(playerid,-50);
}
if(killerid != playerid)
{
if(PlayerInfo[killerid][pVip]==0)
{
GivePlayerCash(killerid,100);
}
if(PlayerInfo[killerid][pVip] >0 || freevip==1)
{
GivePlayerCash(killerid,200);
}
if(PlayerInfo[killerid][pVip]==6 || freevip==1)
{
GivePlayerCash(killerid,600);
}
}
if(PlayerInfo[playerid][pADuty]==1)
{
UpdateDynamic3DTextLabelText(PlayerLabel[playerid], 0x800000FF, " ");
}
if(PlayerInfo[playerid][pVIPLabel]==1)
{
UpdateDynamic3DTextLabelText(PlayerLabel[playerid], 0x800000FF, " ");
}
return 1;
}
public OnVehicleSpawn(vehicleid)
{
eventveh[vehicleid]=0;
LoadPrivateVehsTune(vehicleid);
return 1;
}
stock LoadPrivateVehsTune(vehicleid)
{
if(vehicleid==PrivateVeh[1][pvID])
{
if(IsValidDynamicObject(PrivateVeh[1][pvObject][0]))
{
DestroyDynamicObject(PrivateVeh[1][pvObject][0]);
}
PrivateVeh[1][pvObject][0] = CreateDynamicObject(18646,0,0,-1000,0,0,0,100);
AttachDynamicObjectToVehicle(PrivateVeh[1][pvObject][0], vehicleid, -0.43060, -0.07840, 0.75010, 0.00000, 0.00000, 0.00000);
}
if(vehicleid == PrivateVeh[2][pvID])
{
ChangeVehiclePaintjob(vehicleid, 2);
AddVehicleComponent(vehicleid,1035);
AddVehicleComponent(vehicleid,1147);
}
else if(vehicleid == PrivateVeh[3][pvID])
{
ChangeVehiclePaintjob(vehicleid, 2);
AddVehicleComponent(vehicleid,1035);
AddVehicleComponent(vehicleid,1147);
}
else if(vehicleid == PrivateVeh[4][pvID])
{
ChangeVehiclePaintjob(vehicleid, 2);
AddVehicleComponent(vehicleid,1035);
AddVehicleComponent(vehicleid,1147);
}
else if(vehicleid == PrivateVeh[7][pvID])
{
if(IsValidDynamicObject(PrivateVeh[7][pvObject][0]))
{
DestroyDynamicObject(PrivateVeh[7][pvObject][0]);
DestroyDynamicObject(PrivateVeh[7][pvObject][1]);
DestroyDynamicObject(PrivateVeh[7][pvObject][2]);
}
PrivateVeh[7][pvObject][0] = CreateDynamicObject(18646,0,0,-1000,0,0,0,100);
AttachDynamicObjectToVehicle(PrivateVeh[7][pvObject][0], vehicleid, -0.43060, -0.07840, 0.75010, 0.00000, 0.00000, 0.00000);
PrivateVeh[7][pvObject][1] = CreateDynamicObject(18694,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
AttachDynamicObjectToVehicle(PrivateVeh[7][pvObject][1], vehicleid, 0.057, -2.234, -1.870, 0.000, 0.000, 175.799);
PrivateVeh[7][pvObject][2] = CreateDynamicObject(1003,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
AttachDynamicObjectToVehicle(PrivateVeh[7][pvObject][2], vehicleid, -0.030, -2.571, 0.100, 0.000, 0.000, 0.000);
}
else if(vehicleid == PrivateVeh[12][pvID])
{
if(IsValidDynamicObject(PrivateVeh[12][pvObject][0]))
{
DestroyDynamicObject(PrivateVeh[12][pvObject][0]);
DestroyDynamicObject(PrivateVeh[12][pvObject][1]);
DestroyDynamicObject(PrivateVeh[12][pvObject][2]);
Delete3DTextLabel(PrivateVeh[12][pv3DText]);
}
PrivateVeh[12][pvObject][0] = CreateDynamicObject(18648,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
AttachDynamicObjectToVehicle(PrivateVeh[12][pvObject][0], vehicleid, -1.040, 0.000, -0.610, 0.000, 0.000, 0.000);
PrivateVeh[12][pvObject][1] = CreateDynamicObject(18648,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
AttachDynamicObjectToVehicle(PrivateVeh[12][pvObject][1], vehicleid, 1.020, 0.000, -0.610, 0.000, 0.000, 0.000);
PrivateVeh[12][pvObject][2] = CreateDynamicObject(1159,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
AttachDynamicObjectToVehicle(PrivateVeh[12][pvObject][2], vehicleid, 1.051, -1.861, -0.250, 0.000, 0.000, 0.000);
PrivateVeh[12][pv3DText] = Create3DTextLabel("Don't Touch", 0x33CCFFFF, 0.0, 0.0, 0.0, 15.0, 0, 1 );
Attach3DTextLabelToVehicle(PrivateVeh[12][pv3DText], PrivateVeh[12][pvID], 0.0, 0.0, 0.0);
}//goto private
}
public OnVehicleDeath(vehicleid, killerid)
{
eventveh[vehicleid]=0;
return 1;
}
public OnPlayerText(playerid, text[])
{
if(logged[playerid]==0)
{
SendClientMessage(playerid, 0xBFC0C2FF, "Трябва да влезеш в акаунта преди да пишеш в чата!");
return 0;
}
if(PlayerInfo[playerid][pMuted] != 0 || PlayerInfo[playerid][pADMINMute]==1 || PlayerInfo[playerid][pMuteReason]>0 && PlayerInfo[playerid][pAdmin]<5)
{
SendClientMessage(playerid, 0xBFC0C2FF, "Ти си заглушен в чата!");
return 0;
}
if(togchat[playerid]==1 && cbchat[playerid]==0)
{
SendClientMessage(playerid, 0xBFC0C2FF, "Ти си игнорирал да ти идват съобщения от главния чат!");
return 0;
}
printf("[say] %s(id:%d): %s",pname[playerid],playerid,text);
if(cbchat[playerid]>0 && PlayerInfo[playerid][pOrganisator]==0)
{
format(string256, 256, "[CB: %d] %s(%d): %s",cbchat[playerid],pname[playerid], playerid, text[0]);
for(new i; i<MAX_PLAYERS; i++)
{
if(cbchat[i]==cbchat[playerid] || PlayerInfo[i][pTogCB]==1)
{
SendClientMessage(i,0xFF9933FF, string256);
return 0;
}
}
}
if(cbchat[playerid]>0 && PlayerInfo[playerid][pOrganisator]==1)
{
format(string256, 256, "[CB: %d] %s(%d): {FF0000}%s",cbchat[playerid],pname[playerid], playerid, text[0]);
for(new i; i<MAX_PLAYERS; i++)
{
if(cbchat[i]==cbchat[playerid] || PlayerInfo[i][pTogCB]==1)
{
SendClientMessage(i,0xFF9933FF, string256);
return 0;
}
}
}
if(reactionTestOn==true)
{
if(strcmp(text, reactionTestString, false) == 0)
{
PlayerInfo[playerid][pReactionTestsWon]+=1;
reactionTestOn=false;
GivePlayerEP(playerid,1);
format(string256,256,"[REACTION TEST]: %s(ID: %d) спечели теста за бързина! Той/Тя е печелил(а) %d пъти!",pname[playerid],playerid,PlayerInfo[playerid][pReactionTestsWon]);
SendClientMessageToAll(COLOR_REACTIONTEST,string256);
}
}
if(cbchat[playerid]==0)
{
format(string256, 256, "{FFFFFF}(%d): {FFFFFF}%s", playerid, text[0]);
SendPlayerMessageToAll(playerid, string256);
return 0;
}
return 1;
}
public OnPlayerCommandText(playerid, cmdtext[])
{
new cmd[256];
new tmp[256];
new idx;
new string[256];
cmd=strtok(cmdtext, idx);
printf("[cmd] %s(id: %d): %s",pname[playerid],playerid,cmdtext);
if(logged[playerid]==0) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да влезеш в акаунта преди да ползваш команда!");
if (strcmp("/bus", cmdtext, true, 10) == 0)
{
if(GetPlayerVehicleID(playerid) == carbus[1] || GetPlayerVehicleID(playerid) == carbus[2] || GetPlayerVehicleID(playerid) == carbus[3] || GetPlayerVehicleID(playerid) == carbus[4] || GetPlayerVehicleID(playerid) == carbus[5])
{
new pizzastring[256];
if(PlayerInfo[playerid][pBusTimerWorkAgain] != 0)
{
format(pizzastring, 256, "Не можеш да работиш тази работа в момента.");
SendClientMessage(playerid, COLOR_GRAD1, pizzastring);
return 1;
}
if(PlayerInfo[playerid][pWanted] > 0 && PlayerInfo[playerid][pADuty]==0)
{
SendClientMessage(playerid,0xB4B5B7FF,"Не можеш да използваш тази команда, докато си издирван!");
return 1;
}
if(PlayerInfo[playerid][pADuty] > 0)
{
SendClientMessage(playerid,0xB4B5B7FF,"Не можеш да използваш тази команда, докато си ADMIN ON-DUTY!");
return 1;
}
if(PlayerInfo[playerid][pIFCDuty]==1) return SendClientMessage(playerid,0xB4B5B7FF,"Не можеш да използваш тази команда, докато си IFC ON-DUTY!");
if(cmn1[playerid]>0) { return SendClientMessage(playerid,0xB4B5B7FF,"Не можеш да работиш, докато си CMN1!"); }
if(playerInDuel[playerid]==1){ return SendClientMessage(playerid,0xB4B5B7FF,"Не можеш да работиш, докато си в дуел!");}
if(inevent[playerid]==1) return SendClientMessage(playerid,0xB4B5B7FF,"Не можеш да се работиш, докато си в евент!");
if(playerInDMON[playerid]==1) return SendClientMessage(playerid,0xB4B5B7FF,"Не можеш да работиш, докато си в DMON!");
onWork[playerid]=1;
gpsOn[playerid]=false;
SetPlayerColor(playerid, 0xD8844DFF);
DisablePlayerRaceCheckpoint(playerid);
DisablePlayerCheckpoint(playerid);
ToggleEngine(GetPlayerVehicleID(playerid), VEHICLE_PARAMS_ON);
SetPlayerCheckpoint(playerid, BusCheckPoint1, 4.0);
format(pizzastring, 256, "Bus: Ти започна работа като шофьор на автобус и сега трябва да следваш червените маркери.");
SendClientMessage(playerid, 0xB35900FF, pizzastring);
return 1;
} else {
SendClientMessage(playerid, COLOR_GRAD1,"Трябва да си в превозното средство, за да започнеш работа!");
}
return 1;
}
if (strcmp("/coalmine", cmdtext, true, 10) == 0)
{
if(GetPlayerVehicleID(playerid) == carcoalmine[1] || GetPlayerVehicleID(playerid) == carcoalmine[2] || GetPlayerVehicleID(playerid) == carcoalmine[3] || GetPlayerVehicleID(playerid) == carcoalmine[4])
{
new pizzastring[256];
if(PlayerInfo[playerid][pCoalmineTimerWorkAgain] != 0)
{
format(pizzastring, 256, "Не можеш да работиш тази работа в момента.");
SendClientMessage(playerid, COLOR_GRAD1, pizzastring);
return 1;
}
if(PlayerInfo[playerid][pWanted] > 0 && PlayerInfo[playerid][pADuty]==0)
{
SendClientMessage(playerid,0xB4B5B7FF,"Не можеш да използваш тази команда, докато си издирван!");
return 1;
}
if(PlayerInfo[playerid][pADuty] > 0)
{
SendClientMessage(playerid,0xB4B5B7FF,"Не можеш да използваш тази команда, докато си ADMIN ON-DUTY!");
return 1;
}
if(PlayerInfo[playerid][pIFCDuty]==1) return SendClientMessage(playerid,0xB4B5B7FF,"Не можеш да използваш тази команда, докато си IFC ON-DUTY!");
if(cmn1[playerid]>0) { return SendClientMessage(playerid,0xB4B5B7FF,"Не можеш да работиш, докато си CMN1!"); }
if(playerInDuel[playerid]==1){ return SendClientMessage(playerid,0xB4B5B7FF,"Не можеш да работиш, докато си в дуел!");}
if(inevent[playerid]==1) return SendClientMessage(playerid,0xB4B5B7FF,"Не можеш да се работиш, докато си в евент!");
if(playerInDMON[playerid]==1) return SendClientMessage(playerid,0xB4B5B7FF,"Не можеш да работиш, докато си в DMON!");
if(cmn1[playerid]==1) return SendClientMessage(playerid,0xB4B5B7FF,"Не можеш да използваш тази команда, докато си CMN1!");
onWork[playerid]=1;
gpsOn[playerid]=false;
DisablePlayerRaceCheckpoint(playerid);
DisablePlayerCheckpoint(playerid);
SetPlayerColor(playerid, 0xD8844DFF);
ToggleEngine(GetPlayerVehicleID(playerid), VEHICLE_PARAMS_ON);
SetPlayerCheckpoint(playerid, CoalmineCheckPoint1, 4.0);
format(pizzastring, 256, "Coalmine: Ти започна работа като шофьор на самосвал и сега трябва да следваш червените маркери.");
SendClientMessage(playerid, 0xB35900FF, pizzastring);
return 1;
} else {
SendClientMessage(playerid, COLOR_GRAD1,"Трябва да си в превозното средство, за да започнеш работа!");
}
return 1;
}
if (strcmp("/sweep", cmdtext, true, 10) == 0)
{
if(GetPlayerVehicleID(playerid) == carsweeper[1] || GetPlayerVehicleID(playerid) == carsweeper[2] || GetPlayerVehicleID(playerid) == carsweeper[3] || GetPlayerVehicleID(playerid) == carsweeper[4])
{
new pizzastring[256];
if(PlayerInfo[playerid][pSweeperTimerWorkAgain] != 0)
{
format(pizzastring, 256, "Не можеш да работиш тази работа в момента.");
SendClientMessage(playerid, COLOR_GRAD1, pizzastring);
return 1;
}
if(PlayerInfo[playerid][pWanted] > 0 && PlayerInfo[playerid][pADuty]==0)
{
SendClientMessage(playerid,0xB4B5B7FF,"Не можеш да използваш тази команда, докато си издирван!");
return 1;
}
if(PlayerInfo[playerid][pADuty] > 0)
{
SendClientMessage(playerid,0xB4B5B7FF,"Не можеш да използваш тази команда, докато си ADMIN ON-DUTY!");
return 1;
}
if(PlayerInfo[playerid][pIFCDuty]==1) return SendClientMessage(playerid,0xB4B5B7FF,"Не можеш да използваш тази команда, докато си IFC ON-DUTY!");
if(cmn1[playerid]>0) { return SendClientMessage(playerid,0xB4B5B7FF,"Не можеш да работиш, докато си CMN1!"); }
if(playerInDuel[playerid]==1){ return SendClientMessage(playerid,0xB4B5B7FF,"Не можеш да работиш, докато си в дуел!");}
if(inevent[playerid]==1) return SendClientMessage(playerid,0xB4B5B7FF,"Не можеш да се работиш, докато си в евент!");
if(playerInDMON[playerid]==1) return SendClientMessage(playerid,0xB4B5B7FF,"Не можеш да работиш, докато си в DMON!");
onWork[playerid]=1;
gpsOn[playerid]=false;
SetPlayerColor(playerid, 0xD8844DFF);
DisablePlayerRaceCheckpoint(playerid);
DisablePlayerCheckpoint(playerid);
ToggleEngine(GetPlayerVehicleID(playerid), VEHICLE_PARAMS_ON);
SetPlayerCheckpoint(playerid, SweepCheckPoint1, 4.0);
format(pizzastring, 256, "Sweeper: Ти започна работа като чистач на улици и сега трябва да следваш червените маркери.");
SendClientMessage(playerid, 0xB35900FF, pizzastring);
return 1;
} else {
SendClientMessage(playerid, COLOR_GRAD1,"Трябва да си в превозното средство, за да започнеш работа!");
}
return 1;
}
if (strcmp("/leavejob", cmdtext, true, 10) == 0)
{
if(onWork[playerid]==1)
{
if(PlayerInfo[playerid][pWanted] > 0 && PlayerInfo[playerid][pADuty]==0)
{
SendClientMessage(playerid,0xB4B5B7FF,"Не можеш да използваш тази команда, докато си издирван!");
return 1;
}
if(PlayerInfo[playerid][pADuty] > 0)
{
SendClientMessage(playerid,0xB4B5B7FF,"Не можеш да използваш тази команда, докато си ADMIN ON-DUTY!");
return 1;
}
if(PlayerInfo[playerid][pIFCDuty]==1) return SendClientMessage(playerid,0xB4B5B7FF,"Не можеш да използваш тази команда, докато си IFC ON-DUTY!");
new pizzastring[256];
ToggleEngine(GetPlayerVehicleID(playerid), VEHICLE_PARAMS_OFF);
format(pizzastring, 256, "Job: Ти напусна твоята работа, ела отново!");
SendClientMessage(playerid, 0xB35900FF, pizzastring);
onWork[playerid]=0;
DisablePlayerRaceCheckpoint(playerid);
DisablePlayerCheckpoint(playerid);
RestartPlayerColor(playerid);
return 1;
} else {
SendClientMessage(playerid, COLOR_GRAD1,"В момента не си на работа и не можеш да използваш тази команда!");
}
return 1;
}
if (strcmp("/pizza", cmdtext, true, 10) == 0)
{
if(GetPlayerVehicleID(playerid) == carpizza[1] || GetPlayerVehicleID(playerid) == carpizza[2] || GetPlayerVehicleID(playerid) == carpizza[3] || GetPlayerVehicleID(playerid) == carpizza[4] || GetPlayerVehicleID(playerid) == carpizza[5] || GetPlayerVehicleID(playerid) == carpizza[6])
{
if(PlayerInfo[playerid][pWanted] > 0 && PlayerInfo[playerid][pADuty]==0)
{
SendClientMessage(playerid,0xB4B5B7FF,"Не можеш да използваш тази команда, докато си издирван!");
return 1;
}
if(cmn1[playerid]==1) return SendClientMessage(playerid,0xB4B5B7FF,"Не можеш да използваш тази команда, докато си CMN1!");
if(PlayerInfo[playerid][pADuty] > 0)
{
SendClientMessage(playerid,0xB4B5B7FF,"Не можеш да използваш тази команда, докато си ADMIN ON-DUTY!");
return 1;
}
if(PlayerInfo[playerid][pIFCDuty]==1) return SendClientMessage(playerid,0xB4B5B7FF,"Не можеш да използваш тази команда, докато си IFC ON-DUTY!");
new pizzastring[256];
if(PlayerInfo[playerid][pPizzaTimerWorkAgain] != 0)
{
format(pizzastring, 256, "Не можеш да работиш тази работа в момента.");
SendClientMessage(playerid, COLOR_GRAD1, pizzastring);
return 1;
}
if(cmn1[playerid]>0) { return SendClientMessage(playerid,0xB4B5B7FF,"Не можеш да работиш, докато си CMN1!"); }
if(playerInDuel[playerid]==1){ return SendClientMessage(playerid,0xB4B5B7FF,"Не можеш да работиш, докато си в дуел!");}
if(inevent[playerid]==1) return SendClientMessage(playerid,0xB4B5B7FF,"Не можеш да се работиш, докато си в евент!");
if(playerInDMON[playerid]==1) return SendClientMessage(playerid,0xB4B5B7FF,"Не можеш да работиш, докато си в DMON!");
onWork[playerid]=1;
gpsOn[playerid]=false;
SetPlayerColor(playerid, 0xD8844DFF);
DisablePlayerRaceCheckpoint(playerid);
DisablePlayerCheckpoint(playerid);
PlayerInfo[playerid][pJob]=1;
ToggleEngine(GetPlayerVehicleID(playerid), VEHICLE_PARAMS_ON);
SetPlayerCheckpoint(playerid, PizzaCheckPoint1, 4.0);
format(pizzastring, 256, "Pizza Deliver: Ти започна работа като доставчик на пица и сега трябва да следваш червените маркери.");
SendClientMessage(playerid, 0xB35900FF, pizzastring);
return 1;
} else {
SendClientMessage(playerid, COLOR_GRAD1,"Трябва да си в мотора, за да започнеш работа!");
}
return 1;
}
if (strcmp("/deliver", cmdtext, true, 10) == 0)
{
if(GetPlayerVehicleID(playerid) == cardeliver[1] || GetPlayerVehicleID(playerid) == cardeliver[2] || GetPlayerVehicleID(playerid) == cardeliver[3] || GetPlayerVehicleID(playerid) == cardeliver[4] || GetPlayerVehicleID(playerid) == cardeliver[5])
{
if(PlayerInfo[playerid][pWanted] > 0 && PlayerInfo[playerid][pADuty]==0)
{
SendClientMessage(playerid,0xB4B5B7FF,"Не можеш да използваш тази команда, докато си издирван!");
return 1;
}
if(cmn1[playerid]==1) return SendClientMessage(playerid,0xB4B5B7FF,"Не можеш да използваш тази команда, докато си CMN1!");
if(PlayerInfo[playerid][pADuty] > 0)
{
SendClientMessage(playerid,0xB4B5B7FF,"Не можеш да използваш тази команда, докато си ADMIN ON-DUTY!");
return 1;
}
if(PlayerInfo[playerid][pIFCDuty]==1) return SendClientMessage(playerid,0xB4B5B7FF,"Не можеш да използваш тази команда, докато си IFC ON-DUTY!");
new pizzastring[500];
if(PlayerInfo[playerid][pDeliverTimerWorkAgain] != 0)
{
format(pizzastring, 256, "Не можеш да работиш тази работа в момента.");
SendClientMessage(playerid, COLOR_GRAD1, pizzastring);
return 1;
}
if(cmn1[playerid]>0) { return SendClientMessage(playerid,0xB4B5B7FF,"Не можеш да работиш, докато си CMN1!"); }
if(playerInDuel[playerid]==1){ return SendClientMessage(playerid,0xB4B5B7FF,"Не можеш да работиш, докато си в дуел!");}
if(inevent[playerid]==1) return SendClientMessage(playerid,0xB4B5B7FF,"Не можеш да се работиш, докато си в евент!");
if(playerInDMON[playerid]==1) return SendClientMessage(playerid,0xB4B5B7FF,"Не можеш да работиш, докато си в DMON!");
onWork[playerid]=1;
gpsOn[playerid]=false;
SetPlayerColor(playerid, 0xD8844DFF);
DisablePlayerRaceCheckpoint(playerid);
DisablePlayerCheckpoint(playerid);
ToggleEngine(GetPlayerVehicleID(playerid), VEHICLE_PARAMS_ON);
SetPlayerCheckpoint(playerid, DeliverCheckPoint1, 4.0);
format(pizzastring, 500, "Deliver: Ти започна работа като доставчик и сега трябва да следваш червените маркери.");
SendClientMessage(playerid, 0xB35900FF, pizzastring);
return 1;
} else {
SendClientMessage(playerid, COLOR_GRAD1,"Трябва да си в буса, за да започнеш работа!");
}
return 1;
}
if (strcmp("/pilot", cmdtext, true, 10) == 0)
{
if(GetPlayerVehicleID(playerid) == carpilot[1] || GetPlayerVehicleID(playerid) == carpilot[2] || GetPlayerVehicleID(playerid) == carpilot[3] || GetPlayerVehicleID(playerid) == carpilot[4] || GetPlayerVehicleID(playerid) == carpilot[5])
{
if(PlayerInfo[playerid][pWanted] > 0 && PlayerInfo[playerid][pADuty]==0)
{
SendClientMessage(playerid,0xB4B5B7FF,"Не можеш да използваш тази команда, докато си издирван!");
return 1;
}
if(PlayerInfo[playerid][pADuty] > 0)
{
SendClientMessage(playerid,0xB4B5B7FF,"Не можеш да използваш тази команда, докато си ADMIN ON-DUTY!");
return 1;
}
if(PlayerInfo[playerid][pIFCDuty]==1) return SendClientMessage(playerid,0xB4B5B7FF,"Не можеш да използваш тази команда, докато си IFC ON-DUTY!");
if(cmn1[playerid]==1) return SendClientMessage(playerid,0xB4B5B7FF,"Не можеш да използваш тази команда, докато си CMN1!");
new pizzastring[500];
if(PlayerInfo[playerid][pPilotTimerWorkAgain] != 0)
{
format(pizzastring, 256, "Не можеш да работиш тази работа в момента.");
SendClientMessage(playerid, COLOR_GRAD1, pizzastring);
return 1;
}
if(cmn1[playerid]>0) { return SendClientMessage(playerid,0xB4B5B7FF,"Не можеш да работиш, докато си CMN1!"); }
if(playerInDuel[playerid]==1){ return SendClientMessage(playerid,0xB4B5B7FF,"Не можеш да работиш, докато си в дуел!");}
if(inevent[playerid]==1) return SendClientMessage(playerid,0xB4B5B7FF,"Не можеш да се работиш, докато си в евент!");
if(playerInDMON[playerid]==1) return SendClientMessage(playerid,0xB4B5B7FF,"Не можеш да работиш, докато си в DMON!");
onWork[playerid]=1;
gpsOn[playerid]=false;
SetPlayerColor(playerid, 0xD8844DFF);
DisablePlayerRaceCheckpoint(playerid);
DisablePlayerCheckpoint(playerid);
ToggleEngine(GetPlayerVehicleID(playerid), VEHICLE_PARAMS_ON);
SetPlayerCheckpoint(playerid, PilotCheckPoint1, 5.0);
format(pizzastring, 500, "Pilot: Ти започна работа като пилот и сега трябва да следваш червените маркери.");
SendClientMessage(playerid, 0xB35900FF, pizzastring);
return 1;
} else {
SendClientMessage(playerid, COLOR_GRAD1,"Трябва да си в самолета, за да започнеш работа!");
}
return 1;
}
if(strcmp(cmd, "/rob", true) == 0)
{
if(!IsPlayerInRangeOfPoint(playerid, 4, ROB_CALIGULA_COORS) && !IsPlayerInRangeOfPoint(playerid, 4, ROB_ARTIUM_COORS) && !IsPlayerInRangeOfPoint(playerid, 4, ROB_BOAT_COORS))
{
SendClientMessage(playerid, COLOR_GRAD1,"Трябва да си на място за обир!");
return 1;
}
if(PlayerInfo[playerid][pRobberLead]==0)
{
return SendClientMessage(playerid, COLOR_GRAD1,"Трябва да си лидер за да започнеш обир!");
}
if(robberyMembers<2 && scripterMode[playerid]==0)
{
return SendClientMessage(playerid, COLOR_GRAD1,"Трябва да има още един участник в обира!");
}
if(robCollectedMoney>10)
{
SendClientMessage(playerid, COLOR_GRAD1,"Обирът вече е започнат!");
return 1;
}
if(IsPlayerInRangeOfPoint(playerid, 4, ROB_CALIGULA_COORS))
{
robberyPlace=ROB_CALIGULA;
SendClientMessage(playerid,0xFF8200FF,"Robbery: Някой се опитва да ограби Caligula's Casino, отиди и го спри!");
}
if(IsPlayerInRangeOfPoint(playerid, 4, ROB_ARTIUM_COORS))
{
robberyPlace=ROB_ARTIUM;
SendClientMessage(playerid,0xFF8200FF,"Robbery: Някой се опитва да ограби Atrium, отиди и го спри !");
}
if(IsPlayerInRangeOfPoint(playerid, 4, ROB_BOAT_COORS))
{
robberyPlace=ROB_BOAT;
SendClientMessage(playerid,0xFF8200FF,"Robbery: Някой се опитва да ограби кораба в San Fierro, отиди и го спри !");
}
robCollectedMoney=70;
robberyTimerToCollect=2;
robberyTimerRobberToStart=0;
return 1;
}
if(strcmp(cmd, "/radioff", true) == 0)
{
if(PlayerInfo[playerid][pRadio]==0) return SendClientMessage(playerid, COLOR_GRAD1,"Ти нямаш радио!");
if(radion[playerid]==0) return SendClientMessage(playerid, COLOR_GRAD1,"Радиото вече е спряно!");
radion[playerid]=0;
StopAudioStreamForPlayer(playerid);
SendClientMessage(playerid,0x9ACD32FF,"* Ти изключи радиото *");
return 1;
}
if(strcmp(cmd, "/intro", true) == 0)
{
tmp=strtok(cmdtext, idx);
new song=strval(tmp);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /intro [1-8]");
return 1;
}
if(song<1||song>8)
{
SendClientMessage(playerid, 0xB4B5B7FF, "Песните са от 1 до 8!");
return 1;
}
introon[playerid]=1;
if(song==1) PlayAudioStreamForPlayer(playerid, audiostreams[0]);
if(song==2) PlayAudioStreamForPlayer(playerid, audiostreams[1]);
if(song==3) PlayAudioStreamForPlayer(playerid, audiostreams[2]);
if(song==4) PlayAudioStreamForPlayer(playerid, audiostreams[3]);
if(song==5) PlayAudioStreamForPlayer(playerid, audiostreams[4]);
if(song==6) PlayAudioStreamForPlayer(playerid, audiostreams[5]);
if(song==7) PlayAudioStreamForPlayer(playerid, audiostreams[6]);
if(song==8) PlayAudioStreamForPlayer(playerid, audiostreams[7]);
SendClientMessage(playerid, 0xFFFFFFFF, "* Ти пусна песен от интрото *");
return 1;
}
if(strcmp(cmd, "/radio", true) == 0)
{
if(PlayerInfo[playerid][pRadio]==0) return SendClientMessage(playerid, COLOR_GRAD1,"Ти нямаш радио!");
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /radio [radio name]");
SendClientMessage(playerid, 0x9ACD32FF, "Radio names: City, Njoy, Zrock, Dubstep, Fresh, Veronika, NRJ, Severozapad, Ultra");
SendClientMessage(playerid, 0x9ACD32FF, "Radio names: 1Rock, Payner, Galaxy, Veselina");
SendClientMessage(playerid, 0x9ACD32FF, "Използвай '/radio off' за да не чуваш радиото в колата!");
SendClientMessage(playerid, 0x9ACD32FF, "Използвай '/radio check' за да провериш кой радио канал слушаш!");
return 1;
}
new level[32];
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /radio [radio name]");
SendClientMessage(playerid, 0x9ACD32FF, "Radio names: City, Njoy, Zrock, Dubstep, Fresh, Veronika, NRJ, Severozapad, Ultra");
SendClientMessage(playerid, 0x9ACD32FF, "Radio names: 1Rock, Payner, Galaxy, Veselina");
SendClientMessage(playerid, 0x9ACD32FF, "Използвай '/radio off' за да не чуваш радиото в колата!");
SendClientMessage(playerid, 0x9ACD32FF, "Използвай '/radio check' за да провериш кой радио канал слушаш!");
return 1;
}
strmid(level, tmp, 0, sizeof(level), sizeof(level));
if(strcmp(level,"check",false)==0)
{
}
if(strcmp(level,"off",false)==0)
{
if(radioff[playerid]==0)
{
radioff[playerid]=1;
PlayAudioStreamForPlayer(playerid, "https://www.google.com/");
}
else
{
radioff[playerid]=0;
SendClientMessage(playerid,0x9ACD32FF,"* Ти вече отново ще чуваш радиото в колата *");StopAudioStreamForPlayer(playerid);
}
}
if(strcmp(level,"check",false)==0)
{
if(radion[playerid]==0 || radioff[playerid]==1) return SendClientMessage(playerid, 0x9ACD32FF,"Твоето радио не е пуснато!");
if(radion[playerid]==1) SendClientMessage(playerid, 0x9ACD32FF,"Ти в момента слушаш радио City");
if(radion[playerid]==2) SendClientMessage(playerid, 0x9ACD32FF,"Ти в момента слушаш радио Njoy");
if(radion[playerid]==3) SendClientMessage(playerid, 0x9ACD32FF,"Ти в момента слушаш радио Zrock");
if(radion[playerid]==4) SendClientMessage(playerid, 0x9ACD32FF,"Ти в момента слушаш радио Dubstep");
if(radion[playerid]==5) SendClientMessage(playerid, 0x9ACD32FF,"Ти в момента слушаш радио Fresh");
if(radion[playerid]==6) SendClientMessage(playerid, 0x9ACD32FF,"Ти в момента слушаш радио Veronika");
if(radion[playerid]==7) SendClientMessage(playerid, 0x9ACD32FF,"Ти в момента слушаш радио NRJ");
if(radion[playerid]==8) SendClientMessage(playerid, 0x9ACD32FF,"Ти в момента слушаш радио Severozapad");
if(radion[playerid]==9) SendClientMessage(playerid, 0x9ACD32FF,"Ти в момента слушаш радио Ultra");
if(radion[playerid]==10) SendClientMessage(playerid, 0x9ACD32FF,"Ти в момента слушаш радио 1Rock");
if(radion[playerid]==11) SendClientMessage(playerid, 0x9ACD32FF,"Ти в момента слушаш радио Payner");
if(radion[playerid]==12) SendClientMessage(playerid, 0x9ACD32FF,"Ти в момента слушаш радио Galaxy");
if(radion[playerid]==13) SendClientMessage(playerid, 0x9ACD32FF,"Ти в момента слушаш радио Veselina");
}
if(strcmp(level,"city",false)==1 && strcmp(level,"njoy",false)==1 && strcmp(level,"zrock",false)==1 && strcmp(level,"dubstep",false)==1 && strcmp(level,"fresh",false)==1
&& strcmp(level,"veronika",false)==1 && strcmp(level,"nrj",false)==1 && strcmp(level,"severozapad",false)==1 && strcmp(level,"ultra",false)==1 && strcmp(level,"1rock",false)==1
&& strcmp(level,"payner",false)==1 && strcmp(level,"galaxy",false)==1 && strcmp(level,"veselina",false)==1
&& strcmp(level,"check",false)==1
&& strcmp(level,"off",false)==1
&& strcmp(level,"City",false)==1 && strcmp(level,"Njoy",false)==1 && strcmp(level,"Zrock",false)==1 && strcmp(level,"Dubstep",false)==1 && strcmp(level,"Fresh",false)==1
&& strcmp(level,"Veronika",false)==1 && strcmp(level,"Nrj",false)==1 && strcmp(level,"Severozapad",false)==1 && strcmp(level,"Ultra",false)==1
&& strcmp(level,"Payner",false)==1 && strcmp(level,"Galaxy",false)==1 && strcmp(level,"Veselina",false)==1)
{
SendClientMessage(playerid, COLOR_GRAD1,"Няма такова радио!");
return 1;
}
if(strcmp(level,"city",false)==0 || strcmp(level,"City",false)==0)
{
radioff[playerid]=0;
radion[playerid]=2;SendClientMessage(playerid,0x9ACD32FF,"* Ти пусна радио City *");
PlayAudioStreamForPlayer(playerid, "http://149.13.0.80/city64.m3u");
}
if(strcmp(level,"njoy",false)==0 || strcmp(level,"Njoy",false)==0)
{
radioff[playerid]=0;
radion[playerid]=2;SendClientMessage(playerid,0x9ACD32FF,"* Ти пусна радио Njoy *");
PlayAudioStreamForPlayer(playerid, "http://live.btvradio.bg/njoy.mp3.m3u");
}
if(strcmp(level,"zrock",false)==0 || strcmp(level,"Zrock",false)==0)
{
radioff[playerid]=0;
radion[playerid]=3;SendClientMessage(playerid,0x9ACD32FF,"* Ти пусна радио Zrock *");
PlayAudioStreamForPlayer(playerid, "http://live.btvradio.bg/z-rock.mp3.m3u");
}
if(strcmp(level,"dubstep",false)==0 || strcmp(level,"Dubstep",false)==0)
{
radioff[playerid]=0;
radion[playerid]=4;SendClientMessage(playerid,0x9ACD32FF,"* Ти пусна радио Dubstep *");
PlayAudioStreamForPlayer(playerid, "http://listen.di.fm/public3/dubstep.pls");
}
if(strcmp(level,"fresh",false)==0 || strcmp(level,"Fresh",false)==0)
{
radioff[playerid]=0;
radion[playerid]=5;SendClientMessage(playerid,0x9ACD32FF,"* Ти пусна радио Fresh *");
PlayAudioStreamForPlayer(playerid, "http://193.108.24.21:8000/fresh.m3u");
}
if(strcmp(level,"veronika",false)==0 || strcmp(level,"Veronika",false)==0)
{
radioff[playerid]=0;
radion[playerid]=6;SendClientMessage(playerid,0x9ACD32FF,"* Ти пусна радио Veronika *");
PlayAudioStreamForPlayer(playerid, "http://149.13.0.81/veronika64.m3u");
}
if(strcmp(level,"nrj",false)==0 || strcmp(level,"Nrj",false)==0)
{
radioff[playerid]=0;
radion[playerid]=7;SendClientMessage(playerid,0x9ACD32FF,"* Ти пусна радио NRJ *");
PlayAudioStreamForPlayer(playerid, "http://149.13.0.81/nrj64.m3u");
}
if(strcmp(level,"severozapad",false)==0 || strcmp(level,"Severozapad",false)==0)
{
radioff[playerid]=0;
radion[playerid]=8;SendClientMessage(playerid,0x9ACD32FF,"* Ти пусна радио Severozapad *");
PlayAudioStreamForPlayer(playerid, "http://stream-bg.net:8020/severozapad.m3u");
}
if(strcmp(level,"ultra",false)==0 || strcmp(level,"Ultra",false)==0)
{
radioff[playerid]=0;
radion[playerid]=9;SendClientMessage(playerid,0x9ACD32FF,"* Ти пусна радио Ultra *");
PlayAudioStreamForPlayer(playerid, "http://ultranet.biz/ultrapernik.m3u");
}
if(strcmp(level,"1rock",false)==0)
{
radioff[playerid]=0;
radion[playerid]=10;SendClientMessage(playerid,0x9ACD32FF,"* Ти пусна радио 1Rock *");
PlayAudioStreamForPlayer(playerid, "http://149.13.0.81/1rock128.m3u");
}
if(strcmp(level,"payner",false)==0 || strcmp(level,"Payner",false)==0)
{
radioff[playerid]=0;
radion[playerid]=11;SendClientMessage(playerid,0x9ACD32FF,"* Ти пусна радио Payner *");
PlayAudioStreamForPlayer(playerid, "http://78.129.224.11:29120/listen.pls");
}
if(strcmp(level,"galaxy",false)==0 || strcmp(level,"Galaxy",false)==0)
{
radioff[playerid]=0;
radion[playerid]=12;SendClientMessage(playerid,0x9ACD32FF,"* Ти пусна радио Galaxy *");
PlayAudioStreamForPlayer(playerid, "http://87.117.228.65:35961.pls");
}
if(strcmp(level,"veselina",false)==0 || strcmp(level,"Veselina",false)==0)
{
radioff[playerid]=0;
radion[playerid]=13;SendClientMessage(playerid,0x9ACD32FF,"* Ти пусна радио Veselina *");
PlayAudioStreamForPlayer(playerid, "http://31.13.223.148:8000/veselina/mp3");
}
return 1;
}
if(strcmp(cmd, "/housevcolor", true) == 0)
{
if(PlayerInfo[playerid][pHouseO]==-1) return SendClientMessage(playerid, 0xB4B5B7FF, "Ти не притежаваш къща!");
if(HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]==0) return SendClientMessage(playerid, 0xB4B5B7FF, "Ти нямаш лично превозно средство!");
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /housevcolor [color1] [color2]");
return 1;
}
new color1;
color1 = strval(tmp);
new color2;
tmp = strtok(cmdtext, idx);
color2 = strval(tmp);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /housevcolor [color1] [color2]");
return 1;
}
SendClientMessage(playerid, 0x00FF40FF,"Ти смени цветовете на твоето превозно средство, те ще бъде валидни след рестарт на сървъра!");
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
dini_IntSet(house,"hcC",color1);
dini_IntSet(house,"hcC2",color2);
return 1;
}
if(strcmp(cmd, "/housevsave", true) == 0)
{
if(PlayerInfo[playerid][pHouseO]==-1) return SendClientMessage(playerid, 0xB4B5B7FF, "Ти не притежаваш къща!");
if(HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]==0) return SendClientMessage(playerid, 0xB4B5B7FF, "Ти нямаш лично превозно средство!");
if(PlayerInfo[playerid][pBizO]>-1)
{
if(!IsPlayerInRangeOfPoint(playerid, 35, HouseInfo[PlayerInfo[playerid][pHouseO]][hX], HouseInfo[PlayerInfo[playerid][pHouseO]][hY], HouseInfo[PlayerInfo[playerid][pHouseO]][hZ])
&& !IsPlayerInRangeOfPoint(playerid, 35, BizInfo[PlayerInfo[playerid][pBizO]][bX], BizInfo[PlayerInfo[playerid][pBizO]][bY], BizInfo[PlayerInfo[playerid][pBizO]][bZ]))
{
SendClientMessage(playerid,0xB4B5B7FF,"Ти не се намираш близо до къщата или бизнеса си!");
return 1;
}
}
else
{
if(!IsPlayerInRangeOfPoint(playerid, 35, HouseInfo[PlayerInfo[playerid][pHouseO]][hX], HouseInfo[PlayerInfo[playerid][pHouseO]][hY], HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]))
{
SendClientMessage(playerid,0xB4B5B7FF,"Ти не се намираш близо до къщата си!");
return 1;
}
}
if(GetPlayerVehicleID(playerid)!=HouseInfo[PlayerInfo[playerid][pHouseO]][hcVeh]) return SendClientMessage(playerid,0xB4B5B7FF,"Трябва да си в твоето превозно средство!");
if(cmn1[playerid]>0) { return SendClientMessage(playerid,0xB4B5B7FF,"Не можеш да използваш командата, докато си CMN1!"); }
if(playerInDuel[playerid]==1){ return SendClientMessage(playerid,0xB4B5B7FF,"Не можеш да използваш командата, докато си в дуел!");}
if(inevent[playerid]==1) return SendClientMessage(playerid,0xB4B5B7FF,"Не можеш да използваш командата, докато си в евент!");
if(playerInDMON[playerid]==1){ return SendClientMessage(playerid,0xB4B5B7FF,"Не можеш да използваш командата, докато си в DMON!");}
if(GetPlayerInterior(playerid)!=0) return SendClientMessage(playerid,0xB4B5B7FF,"Не можеш да RESPAWN-неш твоето превозно средство в Interior!");
if(GetPlayerVirtualWorld(playerid)!=0) return SendClientMessage(playerid,0xB4B5B7FF,"Не можеш да RESPAWN-неш твоето превозно средство в Virtual World!");
if(playerInDeathmatch[playerid]==true) return SendClientMessage(playerid,0xB4B5B7FF,"В момента не можеш да използваш тази команда!");
if(playerInStreetRace[playerid]==true) return SendClientMessage(playerid,0xB4B5B7FF,"В момента не можеш да използваш тази команда!");
SendClientMessage(playerid, 0x00FF40FF,"Ти запамети позицията на твоето превозно средство, то ще бъде там след рестарт на сървъра!");
new Float:x2, Float:y2, Float:z2, Float:angle;
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
GetVehiclePos(GetPlayerVehicleID(playerid), x2, y2, z2);
GetVehicleZAngle(GetPlayerVehicleID(playerid), angle);
dini_FloatSet(house, "hcA",angle);
dini_FloatSet(house, "hcX",x2);
dini_FloatSet(house, "hcY",y2);
dini_FloatSet(house, "hcZ",z2);
return 1;
}
if(strcmp(cmd, "/respawnveh", true) == 0)
{
if(PlayerInfo[playerid][pHouseO]==-1) return SendClientMessage(playerid, 0xB4B5B7FF, "Ти не притежаваш къща!");
if(HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]==0) return SendClientMessage(playerid, 0xB4B5B7FF, "Ти нямаш лично превозно средство!");
if(!IsPlayerInRangeOfPoint(playerid, 35, HouseInfo[PlayerInfo[playerid][pHouseO]][hX], HouseInfo[PlayerInfo[playerid][pHouseO]][hY], HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]))
{
SendClientMessage(playerid,0xB4B5B7FF,"Ти не се намираш близо до къщата си!");
return 1;
}
if(GetPlayerVehicleID(playerid)!=0 && spawned[playerid]==1) return SendClientMessage(playerid,0xB4B5B7FF,"Трябва да си пешеходец за да използваш тази команда!");
if(cmn1[playerid]>0) { return SendClientMessage(playerid,0xB4B5B7FF,"Не можеш да използваш командата, докато си CMN1!"); }
if(playerInDuel[playerid]==1){ return SendClientMessage(playerid,0xB4B5B7FF,"Не можеш да използваш командата, докато си в дуел!");}
if(inevent[playerid]==1) return SendClientMessage(playerid,0xB4B5B7FF,"Не можеш да използваш командата, докато си в евент!");
if(playerInDMON[playerid]==1){ return SendClientMessage(playerid,0xB4B5B7FF,"Не можеш да използваш командата, докато си в DMON!");}
if(GetPlayerInterior(playerid)!=0) return SendClientMessage(playerid,0xB4B5B7FF,"Не можеш да RESPAWN-неш твоето превозно средство в Interior!");
if(GetPlayerVirtualWorld(playerid)!=0) return SendClientMessage(playerid,0xB4B5B7FF,"Не можеш да RESPAWN-неш твоето превозно средство в Virtual World!");
if(playerInDeathmatch[playerid]==true) return SendClientMessage(playerid,0xB4B5B7FF,"В момента не можеш да използваш тази команда!");
if(playerInStreetRace[playerid]==true) return SendClientMessage(playerid,0xB4B5B7FF,"В момента не можеш да използваш тази команда!");
SendClientMessage(playerid, 0x00FF40FF,"Ти RESPAWN-на твоето превозно средство!");
if(HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]>0)
{
DestroyVehicle(HouseInfo[PlayerInfo[playerid][pHouseO]][hcVeh]);
}
new Float:x, Float:y, Float:z;
GetPlayerPos(playerid, x, y, z);
HouseInfo[PlayerInfo[playerid][pHouseO]][hcVeh]=CreateVehicle(HouseInfo[PlayerInfo[playerid][pHouseO]][hcV],x,y,z,HouseInfo[PlayerInfo[playerid][pHouseO]][hcA],HouseInfo[PlayerInfo[playerid][pHouseO]][hcC],HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2],1800000);
PutPlayerInVehicle(playerid, HouseInfo[PlayerInfo[playerid][pHouseO]][hcVeh], 0);
return 1;
}
if(strcmp(cmd, "/leaverace", true) == 0)
{
if(playerInStreetRace[playerid]==false) return SendClientMessage(playerid,COLOR_GRAD1,"Вие не сте в Street Race!");
LeaveStreetRace(playerid);
SetPlayerVirtualWorld(playerid,0);
if(IsPlayerInAnyVehicle(playerid))
{
new hisVeh = GetPlayerVehicleID(playerid);
SetVehicleVirtualWorld(hisVeh,0);
PutPlayerInVehicle(playerid, hisVeh, 0);
}
SendClientMessage(playerid, COLOR_STREETRACE, "StreetRace: Вие напуснахте състезанието!");
GivePlayerMission(playerid);
return 1;
}
if(strcmp(cmd, "/leavedm", true) == 0)
{
if(playerInDeathmatch[playerid]==false) return SendClientMessage(playerid,COLOR_GRAD1,"Вие не сте в Deathmatch!");
LeaveDeathmatch(playerid);
SetPlayerHealth(playerid,0);
SendClientMessage(playerid, COLOR_DEATHMATCH, "Deathmatch: Вие напуснахте боя!");
return 1;
}
if(strcmp(cmd, "/robbery", true) == 0)
{
if(!IsPlayerInRangeOfPoint(playerid, 4, 2145.2324,2834.2690,10.8203) && !IsPlayerInRangeOfPoint(playerid, 4, 2447.8630,-1963.3013,13.5469))
{
SendClientMessage(playerid, COLOR_GRAD1,"Трябва да си на място за започване на обир!");
return 1;
}
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /robbery [start/end/invite/kick/leave/check]");
return 1;
}
new level[32]; new stringrobbery[600];
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /robbery [start/end/invite/kick/leave/check]");
return 1;
}
strmid(level, tmp, 0, sizeof(level), sizeof(level));
if (strcmp(level, "start", false) == 0 && strcmp(level, "end", false) == 0
&& strcmp(level, "invite", false) == 0 && strcmp(level, "kick", false) == 0
&& strcmp(level, "leave", false) == 0 && strcmp(level, "check", false) == 0)
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /robbery [start/end/invite/kick/leave/check]");
return 1;
}
if (strcmp(level, "check", true) == 0)
{
if(startedrob == 0)
{
SendClientMessage(playerid, 0xFFFFFFFF, "Можеш да стартираш обир още сега!");
}
else
{
SendClientMessage(playerid, 0xFFFFFFFF, "В момента има обир!");
}
}
//
if (strcmp(level, "leave", true) == 0)
{
if(PlayerInfo[playerid][pRobber]==1)
{
if(robCollectedMoney>0)
{
SendClientMessage(playerid, COLOR_GRAD1,"Не можеш да напуснеш обира, след като той е почнал!");
}
else
{
for(new i=0; i<MAX_PLAYERS; i++)
{
if(PlayerInfo[i][pRobber] == 1 || PlayerInfo[playerid][pRobberLead]==1)
{
if(PlayerInfo[playerid][pRobberLead]==1)
{
SendClientMessage(playerid, COLOR_GRAD1,"Не можеш да напуснеш обира, защото си негов лидер!");
return 1;
}
format(stringrobbery, 600, "Robbery: %s напусна обира.",pname[playerid]);
SendClientMessage(i, 0xFF8200FF, stringrobbery);
PlayerInfo[playerid][pRobber]=0;
}
}
}
}
else
{
SendClientMessage(playerid, COLOR_GRAD1,"Ти не си участник в обира!");
}
}
if (strcmp(level, "kick", true) == 0)
{
if(PlayerInfo[playerid][pRobberLead]==0)
{
return SendClientMessage(playerid, COLOR_GRAD1,"Ти не си лидер на обир!");
}
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /robbery kick [playerid]");
return 1;
}
para1[playerid] = ReturnUser(tmp);
if(para1[playerid]==playerid)
{
return SendClientMessage(playerid, COLOR_GRAD1,"Не можеш да изгониш себе си от обира!");
}
if(para1[playerid] != INVALID_PLAYER_ID)
{
if(PlayerInfo[para1[playerid]][pRobber]==0)
{
return SendClientMessage(playerid, COLOR_GRAD1,"Този играч не участва в обира!");
}
for(new i=0; i<MAX_PLAYERS; i++)
{
if(PlayerInfo[i][pRobber] == 1 || PlayerInfo[i][pRobberLead]==1)
{
format(stringrobbery, 600, "Robbery: %s изгони %s от обира.",pname[playerid],pname[para1[playerid]]);
SendClientMessage(i, 0xFF8200FF, stringrobbery);
PlayerInfo[para1[playerid]][pRobber]=0;
robberyMembers-=1;
}
}
}
else
{
return SendClientMessage(playerid, COLOR_GRAD1,"Посоченото ID не е в сървъра!");
}
}
//
if (strcmp(level, "invite", true) == 0)
{
if(PlayerInfo[playerid][pRobberLead]==0)
{
return SendClientMessage(playerid, COLOR_GRAD1,"Ти не си лидер на обир!");
}
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /robbery invite [playerid]");
return 1;
}
para1[playerid] = ReturnUser(tmp);
if(para1[playerid] != INVALID_PLAYER_ID)
{
if(PlayerInfo[para1[playerid]][pRobber]==1)
{
return SendClientMessage(playerid, COLOR_GRAD1,"Този играч вече участва в обира!");
}
if (!CorDetector(4.0, playerid, para1[playerid]))
{
return SendClientMessage(playerid, COLOR_GRAD1,"Този играч не е близо до теб!");
}
if(PlayerInfo[para1[playerid]][pIFCDuty]==1) return SendClientMessage(playerid,0xB4B5B7FF,"Този играч е IFC ON-DUTY!");
if(PlayerInfo[para1[playerid]][pADuty]==1) return SendClientMessage(playerid, COLOR_GRAD1,"Този играч е ADMIN ON-DUTY!");
for(new i=0; i<MAX_PLAYERS; i++)
{
if(PlayerInfo[i][pRobber] == 1 || PlayerInfo[i][pRobberLead]==1)
{
PlayerInfo[para1[playerid]][pRobber]=1;
format(stringrobbery, 600, "Robbery: %s вкара %s в обира.",pname[playerid],pname[para1[playerid]]);
SendClientMessage(i, 0xFF8200FF, stringrobbery);
robberyMembers+=1;
SetPlayerSkin(para1[playerid],25);
}
}
}
else
{
return SendClientMessage(playerid, COLOR_GRAD1,"Посоченото ID не е в сървъра!");
}
}
if (strcmp(level, "start", true) == 0)
{
if(PlayerInfo[playerid][pIFCDuty]==1) return SendClientMessage(playerid,0xB4B5B7FF,"Не можеш да използваш тази команда, докато си IFC ON-DUTY!");
if(PlayerInfo[playerid][pADuty]==1) return SendClientMessage(playerid, COLOR_GRAD1,"Не можеш да започнеш обир като ADMIN ON-DUTY!");
if(robberyMembers>0)
{
return SendClientMessage(playerid, COLOR_GRAD1,"Вече има започнат обир!");
}
if(robberyTimeToStartAgain!=0)
{
return SendClientMessage(playerid, COLOR_GRAD1,"Трябва да изчакаш да мине времето за правене на нов обир!");
}
PlayerInfo[playerid][pRobber]=1;
PlayerInfo[playerid][pRobberLead]=1;
robberyMembers=1;
robCollectedMoney=0;
startedrob=1;
SetPlayerSkin(playerid,24);
robberyTimerRobberToStart=15*60;
SendClientMessage(playerid,0xFF8200FF,"Robbery: Ти започна обир, намери място където да крадеш !");
SendClientMessage(playerid,0xFF8200FF,"Robbery: Имаш 15 минути да намериш място за крадене !");
}
if (strcmp(level, "end", true) == 0)
{
if(PlayerInfo[playerid][pRobberLead]==0)
{
return SendClientMessage(playerid,0xB4B5B7FF,"Ти не си лидер на обир!");
}
SendClientMessageToAll(0xFF8200FF,"Robbery: Лидерът на обира го прекрати !");
if(robCollectedMoney==0)
{
for(new i=0; i<MAX_PLAYERS; i++)
{
if(PlayerInfo[i][pRobber] == 1)
{
PlayerInfo[i][pRobber]=0;
format(stringrobbery, 600, "Robbery: Ти получи своя дял от обира - $%d.",robCollectedMoney/robberyMembers);
SendClientMessage(i, 0xFF8200FF, stringrobbery);
GivePlayerCash(i,robCollectedMoney/robberyMembers);
}
}
PlayerInfo[playerid][pRobberLead]=0;
robberyMembers=0;
}
if(robCollectedMoney>0)
{
for(new i=0; i<MAX_PLAYERS; i++)
{
if(PlayerInfo[i][pRobber] == 1)
{
PlayerInfo[i][pRobber]=0;
}
}
PlayerInfo[playerid][pRobberLead]=0;
robberyMembers=0;
robCollectedMoney=0;
}
robberyTimeToStartAgain=30*60;
}
return 1;
}
if(strcmp(cmd, "/changepass", true) == 0)
{
new length = strlen(cmdtext);
while ((idx < length) && (cmdtext[idx] <= ' '))
{
idx++;
}
new offset = idx;
new result[256];
while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
{
result[idx - offset] = cmdtext[idx];
idx++;
}
result[idx - offset] = EOS;
if(strlen(result)<1)
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /changepass [password]");
return 1;
}
if(strlen(result)<4 || strlen(result)>20)
{
SendClientMessage(playerid,0xB4B5B7FF,"Паролата трябва да е от 4 до 20 символа!");
return 1;
}
if(strfind( result , "||", true) == 0 || strfind( result , "|", true ) == 0 || strfind( result , "~", true ) == 0 || strfind( result , ",", true ) == 0)
{
return SendClientMessage(playerid,0xB4B5B7FF,"Ти не можеш да използваш забранени символи!");
}
new accountfiles[115];
format(accountfiles, 115, "%s.ini", pname[playerid]);
dini_Set(accountfiles, "pPassword", result);
format(string256, 256, "SERVER: Ти промени твоята парола на {FFFF00}%s", result);
SendClientMessage(playerid, 0xFFFFFFFF, string256);
return 1;
}
if (strcmp(cmd, "/checklotto", true) == 0)
{
format(string256, 256, "Стойноста на джакпота е $%d!", lottowin);
SendClientMessage(playerid, 0xFF00FFFF, string256);
return 1;
}
if(strcmp(cmd, "/gotocor", true) == 0)
{
if(PlayerInfo[playerid][pAdmin] < 5) return SendClientMessage(playerid, 0xB4B5B7FF, "Нямаш права за да ползваш командата!");
tmp = strtok(cmdtext, idx);
if(!strlen(tmp)) return SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /gotocor [coor x] [coor y] [coor z]");
new coorx;
coorx = strval(tmp);
tmp = strtok(cmdtext, idx);
if(!strlen(tmp)) return SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /gotocor [coor x] [coor y] [coor z]");
new coory;
coory = strval(tmp);
tmp = strtok(cmdtext, idx);
if(!strlen(tmp)) return SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /gotocor [coor x] [coor y] [coor z]");
new coorz;
coorz = strval(tmp);
SetPlayerPos(playerid, coorx,coory,coorz);
format(string256, 256, "* Вие се телепортирахте успешно! *", coorx,coory,coorz);
SendClientMessage(playerid, 0xFFFF00FF, string256);
return 1;
}
if(strcmp(cmd, "/nfwarn", true) == 0)
{
tmp = strtok(cmdtext, idx);
new hisNickName[32];
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /nfwarn [nickname]");
return 1;
}
strmid(hisNickName, tmp, 0, sizeof(hisNickName), sizeof(hisNickName));
if(PlayerInfo[playerid][pRank] < 6)
{
SendClientMessage(playerid,0xB4B5B7FF,"Нямаш права за да ползваш командата!");
return 1;
}
if(strlen(hisNickName)<1 || strlen(hisNickName)>30)
{
SendClientMessage(playerid,0xB4B5B7FF,"Името трябва да бъде с до 30 символа!");
return 1;
}
new hisNickNameFile[64]; new bool:isOnlinePlayer;
format(hisNickNameFile,64, "%s.ini", hisNickName);
if(!dini_Exists(hisNickNameFile)) return SendClientMessage(playerid,0xB4B5B7FF,"Не съществува играч с такъв nickname!");
for(new i=0; i<MAX_PLAYERS; i++)
{
if(IsPlayerConnected(i))
{
if(strcmp(hisNickName,pname[i],true)==0)
{ //online ID variant
isOnlinePlayer=true;
if(PlayerInfo[i][pTeam]!=PlayerInfo[playerid][pTeam]) return SendClientMessage(playerid,0xB4B5B7FF,"Този играч не е от твоята банда/мафия!");
PlayerInfo[i][pFWarns]+=1;
format(string256, 256, "[FACTION CHAT] %s was FACTION warned by %s [%d/5]", pname[i],pname[playerid],PlayerInfo[i][pFWarns]);
for(new allPlayers = 0; allPlayers < MAX_PLAYERS; allPlayers++)
{
if(PlayerInfo[allPlayers][pTeam] == PlayerInfo[playerid][pTeam])
{
SendClientMessage(allPlayers,0x33CCFFFF, string256);
}
}
if(PlayerInfo[i][pFWarns]==5)
{
LeaveGangPlayerAffect(i);
}
}
}
}//online ID variant END
if(isOnlinePlayer==false) //offline ID variant
{
new offlinePlayerGang=dini_Int(hisNickNameFile, "pTeam");
new offlinePlayerWarns=dini_Int(hisNickNameFile, "pFWarns");
if(offlinePlayerGang!=PlayerInfo[playerid][pTeam]) return SendClientMessage(playerid,0xB4B5B7FF,"Този играч не е от твоята банда/мафия!");
offlinePlayerWarns+=1;
format(string256, 256, "[FACTION CHAT] %s was FACTION warned by %s [%d/5]", hisNickName, pname[playerid],offlinePlayerWarns);
for(new allPlayers = 0; allPlayers < MAX_PLAYERS; allPlayers++)
{
if(PlayerInfo[allPlayers][pTeam] == PlayerInfo[playerid][pTeam])
{
SendClientMessage(allPlayers,0x33CCFFFF, string256);
}
}
if(offlinePlayerWarns==5)
{
dini_IntSet(hisNickNameFile,"pTeam",0);
dini_IntSet(hisNickNameFile,"pFWarns",0);
}
else
{
dini_IntSet(hisNickNameFile,"pFWarns",(offlinePlayerWarns++));
}
}
return 1;
}
if(strcmp(cmd, "/nuninvite", true) == 0)
{
tmp = strtok(cmdtext, idx);
new hisNickName[32];
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /nuninvite [nickname]");
return 1;
}
strmid(hisNickName, tmp, 0, sizeof(hisNickName), sizeof(hisNickName));
if(PlayerInfo[playerid][pRank] < 6)
{
SendClientMessage(playerid,0xB4B5B7FF,"Нямаш права за да ползваш командата!");
return 1;
}
if(strlen(hisNickName)<1 || strlen(hisNickName)>30)
{
SendClientMessage(playerid,0xB4B5B7FF,"Името трябва да бъде с до 30 символа!");
return 1;
}
new hisNickNameFile[64]; new bool:isOnlinePlayer;
format(hisNickNameFile,64, "%s.ini", hisNickName);
if(!dini_Exists(hisNickNameFile)) return SendClientMessage(playerid,0xB4B5B7FF,"Не съществува играч с такъв nickname!");
for(new i=0; i<MAX_PLAYERS; i++)
{
if(IsPlayerConnected(i))
{
if(strcmp(hisNickName, pname[i], true) == 0)
{ //online ID variant
isOnlinePlayer=true;
if(strcmp(hisNickName,pname[playerid],true)==0) return SendClientMessage(playerid,0xB4B5B7FF,"Не можеш да изгониш себе си от банда/мафията!");
if(PlayerInfo[i][pRank]>=6) return SendClientMessage(playerid,0xB4B5B7FF,"Не можеш да изгониш лидер от твоята банда/мафия!");
if(PlayerInfo[i][pTeam]!=PlayerInfo[playerid][pTeam]) return SendClientMessage(playerid,0xB4B5B7FF,"Този играч не е от твоята банда/мафия!");
format(string256, 256, "[FACTION CHAT] %s изгони %s от %s!", pname[playerid],pname[i],TeamInfo[PlayerInfo[playerid][pTeam]][tName]);
for(new allPlayers = 0; allPlayers < MAX_PLAYERS; allPlayers++)
{
if(PlayerInfo[allPlayers][pTeam] == PlayerInfo[playerid][pTeam])
{
SendClientMessage(allPlayers,0x33CCFFFF, string256);
}
}
LeaveGangPlayerAffect(i);
}
}
} //online ID variant END
if(isOnlinePlayer==false) //offline ID variant
{
new offlinePlayerGang=dini_Int(hisNickNameFile, "pTeam");
if(offlinePlayerGang!=PlayerInfo[playerid][pTeam]) return SendClientMessage(playerid,0xB4B5B7FF,"Този играч не е от твоята банда/мафия!");
format(string256, 256, "[FACTION CHAT] %s изгони %s от %s!", pname[playerid],hisNickName,TeamInfo[PlayerInfo[playerid][pTeam]][tName]);
for(new allPlayers = 0; allPlayers < MAX_PLAYERS; allPlayers++)
{
if(PlayerInfo[allPlayers][pTeam] == PlayerInfo[playerid][pTeam])
{
SendClientMessage(allPlayers,0x33CCFFFF, string256);
}
}
dini_IntSet(hisNickNameFile,"pTeam",0);
dini_IntSet(hisNickNameFile,"pFWarns",0);
}
return 1;
}
if(strcmp(cmd, "/uninvite", true) == 0)
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /uninvite [playerid]");
return 1;
}
para1[playerid] = ReturnUser(tmp);
if(para1[playerid] != INVALID_PLAYER_ID)
{
if(PlayerInfo[playerid][pRank] < 6)
{
SendClientMessage(playerid,0xB4B5B7FF,"Нямаш права за да ползваш командата!");
return 1;
}
if(PlayerInfo[para1[playerid]][pRank] > 5 && PlayerInfo[playerid][pGLeader]==0)
{
SendClientMessage(playerid,0xB4B5B7FF,"Не можеш да изгониш лидер!");
return 1;
}
if(para1[playerid]==playerid)
{
SendClientMessage(playerid,0xB4B5B7FF,"Не можеш да изгониш себе си!");
return 1;
}
if(PlayerInfo[para1[playerid]][pTeam]==PlayerInfo[playerid][pTeam])
{
format(string256, 256, "[FACTION CHAT] %s изгони %s от %s!", pname[playerid],pname[para1[playerid]],TeamInfo[PlayerInfo[playerid][pTeam]][tName]);
for(new i = 0; i < MAX_PLAYERS; i++)
{
if(PlayerInfo[i][pTeam] == PlayerInfo[playerid][pTeam])
{
SendClientMessage(i,0x33CCFFFF, string256);
}
}
LeaveGangPlayerAffect(para1[playerid]);
}
else
{
SendClientMessage(playerid,0xB4B5B7FF,"Човекът, който искаш да изгониш не е от твоята банда/мафия!");
}
}
else
{
SendClientMessage(playerid,0xB4B5B7FF,"Посоченото ID не е в сървъра!");
}
return 1;
}
if(strcmp(cmd, "/tunehelp", true) == 0)
{
SendClientMessage(playerid, 0xFFFFFFFF, "Сървърът разполага с два безплатни тунинг гаража.");
SendClientMessage(playerid, 0x008000FF, "Единият се намира в Las Venturas, а другия в Los Santos.");
SendClientMessage(playerid, 0xFF0000FF, "От /tune се отваря менюто за тунинг!");
return 1;
}
if(strcmp(cmd, "/mph", true) == 0)
{
format(string, 256, "* Скороста вече ще я показва в m/s *");
SendClientMessage(playerid, COLOR_YELLOW, string);
kmh[playerid] = 1;
return 1;
}
if(strcmp(cmd, "/kph", true) == 0)
{
format(string, 256, "* Скороста вече ще я показва в km/h *");
SendClientMessage(playerid, COLOR_YELLOW, string);
kmh[playerid] = 0;
return 1;
}
if(strcmp(cmd, "/speedo", true) == 0)
{
if(speedo[playerid] == 0)
{
format(string, 256, "* Вие премахнахте вашия Speedo от екрана *");
SendClientMessage(playerid, COLOR_YELLOW, string);
speedo[playerid]=1;
if(GetPlayerVehicleID(playerid)>-1)
{
TextDrawHideForPlayer(playerid,vehstatus[playerid]);
if(GetVehicleTrailer(GetPlayerVehicleID(playerid))==fuelremarke[0] || GetVehicleTrailer(GetPlayerVehicleID(playerid))==fuelremarke[1] || GetVehicleTrailer(GetPlayerVehicleID(playerid))==fuelremarke[2])
{
TextDrawHideForPlayer(playerid,vehstatus2[playerid]);
}
}
return 1;
}
if(speedo[playerid] == 1)
{
format(string, 256, "* Вие сложихте вашия Speedo на екрана *");
SendClientMessage(playerid, COLOR_YELLOW, string);
speedo[playerid]=0;
if(GetPlayerVehicleID(playerid)>-1)
{
TextDrawShowForPlayer(playerid,vehstatus[playerid]);
if(GetVehicleTrailer(GetPlayerVehicleID(playerid))==fuelremarke[0] || GetVehicleTrailer(GetPlayerVehicleID(playerid))==fuelremarke[1] || GetVehicleTrailer(GetPlayerVehicleID(playerid))==fuelremarke[2])
{
TextDrawShowForPlayer(playerid,vehstatus2[playerid]);
}
}
return 1;
}
return 1;
}
if(strcmp(cmd, "/statistic", true) == 0)
{
if(statisticset[playerid] == 1)
{
format(string256, 256, "* Вие сложихте статистиката на вашия екран *");
SendClientMessage(playerid, 0xFFFF00FF, string256);
TextDrawShowForPlayer(playerid, levelms[playerid]);
TextDrawShowForPlayer(playerid, epeps[playerid]);
TextDrawShowForPlayer(playerid, topText);
statisticset[playerid] = 0;
return 1;
}
if(statisticset[playerid] == 0)
{
format(string256, 256, "* Вие премахнахте статистиката на вашия екран *");
SendClientMessage(playerid, 0xFFFF00FF, string256);
TextDrawHideForPlayer(playerid, epeps[playerid]);
TextDrawHideForPlayer(playerid, levelms[playerid]);
TextDrawHideForPlayer(playerid, topText);
statisticset[playerid] = 1;
}
return 1;
}
else if(strcmp(cmd, "/getleader", true) == 0)
{
if (PlayerInfo[playerid][pAdmin] >= 5)
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /getleader [ID на играч] ");
return 1;
}
para1[playerid] = ReturnUser(tmp);
if(para1[playerid] != INVALID_PLAYER_ID)
{
if(PlayerInfo[para1[playerid]][pRank]<6) return SendClientMessage(playerid, COLOR_GRAD1, "Този играч не е лидер!");
PlayerInfo[para1[playerid]][pDFDuty]=0;
PlayerInfo[para1[playerid]][pRank]=1; PlayerInfo[para1[playerid]][pTeam]=0; GivePlayerEP(para1[playerid],0);
new formatMessage[256];
format(formatMessage,256,"%s премахна лидерството на %s",pname[playerid],pname[para1[playerid]]);
SendClientMessageToAll(COLOR_RTRIADS,formatMessage);
SendClientMessage(para1[playerid],COLOR_RTRIADS, "Твоето лидерство беше премахнато!");
RestartPlayerColor(para1[playerid]);
RestartPlayerSkin(para1[playerid]);
LeaveGangPlayerAffect(para1[playerid]);
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Този играч, който сте въвели не в онлайн в момента");
}
}
else
{
SendClientMessage(playerid,COLOR_GRAD1,"Нямаш достъп до тази административна команда!");
}
return 1;
}
if(strcmp(cmd, "/leavefaction", true) == 0)
{
new length = strlen(cmdtext);
while ((idx < length) && (cmdtext[idx] <= ' '))
{
idx++;
}
new offset = idx;
new result[256];
while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
{
result[idx - offset] = cmdtext[idx];
idx++;
}
result[idx - offset] = EOS;
if(!strlen(result))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /leavefaction [confirm]");
return 1;
}
if(strcmp(result, "confirm", true) != 0)
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /leavefaction [confirm]");
return 1;
}
if(PlayerInfo[playerid][pTeam]==FACTION_CIVILIAN)
{
SendClientMessage(playerid,0xB4B5B7FF,"Ти не си в банда/мафия!");
return 1;
}
if(PlayerInfo[playerid][pRank]==6)
{
format(string256, 256, "%s махна неговото лидерство!",pname[playerid]);
SendClientMessage(para1[playerid], 0xF97804FF, string256);
}
PlayerInfo[playerid][pDFDuty]=0;
for(new i = 0; i < MAX_PLAYERS; i++)
{
if(PlayerInfo[i][pTeam] == PlayerInfo[playerid][pTeam])
{
format(string256, 256, "[FACTION CHAT] %s напусна бандата/мафията по негово желание!", pname[playerid]);
SendClientMessage(i,0x33CCFFFF, string256);
}
}
LeaveGangPlayerAffect(playerid);
return 1;
}
if(strcmp(cmd, "/frespawn", true) == 0)
{
if(PlayerInfo[playerid][pRank] < 6)
{
SendClientMessage(playerid,0xB4B5B7FF,"Нямаш права за да ползваш командата!");
return 1;
}
if(PlayerInfo[playerid][pTeam]==FACTION_VIP)
{
for(new cars=0; cars<MAX_VEHICLES; cars++)
{
if(isVipGangVeh[cars]==true)
{
SetVehicleToRespawn(cars);
}
}
}
else if(PlayerInfo[playerid][pTeam]==FACTION_GROVE)
{
for(new cars=0; cars<MAX_VEHICLES; cars++)
{
if(isGroveGangVeh[cars]==true)
{
SetVehicleToRespawn(cars);
}
}
}
else if(PlayerInfo[playerid][pTeam]==FACTION_BALLAS)
{
for(new cars=0; cars<MAX_VEHICLES; cars++)
{
if(isBallasGangVeh[cars]==true)
{
SetVehicleToRespawn(cars);
}
}
}
else if(PlayerInfo[playerid][pTeam]==FACTION_VAGOS)
{
for(new cars=0; cars<MAX_VEHICLES; cars++)
{
if(isVagosGangVeh[cars]==true)
{
SetVehicleToRespawn(cars);
}
}
}
else if(PlayerInfo[playerid][pTeam]==FACTION_AZTECAS)
{
for(new cars=0; cars<MAX_VEHICLES; cars++)
{
if(isAztecasGangVeh[cars]==true)
{
SetVehicleToRespawn(cars);
}
}
}
else if(PlayerInfo[playerid][pTeam]==FACTION_CRIPZ)
{
for(new cars=0; cars<MAX_VEHICLES; cars++)
{
if(isCripzGangVeh[cars]==true)
{
SetVehicleToRespawn(cars);
}
}
}
else if(PlayerInfo[playerid][pTeam]==FACTION_TRIADS)
{
for(new cars=0; cars<MAX_VEHICLES; cars++)
{
if(isTriadsGangVeh[cars]==true)
{
SetVehicleToRespawn(cars);
}
}
}
else if(PlayerInfo[playerid][pTeam]==FACTION_RIFA)
{
for(new cars=0; cars<MAX_VEHICLES; cars++)
{
if(isRifaGangVeh[cars]==true)
{
SetVehicleToRespawn(cars);
}
}
}
else if(PlayerInfo[playerid][pTeam]==FACTION_SOA)
{
for(new cars=0; cars<MAX_VEHICLES; cars++)
{
if(isSoaGangVeh[cars]==true)
{
SetVehicleToRespawn(cars);
}
}
}
else if(PlayerInfo[playerid][pTeam]==FACTION_NANG)
{
for(new cars=0; cars<MAX_VEHICLES; cars++)
{
if(isNangGangVeh[cars]==true)
{
SetVehicleToRespawn(cars);
}
}
}
else if(PlayerInfo[playerid][pTeam]==FACTION_ITALIAN)
{
for(new cars=0; cars<MAX_VEHICLES; cars++)
{
if(isItalianGangVeh[cars]==true)
{
SetVehicleToRespawn(cars);
}
}
}
else if(PlayerInfo[playerid][pTeam]==FACTION_BOUNTY)
{
for(new cars=0; cars<MAX_VEHICLES; cars++)
{
if(isBountyGangVeh[cars]==true)
{
SetVehicleToRespawn(cars);
}
}
}
else if(PlayerInfo[playerid][pTeam]==FACTION_LSPD)
{
for(new cars=0; cars<MAX_VEHICLES; cars++)
{
if(isLspdGangVeh[cars]==true)
{
SetVehicleToRespawn(cars);
}
}
}
else if(PlayerInfo[playerid][pTeam]==FACTION_LVPD)
{
for(new cars=0; cars<MAX_VEHICLES; cars++)
{
if(isLvpdGangVeh[cars]==true)
{
SetVehicleToRespawn(cars);
}
}
}
else if(PlayerInfo[playerid][pTeam]==FACTION_DELTAFORCE)
{
for(new cars=0; cars<MAX_VEHICLES; cars++)
{
if(isDeltaForceGangVeh[cars]==true)
{
SetVehicleToRespawn(cars);
}
}
}
else if(PlayerInfo[playerid][pTeam]==FACTION_SOLDIER)
{
for(new cars=0; cars<MAX_VEHICLES; cars++)
{
if(isSoldierGangVeh[cars]==true)
{
SetVehicleToRespawn(cars);
}
}
}
else if(PlayerInfo[playerid][pTeam]==FACTION_YAKUZA)
{
for(new cars=0; cars<MAX_VEHICLES; cars++)
{
if(isYakuzaGangVeh[cars]==true)
{
SetVehicleToRespawn(cars);
}
}
}
else if(PlayerInfo[playerid][pTeam]==FACTION_SYNDICATE)
{
for(new cars=0; cars<MAX_VEHICLES; cars++)
{
if(isSyndicateGangVeh[cars]==true)
{
SetVehicleToRespawn(cars);
}
}
}
else if(PlayerInfo[playerid][pTeam]==FACTION_BLOODMAFIA)
{
for(new cars=0; cars<MAX_VEHICLES; cars++)
{
if(isBloodMafiaGangVeh[cars]==true)
{
SetVehicleToRespawn(cars);
}
}
}
else if(PlayerInfo[playerid][pTeam]==FACTION_MS13)
{
for(new cars=0; cars<MAX_VEHICLES; cars++)
{
if(isMS13GangVeh[cars]==true)
{
SetVehicleToRespawn(cars);
}
}
}
else if(PlayerInfo[playerid][pTeam]==FACTION_BGMAFIA)
{
for(new cars=0; cars<MAX_VEHICLES; cars++)
{
if(isBGMafiaGangVeh[cars]==true)
{
SetVehicleToRespawn(cars);
}
}
}
else if(PlayerInfo[playerid][pTeam]==FACTION_343)
{
for(new cars=0; cars<MAX_VEHICLES; cars++)
{
if(is343GangVeh[cars]==true)
{
SetVehicleToRespawn(cars);
}
}
}
for(new i = 0; i < MAX_PLAYERS; i++)
{
if(PlayerInfo[i][pTeam] == PlayerInfo[playerid][pTeam])
{
format(string256, 256, "[FACTION CHAT] All Vehicles has been respawned by %s", pname[playerid]);
SendClientMessage(i,0x33CCFFFF, string256);
}
}
return 1;
}
if(strcmp(cmd, "/frefuel", true) == 0)
{
if(PlayerInfo[playerid][pRank] < 6)
{
SendClientMessage(playerid,0xB4B5B7FF,"Нямаш права за да ползваш командата!");
return 1;
}
if(PlayerInfo[playerid][pTeam]==FACTION_VIP)
{
for(new cars=0; cars<MAX_VEHICLES; cars++)
{
if(isVipGangVeh[cars]==true)
{
vehfuel[cars] = 100;
}
}
}
else if(PlayerInfo[playerid][pTeam]==FACTION_GROVE)
{
for(new cars=0; cars<MAX_VEHICLES; cars++)
{
if(isGroveGangVeh[cars]==true)
{
vehfuel[cars] = 100;
}
}
}
else if(PlayerInfo[playerid][pTeam]==FACTION_BALLAS)
{
for(new cars=0; cars<MAX_VEHICLES; cars++)
{
if(isBallasGangVeh[cars]==true)
{
vehfuel[cars] = 100;
}
}
}
else if(PlayerInfo[playerid][pTeam]==FACTION_VAGOS)
{
for(new cars=0; cars<MAX_VEHICLES; cars++)
{
if(isVagosGangVeh[cars]==true)
{
vehfuel[cars] = 100;
}
}
}
else if(PlayerInfo[playerid][pTeam]==FACTION_AZTECAS)
{
for(new cars=0; cars<MAX_VEHICLES; cars++)
{
if(isAztecasGangVeh[cars]==true)
{
vehfuel[cars] = 100;
}
}
}
else if(PlayerInfo[playerid][pTeam]==FACTION_CRIPZ)
{
for(new cars=0; cars<MAX_VEHICLES; cars++)
{
if(isCripzGangVeh[cars]==true)
{
vehfuel[cars] = 100;
}
}
}
else if(PlayerInfo[playerid][pTeam]==FACTION_TRIADS)
{
for(new cars=0; cars<MAX_VEHICLES; cars++)
{
if(isTriadsGangVeh[cars]==true)
{
vehfuel[cars] = 100;
}
}
}
else if(PlayerInfo[playerid][pTeam]==FACTION_RIFA)
{
for(new cars=0; cars<MAX_VEHICLES; cars++)
{
if(isRifaGangVeh[cars]==true)
{
vehfuel[cars] = 100;
}
}
}
else if(PlayerInfo[playerid][pTeam]==FACTION_SOA)
{
for(new cars=0; cars<MAX_VEHICLES; cars++)
{
if(isSoaGangVeh[cars]==true)
{
vehfuel[cars] = 100;
}
}
}
else if(PlayerInfo[playerid][pTeam]==FACTION_NANG)
{
for(new cars=0; cars<MAX_VEHICLES; cars++)
{
if(isNangGangVeh[cars]==true)
{
vehfuel[cars] = 100;
}
}
}
else if(PlayerInfo[playerid][pTeam]==FACTION_ITALIAN)
{
for(new cars=0; cars<MAX_VEHICLES; cars++)
{
if(isItalianGangVeh[cars]==true)
{
vehfuel[cars] = 100;
}
}
}
else if(PlayerInfo[playerid][pTeam]==FACTION_BOUNTY)
{
for(new cars=0; cars<MAX_VEHICLES; cars++)
{
if(isBountyGangVeh[cars]==true)
{
vehfuel[cars] = 100;
}
}
}
else if(PlayerInfo[playerid][pTeam]==FACTION_LSPD)
{
for(new cars=0; cars<MAX_VEHICLES; cars++)
{
if(isLspdGangVeh[cars]==true)
{
vehfuel[cars] = 100;
}
}
}
else if(PlayerInfo[playerid][pTeam]==FACTION_LVPD)
{
for(new cars=0; cars<MAX_VEHICLES; cars++)
{
if(isLvpdGangVeh[cars]==true)
{
vehfuel[cars] = 100;
}
}
}
else if(PlayerInfo[playerid][pTeam]==FACTION_DELTAFORCE)
{
for(new cars=0; cars<MAX_VEHICLES; cars++)
{
if(isDeltaForceGangVeh[cars]==true)
{
vehfuel[cars] = 100;
}
}
}
else if(PlayerInfo[playerid][pTeam]==FACTION_SOLDIER)
{
for(new cars=0; cars<MAX_VEHICLES; cars++)
{
if(isSoldierGangVeh[cars]==true)
{
vehfuel[cars] = 100;
}
}
}
else if(PlayerInfo[playerid][pTeam]==FACTION_YAKUZA)
{
for(new cars=0; cars<MAX_VEHICLES; cars++)
{
if(isYakuzaGangVeh[cars]==true)
{
vehfuel[cars] = 100;
}
}
}
else if(PlayerInfo[playerid][pTeam]==FACTION_SYNDICATE)
{
for(new cars=0; cars<MAX_VEHICLES; cars++)
{
if(isSyndicateGangVeh[cars]==true)
{
vehfuel[cars] = 100;
}
}
}
else if(PlayerInfo[playerid][pTeam]==FACTION_BLOODMAFIA)
{
for(new cars=0; cars<MAX_VEHICLES; cars++)
{
if(isBloodMafiaGangVeh[cars]==true)
{
vehfuel[cars] = 100;
}
}
}
else if(PlayerInfo[playerid][pTeam]==FACTION_MS13)
{
for(new cars=0; cars<MAX_VEHICLES; cars++)
{
if(isMS13GangVeh[cars]==true)
{
vehfuel[cars] = 100;
}
}
}
else if(PlayerInfo[playerid][pTeam]==FACTION_BGMAFIA)
{
for(new cars=0; cars<MAX_VEHICLES; cars++)
{
if(isBGMafiaGangVeh[cars]==true)
{
vehfuel[cars] = 100;
}
}
}
else if(PlayerInfo[playerid][pTeam]==FACTION_343)
{
for(new cars=0; cars<MAX_VEHICLES; cars++)
{
if(is343GangVeh[cars]==true)
{
vehfuel[cars] = 100;
}
}
}
for(new i = 0; i < MAX_PLAYERS; i++)
{
if(PlayerInfo[i][pTeam] == PlayerInfo[playerid][pTeam])
{
format(string256, 256, "[FACTION CHAT] %s зареди всички превозни средства със 100 литра бензин!", pname[playerid]);
SendClientMessage(i,0x33CCFFFF, string256);
}
}
return 1;
}
if(strcmp(cmd, "/setrankname", true) == 0)
{
if (PlayerInfo[playerid][pRank]>5 && PlayerInfo[playerid][pTeam]>0)
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /setrankname [1-6] [name]");
return 1;
}
new rnkid = strval(tmp);
new length = strlen(cmdtext);
while ((idx < length) && (cmdtext[idx] <= ' '))
{
idx++;
}
new offset = idx;
new result[256];
while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
{
result[idx - offset] = cmdtext[idx];
idx++;
}
result[idx - offset] = EOS;
if(!strlen(result))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /setrankname [1-6] [name]");
return 1;
}
if(rnkid < 1 || rnkid > 6)
{
SendClientMessage(playerid, 0xB4B5B7FF, "Невалиден ранк!");
return 1;
}
if(strlen(result)<1 || strlen(result)>25) return SendClientMessage(playerid, 0xB4B5B7FF, "Символите трябва да бъдат между 1 и 25 знака!");
if(strfind( result , "||", true) == 0 || strfind( result , "|", true ) == 0 || strfind( result , "~", true ) == 0 || strfind( result , ",", true ) == 0)
{
return SendClientMessage(playerid,0xB4B5B7FF,"Ти не можеш да използваш забранени символи!");
}
if(rnkid==1)
{
format(string256, 256, "[FACTION CHAT] %s промени името на ранк: %d(%s) на: %s", pname[playerid], rnkid, TeamInfo[PlayerInfo[playerid][pTeam]][tRank1],result);
for(new i222;i222<MAX_PLAYERS;i222++)
{
if(PlayerInfo[playerid][pTeam]==PlayerInfo[i222][pTeam])
{
SendClientMessage(i222, 0x33CCFFFF, string256);
}
}
format(TeamInfo[PlayerInfo[playerid][pTeam]][tRank1], 256, "%s",result);
}
if(rnkid==2)
{
format(string256, 256, "[FACTION CHAT] %s промени името на ранк: %d(%s) на: %s", pname[playerid], rnkid, TeamInfo[PlayerInfo[playerid][pTeam]][tRank2],result);
for(new i222;i222<MAX_PLAYERS;i222++)
{
if(PlayerInfo[playerid][pTeam]==PlayerInfo[i222][pTeam])
{
SendClientMessage(i222, 0x33CCFFFF, string256);
}
}
format(TeamInfo[PlayerInfo[playerid][pTeam]][tRank2], 256, "%s",result);
}
if(rnkid==3)
{
format(string256, 256, "[FACTION CHAT] %s промени името на ранк: %d(%s) на: %s", pname[playerid], rnkid, TeamInfo[PlayerInfo[playerid][pTeam]][tRank3],result);
for(new i222;i222<MAX_PLAYERS;i222++)
{
if(PlayerInfo[playerid][pTeam]==PlayerInfo[i222][pTeam])
{
SendClientMessage(i222, 0x33CCFFFF, string256);
}
}
format(TeamInfo[PlayerInfo[playerid][pTeam]][tRank3], 256, "%s",result);
}
if(rnkid==4)
{
format(string256, 256, "[FACTION CHAT] %s промени името на ранк: %d(%s) на: %s", pname[playerid], rnkid, TeamInfo[PlayerInfo[playerid][pTeam]][tRank4],result);
for(new i222;i222<MAX_PLAYERS;i222++)
{
if(PlayerInfo[playerid][pTeam]==PlayerInfo[i222][pTeam])
{
SendClientMessage(i222, 0x33CCFFFF, string256);
}
}
format(TeamInfo[PlayerInfo[playerid][pTeam]][tRank4], 256, "%s",result);
}
if(rnkid==5)
{
format(string256, 256, "[FACTION CHAT] %s промени името на ранк: %d(%s) на: %s", pname[playerid], rnkid, TeamInfo[PlayerInfo[playerid][pTeam]][tRank5],result);
for(new i222;i222<MAX_PLAYERS;i222++)
{
if(PlayerInfo[playerid][pTeam]==PlayerInfo[i222][pTeam])
{
SendClientMessage(i222, 0x33CCFFFF, string256);
}
}
format(TeamInfo[PlayerInfo[playerid][pTeam]][tRank5], 256, "%s",result);
}
if(rnkid==6)
{
format(string256, 256, "[FACTION CHAT] %s промени името на ранк: %d(%s) на: %s", pname[playerid], rnkid, TeamInfo[PlayerInfo[playerid][pTeam]][tRank6],result);
for(new i222;i222<MAX_PLAYERS;i222++)
{
if(PlayerInfo[playerid][pTeam]==PlayerInfo[i222][pTeam])
{
SendClientMessage(i222, 0x33CCFFFF, string256);
}
}
format(TeamInfo[PlayerInfo[playerid][pTeam]][tRank6], 256, "%s",result);
}
new gangg[64]; format(gangg, 64, "/Teams/%d.ini", PlayerInfo[playerid][pTeam]);
if(rnkid==1) dini_Set(gangg,"tRank1",result);
if(rnkid==2) dini_Set(gangg,"tRank2",result);
if(rnkid==3) dini_Set(gangg,"tRank3",result);
if(rnkid==4) dini_Set(gangg,"tRank4",result);
if(rnkid==5) dini_Set(gangg,"tRank5",result);
if(rnkid==6) dini_Set(gangg,"tRank6",result);
}
else
{
SendClientMessage(playerid, 0xB4B5B7FF, "Нямаш права за да ползваш командата!");
return 1;
}
return 1;
}
if(strcmp(cmd, "/setrank", true) == 0)
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /setrank [playerid] [rank]");
return 1;
}
new level2;
para1[playerid] = ReturnUser(tmp);
tmp = strtok(cmdtext, idx);
level2 = strval(tmp);
new ranktext[256];
switch(PlayerInfo[para1[playerid]][pRank])
{
case 1: format(ranktext, 256, "%s", TeamInfo[PlayerInfo[para1[playerid]][pTeam]][tRank1]);
case 2: format(ranktext, 256, "%s", TeamInfo[PlayerInfo[para1[playerid]][pTeam]][tRank2]);
case 3: format(ranktext, 256, "%s", TeamInfo[PlayerInfo[para1[playerid]][pTeam]][tRank3]);
case 4: format(ranktext, 256, "%s", TeamInfo[PlayerInfo[para1[playerid]][pTeam]][tRank4]);
case 5: format(ranktext, 256, "%s", TeamInfo[PlayerInfo[para1[playerid]][pTeam]][tRank5]);
case 6: format(ranktext, 256, "%s", TeamInfo[PlayerInfo[para1[playerid]][pTeam]][tRank6]);
}
if(PlayerInfo[para1[playerid]][pTeam]!=PlayerInfo[playerid][pTeam]) return SendClientMessage(playerid,0xB4B5B7FF,"Този играч не е от твоята банда/мафия!");
if(para1[playerid]==playerid) return SendClientMessage(playerid,0xB4B5B7FF,"Не можеш да смениш своя ранк!");
if(PlayerInfo[playerid][pRank]<6) return SendClientMessage(playerid,0xB4B5B7FF,"Ти не си лидер!");
if(level2>5||level2<1) return SendClientMessage(playerid,0xB4B5B7FF,"Ранковете са от 1 до 5!");
PlayerInfo[para1[playerid]][pRank]=level2;
format(string256, 256, "%s промени твоят ранк на %s(%d)", pname[playerid],ranktext,level2);
SendClientMessage(para1[playerid],0x33CCFFFF, string256);
for(new i = 0; i < MAX_PLAYERS; i++)
{
if(PlayerInfo[i][pTeam] == PlayerInfo[playerid][pTeam])
{
format(string256, 256, "[FACTION CHAT] %s промени ранка на %s на %s(%d)", pname[playerid],pname[para1[playerid]],ranktext,level2);
SendClientMessage(i,0x33CCFFFF, string256);
}
}
RestartPlayerSkin(playerid);
return 1;
}
if (strcmp(cmd, "/check", true) == 0)
{
if (PlayerInfo[playerid][pAdmin] >= 2)
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /check [playerid]");
return 1;
}
new giveplayerid = ReturnUser(tmp);
if(IsPlayerConnected(giveplayerid))
{
ShowPlayerStats(playerid, giveplayerid);
}
else
{
SendClientMessage(playerid, 0xB4B5B7FF, "Посоченото ID не е в сървъра!");
}
}
else
{
SendClientMessage(playerid, 0xB4B5B7FF, "Нямаш права за да ползваш командата!");
}
return 1;
}
if(strcmp(cmd, "/stats", true)==0)
{
ShowPlayerStats(playerid, playerid);
return 1;
}
if(strcmp(cmd, "/dfrules", true) == 0)
{
if(PlayerInfo[playerid][pTeam] == 15)
{
new cmds[2230];
strins(cmds,"{626200}Delta Force правила\n",strlen(cmds));
strins(cmds,"{FFFFFF}Забранен е боят помежду играчите в Delta Force {626200}(+ 1 Faction Warn)\n",strlen(cmds));
strins(cmds,"{FFFFFF}Забранено е спаменето в Faction чата {626200}(По преценка на лидера)\n",strlen(cmds));
strins(cmds,"{FFFFFF}Забранени са лъжите във Faction чата {626200}(По преценка на лидера)\n",strlen(cmds));
strins(cmds,"{FFFFFF}Забранено е да биете банди с които сме в мир {626200}(+ 1 Faction Warn)\n",strlen(cmds));
strins(cmds,"{FFFFFF}Забранено е да се използват Special Force превозните средства, освен по команда на лидера {626200}(+ 1 Faction Warn)\n",strlen(cmds));
ShowPlayerDialog(playerid,3500,DIALOG_STYLE_MSGBOX,"Правила",cmds,"Изход","");
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си член на Delta Force!");
}
return 1;
}
if(strcmp(cmd, "/factioncommands", true)==0 || strcmp(cmd, "/fcmds", true)==0)
{
if (PlayerInfo[playerid][pTeam] == 0)
{
SendClientMessage(playerid,0xB4B5B7FF,"Ти не си в банда/мафия!");
}
if(PlayerInfo[playerid][pTeam] == 15)
{
SendClientMessage(playerid, 0xA4A400FF,"Delta Force: {FFFFFF}/hidedf /showdf /specialforce /unspecialforce /dfrules /dfcars");
}
if(PlayerInfo[playerid][pTeam] == 1)
{
SendClientMessage(playerid,0xFF4500FF,"VIP: {FFFFFF}/ls /lv /vipbase");
SendClientMessage(playerid,0xFF4500FF,"VIP Leader: {FFFFFF}/frefuel /frespawn");
}
if(PlayerInfo[playerid][pTeam] == 2)
{
SendClientMessage(playerid,0x33AA33FF,"Grove Leader: {FFFFFF}/frefuel /frespawn");
}
if(PlayerInfo[playerid][pTeam] == 3)
{
SendClientMessage(playerid,0xBC73DEFF,"Ballas Leader: {FFFFFF}/frefuel /frespawn");
}
if(PlayerInfo[playerid][pTeam] == 4)
{
SendClientMessage(playerid,0xDFEF1FFF,"Vagos Leader: {FFFFFF}/frefuel /frespawn");
}
if(PlayerInfo[playerid][pTeam] == 5)
{
SendClientMessage(playerid,0x00BFFFAA,"Aztecas Leader: {FFFFFF}/frefuel /frespawn");
}
if(PlayerInfo[playerid][pTeam] == 6)
{
SendClientMessage(playerid,0x0000CCFF,"Cripz Leader: {FFFFFF}/frefuel /frespawn");
}
//<--------------------------------->
if(PlayerInfo[playerid][pTeam] == 7)
{
SendClientMessage(playerid,0xF97804FF,"Triads Leader: {FFFFFF}/frefuel /frespawn");
}
if(PlayerInfo[playerid][pTeam] == 8)
{
SendClientMessage(playerid,COLOR_STREETRACE,"Rifa Leader: {FFFFFF}/frefuel /frespawn");
}
if(PlayerInfo[playerid][pTeam] == 9)
{
SendClientMessage(playerid,0x7F7F7FFF,"Soa Leader: {FFFFFF}/frefuel /frespawn");
}
if(PlayerInfo[playerid][pTeam] == 10)
{
SendClientMessage(playerid,0x4D2C2FFF,"Da Nang Boys Leader: {FFFFFF}/frefuel /frespawn");
}
if(PlayerInfo[playerid][pTeam] == 11)
{
SendClientMessage(playerid,0xA9F5E1FF,"Italian Mafia Leader: {FFFFFF}/frefuel /frespawn");
}
if(PlayerInfo[playerid][pTeam] == 12)
{
SendClientMessage(playerid,0x8ADB3FFF,"Bounty Hunters Leader: {FFFFFF}/frefuel /frespawn");
}
if(PlayerInfo[playerid][pTeam] == 13)
{
SendClientMessage(playerid,0x0040FFFF,"LSPD Leader: {FFFFFF}/frefuel /frespawn");
}
if(PlayerInfo[playerid][pTeam] == 14)
{
SendClientMessage(playerid,0x0040FFFF,"LVPD Leader: {FFFFFF}/frefuel /frespawn");
}
//<--------------------------------->
if(PlayerInfo[playerid][pTeam]==FACTION_DELTAFORCE)
{
SendClientMessage(playerid,0xA4A400FF,"Delta Force Leader: {FFFFFF}/frefuel /frespawn");
}
if(PlayerInfo[playerid][pTeam]==FACTION_SOLDIER)
{
SendClientMessage(playerid,COLOR_RSOLDIER,"Soldier Boys Leader: {FFFFFF}/frefuel /frespawn");
}
if(PlayerInfo[playerid][pTeam]==FACTION_YAKUZA)
{
SendClientMessage(playerid,COLOR_RYAKUZA,"Yakuza Leader: {FFFFFF}/frefuel /frespawn");
}
if(PlayerInfo[playerid][pTeam]==FACTION_SYNDICATE)
{
SendClientMessage(playerid,COLOR_RSYNDICATE,"Syndicate Texas Leader: {FFFFFF}/frefuel /frespawn");
}
if(PlayerInfo[playerid][pTeam]==FACTION_BLOODMAFIA)
{
SendClientMessage(playerid,COLOR_RBLOODMAFIA,"Blood Mafia Leader: {FFFFFF}/frefuel /frespawn");
}
if(PlayerInfo[playerid][pTeam]==FACTION_MS13)
{
SendClientMessage(playerid,COLOR_RMS13,"Mara Salvatrucha 13 Leader: {FFFFFF}/frefuel /frespawn");
}
if(PlayerInfo[playerid][pTeam]==FACTION_BGMAFIA)
{
SendClientMessage(playerid,COLOR_RBGM,"Bulgarian Mafia Leader: {FFFFFF}/frefuel /frespawn");
}
if(PlayerInfo[playerid][pTeam]==FACTION_343)
{
SendClientMessage(playerid,COLOR_R343,"343 Black Street Avenue Leader: {FFFFFF}/frefuel /frespawn");
}
return 1;
}
if(strcmp(cmd, "/transfer", true) == 0)
{
if(IsPlayerInRangeOfPoint(playerid, 3, 2316.6213,-9.9516,26.7422))
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /transfer [playerid] [money]");
return 1;
}
new duel = strval(tmp);
para1[playerid] = ReturnUser(tmp);
tmp = strtok(cmdtext, idx);
duel = strval(tmp);
if(para1[playerid] != INVALID_PLAYER_ID)
{
if (PlayerInfo[playerid][pAccount]<duel) return SendClientMessage(playerid,0xB4B5B7FF,"Нямаш толкова пари в общата си сума!");
if(duel < 1 || duel > 1000000) return SendClientMessage(playerid, 0xB4B5B7FF, "Парите трябва да са от 1 до 1 000 000 !");
if(para1[playerid] == playerid) return SendClientMessage(playerid, 0xB4B5B7FF, "Не можеш да дадеш на себеси пари!");
format(string256, 256, "%s изпрати пари в твоята обща сума на стойност $%d.",pname[playerid], duel);
SendClientMessage(para1[playerid], 0xFFFF00FF,string256);
format(string256, 256, "Ти изпрати $%d в общата сума на %s.",duel ,pname[para1[playerid]]);
SendClientMessage(playerid, 0xFFFFFFFF,string256);
PlayerInfo[playerid][pAccount] -= duel;
PlayerInfo[para1[playerid]][pAccount] += duel;
}
else
{
SendClientMessage(playerid,0xB4B5B7FF,"Посоченото ID не е в сървъра!");
}
}
else
{
SendClientMessage(playerid,0xB4B5B7FF, "Трябва да си близо в банката, за да ползваш командата!");
}
return 1;
}

if(strcmp(cmd, "/santahat", true)==0)
{
if(month==12)
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /santahat [1-3]");
return 1;
}
new hatID = strval(tmp);
if(hatID==1) santaHatObject[playerid] = SetPlayerAttachedObject(playerid, 9, 19064, 2, 0.120000, 0.040000, -0.003500, 0, 100, 100, 1.4, 1.4,1.4);
if(hatID==2) santaHatObject[playerid] = SetPlayerAttachedObject(playerid, 9, 19065, 2, 0.120000, 0.040000, -0.003500, 0, 100, 100, 1.4, 1.4,1.4);
if(hatID==3) santaHatObject[playerid] = SetPlayerAttachedObject(playerid, 9, 19066, 2, 0.120000, 0.040000, -0.003500, 0, 100, 100, 1.4, 1.4,1.4);
SendClientMessage(playerid, 0xFFFFFFFF, "SERVER: Използвай бутоните за да нагласиш обжекта. Когато си готов натисни дискетата или ESC за да се сейфа!");
EditAttachedObject(playerid, 9);
santaHat[playerid]=true;
return 1;
}
}

if(strcmp(cmd, "/removehat", true)==0)
{
if(month==12)
{
if(santaHat[playerid]==true)
{
SendClientMessage(playerid,0xFFFFFFFF,"SERVER: Ти премахна твоята шапка!");
santaHat[playerid]=false;
RemovePlayerAttachedObject(playerid, 9);
}
else if(santaHat[playerid]==false)
{
SendClientMessage(playerid,COLOR_GRAD1,"Нямаш закачена шапка на себе си!");
}
}
return 1;
}
if(strcmp(cmd, "/removegps", true)==0)
{
if(gpsOn[playerid]==false) return SendClientMessage(playerid,0xB4B5B7FF,"Ти нямаш сложена GPS локация!");
DisablePlayerCheckpoint(playerid);
return 1;
}
if(strcmp(cmd, "/bank", true)==0)
{
if(IsPlayerInRangeOfPoint(playerid, 3, 2316.6213,-9.9516,26.7422))
{
ShowPlayerDialog(playerid, 19, DIALOG_STYLE_LIST, "Банка", "Обща сума\nИзтегли пари\nВнеси пари", "Избери", "Назад");
}
else
{
SendClientMessage(playerid,0xB4B5B7FF, "Трябва да си в банката, за да ползваш командата!");
}
return 1;
}
if(strcmp(cmd, "/atm", true)==0)
{
if(IsPlayerInRangeOfPoint(playerid, 3, 1539.162475, -1613.974609, 13.134112)
|| IsPlayerInRangeOfPoint(playerid, 3,387.170196, -1827.512084, 7.415833)
|| IsPlayerInRangeOfPoint(playerid, 3, 378.918457, -2060.627929, 7.453046)
|| IsPlayerInRangeOfPoint(playerid, 3, 672.134521, -503.247589, 15.964093)
|| IsPlayerInRangeOfPoint(playerid, 3, 2490.404541, 923.318664, 10.840134)
|| IsPlayerInRangeOfPoint(playerid, 3, 2181.033691, 2462.734130, 10.424777)
|| IsPlayerInRangeOfPoint(playerid, 3, -174.470657, 1138.796386, 19.313276)
|| IsPlayerInRangeOfPoint(playerid, 3, -1486.528686, 2583.155517, 55.317409)
|| IsPlayerInRangeOfPoint(playerid, 3, -2492.394775, 2366.457519, 9.587511)
|| IsPlayerInRangeOfPoint(playerid, 3, 1239.006103, -2041.014038, 59.432590)
|| IsPlayerInRangeOfPoint(playerid, 3, 210.3416,1808.8025,21.8672)
|| IsPlayerInRangeOfPoint(playerid, 3, 2194.2756,1986.2014,12.2969)
|| IsPlayerInRangeOfPoint(playerid, 3, 398.4085,-1805.4634,7.8379))
{
//ApplyAnimation(playerid,"INT_SHOP","shop_pay",4.0,1,0,0,0,0);
ShowPlayerDialog(playerid, 5, DIALOG_STYLE_LIST, "Банкомат", "Обща сума\nИзтегли пари\nПлати нарушение", "Избери", "Назад");
}
else
{
SendClientMessage(playerid,0xB4B5B7FF, "Трябва да си близо до банкомат, за да ползваш командата!");
}
return 1;
}
if(strcmp(cmd, "/fhelp", true)==0)
{
new string2230[512]; new string2230result[1500];
format(string2230,512,"{00FF00}---Команди за банда/мафия---\n\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/acceptfaction(/af) - приемате покана\n");
strcat(string2230result, string2230);
format(string2230,512,"{008000}/cancelfaction(/cf) - отказвате покана\n");
strcat(string2230result, string2230);
format(string2230,512,"{FF0000}/faction(/f) - пишете в чата на банда/мафията\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/leavefaction - напускате бандата\n");
strcat(string2230result, string2230);
format(string2230,512,"{008000}/members - показва онлайн играчите от вашата банда/мафия\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/fignore - за да игнорираш някой да не му виждаш съобщенията във FACTION чата\n");
strcat(string2230result, string2230);
format(string2230,512,"{008000}/funignore - за да премахнеш игнорирането на играч и да му виждаш съобщенията във FACTION чата\n");
strcat(string2230result, string2230);
format(string2230,512,"{FF0000}/factioncommands(/fcmds) - показва командите, които са само за определа банда/мафия\n");
strcat(string2230result, string2230);
ShowPlayerDialog(playerid,9,DIALOG_STYLE_MSGBOX,"{33CCFF}FACTION HELP",string2230result,"Други","Затвори");
return 1;
}
if(strcmp(cmd, "/buyws", true) == 0)
{
new length = strlen(cmdtext);
while ((idx < length) && (cmdtext[idx] <= ' '))
{
idx++;
}
new offset = idx;
new result[256];
while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
{
result[idx - offset] = cmdtext[idx];
idx++;
}
result[idx - offset] = EOS;
if(!strlen(result))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /buyws [confirm]");
return 1;
}
if(strcmp(result, "confirm", true) != 0)
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /buyws [confirm]");
return 1;
}
if(PlayerInfo[playerid][pWeaponS]>9)
{
format(string256,256,"Ти вече достигна 10 Weapon Skill!");
SendClientMessage(playerid,0xB4B5B7FF,string256);
return 1;
}
if(PlayerInfo[playerid][pEP]<10 && PlayerInfo[playerid][pWeaponS]>4 && PlayerInfo[playerid][pWeaponS]<7)
{
format(string256,256,"Трябват ти 10 EP за да вдигнеш твоя Weapon Skill!");
SendClientMessage(playerid,0xB4B5B7FF,string256);
return 1;
}
if(PlayerInfo[playerid][pEP]<20 && PlayerInfo[playerid][pWeaponS]>7)
{
format(string256,256,"Трябват ти 20 EP за да вдигнеш твоя Weapon Skill!");
SendClientMessage(playerid,0xB4B5B7FF,string256);
return 1;
}
if(PlayerInfo[playerid][pEP]<5 && PlayerInfo[playerid][pWeaponS]<4)
{
format(string256,256,"Трябват ти 5 EP за да вдигнеш твоя Weapon Skill!");
SendClientMessage(playerid,0xB4B5B7FF,string256);
return 1;
}
PlayerInfo[playerid][pWeaponS]+=1;
format(string256,256,"Поздравления Ти вдигна твоя Weapon Skill на %d!",PlayerInfo[playerid][pWeaponS]);
SendClientMessage(playerid,0xF97804FF,string256);
if(PlayerInfo[playerid][pWeaponS]<4)
{
PlayerInfo[playerid][pEP]-=5;
GivePlayerEP(playerid,0);
return 1;
}
if(PlayerInfo[playerid][pWeaponS]>4 && PlayerInfo[playerid][pWeaponS]<7)
{
GivePlayerEP(playerid,-10);
return 1;
}
if(PlayerInfo[playerid][pWeaponS]>7)
{
GivePlayerEP(playerid,-20);
return 1;
}
return 1;
}
if(strcmp(cmd, "/buylevel", true) == 0)
{
if(PlayerInfo[playerid][pEP]<PlayerInfo[playerid][pLevel]+6)
{
format(string256,256,"Трябват ти %d EP за да вдигнеш твоя Level!",PlayerInfo[playerid][pLevel]+6);
SendClientMessage(playerid,0xB4B5B7FF,string256);
return 1;
}
GivePlayerEP(playerid,-(PlayerInfo[playerid][pLevel]+6));
GivePlayerLevel(playerid,1);
SetPlayerScore(playerid, PlayerInfo[playerid][pLevel]);
GivePlayerEP(playerid,0);
GivePlayerLevel(playerid,0);
format(string256,256,"Честито, ти вдигна своето ниво на %d!",PlayerInfo[playerid][pLevel]);
SendClientMessage(playerid,0xF97804FF,string256);
return 1;
}
if(strcmp(cmd, "/buyes", true) == 0)
{
new length = strlen(cmdtext);
while ((idx < length) && (cmdtext[idx] <= ' '))
{
idx++;
}
new offset = idx;
new result[256];
while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
{
result[idx - offset] = cmdtext[idx];
idx++;
}
result[idx - offset] = EOS;
if(!strlen(result))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /buyes [confirm]");
return 1;
}
if(strcmp(result, "confirm", true) != 0)
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /buyes [confirm]");
return 1;
}
if(PlayerInfo[playerid][pEPS]==0)
{
if(PlayerInfo[playerid][pEP]<PlayerInfo[playerid][pLevel]+6)
{
format(string256,256,"Трябват ти 50 EP за да вдигнеш твоя EP Skill!");
SendClientMessage(playerid,0xB4B5B7FF,string256);
return 1;
}
PlayerInfo[playerid][pEP]-=50;
GivePlayerEPS(playerid,1);
format(string256,256,"* Честито, ти вдигна твоя EP Skill на 1, Поздравления! *",PlayerInfo[playerid][pEPS]);
return SendClientMessage(playerid,0xF97804FF,string256);
}
//----------------------------------------------------------------------------------------------//
if(PlayerInfo[playerid][pEPS]>199) return SendClientMessage(playerid,0xB4B5B7FF,"Ти вече си достигнал 200 EP Skill и не можеш да си купиш повече!");
if(PlayerInfo[playerid][pEPS]>0)
{
new nextl=PlayerInfo[playerid][pEPS]*2;
if(PlayerInfo[playerid][pEP]<nextl*50)
{
format(string256,256,"Трябват ти %d EP за да вдигнеш твоя EP Skill!",PlayerInfo[playerid][pEPS]*50);
SendClientMessage(playerid,0xB4B5B7FF,string256);
return 1;
}
PlayerInfo[playerid][pEP]-=nextl*50;
GivePlayerEPS(playerid,1);
format(string256,256,"* Честито, ти вдигна твоя EP Skill на %d, Поздравления! *",PlayerInfo[playerid][pEPS]);
SendClientMessage(playerid,0xF97804FF,string256);
}
return 1;
}
if(strcmp(cmd, "/drop", true) == 0)
{
new x_job[256];
x_job = strtok(cmdtext, idx);
if(!strlen(x_job)) {
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /drop [item number]");
SendClientMessage(playerid, COLOR_YELLOW, "Item Numbers: 1: Fuelcan, 2: Dice, 3: Briefcase, 4: Cigarettes, 5: Radio");
SendClientMessage(playerid, COLOR_YELLOW, "Item Numbers: 6: Moonshine, 7: Weed, 8: Cocaine, 9: Heroin, 10: Boat License");
SendClientMessage(playerid, COLOR_YELLOW, "Item Numbers: 11: Train License, 12: Helicopter License, 13: Airplane License");
return 1;
}
tmp = strtok(cmdtext, idx);
if(strcmp(x_job,"1",true) == 0)
{
if(PlayerInfo[playerid][pFuelcase]==-1) return SendClientMessage(playerid,0xB4B5B7FF,"Ти нямаш туба за бензин!");
SendClientMessage(playerid, COLOR_YELLOW, "Ти изхвърли своята туба за бензин.");
PlayerInfo[playerid][pFuelcase] = -1;
}
if(strcmp(x_job,"2",true) == 0)
{
if(PlayerInfo[playerid][pDice]==0) return SendClientMessage(playerid,0xB4B5B7FF,"Ти нямаш зарче в себе си!");
SendClientMessage(playerid, COLOR_YELLOW, "Ти изхвърли своето зарче.");
PlayerInfo[playerid][pDice] = 0;
}
if(strcmp(x_job,"3",true) == 0)
{
if(PlayerInfo[playerid][pBriefcase]==0) return SendClientMessage(playerid,0xB4B5B7FF,"Ти нямаш куфарче в себе си!");
SendClientMessage(playerid, COLOR_YELLOW, "Ти изхвърли своето куфарче.");
PlayerInfo[playerid][pBriefcase] = 0;
}
if(strcmp(x_job,"4",true) == 0)
{
if(PlayerInfo[playerid][pCigarettes]==0) return SendClientMessage(playerid,0xB4B5B7FF,"Ти нямаш цигари в себе си!");
SendClientMessage(playerid, COLOR_YELLOW, "Ти изхвърли своите цигари.");
PlayerInfo[playerid][pCigarettes] = 0;
}
if(strcmp(x_job,"5",true) == 0)
{
if(PlayerInfo[playerid][pRadio]==0) return SendClientMessage(playerid,0xB4B5B7FF,"Ти нямаш радио в себе си!");
SendClientMessage(playerid, COLOR_YELLOW, "Ти изхвърли своето радио.");
PlayerInfo[playerid][pRadio] = 0;
}
if(strcmp(x_job,"6",true) == 0)
{
if(PlayerInfo[playerid][pMoonshine]==0) return SendClientMessage(playerid,0xB4B5B7FF,"Ти нямаш спиртно питие в себе си!");
SendClientMessage(playerid, COLOR_YELLOW, "Ти изхвърли своето спиртно питие.");
PlayerInfo[playerid][pMoonshine] = 0;
}
if(strcmp(x_job,"7",true) == 0)
{
if(PlayerInfo[playerid][pWeed]==0) return SendClientMessage(playerid,0xB4B5B7FF,"Ти нямаш марихуана в себе си!");
SendClientMessage(playerid, COLOR_YELLOW, "Ти изхвърли своята марихуана.");
PlayerInfo[playerid][pWeed] = 0;
}
if(strcmp(x_job,"8",true) == 0)
{
if(PlayerInfo[playerid][pCocaine]==0) return SendClientMessage(playerid,0xB4B5B7FF,"Ти нямаш кокаин в себе си!");
SendClientMessage(playerid, COLOR_YELLOW, "Ти изхвърли своя кокаин.");
PlayerInfo[playerid][pCocaine] = 0;
}
if(strcmp(x_job,"9",true) == 0)
{
if(PlayerInfo[playerid][pHeroin]==0) return SendClientMessage(playerid,0xB4B5B7FF,"Ти нямаш хероин в себе си!");
SendClientMessage(playerid, COLOR_YELLOW, "Ти изхвърли своя хероин.");
PlayerInfo[playerid][pHeroin] = 0;
}
if(strcmp(x_job,"10",true) == 0)
{
if(PlayerInfo[playerid][pLodka]==0) return SendClientMessage(playerid,0xB4B5B7FF,"Ти нямаш книжка за лодка в себе си!");
SendClientMessage(playerid, COLOR_YELLOW, "Ти изхвърли своята книжка за лодка.");
PlayerInfo[playerid][pLodka] = 0;
}
if(strcmp(x_job,"11",true) == 0)
{
if(PlayerInfo[playerid][pVlak]==0) return SendClientMessage(playerid,0xB4B5B7FF,"Ти нямаш книжка за влак в себе си!");
SendClientMessage(playerid, COLOR_YELLOW, "Ти изхвърли своята книжка за влак.");
PlayerInfo[playerid][pVlak] = 0;
}
if(strcmp(x_job,"12",true) == 0)
{
if(PlayerInfo[playerid][pHelikopter]==0) return SendClientMessage(playerid,0xB4B5B7FF,"Ти нямаш книжка за хеликоптер в себе си!");
SendClientMessage(playerid, COLOR_YELLOW, "Ти изхвърли своята книжка за хеликоптер.");
PlayerInfo[playerid][pHelikopter] = 0;
}
if(strcmp(x_job,"13",true) == 0)
{
if(PlayerInfo[playerid][pSamolet]==0) return SendClientMessage(playerid,0xB4B5B7FF,"Ти нямаш книжка за самолет в себе си!");
SendClientMessage(playerid, COLOR_YELLOW, "Ти изхвърли своята книжка за самолет.");
PlayerInfo[playerid][pSamolet] = 0;
}
return 1;
}
if(strcmp(cmd, "/admins", true)==0)
{
new adminsonline;
new admintext[501];
//new string2230[512];
new string2230result[1500];
new adminprefix2[30];
for(new i; i<MAX_PLAYERS; i++)
{
if(IsPlayerConnected(i))
{
if(PlayerInfo[i][pTest]==1) { adminprefix2="Test Admin"; }
if(PlayerInfo[i][pAdmin]==1) { adminprefix2="Helper"; }
if(PlayerInfo[i][pAdmin]==2) { adminprefix2="Administrator"; }
if(PlayerInfo[i][pAdmin]==3) { adminprefix2="Moderator"; }
if(PlayerInfo[i][pAdmin]==4) { adminprefix2="Grand Admin"; }
if(PlayerInfo[i][pManage]==1) { adminprefix2="Manage Admin"; }
if(PlayerInfo[i][pAdmin]==5) { adminprefix2="Owner";}
if(PlayerInfo[i][pAdmin]==6) { adminprefix2="Scripter";}
if(PlayerInfo[i][pTest] == 1)
{
adminsonline+=1;
format(admintext,501,"{33CCFF}%s: {FFFFFF}%s (ID: %d)       Status: {F2E93E}Test Admin\n",adminprefix[i],pname[i],i);
strcat(string2230result, admintext);
}
if(PlayerInfo[i][pAdmin]>0)
{
adminsonline+=1;
if(PlayerInfo[i][pADuty]==1)
{
format(admintext,501,"{33CCFF}%s: {FFFFFF}%s (ID: %d)       Status: {00E600}On-Duty\n",adminprefix2,pname[i],i);
strcat(string2230result, admintext);
}
if(PlayerInfo[i][pADuty]==0 && PlayerInfo[i][pAFK]==0)
{
format(admintext,501,"{33CCFF}%s: {FFFFFF}%s (ID: %d)       Status: {E60000}Off-Duty\n",adminprefix2,pname[i],i);
strcat(string2230result, admintext);
}
if(PlayerInfo[i][pADuty]==0 && PlayerInfo[i][pAFK]>0)
{
format(admintext,501,"{33CCFF}%s: {FFFFFF}%s (ID: %d)       Status: {F97804}Away From Keyboard\n",adminprefix2,pname[i],i);
strcat(string2230result, admintext);
}
}
}}
new dialogclosestring[256];
new closeddialog=3500;
format(dialogclosestring,256,"{40BF00}Онлайн администратори(%d):",adminsonline);
if(adminsonline>0){
ShowPlayerDialog(playerid,closeddialog,DIALOG_STYLE_MSGBOX,dialogclosestring,string2230result,"Затвори",""); }
if(adminsonline==0) {
ShowPlayerDialog(playerid,closeddialog,DIALOG_STYLE_MSGBOX,dialogclosestring,"{E60000}Няма онлайн администратори в момента!","Затвори",""); }
return 1;
}
if(strcmp(cmd, "/myfps", true)==0)
{
format(string115,115,"Your FPS: %d",pFPS[playerid]);
SendClientMessage(playerid,0x27D3A1FF,string115);
return 1;
}
if (strcmp(cmd, "/togchat", true) == 0)
{
if(togchat[playerid]==0)
{
togchat[playerid]=1;
SendClientMessage(playerid, 0xFFFFFFFF, "SERVER: Сега няма да можеш да виждаш какво пишат в главния чат!");
return 1;
}
if(togchat[playerid]==1)
{
togchat[playerid]=0;
SendClientMessage(playerid, 0xFFFFFFFF, "SERVER: Сега ще можеш да виждаш какво пишат в главиня чат!");
}
return 1;
}
if(strcmp(cmd, "/housev", true) == 0)
{
if(PlayerInfo[playerid][pHouseO]==-1)
{
SendClientMessage(playerid,0xB4B5B7FF,"Ти не притежаваш къща!");
return 1;
}
ShowPlayerDialog(playerid, 41, DIALOG_STYLE_LIST, "House Vehicles:","От Level 5 нагоре - {00BF00}$30,000\nОт Level 7 нагоре - {00BF00}$60,000\nОт Level 10 нагоре - {00BF00}$100,000\nОт Level 15 нагоре - {00BF00}$160, 000\nОт Level 17 нагоре - {00BF00}$200,000\nОт Level 20 нагоре - {00BF00}$250,000", "Избери", "Излез");
return 1;
}
if(strcmp(cmd, "/refillgs", true)==0)
{
if(PlayerInfo[playerid][pIFC]==0) return SendClientMessage(playerid,0xE60000FF,"Трябва да си член на Intense Fuel Company!");
new isWithFuelVeh=0;
if(GetVehicleTrailer(GetPlayerVehicleID(playerid))==fuelremarke[0] || GetVehicleTrailer(GetPlayerVehicleID(playerid))==fuelremarke[1] || GetVehicleTrailer(GetPlayerVehicleID(playerid))==fuelremarke[2])
{
isWithFuelVeh=1;
}
if(isWithFuelVeh==0)
{
SendClientMessage(playerid,0xB4B5B7FF,"Ти не си в превозното средство за разнасяне на бензин!");
return 1;
}
if(IsPlayerInRangeOfPoint(playerid, 10, 1004.0327,-937.5370,42.3281)
|| IsPlayerInRangeOfPoint(playerid, 10, 1942.3719,-1772.8666,13.6406)
|| IsPlayerInRangeOfPoint(playerid, 10, -1606.7223,-2713.3562,48.5335)
|| IsPlayerInRangeOfPoint(playerid, 10, -2026.7813,156.5509,29.0391)
|| IsPlayerInRangeOfPoint(playerid, 10, -2243.8149,-2559.8899,31.9219)
|| IsPlayerInRangeOfPoint(playerid, 10, -1676.2601,413.5443,7.1797)
|| IsPlayerInRangeOfPoint(playerid, 10, 2201.8296,2475.1350,10.8203)
|| IsPlayerInRangeOfPoint(playerid, 10, 615.3391,1690.0454,6.9922)
|| IsPlayerInRangeOfPoint(playerid, 10, -1328.2731,2677.5278,50.0625)
|| IsPlayerInRangeOfPoint(playerid, 10, 70.3842,1219.0177,18.8116)
|| IsPlayerInRangeOfPoint(playerid, 10, 2113.3835,919.5655,10.8203)
|| IsPlayerInRangeOfPoint(playerid, 10, 2641.0115,1106.6252,10.8203)
|| IsPlayerInRangeOfPoint(playerid, 10, 2146.7964,2747.8115,10.8203)
|| IsPlayerInRangeOfPoint(playerid, 10, 1595.7935,2199.5996,10.8203)
|| IsPlayerInRangeOfPoint(playerid, 10, -1471.1836,1863.7598,32.6328)
|| IsPlayerInRangeOfPoint(playerid, 10, 655.7673,-565.0798,16.3359)
|| IsPlayerInRangeOfPoint(playerid, 10, 1381.8230,459.1453,20.3452))
{
if(IsPlayerInRangeOfPoint(playerid, 10, 1004.0327,-937.5370,42.3281) && fuelStationsFuel[0]==5000) return SendClientMessage(playerid,0xB4B5B7FF,"В бензиностанцията има достатъчно бензин.");
if(IsPlayerInRangeOfPoint(playerid, 10, 1942.3719,-1772.8666,13.6406) && fuelStationsFuel[1]==5000) return SendClientMessage(playerid,0xB4B5B7FF,"В бензиностанцията има достатъчно бензин.");
if(IsPlayerInRangeOfPoint(playerid, 10, -1606.7223,-2713.3562,48.5335) && fuelStationsFuel[2]==5000) return SendClientMessage(playerid,0xB4B5B7FF,"В бензиностанцията има достатъчно бензин.");
if(IsPlayerInRangeOfPoint(playerid, 10, -2026.7813,156.5509,29.0391) && fuelStationsFuel[3]==5000) return SendClientMessage(playerid,0xB4B5B7FF,"В бензиностанцията има достатъчно бензин.");
if(IsPlayerInRangeOfPoint(playerid, 10, -2243.8149,-2559.8899,31.9219) && fuelStationsFuel[4]==5000) return SendClientMessage(playerid,0xB4B5B7FF,"В бензиностанцията има достатъчно бензин.");
if(IsPlayerInRangeOfPoint(playerid, 10, -1676.2601,413.5443,7.1797) && fuelStationsFuel[5]==5000) return SendClientMessage(playerid,0xB4B5B7FF,"В бензиностанцията има достатъчно бензин.");
if(IsPlayerInRangeOfPoint(playerid, 10, 2201.8296,2475.1350,10.8203) && fuelStationsFuel[6]==5000) return SendClientMessage(playerid,0xB4B5B7FF,"В бензиностанцията има достатъчно бензин.");
if(IsPlayerInRangeOfPoint(playerid, 10, 615.3391,1690.0454,6.9922) && fuelStationsFuel[7]==5000) return SendClientMessage(playerid,0xB4B5B7FF,"В бензиностанцията има достатъчно бензин.");
if(IsPlayerInRangeOfPoint(playerid, 10, -1328.2731,2677.5278,50.0625) && fuelStationsFuel[8]==5000) return SendClientMessage(playerid,0xB4B5B7FF,"В бензиностанцията има достатъчно бензин.");
if(IsPlayerInRangeOfPoint(playerid, 10, 70.3842,1219.0177,18.8116) && fuelStationsFuel[9]==5000) return SendClientMessage(playerid,0xB4B5B7FF,"В бензиностанцията има достатъчно бензин.");
if(IsPlayerInRangeOfPoint(playerid, 10, 2113.3835,919.5655,10.8203) && fuelStationsFuel[10]==5000) return SendClientMessage(playerid,0xB4B5B7FF,"В бензиностанцията има достатъчно бензин.");
if(IsPlayerInRangeOfPoint(playerid, 10, 2641.0115,1106.6252,10.8203) && fuelStationsFuel[11]==5000) return SendClientMessage(playerid,0xB4B5B7FF,"В бензиностанцията има достатъчно бензин.");
if(IsPlayerInRangeOfPoint(playerid, 10, 2146.7964,2747.8115,10.8203) && fuelStationsFuel[12]==5000) return SendClientMessage(playerid,0xB4B5B7FF,"В бензиностанцията има достатъчно бензин.");
if(IsPlayerInRangeOfPoint(playerid, 10, 1595.7935,2199.5996,10.8203) && fuelStationsFuel[13]==5000) return SendClientMessage(playerid,0xB4B5B7FF,"В бензиностанцията има достатъчно бензин.");
if(IsPlayerInRangeOfPoint(playerid, 10, -1471.1836,1863.7598,32.6328) && fuelStationsFuel[14]==5000) return SendClientMessage(playerid,0xB4B5B7FF,"В бензиностанцията има достатъчно бензин.");
if(IsPlayerInRangeOfPoint(playerid, 10, 655.7673,-565.0798,16.3359) && fuelStationsFuel[15]==5000) return SendClientMessage(playerid,0xB4B5B7FF,"В бензиностанцията има достатъчно бензин.");
if(IsPlayerInRangeOfPoint(playerid, 10, 1381.8230,459.1453,20.3452) && fuelStationsFuel[16]==5000) return SendClientMessage(playerid,0xB4B5B7FF,"В бензиностанцията има достатъчно бензин.");
new neededFuel=5000-fuelStationsFuel[FuelStationClose(playerid)];
if(vehfuel2[GetVehicleTrailer(GetPlayerVehicleID(playerid))]<neededFuel)
{
SendClientMessage(playerid, 0xB4B5B7FF, "Нямаш достатъчно бензин за да заредиш бензиностанцията!");
return 1;
}
new refuelstring[500];
format(refuelstring,500,"{0040FF}[ Бензиностанция ]\n{FF0000}5000/5000 литра\n{C14124}1 литър {FFFFFF}= {00BF00}1 долар\n{F97804}Напиши {FFFF00}/refuel {F97804}за да заредиш");
Update3DTextLabelText(fuelStationText[FuelStationClose(playerid)], 0xFFFFFFFF, refuelstring);
vehfuel2[GetVehicleTrailer(GetPlayerVehicleID(playerid))]-=neededFuel;
fuelStationsFuel[FuelStationClose(playerid)]=5000;
new profitFuel=neededFuel+1030;
GivePlayerCash(playerid, profitFuel);
GivePlayerEP(playerid,2);
format(string256,256,"Ти зареди бензиностанцията с %d литра и твоята печалба е {3FDE00}$%d + 2 EP",neededFuel,profitFuel);
SendClientMessage(playerid,0xFFFFFFFF,string256);
}
else
{
SendClientMessage(playerid, 0xB4B5B7FF, "Вие не сте до бензиностанция!");
}
return 1;
}
if(strcmp(cmd, "/refillpt", true)==0)
{
if(IsPlayerInRangeOfPoint(playerid, 5, 264.4341,1454.9220,10.5859))
{
new isWithFuelVeh=0;
if(GetVehicleTrailer(GetPlayerVehicleID(playerid))==fuelremarke[0] || GetVehicleTrailer(GetPlayerVehicleID(playerid))==fuelremarke[1] || GetVehicleTrailer(GetPlayerVehicleID(playerid))==fuelremarke[2])
{
isWithFuelVeh=1;
}
if(isWithFuelVeh==0)
{
SendClientMessage(playerid,0xB4B5B7FF,"Ти не си в превозното средство за разнасяне на бензин!");
return 1;
}
new string500[500];
if(10000-vehfuel2[GetVehicleTrailer(GetPlayerVehicleID(playerid))]==1)
{
format(string500,500,"{FF0000}Моля въведете с колко литра искате да заредите цистерната.\n{FFFFFF}За да заредите цистерната до горе са ти нужни {FFFF00}1 литър.",10000-vehfuel2[GetPlayerVehicleID(playerid)]);
ShowPlayerDialog(playerid,44,DIALOG_STYLE_INPUT,"{0040FF}Цистерна",string500,"Презареди","Затвори");
}
if(10000-vehfuel2[GetVehicleTrailer(GetPlayerVehicleID(playerid))]<1)
{
format(string500,500,"{FF0000}Моля въведете с колко литра искате да заредите цистерната.\n{FFFFFF}За да заредите цистерната до горе са ти нужни {FFFF00}0 литра.",10000-vehfuel2[GetPlayerVehicleID(playerid)]);
ShowPlayerDialog(playerid,44,DIALOG_STYLE_INPUT,"{0040FF}Цистерна",string500,"Презареди","Затвори");
}
if(10000-vehfuel2[GetVehicleTrailer(GetPlayerVehicleID(playerid))]>1)
{
format(string500,500,"{FF0000}Моля въведете с колко литра искате да заредите цистерната.\n{FFFFFF}За да заредите цистерната до горе са ти нужни {FFFF00}%d литра.",10000-vehfuel2[GetVehicleTrailer(GetPlayerVehicleID(playerid))]);
ShowPlayerDialog(playerid,44,DIALOG_STYLE_INPUT,"{0040FF}Цистерна",string500,"Презареди","Затвори");
}
}
else
{
SendClientMessage(playerid, 0xB4B5B7FF, "Вие не сте до мястото за зареждане!");
return 1;
}
return 1;
}
if(strcmp(cmd, "/refillfc", true)==0)
{
if(IsPlayerInRangeOfPoint(playerid, 10, 1004.0327,-937.5370,42.3281)
|| IsPlayerInRangeOfPoint(playerid, 10, 1942.3719,-1772.8666,13.6406)
|| IsPlayerInRangeOfPoint(playerid, 10, -1606.7223,-2713.3562,48.5335)
|| IsPlayerInRangeOfPoint(playerid, 10, -2026.7813,156.5509,29.0391)
|| IsPlayerInRangeOfPoint(playerid, 10, -2243.8149,-2559.8899,31.9219)
|| IsPlayerInRangeOfPoint(playerid, 10, -1676.2601,413.5443,7.1797)
|| IsPlayerInRangeOfPoint(playerid, 10, 2201.8296,2475.1350,10.8203)
|| IsPlayerInRangeOfPoint(playerid, 10, 615.3391,1690.0454,6.9922)
|| IsPlayerInRangeOfPoint(playerid, 10, -1328.2731,2677.5278,50.0625)
|| IsPlayerInRangeOfPoint(playerid, 10, 70.3842,1219.0177,18.8116)
|| IsPlayerInRangeOfPoint(playerid, 10, 2113.3835,919.5655,10.8203)
|| IsPlayerInRangeOfPoint(playerid, 10, 2641.0115,1106.6252,10.8203)
|| IsPlayerInRangeOfPoint(playerid, 10, 2146.7964,2747.8115,10.8203)
|| IsPlayerInRangeOfPoint(playerid, 10, 1595.7935,2199.5996,10.8203)
|| IsPlayerInRangeOfPoint(playerid, 10, -1471.1836,1863.7598,32.6328)
|| IsPlayerInRangeOfPoint(playerid, 10, 655.7673,-565.0798,16.3359)
|| IsPlayerInRangeOfPoint(playerid, 10, 1381.8230,459.1453,20.3452))
{
if (PlayerInfo[playerid][pFuelcase]==-1) return SendClientMessage(playerid,0xB4B5B7FF,"Ти нямаш туба за бензин!");
if (IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,COLOR_RED,"Трябва да си пешеходец за да заредиш тубата си за бензин!");
if (PlayerInfo[playerid][pFuelcase]>99) return SendClientMessage(playerid,0xB4B5B7FF,"Твоята туба за бензин е заредена до горе!");
if(IsPlayerInRangeOfPoint(playerid, 10, 1004.0327,-937.5370,42.3281) && fuelStationsFuel[0]==0) return SendClientMessage(playerid,0xB4B5B7FF,"В бензиностанцията няма бензин, елате по-късно.");
if(IsPlayerInRangeOfPoint(playerid, 10, 1942.3719,-1772.8666,13.6406) && fuelStationsFuel[1]==0) return SendClientMessage(playerid,0xB4B5B7FF,"В бензиностанцията няма бензин, елате по-късно.");
if(IsPlayerInRangeOfPoint(playerid, 10, -1606.7223,-2713.3562,48.5335) && fuelStationsFuel[2]==0) return SendClientMessage(playerid,0xB4B5B7FF,"В бензиностанцията няма бензин, елате по-късно.");
if(IsPlayerInRangeOfPoint(playerid, 10, -2026.7813,156.5509,29.0391) && fuelStationsFuel[3]==0) return SendClientMessage(playerid,0xB4B5B7FF,"В бензиностанцията няма бензин, елате по-късно.");
if(IsPlayerInRangeOfPoint(playerid, 10, -2243.8149,-2559.8899,31.9219) && fuelStationsFuel[4]==0) return SendClientMessage(playerid,0xB4B5B7FF,"В бензиностанцията няма бензин, елате по-късно.");
if(IsPlayerInRangeOfPoint(playerid, 10, -1676.2601,413.5443,7.1797) && fuelStationsFuel[5]==0) return SendClientMessage(playerid,0xB4B5B7FF,"В бензиностанцията няма бензин, елате по-късно.");
if(IsPlayerInRangeOfPoint(playerid, 10, 2201.8296,2475.1350,10.8203) && fuelStationsFuel[6]==0) return SendClientMessage(playerid,0xB4B5B7FF,"В бензиностанцията няма бензин, елате по-късно.");
if(IsPlayerInRangeOfPoint(playerid, 10, 615.3391,1690.0454,6.9922) && fuelStationsFuel[7]==0) return SendClientMessage(playerid,0xB4B5B7FF,"В бензиностанцията няма бензин, елате по-късно.");
if(IsPlayerInRangeOfPoint(playerid, 10, -1328.2731,2677.5278,50.0625) && fuelStationsFuel[8]==0) return SendClientMessage(playerid,0xB4B5B7FF,"В бензиностанцията няма бензин, елате по-късно.");
if(IsPlayerInRangeOfPoint(playerid, 10, 70.3842,1219.0177,18.8116) && fuelStationsFuel[9]==0) return SendClientMessage(playerid,0xB4B5B7FF,"В бензиностанцията няма бензин, елате по-късно.");
if(IsPlayerInRangeOfPoint(playerid, 10, 2113.3835,919.5655,10.8203) && fuelStationsFuel[10]==0) return SendClientMessage(playerid,0xB4B5B7FF,"В бензиностанцията няма бензин, елате по-късно.");
if(IsPlayerInRangeOfPoint(playerid, 10, 2641.0115,1106.6252,10.8203) && fuelStationsFuel[11]==0) return SendClientMessage(playerid,0xB4B5B7FF,"В бензиностанцията няма бензин, елате по-късно.");
if(IsPlayerInRangeOfPoint(playerid, 10, 2146.7964,2747.8115,10.8203) && fuelStationsFuel[12]==0) return SendClientMessage(playerid,0xB4B5B7FF,"В бензиностанцията няма бензин, елате по-късно.");
if(IsPlayerInRangeOfPoint(playerid, 10, 1595.7935,2199.5996,10.8203) && fuelStationsFuel[13]==0) return SendClientMessage(playerid,0xB4B5B7FF,"В бензиностанцията няма бензин, елате по-късно.");
if(IsPlayerInRangeOfPoint(playerid, 10, -1471.1836,1863.7598,32.6328) && fuelStationsFuel[14]==0) return SendClientMessage(playerid,0xB4B5B7FF,"В бензиностанцията няма бензин, елате по-късно.");
if(IsPlayerInRangeOfPoint(playerid, 10, 655.7673,-565.0798,16.3359) && fuelStationsFuel[15]==0) return SendClientMessage(playerid,0xB4B5B7FF,"В бензиностанцията няма бензин, елате по-късно.");
if(IsPlayerInRangeOfPoint(playerid, 10, 1381.8230,459.1453,20.3452) && fuelStationsFuel[16]==0) return SendClientMessage(playerid,0xB4B5B7FF,"В бензиностанцията няма бензин, елате по-късно.");
new string500[500];
if(100-PlayerInfo[playerid][pFuelcase]==1)
{
format(string500,500,"{00FF00}Добре дошли в бензиностанцията !\n{FFFFFF}Моля въведете с колко литра искате да заредите вашата туба с бензин.\n{C14124}1 литър {FFFFFF}= {00BF00}1 долар\n{FFFFFF}За да заредиш до горе ти нужен {FFFF00}1 литър.");
ShowPlayerDialog(playerid,38,DIALOG_STYLE_INPUT,"{0040FF}Бензиностанция",string500,"Презареди","Затвори");
}
if(100-PlayerInfo[playerid][pFuelcase]<1)
{
format(string500,500,"{00FF00}Добре дошли в бензиностанцията !\n{FFFFFF}Моля въведете с колко литра искате да заредите вашата туба с бензин.\n{C14124}1 литър {FFFFFF}= {00BF00}1 долар\n{FFFFFF}За да заредиш до горе са ти нужни {FFFF00}0 литра.");
ShowPlayerDialog(playerid,38,DIALOG_STYLE_INPUT,"{0040FF}Бензиностанция",string500,"Презареди","Затвори");
}
if(100-PlayerInfo[playerid][pFuelcase]>1)
{
format(string500,500,"{00FF00}Добре дошли в бензиностанцията !\n{FFFFFF}Моля въведете с колко литра искате да заредите вашата туба с бензин.\n{C14124}1 литър {FFFFFF}= {00BF00}1 долар\n{FFFFFF}За да заредиш до горе са ти нужни {FFFF00}%d литра.",100-PlayerInfo[playerid][pFuelcase]);
ShowPlayerDialog(playerid,38,DIALOG_STYLE_INPUT,"{0040FF}Бензиностанция",string500,"Презареди","Затвори");
}
}
else
{
SendClientMessage(playerid, 0xB4B5B7FF, "Вие не сте до бензиностанция!");
return 1;
}
return 1;
}
if(strcmp(cmd, "/fc", true)==0)
{
new string500[500]; new closeddialog=3500;
if (PlayerInfo[playerid][pFuelcase]==-1) return SendClientMessage(playerid,COLOR_RED,"Ти нямаш туба за бензин!");
format(string500,500,"Вашата туба бензин има {C14124}%d L",PlayerInfo[playerid][pFuelcase]);
ShowPlayerDialog(playerid,closeddialog,DIALOG_STYLE_MSGBOX,"{FF0000}Туба бензин",string500,"Затвори","");
return 1;
}
if(strcmp(cmd, "/fuelcan", true)==0)
{
if (PlayerInfo[playerid][pFuelcase]==-1) return SendClientMessage(playerid,COLOR_RED,"Ти нямаш туба за бензин!");
if (!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,COLOR_RED,"Трябва да се качиш в превозно средство за да заредиш!");
if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER)
{
SendClientMessage(playerid,COLOR_RED,"Трябва да си в превозно средство като шофьор!");
return 1;
}
if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 481
&& GetVehicleModel(GetPlayerVehicleID(playerid)) != 509
&& GetVehicleModel(GetPlayerVehicleID(playerid)) != 510
&& GetVehicleModel(GetPlayerVehicleID(playerid)) != 481)
{
if (PlayerInfo[playerid][pFuelcase]==0) return SendClientMessage(playerid,COLOR_RED,"Ти нямаш бензин в тубата!");
new string500[500];
if(100-vehfuel[GetPlayerVehicleID(playerid)]==1)
{
format(string500,500,"{FFFF00}Моля въведете с колко литра искате да заредите вашето превозно средство.\n{FFFFFF}За да заредиш до горе ти нужен {FFFF00}1 литър.");
ShowPlayerDialog(playerid,39,DIALOG_STYLE_INPUT,"{0040FF}Бензиностанция",string500,"Презареди","Затвори");
}
if(100-vehfuel[GetPlayerVehicleID(playerid)]<1)
{
format(string500,500,"{FFFF00}Моля въведете с колко литра искате да заредите вашето превозно средство.\n{FFFFFF}За да заредиш до горе са ти нужни {FFFF00}0 литра.");
ShowPlayerDialog(playerid,39,DIALOG_STYLE_INPUT,"{FF0000}Туба бензин",string500,"Презареди","Затвори");
}
if(100-vehfuel[GetPlayerVehicleID(playerid)]>1)
{
format(string500,500,"{FFFF00}Моля въведете с колко литра искате да заредите вашето превозно средство.\n{FFFFFF}За да заредиш до горе са ти нужни {FFFF00}%d литра.",100-vehfuel[GetPlayerVehicleID(playerid)]);
ShowPlayerDialog(playerid,39,DIALOG_STYLE_INPUT,"{FF0000}Туба бензин",string500,"Презареди","Затвори");
}
}
else
{
SendClientMessage(playerid, 0xB4B5B7FF, "Не можете да заредите бензин в това превозно средство!");
return 1;
}
return 1;
}
if(strcmp(cmd, "/refuel", true)==0)
{
if(IsPlayerInRangeOfPoint(playerid, 10, 1004.0327,-937.5370,42.3281)
|| IsPlayerInRangeOfPoint(playerid, 10, 1942.3719,-1772.8666,13.6406)
|| IsPlayerInRangeOfPoint(playerid, 10, -1606.7223,-2713.3562,48.5335)
|| IsPlayerInRangeOfPoint(playerid, 10, -2026.7813,156.5509,29.0391)
|| IsPlayerInRangeOfPoint(playerid, 10, -2243.8149,-2559.8899,31.9219)
|| IsPlayerInRangeOfPoint(playerid, 10, -1676.2601,413.5443,7.1797)
|| IsPlayerInRangeOfPoint(playerid, 10, 2201.8296,2475.1350,10.8203)
|| IsPlayerInRangeOfPoint(playerid, 10, 615.3391,1690.0454,6.9922)
|| IsPlayerInRangeOfPoint(playerid, 10, -1328.2731,2677.5278,50.0625)
|| IsPlayerInRangeOfPoint(playerid, 10, 70.3842,1219.0177,18.8116)
|| IsPlayerInRangeOfPoint(playerid, 10, 2113.3835,919.5655,10.8203)
|| IsPlayerInRangeOfPoint(playerid, 10, 2641.0115,1106.6252,10.8203)
|| IsPlayerInRangeOfPoint(playerid, 10, 2146.7964,2747.8115,10.8203)
|| IsPlayerInRangeOfPoint(playerid, 10, 1595.7935,2199.5996,10.8203)
|| IsPlayerInRangeOfPoint(playerid, 10, -1471.1836,1863.7598,32.6328)
|| IsPlayerInRangeOfPoint(playerid, 10, 655.7673,-565.0798,16.3359)
|| IsPlayerInRangeOfPoint(playerid, 10, 1381.8230,459.1453,20.3452))
{
if (!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,0xB4B5B7FF,"Ти не си в превозно средство!");
if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 481
&& GetVehicleModel(GetPlayerVehicleID(playerid)) != 509
&& GetVehicleModel(GetPlayerVehicleID(playerid)) != 510
&& GetVehicleModel(GetPlayerVehicleID(playerid)) != 481)
{
if(IsPlayerInRangeOfPoint(playerid, 10, 1004.0327,-937.5370,42.3281) && fuelStationsFuel[0]==0) return SendClientMessage(playerid,0xB4B5B7FF,"В бензиностанцията няма бензин, елате по-късно.");
if(IsPlayerInRangeOfPoint(playerid, 10, 1942.3719,-1772.8666,13.6406) && fuelStationsFuel[1]==0) return SendClientMessage(playerid,0xB4B5B7FF,"В бензиностанцията няма бензин, елате по-късно.");
if(IsPlayerInRangeOfPoint(playerid, 10, -1606.7223,-2713.3562,48.5335) && fuelStationsFuel[2]==0) return SendClientMessage(playerid,0xB4B5B7FF,"В бензиностанцията няма бензин, елате по-късно.");
if(IsPlayerInRangeOfPoint(playerid, 10, -2026.7813,156.5509,29.0391) && fuelStationsFuel[3]==0) return SendClientMessage(playerid,0xB4B5B7FF,"В бензиностанцията няма бензин, елате по-късно.");
if(IsPlayerInRangeOfPoint(playerid, 10, -2243.8149,-2559.8899,31.9219) && fuelStationsFuel[4]==0) return SendClientMessage(playerid,0xB4B5B7FF,"В бензиностанцията няма бензин, елате по-късно.");
if(IsPlayerInRangeOfPoint(playerid, 10, -1676.2601,413.5443,7.1797) && fuelStationsFuel[5]==0) return SendClientMessage(playerid,0xB4B5B7FF,"В бензиностанцията няма бензин, елате по-късно.");
if(IsPlayerInRangeOfPoint(playerid, 10, 2201.8296,2475.1350,10.8203) && fuelStationsFuel[6]==0) return SendClientMessage(playerid,0xB4B5B7FF,"В бензиностанцията няма бензин, елате по-късно.");
if(IsPlayerInRangeOfPoint(playerid, 10, 615.3391,1690.0454,6.9922) && fuelStationsFuel[7]==0) return SendClientMessage(playerid,0xB4B5B7FF,"В бензиностанцията няма бензин, елате по-късно.");
if(IsPlayerInRangeOfPoint(playerid, 10, -1328.2731,2677.5278,50.0625) && fuelStationsFuel[8]==0) return SendClientMessage(playerid,0xB4B5B7FF,"В бензиностанцията няма бензин, елате по-късно.");
if(IsPlayerInRangeOfPoint(playerid, 10, 70.3842,1219.0177,18.8116) && fuelStationsFuel[9]==0) return SendClientMessage(playerid,0xB4B5B7FF,"В бензиностанцията няма бензин, елате по-късно.");
if(IsPlayerInRangeOfPoint(playerid, 10, 2113.3835,919.5655,10.8203) && fuelStationsFuel[10]==0) return SendClientMessage(playerid,0xB4B5B7FF,"В бензиностанцията няма бензин, елате по-късно.");
if(IsPlayerInRangeOfPoint(playerid, 10, 2641.0115,1106.6252,10.8203) && fuelStationsFuel[11]==0) return SendClientMessage(playerid,0xB4B5B7FF,"В бензиностанцията няма бензин, елате по-късно.");
if(IsPlayerInRangeOfPoint(playerid, 10, 2146.7964,2747.8115,10.8203) && fuelStationsFuel[12]==0) return SendClientMessage(playerid,0xB4B5B7FF,"В бензиностанцията няма бензин, елате по-късно.");
if(IsPlayerInRangeOfPoint(playerid, 10, 1595.7935,2199.5996,10.8203) && fuelStationsFuel[13]==0) return SendClientMessage(playerid,0xB4B5B7FF,"В бензиностанцията няма бензин, елате по-късно.");
if(IsPlayerInRangeOfPoint(playerid, 10, -1471.1836,1863.7598,32.6328) && fuelStationsFuel[14]==0) return SendClientMessage(playerid,0xB4B5B7FF,"В бензиностанцията няма бензин, елате по-късно.");
if(IsPlayerInRangeOfPoint(playerid, 10, 655.7673,-565.0798,16.3359) && fuelStationsFuel[15]==0) return SendClientMessage(playerid,0xB4B5B7FF,"В бензиностанцията няма бензин, елате по-късно.");
if(IsPlayerInRangeOfPoint(playerid, 10, 1381.8230,459.1453,20.3452) && fuelStationsFuel[16]==0) return SendClientMessage(playerid,0xB4B5B7FF,"В бензиностанцията няма бензин, елате по-късно.");
new string500[500];
if(100-vehfuel[GetPlayerVehicleID(playerid)]==1)
{
format(string500,500,"{00FF00}Добре дошли в бензиностанцията !\n{FFFFFF}Моля въведете с колко литра искате да заредите вашето превозно средство.\n{C14124}1 литър {FFFFFF}= {00BF00}1 долар\n{FFFFFF}За да заредиш до горе ти нужен {FFFF00}1 литър.");
ShowPlayerDialog(playerid,18,DIALOG_STYLE_INPUT,"{0040FF}Бензиностанция",string500,"Презареди","Затвори");
}
if(100-vehfuel[GetPlayerVehicleID(playerid)]<1)
{
format(string500,500,"{00FF00}Добре дошли в бензиностанцията !\n{FFFFFF}Моля въведете с колко литра искате да заредите вашето превозно средство.\n{C14124}1 литър {FFFFFF}= {00BF00}1 долар\n{FFFFFF}За да заредиш до горе са ти нужни {FFFF00}0 литра.");
ShowPlayerDialog(playerid,18,DIALOG_STYLE_INPUT,"{0040FF}Бензиностанция",string500,"Презареди","Затвори");
}
if(100-vehfuel[GetPlayerVehicleID(playerid)]>1)
{
format(string500,500,"{00FF00}Добре дошли в бензиностанцията !\n{FFFFFF}Моля въведете с колко литра искате да заредите вашето превозно средство.\n{C14124}1 литър {FFFFFF}= {00BF00}1 долар\n{FFFFFF}За да заредиш до горе са ти нужни {FFFF00}%d литра.",100-vehfuel[GetPlayerVehicleID(playerid)]);
ShowPlayerDialog(playerid,18,DIALOG_STYLE_INPUT,"{0040FF}Бензиностанция",string500,"Презареди","Затвори");
}
}
else
{
SendClientMessage(playerid, 0xB4B5B7FF, "Не можете да заредите бензин в това превозно средство!");
return 1;
}
}
else
{
SendClientMessage(playerid, 0xB4B5B7FF, "Вие не сте до бензиностанция!");
return 1;
}
return 1;
}
if(strcmp(cmd, "/gotobank", true)==0)
{
if(PlayerInfo[playerid][pAdmin] < 3) return SendClientMessage(playerid, 0xB4B5B7FF, "Нямаш права за да ползваш командата!");
new length = strlen(cmdtext);
while ((idx < length) && (cmdtext[idx] <= ' '))
{
idx++;
}
new offset = idx;
new result[256];
while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
{
result[idx - offset] = cmdtext[idx];
idx++;
}
result[idx - offset] = EOS;
if(!strlen(result))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /bank ls/lv");
return 1;
}
if(!strlen(result))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /bank ls/lv");
return 1;
}
if(strcmp(result,"ls",true)==1 && strcmp(result,"ls",true)==1)
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /bank ls/lv");
}
if(strcmp(result,"ls",true)==0)
{
if(PlayerInfo[playerid][pAFK]> 0)
{
SendClientMessage(playerid, 0xB4B5B7FF, "Ти си в AFK режим и не можеш да се телепортираш!");
return 1;
}
if(PlayerInfo[playerid][pJail]> 0)
{
SendClientMessage(playerid, 0xB4B5B7FF, "Ти си в админ затвора и не можеш да се телепортираш!");
return 1;
}
if(PlayerInfo[playerid][pPJail]> 0)
{
SendClientMessage(playerid, 0xB4B5B7FF, "Ти си в затвора и не можеш да се телепортираш!");
return 1;
}
if(cmn1[playerid]>0) { return SendClientMessage(playerid,0xB4B5B7FF,"Не можеш да се телепортираш, докато си CMN1!"); }
if(playerInDuel[playerid]==1){ return SendClientMessage(playerid,0xB4B5B7FF,"Не можеш да се телепортираш, докато си в дуел!");}
if(inevent[playerid]==1) return SendClientMessage(playerid,0xB4B5B7FF,"Не можеш да се телепортираш, докато си в евент!");
if(playerInDMON[playerid]==1){ return SendClientMessage(playerid,0xB4B5B7FF,"Не можеш да се телепортираш, докато си в DMON!");}
if(playerInDeathmatch[playerid]==true) return SendClientMessage(playerid,0xB4B5B7FF,"В момента не можеш да използваш тази команда!");
if(playerInStreetRace[playerid]==true) return SendClientMessage(playerid,0xB4B5B7FF,"В момента не можеш да използваш тази команда!");
SendClientMessage(playerid, 0xFFFFFFFF, "* Ти се телепортира на Los Santos Bank! *");
SetPlayerPos(playerid, 1490.2128,-1741.8989,13.5469); SetPlayerFacingAngle(playerid,359.2968);
SetPlayerInterior(playerid,0); SetPlayerVirtualWorld(playerid,0);
SetCameraBehindPlayer(playerid);
}
if(strcmp(result,"lv",true)==0)
{
if(PlayerInfo[playerid][pAFK]> 0)
{
SendClientMessage(playerid, 0xB4B5B7FF, "Ти си в AFK режим и не можеш да се телепортираш!");
return 1;
}
if(PlayerInfo[playerid][pJail]> 0)
{
SendClientMessage(playerid, 0xB4B5B7FF, "Ти си в админ затвора и не можеш да се телепортираш!");
return 1;
}
if(PlayerInfo[playerid][pPJail]> 0)
{
SendClientMessage(playerid, 0xB4B5B7FF, "Ти си в затвора и не можеш да се телепортираш!");
return 1;
}
if(cmn1[playerid]>0) { return SendClientMessage(playerid,0xB4B5B7FF,"Не можеш да се телепортираш, докато си CMN1!"); }
if(playerInDuel[playerid]==1){ return SendClientMessage(playerid,0xB4B5B7FF,"Не можеш да се телепортираш, докато си в дуел!");}
if(inevent[playerid]==1) return SendClientMessage(playerid,0xB4B5B7FF,"Не можеш да се телепортираш, докато си в евент!");
if(playerInDMON[playerid]==1){ return SendClientMessage(playerid,0xB4B5B7FF,"Не можеш да се телепортираш, докато си в DMON!");}
if(playerInDeathmatch[playerid]==true) return SendClientMessage(playerid,0xB4B5B7FF,"В момента не можеш да използваш тази команда!");
if(playerInStreetRace[playerid]==true) return SendClientMessage(playerid,0xB4B5B7FF,"В момента не можеш да използваш тази команда!");
SendClientMessage(playerid, 0xFFFFFFFF, "* Ти се телепортира на Las Venturas Bank! *");
SetPlayerPos(playerid, 2417.1665,1121.0125,10.8203); SetPlayerFacingAngle(playerid,264.4303);
SetPlayerInterior(playerid,0); SetPlayerVirtualWorld(playerid,0);
SetCameraBehindPlayer(playerid);
}
return 1;
}
if(strcmp(cmd, "/gotodesert", true)==0)
{
if(PlayerInfo[playerid][pAdmin] < 3) return SendClientMessage(playerid, 0xB4B5B7FF, "Нямаш права за да ползваш командата!");
if(PlayerInfo[playerid][pAFK]> 0)
{
SendClientMessage(playerid, 0xB4B5B7FF, "Ти си в AFK режим и не можеш да се телепортираш!");
return 1;
}
if(PlayerInfo[playerid][pJail]> 0)
{
SendClientMessage(playerid, 0xB4B5B7FF, "Ти си в админ затвора и не можеш да се телепортираш!");
return 1;
}
if(PlayerInfo[playerid][pPJail]> 0)
{
SendClientMessage(playerid, 0xB4B5B7FF, "Ти си в затвора и не можеш да се телепортираш!");
return 1;
}
if(cmn1[playerid]>0) { return SendClientMessage(playerid,0xB4B5B7FF,"Не можеш да се телепортираш, докато си CMN1!"); }
if(playerInDuel[playerid]==1){ return SendClientMessage(playerid,0xB4B5B7FF,"Не можеш да се телепортираш, докато си в дуел!");}
if(inevent[playerid]==1) return SendClientMessage(playerid,0xB4B5B7FF,"Не можеш да се телепортираш, докато си в евент!");
if(playerInDMON[playerid]==1){ return SendClientMessage(playerid,0xB4B5B7FF,"Не можеш да се телепортираш, докато си в DMON!");}
if(playerInDeathmatch[playerid]==true) return SendClientMessage(playerid,0xB4B5B7FF,"В момента не можеш да използваш тази команда!");
if(playerInStreetRace[playerid]==true) return SendClientMessage(playerid,0xB4B5B7FF,"В момента не можеш да използваш тази команда!");
SendClientMessage(playerid, 0xFFFFFFFF, "* Ти се телепортира на Desert! *");
SetPlayerPos(playerid, -295.2643,1537.3564,75.5625); SetPlayerFacingAngle(playerid,176.6348);
SetPlayerInterior(playerid,0); SetPlayerVirtualWorld(playerid,0);
SetCameraBehindPlayer(playerid);
return 1;
}
if(strcmp(cmd, "/dmoff", true)==0)
{
if(playerInDMON[playerid]==0){ return SendClientMessage(playerid,0xB4B5B7FF,"Ти не си в DMON!");}
SetPlayerHealth(playerid,0);
playerInDMON[playerid]=0;
TextDrawHideForPlayer(playerid, DMON[playerid]);
new level=PlayerInfo[playerid][pTeam];
RestartPlayerColor(playerid);
return 1;
}
if(strcmp(cmd, "/dmon", true)==0)
{
if(PlayerInfo[playerid][pAFK]> 0)
{
SendClientMessage(playerid, 0xB4B5B7FF, "Ти си в AFK режим и не можеш да се телепортираш!");
return 1;
}
if(PlayerInfo[playerid][pJail]> 0)
{
SendClientMessage(playerid, 0xB4B5B7FF, "Ти си в админ затвора и не можеш да се телепортираш!");
return 1;
}
if(PlayerInfo[playerid][pPJail]> 0)
{
SendClientMessage(playerid, 0xB4B5B7FF, "Ти си в затвора и не можеш да се телепортираш!");
return 1;
}
if(PlayerInfo[playerid][pDmon20SecWait]>0) return SendClientMessage(playerid,0xB4B5B7FF,"Не са изминали 20 секунди откакто си написал /dmon!");
if(cmn1[playerid]>0) { return SendClientMessage(playerid,0xB4B5B7FF,"Не можеш да влезеш в арената, докато си CMN1!"); }
if(playerInDuel[playerid]==1){ return SendClientMessage(playerid,0xB4B5B7FF,"Не можеш да влезеш в арената, докато си в дуел!");}
if(playerInDMON[playerid]==1){ return SendClientMessage(playerid,0xB4B5B7FF,"Ти вече си в DMON!");}
if(playerInDeathmatch[playerid]==true) return SendClientMessage(playerid,0xB4B5B7FF,"В момента не можеш да използваш тази команда!");
if(playerInStreetRace[playerid]==true) return SendClientMessage(playerid,0xB4B5B7FF,"В момента не можеш да използваш тази команда!");
if(PlayerInfo[playerid][pADuty]>0) return SendClientMessage(playerid,0xB4B5B7FF,"Ти си ADMIN ON-DUTY и не можеш да влезеш в DMON!");
if(PlayerInfo[playerid][pIFCDuty]==1) return SendClientMessage(playerid,0xB4B5B7FF,"Не можеш да използваш тази команда, докато си IFC ON-DUTY!");
if (IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,0xB4B5B7FF,"Трябва да си пешеходец за да си във DM зоната!");
ResetPlayerWeapons(playerid);
format(string,256,"DM Area: %s влезе в DM арената!",pname[playerid]);
SendClientMessageToAll(0xFFFF81FF, string);
SendClientMessage(playerid, 0xFFFF81FF, "DM Area: Моля, използвайте /dmoff за да излезете от DM арената!");
playerInDMON[playerid]=1;
new stringtext[115];
PlayerInfo[playerid][pDmon20SecWait]=20;
TextDrawHideForPlayer(playerid, DMON[playerid]);
format(stringtext, 115, " ~r~Kills: ~w~%d/~g~20",PlayerInfo[playerid][pDMONKills]);
TextDrawSetString(DMON[playerid], stringtext);
TextDrawShowForPlayer(playerid, DMON[playerid]);
SetPlayerColor(playerid,0xFFFF81FF);
SetPlayerPosInDMON(playerid);
GivePlayerGunInDMON(playerid);
SetPlayerHealth(playerid,100); SetPlayerArmour(playerid,0);
return 1;
}
if(strcmp(cmd, "/ls", true)==0)
{
if(PlayerInfo[playerid][pTeam] !=1) return SendClientMessage(playerid, 0xB4B5B7FF, "Трябва да си от VIP за да използваш тази команда!");
if(PlayerInfo[playerid][pAFK]> 0)
{
SendClientMessage(playerid, 0xB4B5B7FF, "Ти си в AFK режим и не можеш да се телепортираш!");
return 1;
}
if(PlayerInfo[playerid][pJail]> 0)
{
SendClientMessage(playerid, 0xB4B5B7FF, "Ти си в админ затвора и не можеш да се телепортираш!");
return 1;
}
if(PlayerInfo[playerid][pPJail]> 0)
{
SendClientMessage(playerid, 0xB4B5B7FF, "Ти си в затвора и не можеш да се телепортираш!");
return 1;
}
if(GetPlayerVehicleID(playerid)!=0 && spawned[playerid]==1) return SendClientMessage(playerid,0xB4B5B7FF,"Трябва да си пешеходец за да се телепортираш!");
if(cmn1[playerid]>0) { return SendClientMessage(playerid,0xB4B5B7FF,"Не можеш да се телепортираш, докато си CMN1!"); }
if(playerInDuel[playerid]==1){ return SendClientMessage(playerid,0xB4B5B7FF,"Не можеш да се телепортираш, докато си в дуел!");}
if(inevent[playerid]==1) return SendClientMessage(playerid,0xB4B5B7FF,"Не можеш да се телепортираш, докато си в евент!");
if(playerInDMON[playerid]==1){ return SendClientMessage(playerid,0xB4B5B7FF,"Не можеш да се телепортираш, докато си в DMON!");}
if(playerInDeathmatch[playerid]==true) return SendClientMessage(playerid,0xB4B5B7FF,"В момента не можеш да използваш тази команда!");
if(playerInStreetRace[playerid]==true) return SendClientMessage(playerid,0xB4B5B7FF,"В момента не можеш да използваш тази команда!");
new Float:pHealth;
GetPlayerHealth(playerid,pHealth);
new Float:pArmour;
GetPlayerArmour(playerid,pArmour);
if(pHealth <= 99 && pArmour<=99)
{
SendClientMessage(playerid, 0xB4B5B7FF, "Трябва да имаш 100 кръв и 100 жилетка за да се телепортираш!");
return 1;
}
SendClientMessage(playerid, 0xFF3737FF, "VIP: Ти се телепортира в Los Santos");
SetPlayerPos(playerid, 1537.7205,-1691.0510,13.5469); SetPlayerFacingAngle(playerid,90.5010);
SetPlayerInterior(playerid,0); SetPlayerVirtualWorld(playerid,0);
SetCameraBehindPlayer(playerid);
return 1;
}
if(strcmp(cmd, "/lv", true)==0)
{
if(PlayerInfo[playerid][pTeam] !=1) return SendClientMessage(playerid, 0xB4B5B7FF, "Трябва да си от VIP за да използваш тази команда!");
if(PlayerInfo[playerid][pAFK]> 0)
{
SendClientMessage(playerid, 0xB4B5B7FF, "Ти си в AFK режим и не можеш да се телепортираш!");
return 1;
}
if(PlayerInfo[playerid][pJail]> 0)
{
SendClientMessage(playerid, 0xB4B5B7FF, "Ти си в админ затвора и не можеш да се телепортираш!");
return 1;
}
if(PlayerInfo[playerid][pPJail]> 0)
{
SendClientMessage(playerid, 0xB4B5B7FF, "Ти си в затвора и не можеш да се телепортираш!");
return 1;
}
if(GetPlayerVehicleID(playerid)!=0 && spawned[playerid]==1) return SendClientMessage(playerid,0xB4B5B7FF,"Трябва да си пешеходец за да се телепортираш!");
if(cmn1[playerid]>0) { return SendClientMessage(playerid,0xB4B5B7FF,"Не можеш да се телепортираш, докато си CMN1!"); }
if(playerInDuel[playerid]==1){ return SendClientMessage(playerid,0xB4B5B7FF,"Не можеш да се телепортираш, докато си в дуел!");}
if(inevent[playerid]==1) return SendClientMessage(playerid,0xB4B5B7FF,"Не можеш да се телепортираш, докато си в евент!");
if(playerInDMON[playerid]==1){ return SendClientMessage(playerid,0xB4B5B7FF,"Не можеш да се телепортираш, докато си в DMON!");}
if(playerInDeathmatch[playerid]==true) return SendClientMessage(playerid,0xB4B5B7FF,"В момента не можеш да използваш тази команда!");
if(playerInStreetRace[playerid]==true) return SendClientMessage(playerid,0xB4B5B7FF,"В момента не можеш да използваш тази команда!");
new Float:pHealth;
GetPlayerHealth(playerid,pHealth);
new Float:pArmour;
GetPlayerArmour(playerid,pArmour);
if(pHealth <= 99 && pArmour<=99)
{
SendClientMessage(playerid, 0xB4B5B7FF, "Трябва да имаш 100 кръв и 100 жилетка за да се телепортираш!");
return 1;
}
SendClientMessage(playerid, 0xFF3737FF, "VIP: Ти се телепортира в Las Venturas");
SetPlayerPos(playerid, 1699.6941,1434.8165,10.6869); SetPlayerFacingAngle(playerid,272.8860);
SetPlayerInterior(playerid,0); SetPlayerVirtualWorld(playerid,0);
SetCameraBehindPlayer(playerid);
return 1;
}
if(strcmp(cmd, "/vipbase", true)==0)
{
if(PlayerInfo[playerid][pTeam] !=1) return SendClientMessage(playerid, 0xB4B5B7FF, "Трябва да си от VIP за да използваш тази команда!");
if(PlayerInfo[playerid][pAFK]> 0)
{
SendClientMessage(playerid, 0xB4B5B7FF, "Ти си в AFK режим и не можеш да се телепортираш!");
return 1;
}
if(PlayerInfo[playerid][pJail]> 0)
{
SendClientMessage(playerid, 0xB4B5B7FF, "Ти си в админ затвора и не можеш да се телепортираш!");
return 1;
}
if(PlayerInfo[playerid][pPJail]> 0)
{
SendClientMessage(playerid, 0xB4B5B7FF, "Ти си в затвора и не можеш да се телепортираш!");
return 1;
}
if(GetPlayerVehicleID(playerid)!=0 && spawned[playerid]==1) return SendClientMessage(playerid,0xB4B5B7FF,"Трябва да си пешеходец за да се телепортираш!");
if(cmn1[playerid]>0) { return SendClientMessage(playerid,0xB4B5B7FF,"Не можеш да се телепортираш, докато си CMN1!"); }
if(playerInDuel[playerid]==1){ return SendClientMessage(playerid,0xB4B5B7FF,"Не можеш да се телепортираш, докато си в дуел!");}
if(inevent[playerid]==1) return SendClientMessage(playerid,0xB4B5B7FF,"Не можеш да се телепортираш, докато си в евент!");
if(playerInDMON[playerid]==1){ return SendClientMessage(playerid,0xB4B5B7FF,"Не можеш да се телепортираш, докато си в DMON!");}
if(playerInDeathmatch[playerid]==true) return SendClientMessage(playerid,0xB4B5B7FF,"В момента не можеш да използваш тази команда!");
if(playerInStreetRace[playerid]==true) return SendClientMessage(playerid,0xB4B5B7FF,"В момента не можеш да използваш тази команда!");
new Float:pHealth;
GetPlayerHealth(playerid,pHealth);
new Float:pArmour;
GetPlayerArmour(playerid,pArmour);
if(pHealth <= 99 && pArmour<=99)
{
SendClientMessage(playerid, 0xB4B5B7FF, "Трябва да имаш 100 кръв и 100 жилетка за да се телепортираш!");
return 1;
}
SendClientMessage(playerid, 0xFF3737FF, "VIP: Ти се телепортира в базата");
SetPlayerPos(playerid, 1252.4546,-2032.9832,59.6335); SetPlayerFacingAngle(playerid,269.6020);
SetPlayerInterior(playerid,0); SetPlayerVirtualWorld(playerid,0);
SetCameraBehindPlayer(playerid);
return 1;
}
if(strcmp(cmd, "/gotols", true)==0)
{
if(PlayerInfo[playerid][pAdmin] < 3) return SendClientMessage(playerid, 0xB4B5B7FF, "Нямаш права за да ползваш командата!");
if(PlayerInfo[playerid][pAFK]> 0)
{
SendClientMessage(playerid, 0xB4B5B7FF, "Ти си в AFK режим и не можеш да се телепортираш!");
return 1;
}
if(PlayerInfo[playerid][pJail]> 0)
{
SendClientMessage(playerid, 0xB4B5B7FF, "Ти си в админ затвора и не можеш да се телепортираш!");
return 1;
}
if(PlayerInfo[playerid][pPJail]> 0)
{
SendClientMessage(playerid, 0xB4B5B7FF, "Ти си в затвора и не можеш да се телепортираш!");
return 1;
}
if(cmn1[playerid]>0) { return SendClientMessage(playerid,0xB4B5B7FF,"Не можеш да се телепортираш, докато си CMN1!"); }
if(playerInDuel[playerid]==1){ return SendClientMessage(playerid,0xB4B5B7FF,"Не можеш да се телепортираш, докато си в дуел!");}
if(inevent[playerid]==1) return SendClientMessage(playerid,0xB4B5B7FF,"Не можеш да се телепортираш, докато си в евент!");
if(playerInDMON[playerid]==1){ return SendClientMessage(playerid,0xB4B5B7FF,"Не можеш да се телепортираш, докато си в DMON!");}
if(playerInDeathmatch[playerid]==true) return SendClientMessage(playerid,0xB4B5B7FF,"В момента не можеш да използваш тази команда!");
if(playerInStreetRace[playerid]==true) return SendClientMessage(playerid,0xB4B5B7FF,"В момента не можеш да използваш тази команда!");
SendClientMessage(playerid, 0xFFFFFFFF, "* Ти се телепортира на Los Santos! *");
SetPlayerPos(playerid, 1537.7205,-1691.0510,13.5469); SetPlayerFacingAngle(playerid,90.5010);
SetPlayerInterior(playerid,0); SetPlayerVirtualWorld(playerid,0);
SetCameraBehindPlayer(playerid);
return 1;
}
if(strcmp(cmd, "/gotolv", true)==0)
{
if(PlayerInfo[playerid][pAdmin] < 3) return SendClientMessage(playerid, 0xB4B5B7FF, "Нямаш права за да ползваш командата!");
if(PlayerInfo[playerid][pAFK]> 0)
{
SendClientMessage(playerid, 0xB4B5B7FF, "Ти си в AFK режим и не можеш да се телепортираш!");
return 1;
}
if(PlayerInfo[playerid][pJail]> 0)
{
SendClientMessage(playerid, 0xB4B5B7FF, "Ти си в админ затвора и не можеш да се телепортираш!");
return 1;
}
if(PlayerInfo[playerid][pPJail]> 0)
{
SendClientMessage(playerid, 0xB4B5B7FF, "Ти си в затвора и не можеш да се телепортираш!");
return 1;
}
if(cmn1[playerid]>0) { return SendClientMessage(playerid,0xB4B5B7FF,"Не можеш да се телепортираш, докато си CMN1!"); }
if(playerInDuel[playerid]==1){ return SendClientMessage(playerid,0xB4B5B7FF,"Не можеш да се телепортираш, докато си в дуел!");}
if(inevent[playerid]==1) return SendClientMessage(playerid,0xB4B5B7FF,"Не можеш да се телепортираш, докато си в евент!");
if(playerInDMON[playerid]==1){ return SendClientMessage(playerid,0xB4B5B7FF,"Не можеш да се телепортираш, докато си в DMON!");}
if(playerInDeathmatch[playerid]==true) return SendClientMessage(playerid,0xB4B5B7FF,"В момента не можеш да използваш тази команда!");
if(playerInStreetRace[playerid]==true) return SendClientMessage(playerid,0xB4B5B7FF,"В момента не можеш да използваш тази команда!");
SendClientMessage(playerid, 0xFFFFFFFF, "* Ти се телепортира на Las Venturas Airport! *");
SetPlayerPos(playerid, 1699.6941,1434.8165,10.6869); SetPlayerFacingAngle(playerid,272.8860);
SetPlayerInterior(playerid,0); SetPlayerVirtualWorld(playerid,0);
SetCameraBehindPlayer(playerid);
return 1;
}
if(strcmp(cmd, "/gotosf", true)==0)
{
if(PlayerInfo[playerid][pAdmin] < 3) return SendClientMessage(playerid, 0xB4B5B7FF, "Нямаш права за да ползваш командата!");
if(PlayerInfo[playerid][pAFK]> 0)
{
SendClientMessage(playerid, 0xB4B5B7FF, "Ти си в AFK режим и не можеш да се телепортираш!");
return 1;
}
if(PlayerInfo[playerid][pJail]> 0)
{
SendClientMessage(playerid, 0xB4B5B7FF, "Ти си в админ затвора и не можеш да се телепортираш!");
return 1;
}
if(PlayerInfo[playerid][pPJail]> 0)
{
SendClientMessage(playerid, 0xB4B5B7FF, "Ти си в затвора и не можеш да се телепортираш!");
return 1;
}
if(cmn1[playerid]>0) { return SendClientMessage(playerid,0xB4B5B7FF,"Не можеш да се телепортираш, докато си CMN1!"); }
if(playerInDuel[playerid]==1){ return SendClientMessage(playerid,0xB4B5B7FF,"Не можеш да се телепортираш, докато си в дуел!");}
if(inevent[playerid]==1) return SendClientMessage(playerid,0xB4B5B7FF,"Не можеш да се телепортираш, докато си в евент!");
if(playerInDMON[playerid]==1){ return SendClientMessage(playerid,0xB4B5B7FF,"Не можеш да се телепортираш, докато си в DMON!");}
if(playerInDeathmatch[playerid]==true) return SendClientMessage(playerid,0xB4B5B7FF,"В момента не можеш да използваш тази команда!");
if(playerInStreetRace[playerid]==true) return SendClientMessage(playerid,0xB4B5B7FF,"В момента не можеш да използваш тази команда!");
SendClientMessage(playerid, 0xFFFFFFFF, "* Ти се телепортира на San Fierro Airport! *");
SetPlayerPos(playerid, -1416.9932,-296.2564,14.1484); SetPlayerFacingAngle(playerid,132.8014);
SetPlayerInterior(playerid,0); SetPlayerVirtualWorld(playerid,0);
SetCameraBehindPlayer(playerid);
return 1;
}
if(strcmp(cmd, "/gotomc", true)==0)
{
if(PlayerInfo[playerid][pAdmin] < 3) return SendClientMessage(playerid, 0xB4B5B7FF, "Нямаш права за да ползваш командата!");
if(PlayerInfo[playerid][pAFK]> 0)
{
SendClientMessage(playerid, 0xB4B5B7FF, "Ти си в AFK режим и не можеш да се телепортираш!");
return 1;
}
if(PlayerInfo[playerid][pJail]> 0)
{
SendClientMessage(playerid, 0xB4B5B7FF, "Ти си в админ затвора и не можеш да се телепортираш!");
return 1;
}
if(PlayerInfo[playerid][pPJail]> 0)
{
SendClientMessage(playerid, 0xB4B5B7FF, "Ти си в затвора и не можеш да се телепортираш!");
return 1;
}
if(cmn1[playerid]>0) { return SendClientMessage(playerid,0xB4B5B7FF,"Не можеш да се телепортираш, докато си CMN1!"); }
if(playerInDuel[playerid]==1){ return SendClientMessage(playerid,0xB4B5B7FF,"Не можеш да се телепортираш, докато си в дуел!");}
if(inevent[playerid]==1) return SendClientMessage(playerid,0xB4B5B7FF,"Не можеш да се телепортираш, докато си в евент!");
if(playerInDMON[playerid]==1){ return SendClientMessage(playerid,0xB4B5B7FF,"Не можеш да се телепортираш, докато си в DMON!");}
if(playerInDeathmatch[playerid]==true) return SendClientMessage(playerid,0xB4B5B7FF,"В момента не можеш да използваш тази команда!");
if(playerInStreetRace[playerid]==true) return SendClientMessage(playerid,0xB4B5B7FF,"В момента не можеш да използваш тази команда!");
SendClientMessage(playerid, 0xFFFFFFFF, "* Ти се телепортира на Mountain Chiliad! *");
SetPlayerPos(playerid, -2311.1885,-1641.3820,483.7031); SetPlayerFacingAngle(playerid,216.9667);
SetPlayerInterior(playerid,0); SetPlayerVirtualWorld(playerid,0);
SetCameraBehindPlayer(playerid);
return 1;
}
if(strcmp(cmd,"/invisible",true) == 0)
{
if(PlayerInfo[playerid][pVip] >= 3 || freevip==1)
{
if(cmn1[playerid]>0) { return SendClientMessage(playerid,0xB4B5B7FF,"Не можеш да бъдеш невидим, докато си CMN1!"); }
if(playerInDuel[playerid]>0) { return SendClientMessage(playerid,0xB4B5B7FF,"Не можеш да бъдеш невидим, докато си Duel!"); }
if(inevent[playerid]== 1 && einvisible==0) return SendClientMessage(playerid, COLOR_GRAD1,"Командата /invisible е забранена в евента!");
if(PlayerInfo[playerid][pInvisible]==0)
{
SetPlayerColor(playerid, 0xFFFFFF00);
SendClientMessage(playerid,0xFFFFFFFF,"Ти вече си невидим на картата.");
}
else
{
RestartPlayerColor(playerid);
SendClientMessage(playerid,0xFFFFFFFF,"Ти вече си видим на картата.");
}
}
else
{
SendClientMessage(playerid,0xB4B5B7FF,"Нямаш достатъчно VIP права за да ползваш командата!");
}
return 1;
}
if(strcmp(cmd,"/showdf",true) == 0)
{
if(PlayerInfo[playerid][pTeam] == 15 && PlayerInfo[playerid][pRank]==6)
{
if(hidedf==0) return SendClientMessage(playerid,0xB4B5B7FF,"Delta Force вече е на видим режим!");
format(string256, 256, "[FACTION CHAT] %s превключи Delta Force на видим режим!",pname[playerid]);hidedf=0;
for(new i=0; i<MAX_PLAYERS; i++)
{
if(PlayerInfo[i][pTeam] == PlayerInfo[playerid][pTeam])
{
SendClientMessage(i, 0x33CCFFFF, string256);
}
}
for(new i = 0; i < MAX_PLAYERS; i++)
{
if(PlayerInfo[i][pTeam] == 15 && playerInDuel[i]==0 && cmn1[i]==0)
{
SetPlayerColor(i,0xA4A400FF);
}
}
}
else
{
SendClientMessage(playerid,0xB4B5B7FF,"Ти не си лидер на Delta Force!");
}
return 1;
}
if (strcmp(cmdtext, "/fmuted", true) == 0)
{
if (PlayerInfo[playerid][pRank] == 6 && PlayerInfo[playerid][pTeam]>0)
{
SendClientMessage(playerid, 0x40BF00FF, "Онлайн заглушени играчи в твоята банда/мафия:");
new muted = 0;
for(new i = 0; i < MAX_PLAYERS; i++)
{
if(PlayerInfo[i][pFMuted] > 0 && PlayerInfo[i][pTeam]==PlayerInfo[playerid][pTeam])
{
format(string256, 256, "%s (ID:%d)", pname[i], i);
muted = 1;
}
}
if (muted == 0) SendClientMessage(playerid,0xE60000FF,"Няма онлайн заглушени играчи във FACTION чата."); else SendClientMessage(playerid,0xFFFFFFFF,string256);
}
else
{
SendClientMessage(playerid, 0xB4B5B7FF, "Нямаш права за да ползваш командата!");
}
return 1;
}
if(strcmp(cmd, "/checkfwarn", true) == 0)
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /checkfwarn [playerid]");
return 1;
}
new playa;
playa = ReturnUser(tmp);
tmp = strtok(cmdtext, idx);
if (PlayerInfo[playerid][pRank] >= 6)
{
if(playa != INVALID_PLAYER_ID)
{
if(PlayerInfo[playerid][pTeam]!=PlayerInfo[playa][pTeam]) return SendClientMessage(playerid, 0xB4B5B7FF,"Този играч не е от твоята банда/мафия!");
if(PlayerInfo[playa][pFWarns]==0) return SendClientMessage(playerid, 0xB4B5B7FF,"Този играч няма нито едно FACTION предупреждение!");
new string2562[256];
format(string2562,2562,"%s има %d FACTION предупреждения",pname[playa],PlayerInfo[playa][pFWarns]);
SendClientMessage(playerid,0x33CCFFFF,string2562);
}
else
{
SendClientMessage(playerid, COLOR_GRAD1,"Посоченото ID не е в сървъра!");
}
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
}
return 1;
}
if(strcmp(cmd, "/checktogf", true) == 0)
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /checktogf [playerid]");
return 1;
}
new playa;
playa = ReturnUser(tmp);
tmp = strtok(cmdtext, idx);
if (PlayerInfo[playerid][pRank] >= 6)
{
if(playa != INVALID_PLAYER_ID)
{
if(PlayerInfo[playerid][pTeam]!=PlayerInfo[playa][pTeam]) return SendClientMessage(playerid, 0xFFFFFFFF,"Този играч не е от твоята банда/мафия!");
new stringFaction[256];
if(PlayerInfo[playerid][pTogFaction]==0)
{
format(stringFaction,256,"%s в момента вижда FACTION чата!",pname[playa]);
}
if(PlayerInfo[playerid][pTogFaction]==1)
{
format(stringFaction,256,"%s в момента не вижда FACTION чата!",pname[playa]);
}
SendClientMessage(playerid, 0x33CCFFFF,stringFaction);
}
else
{
SendClientMessage(playerid, COLOR_GRAD1,"Посоченото ID не е в сървъра!");
}
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
}
return 1;
}
if(strcmp(cmd, "/ismember", true) == 0)
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /ismember [playerid]");
return 1;
}
new playa;
playa = ReturnUser(tmp);
tmp = strtok(cmdtext, idx);
if (PlayerInfo[playerid][pRank] >= 6)
{
if(playa != INVALID_PLAYER_ID)
{
if(PlayerInfo[playerid][pTeam]!=PlayerInfo[playa][pTeam]) SendClientMessage(playerid, 0xFFFFFFFF,"Този играч не е от твоята банда/мафия!");
if(PlayerInfo[playerid][pTeam]==PlayerInfo[playa][pTeam]) SendClientMessage(playerid, 0xFFFFFFFF,"Този играч е от твоята банда/мафия!");
}
else
{
SendClientMessage(playerid, COLOR_GRAD1,"Посоченото ID не е в сървъра!");
}
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
}
return 1;
}
if(strcmp(cmd, "/funmute", true) == 0 || strcmp(cmd, "/factionunmute", true) == 0 )
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /factionunmute(/funmute) [playerid]");
return 1;
}
new playa;
playa = ReturnUser(tmp);
tmp = strtok(cmdtext, idx);
if (PlayerInfo[playerid][pRank] >= 6)
{
if(PlayerInfo[playerid][pTeam]!=PlayerInfo[playa][pTeam]) return SendClientMessage(playerid, COLOR_GRAD1,"Този играч не е от твоята банда/мафия!");
if(playa != INVALID_PLAYER_ID)
{
if(PlayerInfo[playa][pFMuted] >0)
{
PlayerInfo[playa][pFMuted] = 0;
format(string256, 256, "[FACTION CHAT] %s was FACTION unmuted by %s",pname[playa], pname[playerid]);
for(new i=0; i<MAX_PLAYERS; i++)
{
if(PlayerInfo[i][pTeam] == PlayerInfo[playerid][pTeam])
{
SendClientMessage(i, 0x33CCFFFF, string256);
}
}
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Този играч не е заглушен в FACTION чата!");
}
}
else
{
SendClientMessage(playerid, COLOR_GRAD1,"Посоченото ID не е в сървъра!");
}
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
}
return 1;
}
if(strcmp(cmd, "/ftmute", true) == 0 || strcmp(cmd, "/factiontimemute", true) == 0 )
{
if (PlayerInfo[playerid][pRank] >= 6)
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /factiontimemute(/ftmute) [playerid] [time] [reason]");
return 1;
}
new playa;
playa = ReturnUser(tmp);
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /factiontimemute(/ftmute) [playerid] [time] [reason]");
return 1;
}
new timeMinutes;
timeMinutes = strval(tmp);
if(IsPlayerConnected(playa))
{
new length = strlen(cmdtext);
while ((idx < length) && (cmdtext[idx] <= ' '))
{
idx++;
}
new offset = idx;
new result[256];
while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
{
result[idx - offset] = cmdtext[idx];
idx++;
}
result[idx - offset] = EOS;
if(!strlen(result))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /factiontimemute(/ftmute) [playerid] [time] [reason]");
return 1;
}
if(timeMinutes<1 || timeMinutes>1000) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва минутите да бъдат между 1 и 1000!");
PlayerInfo[playa][pFMuted] = timeMinutes;
format(string256, 256, "[FACTION CHAT] %s was FACTION muted by %s for %d minutes. [Reason: %s]",pname[playa], pname[playerid],timeMinutes,result);
new playerTeam=PlayerInfo[playerid][pTeam];
SendFactionMessage(playerTeam, 0x33CCFFFF, string256);
}
else
{
SendClientMessage(playerid, COLOR_GRAD1,"Посоченото ID не е в сървъра!");
}
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
}
return 1;
}
if(strcmp(cmd, "/aunmute", true) == 0)
{
if (PlayerInfo[playerid][pAdmin] >= 1 || PlayerInfo[playerid][pTest] == 1)
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /aunmute [playerid]");
return 1;
}
para1[playerid] = strval(tmp);
if(!IsPlayerConnected(para1[playerid]))
{
SendClientMessage(playerid, 0xB4B5B7FF, "Посоченото ID не е в сървъра!");
return 1;
}
if(PlayerInfo[para1[playerid]][pAMuted] > 0)
{
PlayerInfo[para1[playerid]][pAMuted] = 0;
format(string256, 256, "ADMIN: %s was unmuted in ADMIN CHAT by %s",pname[para1[playerid]] ,pname[playerid]);
SendClientMessageToAll(0x00E600FF,string256);
}
else
{
SendClientMessage(playerid,0xB4B5B7FF,"Този играч не е заглушен в ADMIN чата!");
}
}
else
{
SendClientMessage(playerid, 0xB4B5B7FF, "Нямаш права за да ползваш командата!");
}
return 1;
}
if(strcmp(cmd, "/amute", true) == 0)
{
if (PlayerInfo[playerid][pAdmin] >= 3)
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /amute [playerid] [minutes] [reason]");
return 1;
}
para1[playerid] = ReturnUser(tmp);
tmp = strtok(cmdtext, idx);
new minutesz;
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /amute [playerid] [minutes] [reason]");
return 1;
}
minutesz = strval(tmp);
if(minutesz<1)
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /amute [playerid] [minutes] [reason]");
return 1;
}
new length = strlen(cmdtext);
while ((idx < length) && (cmdtext[idx] <= ' '))
{
idx++;
}
new offset = idx;
new result[256];
while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
{
result[idx - offset] = cmdtext[idx];
idx++;
}
result[idx - offset] = EOS;
if(!strlen(result))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /amute [playerid] [minutes] [reason]");
return 1;
}
if(para1[playerid] != INVALID_PLAYER_ID)
{
PlayerInfo[para1[playerid]][pAMuted] = minutesz*60;
format(string256, 256, "ADMIN: %s was muted in ADMIN CHAT by %s for %d minutes. [Reason: %s]",pname[para1[playerid]], pname[playerid],minutesz,result);
SendClientMessageToAll(COLOR_RED, string256);
}
else
{
SendClientMessage(playerid, COLOR_GRAD1,"Посоченото ID не е в сървъра!");
}
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
}
return 1;
}
if(strcmp(cmd, "/fmute", true) == 0 || strcmp(cmd, "/factionmute", true) == 0)
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /factionmute(/fmute) [playerid] [reason]");
return 1;
}
new playa;
playa = ReturnUser(tmp);
if (PlayerInfo[playerid][pRank] >= 6)
{
new length = strlen(cmdtext);
while ((idx < length) && (cmdtext[idx] <= ' '))
{
idx++;
}
new offset = idx;
new result[256];
while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
{
result[idx - offset] = cmdtext[idx];
idx++;
}
result[idx - offset] = EOS;
if(!strlen(result))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /factionmute(/fmute) [playerid] [reason]");
return 1;
}
if(playa != INVALID_PLAYER_ID)
{
if(PlayerInfo[playa][pFMuted] == 0)
{
PlayerInfo[playa][pFMuted] = 1000000;
format(string256, 256, "[FACTION CHAT] %s was FACTION muted by %s [Reason: %s]",pname[playa], pname[playerid],result);
for(new i=0; i<MAX_PLAYERS; i++)
{
if(PlayerInfo[i][pTeam] == PlayerInfo[playerid][pTeam])
{
SendClientMessage(i, 0x33CCFFFF, string256);
}
}
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Този играч вече е заглушен в FACTION чата!");
}
}
else
{
SendClientMessage(playerid, COLOR_GRAD1,"Посоченото ID не е в сървъра!");
}
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Ти не си лидер!");
}
return 1;
}
if(strcmp(cmd,"/factionmuteall",true) == 0 || strcmp(cmd,"/fmuteall",true) == 0)
{
if(PlayerInfo[playerid][pTeam] != 0 && PlayerInfo[playerid][pRank]==6)
{
if(TeamInfo[PlayerInfo[playerid][pTeam]][tMute]==1) return SendClientMessage(playerid,0xB4B5B7FF,"Всички играчи в твоята банда вече са заглушени!");
format(string256, 256, "[FACTION CHAT] All players were FACTION muted by %s!",pname[playerid]);TeamInfo[PlayerInfo[playerid][pTeam]][tMute]=1;
for(new i=0; i<MAX_PLAYERS; i++)
{
if(PlayerInfo[i][pTeam] == PlayerInfo[playerid][pTeam])
{
SendClientMessage(i, 0x33CCFFFF, string256);
}
}
}
else
{
SendClientMessage(playerid,0xB4B5B7FF,"Ти не си лидер!");
}
return 1;
}
if(strcmp(cmd,"/factionunmuteall",true) == 0 || strcmp(cmd,"/funmuteall",true) == 0)
{
if(PlayerInfo[playerid][pTeam] != 0 && PlayerInfo[playerid][pRank]==6)
{
if(TeamInfo[PlayerInfo[playerid][pTeam]][tMute]==0) return SendClientMessage(playerid,0xB4B5B7FF,"Всички играчи в твоята банда вече са отглушени!");
format(string256, 256, "[FACTION CHAT] All players were FACTION unmuted by %s!",pname[playerid]);TeamInfo[PlayerInfo[playerid][pTeam]][tMute]=0;
for(new i=0; i<MAX_PLAYERS; i++)
{
if(PlayerInfo[i][pTeam] == PlayerInfo[playerid][pTeam])
{
SendClientMessage(i, 0x33CCFFFF, string256);
PlayerInfo[i][pFMuted]=0;
}
}
}
else
{
SendClientMessage(playerid,0xB4B5B7FF,"Ти не си лидер!");
}
return 1;
}
if(strcmp(cmd,"/hidedf",true) == 0)
{
if(PlayerInfo[playerid][pTeam] == 15 && PlayerInfo[playerid][pRank]==6)
{
if(hidedf==1) return SendClientMessage(playerid,0xB4B5B7FF,"Delta Force вече е на невидим режим!");
format(string256, 256, "[FACTION CHAT] %s превключи Delta Force на невидим режим!",pname[playerid]);hidedf=1;
for(new i=0; i<MAX_PLAYERS; i++)
{
if(PlayerInfo[i][pTeam] == PlayerInfo[playerid][pTeam])
{
SendClientMessage(i, 0x33CCFFFF, string256);
}
}
for(new i = 0; i < MAX_PLAYERS; i++)
{
if(PlayerInfo[i][pTeam] == 15 && playerInDuel[i]==0 && cmn1[i]==0)
{
SetPlayerColor(i, 0xFFFFFF00);
}
}
}
else
{
SendClientMessage(playerid,0xB4B5B7FF,"Ти не си лидер на Delta Force!");
}
return 1;
}
if(strcmp(cmd, "/vguns", true) == 0)
{
if (PlayerInfo[playerid][pVip] >= 3 || freevip==1)
{
if(PlayerInfo[playerid][pVGuns]>0)
{
SendClientMessage(playerid,COLOR_GRAD1,"Не е изминало нужното време от последното използване на командата!");
return 1;
}
if(PlayerInfo[playerid][pTeam]==FACTION_CIVILIAN)
{
SendClientMessage(playerid,0x33AA33FF,"SERVER: Ти си добави Sawn-off и M4!");
GivePlayerWeapon(playerid, 31, 50);
GivePlayerWeapon(playerid, 26, 55);
}
else
{
SendClientMessage(playerid,0x33AA33FF,"SERVER: Ти си добави Sniper Rifle и Knife");
GivePlayerWeapon(playerid, 34, 15);
GivePlayerWeapon(playerid, 4, 1);
}
}
else
{
SendClientMessage(playerid,COLOR_GRAD1,"Нямаш достатъчно VIP права за да ползваш командата!");
}
return 1;
}
if(strcmp(cmdtext, "/tune", true) == 0)
{
if(PlayerInfo[playerid][pVip]<3 || freevip==1 && !IsPlayerInRangeOfPoint(playerid, 4.0, 1247.9263,-2051.8269,59.5036) && !IsPlayerInRangeOfPoint(playerid, 4.0, 1248.8352,-2058.9548,59.4665) && !IsPlayerInRangeOfPoint(playerid, 4.0, 2404.2773,1023.2300,10.5474) && !IsPlayerInRangeOfPoint(playerid, 4.0, 2404.1978,1029.6959,10.5400))
{
return SendClientMessage(playerid,0xB4B5B7FF,"Нямаш достатъчно VIP права за да ползваш командата!");
}
if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER)
{
SendClientMessage(playerid,COLOR_GRAD1,"Трябва да си в превозно средство като шофьор!");
return 1;
}
if(inevent[playerid]== 1 && etune==1) return SendClientMessage(playerid, COLOR_GRAD1,"Командата /tune е забранена в евента!");
ShowMenuForPlayer(TuningMenu, playerid);
TogglePlayerControllable(playerid,0);
InTuneGarage[playerid]=true;
return 1;
}
if(strcmp(cmd,"/vrefuel",true)==0)
{
new vehicle;
vehicle = GetPlayerVehicleID(playerid);
if(PlayerInfo[playerid][pVip] >= 3 || freevip==1)
{
if(vehicle > 0)
{
if(PlayerInfo[playerid][pRefuel20LitTimer] == 0)
{
if(vehfuel[GetPlayerVehicleID(playerid)]>=80) return SendClientMessage(playerid,0xB4B5B7FF,"Твоето превозно средство има над 80 литра!");
vehfuel[GetPlayerVehicleID(playerid)] +=20;
SendClientMessage(playerid,0xFFFF00FF,"Ти добави 20 литра бензин на твоето превозно средство");
PlayerInfo[playerid][pRefuel20LitTimer] = 6*60;
}
else
{
SendClientMessage(playerid,0xB4B5B7FF,"Не са минали 6 минути от последното използване на командата!");
}
}
else
{
SendClientMessage(playerid,0xB4B5B7FF,"Ти не си в превозно средство!");
}
}
else
{
SendClientMessage(playerid,0xB4B5B7FF,"Нямаш достатъчно VIP права за да ползваш командата!");
}
return 1;
}
if(strcmp(cmd,"/aviptext",true)==0)
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /aviptext [playerid] [text]");
return 1;
}
para1[playerid] = ReturnUser(tmp);
new length = strlen(cmdtext);
while ((idx < length) && (cmdtext[idx] <= ' '))
{
idx++;
}
new offset = idx;
new result[256];
while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
{
result[idx - offset] = cmdtext[idx];
idx++;
}
result[idx - offset] = EOS;
if(!strlen(result))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /aviptext [playerid] [text]");
return 1;
}
if(PlayerInfo[para1[playerid]][pVip] < 6 && freevip==0) return SendClientMessage(playerid,0xB4B5B7FF,"Този играч няма достатъчно VIP права за да му сложиш текст!");
if(PlayerInfo[para1[playerid]][pADuty]==1)
{
return SendClientMessage(playerid,0xB4B5B7FF,"Този играч е ADMIN ON-DUTY!");
}
if(para1[playerid]==INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GRAD1,"Посоченото ID не е в сървъра!");
if(para1[playerid]==playerid) return SendClientMessage(playerid, COLOR_GRAD1,"Не можеш да смениш своя 3D текст!");
if(strlen(result)<1 || strlen(result)>25) return SendClientMessage(playerid,0xB4B5B7FF,"Трябва символите да бъдат между 1 и 25!");
UpdateDynamic3DTextLabelText(PlayerLabel[para1[playerid]], 0x800000FF, " ");
format(VipText3D[para1[playerid]],26,"");
PlayerLabel[playerid] = CreateDynamic3DTextLabel(VipText3D[playerid], 0x800000FF, 0.0, 0.0, 0.0, 15.0, para1[playerid], INVALID_VEHICLE_ID, 0, GetPlayerVirtualWorld(para1[playerid]), GetPlayerInterior(para1[playerid]), -1, 15.0);
PlayerLabel[playerid] = CreateDynamic3DTextLabel(result, 0xCC0000FF, 0.0, 0.0, 0.0, 15.0, para1[playerid], INVALID_VEHICLE_ID, 0, GetPlayerVirtualWorld(para1[playerid]), GetPlayerInterior(para1[playerid]), -1, 15.0);
new stringaa[256];
format(stringaa,256,"VIP Label: Ти смени 3D текста на главата на %s на %s",pname[para1[playerid]],result);
SendClientMessage(playerid,0xFF3737FF,stringaa);
format(stringaa,256,"VIP Label: %s смени твоят 3D текст на главата ти на %s",pname[playerid],result);
SendClientMessage(para1[playerid],0xFF3737FF,stringaa);
format(VipText3D[playerid],26,"%s",result);
PlayerInfo[para1[playerid]][pVIPLabel] = 1;
return 1;
}
if(strcmp(cmd, "/viptext", true) == 0)
{
if(PlayerInfo[playerid][pVip] < 6 && freevip==0)
{
return SendClientMessage(playerid,0xB4B5B7FF,"Нямаш достатъчно VIP права за да ползваш командата!");
}
if(PlayerInfo[playerid][pADuty]==1)
{
return SendClientMessage(playerid,0xB4B5B7FF,"Не можеш да използваш тази команда, докато си ON-DUTY!");
}
new length = strlen(cmdtext);
while ((idx < length) && (cmdtext[idx] <= ' '))
{
idx++;
}
new offset = idx;
new result[256];
while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
{
result[idx - offset] = cmdtext[idx];
idx++;
}
result[idx - offset] = EOS;
if(!strlen(result))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /viptext [text]");
return 1;
}
if(PlayerInfo[playerid][pCash]<5000) return SendClientMessage(playerid,0xB4B5B7FF,"Трябва да имаш поне $5000 за да смениш текста на главата си!");
if(strlen(result)<1 || strlen(result)>25) return SendClientMessage(playerid,0xB4B5B7FF,"Трябва символите да бъдат между 1 и 25!");
PlayerInfo[playerid][pCash]-=5000;
UpdateDynamic3DTextLabelText(PlayerLabel[playerid], 0x800000FF, " ");
format(VipText3D[playerid],26,"");
PlayerLabel[playerid] = CreateDynamic3DTextLabel(VipText3D[playerid], 0x800000FF, 0.0, 0.0, 0.0, 15.0, playerid, INVALID_VEHICLE_ID, 0, GetPlayerVirtualWorld(playerid), GetPlayerInterior(playerid), -1, 15.0);
PlayerLabel[playerid] = CreateDynamic3DTextLabel(result, 0xCC0000FF, 0.0, 0.0, 0.0, 15.0, playerid, INVALID_VEHICLE_ID, 0, GetPlayerVirtualWorld(playerid), GetPlayerInterior(playerid), -1, 15.0);
new stringaa[256];
format(stringaa,256,"VIP Label: Ти смени твоят 3D текст на главата ти на %s",result);
SendClientMessage(playerid,0xFF3737FF,stringaa);
format(VipText3D[playerid],26,"%s",result);
PlayerInfo[playerid][pVIPLabel] = 1;
return 1;
}
if(strcmp(cmdtext, "/viplabel", true) == 0)
{
if(PlayerInfo[playerid][pVip] < 4 && freevip==0)
{
return SendClientMessage(playerid,0xB4B5B7FF,"Нямаш достатъчно VIP права за да ползваш командата!");
}
if(PlayerInfo[playerid][pADuty]==1)
{
return SendClientMessage(playerid,0xB4B5B7FF,"Не можеш да използваш тази команда, докато си ON-DUTY!");
}
if(PlayerInfo[playerid][pVIPLabel]==0)
{
UpdateDynamic3DTextLabelText(PlayerLabel[playerid], 0x800000FF, " ");
format(VipText3D[playerid],26,"");
PlayerLabel[playerid] = CreateDynamic3DTextLabel(VipText3D[playerid], 0x800000FF, 0.0, 0.0, 0.0, 15.0, playerid, INVALID_VEHICLE_ID, 0, GetPlayerVirtualWorld(playerid), GetPlayerInterior(playerid), -1, 15.0);
format(VipText3D[playerid],26,"VIP");
PlayerLabel[playerid] = CreateDynamic3DTextLabel(VipText3D[playerid], 0x800000FF, 0.0, 0.0, 0.0, 15.0, playerid, INVALID_VEHICLE_ID, 0, GetPlayerVirtualWorld(playerid), GetPlayerInterior(playerid), -1, 15.0);
PlayerInfo[playerid][pVIPLabel] = 1; SendClientMessage(playerid,0xFF3737FF,"VIP Label: Вече над главата ти пише 'VIP'.");
return 1;
}
else
{
PlayerInfo[playerid][pVIPLabel] = 0;
UpdateDynamic3DTextLabelText(PlayerLabel[playerid], 0x800000FF, " ");
new stringaaa[256]; format(stringaaa,256,"VIP Label: Вече над главата ти няма да пише '%s'.",VipText3D[playerid]);
SendClientMessage(playerid,0xFF3737FF,stringaaa);
}
return 1;
}
if(strcmp(cmdtext, "/laser", true) == 0)
{
if(PlayerInfo[playerid][pVip] < 4 && freevip==0)
{
return SendClientMessage(playerid,0xB4B5B7FF,"Нямаш достатъчно VIP права за да ползваш командата!");
}
if(PlayerInfo[playerid][pLaser] == 0)
{
if(PlayerInfo[playerid][pTeam]==FACTION_VIP)
{
SetPVarInt(playerid, "color", 18643);
}
if(PlayerInfo[playerid][pTeam]==FACTION_GROVE)
{
SetPVarInt(playerid, "color", 19083);
}
if(PlayerInfo[playerid][pTeam]==13 || PlayerInfo[playerid][pTeam]==FACTION_LVPD)
{
SetPVarInt(playerid, "color", 19080);
}
if(PlayerInfo[playerid][pTeam]==FACTION_RIFA)
{
SetPVarInt(playerid, "color", 19080);
}
if(PlayerInfo[playerid][pTeam]==FACTION_DELTAFORCE)
{
SetPVarInt(playerid, "color", 19084);
}
PlayerInfo[playerid][pLaser] = 1; SendClientMessage(playerid,0xF97804FF,"VIP Laser: Ти добави лазера."); return 1;
}
else
{
PlayerInfo[playerid][pLaser] = 0;
SetPVarInt(playerid, "color", 0);
SendClientMessage(playerid,0xF97804FF,"VIP Laser: Ти си махна лазера.");
}
return 1;
}
if(strcmp(cmdtext, "/parrot", true) == 0)
{
if(PlayerInfo[playerid][pVip] < 4 && freevip==0)
{
return SendClientMessage(playerid,0xB4B5B7FF,"Нямаш достатъчно VIP права за да ползваш командата!");
}
if(PlayerInfo[playerid][pParrot] == 0)
{
SendClientMessage(playerid, 0xF97804FF,"Ти си сложи папагал!");
SetPlayerAttachedObject( playerid, 10, 19078, 15, 0.073592, 0.024750, 0.023458, 164.272216, 87.050361, 0.000000, 1.000000, 0.968321, 1.118647 ) && EditAttachedObject(playerid, 10);
PlayerInfo[playerid][pParrot] = 1; return 1;
}
else
{
PlayerInfo[playerid][pParrot] = 0;
RemovePlayerAttachedObject(playerid,10);
SendClientMessage(playerid, 0xF97804FF,"Ти си махна папагала!");
}
return 1;
}
if(strcmp(cmd, "/jetpack", true) == 0)
{
if (PlayerInfo[playerid][pVip] >= 2 || freevip==1)
{
if(PlayerInfo[playerid][pJail]>0)
{
SendClientMessage(playerid, COLOR_GRAD1,"Не можеш да използваш тази команда, докато си в затвора!");
return 1;
}
if(PlayerInfo[playerid][pPJail]>0)
{
SendClientMessage(playerid, COLOR_GRAD1,"Не можеш да използваш тази команда, докато си в затвора!");
return 1;
}
if(playerInDuel[playerid]==1){ return SendClientMessage(playerid,0xB4B5B7FF,"Не можеш да използваш тази команда, докато си в дуел!");}
if(inevent[playerid]==1) return SendClientMessage(playerid,0xB4B5B7FF,"Не можеш да използваш тази команда, докато си в евент!");
if(playerInDMON[playerid]==1){ return SendClientMessage(playerid,0xB4B5B7FF,"Не можеш да използваш тази команда, докато си в DMON!");}
if(onWork[playerid]==1) return SendClientMessage(playerid, COLOR_GRAD1,"Не можеш да използваш тази команда, докато си на работа!");
if(inevent[playerid]== 1 && ejetpack==1) return SendClientMessage(playerid, COLOR_GRAD1,"Командата /healme е забранена в евента!");
if(playerInDeathmatch[playerid]==true) return SendClientMessage(playerid,0xB4B5B7FF,"В момента не можеш да използваш тази команда!");
if(playerInStreetRace[playerid]==true) return SendClientMessage(playerid,0xB4B5B7FF,"В момента не можеш да използваш тази команда!");
SetPlayerSpecialAction(playerid, SPECIAL_ACTION_USEJETPACK);
SetPlayerArmedWeapon(playerid,0);
}
else
{
SendClientMessage(playerid, COLOR_GRAD1,"Нямаш достатъчно VIP права за да ползваш командата!");
}
return 1;
}
if(strcmp(cmd, "/tow", true) == 0)
{
if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessage(playerid, COLOR_RED, "Трябва да си в Tow Truck!");
new vehicleid = GetPlayerVehicleID(playerid);
new Float:dist, Float:closedist=8, closeveh;
new Float:x, Float:y, Float:z;
{
if(IsTrailerAttachedToVehicle(vehicleid))
{
SendClientMessage(playerid, COLOR_GRAD1, "Ти вече си закачил превозно средство!");
return 1;
}
}
for(new i=0; i < MAX_VEHICLES; i++)
{
if(i != vehicleid && GetVehiclePos(i, x, y, z))
{
dist = GetPlayerDistanceFromPoint(playerid, x, y, z);
if(dist < closedist)
{
closedist = dist;
closeveh = i;
}
}
}
if(!closeveh) return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си до превозно средство!");
AttachTrailerToVehicle(closeveh, vehicleid);
SendClientMessage(playerid, 0xFFFFFFFF, "Успешно закачи превозното средство.");
return 1;
}
if(strcmp(cmd, "/detach", true) == 0)
{
if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да се качиш в Tow Truck!");
new vehicleid = GetPlayerVehicleID(playerid);
new Float:dist, Float:closedist=8;
new Float:x, Float:y, Float:z;
{
if(IsTrailerAttachedToVehicle(vehicleid))
{
DetachTrailerFromVehicle(vehicleid);
SendClientMessage(playerid, 0xFFFFFFFF, "Ти откачи превозното средство!");
}
}
for(new i=1; i < MAX_VEHICLES; i++)
{
if(i != vehicleid && GetVehiclePos(i, x, y, z))
{
dist = GetPlayerDistanceFromPoint(playerid, x, y, z);
if(dist < closedist)
{
closedist = dist;
}
}
}
SendClientMessage(playerid, COLOR_GRAD1, "Ти не си закачил превозно средство!");
return 1;
}
//
if(strcmp(cmd, "/dmv", true) == 0)
{
if(IsPlayerInRangeOfPoint(playerid, 4, -2026.8839,-115.1081,1035.1719))
{
if(BizInfo[enteredbiz[playerid]][bOwner]==0)
{
SendClientMessage(playerid, 0xB4B5B7FF, "Бизнесът няма притежател и не можеш да си купиш книжка от тук!");
return 1;
}
new x_job[256];
x_job = strtok(cmdtext, idx);
if(!strlen(x_job)) {
SendClientMessage(playerid, 0xFFFFFFFF,"Използвай: /dmv [license number]");
SendClientMessage(playerid, COLOR_YELLOW, "{003AE6}License Numbers: 1: Лодка, 2: Влак/Трамвай, 3: Хеликоптер, 4: Самолет");
SendClientMessage(playerid, COLOR_YELLOW, "{003AE6}Трябва да имаш следните левели минимум за всяка шофьорска книжка:");
SendClientMessage(playerid, COLOR_YELLOW, "{003AE6}Лодка - 8 левел, Влак/Трамвай - 10 левел, Хеликоптер - 12 левел, Самолет - 15 левел");
SendClientMessage(playerid, COLOR_YELLOW, "{003AE6}Цените за да вземеш определена шофьорска книжка са:");
SendClientMessage(playerid, COLOR_YELLOW, "{003AE6}Лодка - $5000, Влак/Трамвай - $10000, Хеликоптер - $15000, Самолет - $25000");
return 1;
}
tmp = strtok(cmdtext, idx);
if(strcmp(x_job,"4",true) == 0)
{
if(PlayerInfo[playerid][pCash] < 25000)
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достатъчно пари, за да си купиш шофьорска книжка за самолет!");
return 1;
}
if(PlayerInfo[playerid][pLevel] < 15)
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достатъчно голямо ниво, за да си купиш шофьорска книжка за самолет!");
return 1;
}
if(PlayerInfo[playerid][pSamolet] >= 1)
{
SendClientMessage(playerid, COLOR_GRAD1, "Ти вече имаш шофьорска книжка за самолет!");
return 1;
}
SendClientMessage(playerid, COLOR_YELLOW, "{003AE6}Ти си купи шофьорска книжка за самолет!");
GivePlayerCash(playerid, -25000);
BizInfo[enteredbiz[playerid]][bEarnings]+=25000;
PlayerInfo[playerid][pSamolet] = 1;
}
if(strcmp(x_job,"3",true) == 0)
{
if(PlayerInfo[playerid][pCash] < 15000)
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достатъчно пари, за да си купиш шофьорска книжка за хеликоптер!");
return 1;
}
if(PlayerInfo[playerid][pLevel] < 12)
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достатъчно голямо ниво, за да си купиш шофьорска книжка за хеликоптер!");
return 1;
}
if(PlayerInfo[playerid][pHelikopter] >= 1)
{
SendClientMessage(playerid, COLOR_GRAD1, "Ти вече имаш шофьорска книжка за хеликоптер!");
return 1;
}
SendClientMessage(playerid, COLOR_YELLOW, "{003AE6}Ти си купи шофьорска книжка за хеликоптер!");
GivePlayerCash(playerid, -15000);
BizInfo[enteredbiz[playerid]][bEarnings]+=15000;
PlayerInfo[playerid][pHelikopter] = 1;
}
if(strcmp(x_job,"2",true) == 0)
{
if(PlayerInfo[playerid][pCash] < 10000)
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достатъчно пари, за да си купиш шофьорска книжка за влак/трамвай!");
return 1;
}
if(PlayerInfo[playerid][pLevel] < 10)
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достатъчно голямо ниво, за да си купиш шофьорска книжка за влак/трамвай!");
return 1;
}
if(PlayerInfo[playerid][pVlak] >= 1)
{
SendClientMessage(playerid, COLOR_GRAD1, "Ти вече имаш шофьорска книжка за влак/трамвай!");
return 1;
}
SendClientMessage(playerid, COLOR_YELLOW, "{003AE6}Ти си купи шофьорска книжка за влак/трамвай!");
GivePlayerCash(playerid, -10000);
BizInfo[enteredbiz[playerid]][bEarnings]+=10000;
PlayerInfo[playerid][pVlak] = 1;
}
if(strcmp(x_job,"1",true) == 0)
{
if(PlayerInfo[playerid][pCash] < 5000)
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достатъчно пари, за да си купиш шофьорска книжка за лодка!");
return 1;
}
if(PlayerInfo[playerid][pLevel] < 8)
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достатъчно голямо ниво, за да си купиш шофьорска книжка за лодка!");
return 1;
}
if(PlayerInfo[playerid][pLodka] >= 1)
{
SendClientMessage(playerid, COLOR_GRAD1, "Ти вече имаш шофьорска книжка за лодка!");
return 1;
}
SendClientMessage(playerid, COLOR_YELLOW, "{003AE6}Ти си купи шофьорска книжка за лодка!");
GivePlayerCash(playerid, -5000);
BizInfo[enteredbiz[playerid]][bEarnings]+=5000;
PlayerInfo[playerid][pLodka] = 1;
}
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Трябва да се намираш в училище за шофьори!");
}
return 1;
}
if(strcmp(cmd, "/allevent",true)==0)
{
if(PlayerInfo[playerid][pAdmin]< 4) return SendClientMessage(playerid, 0xB4B5B7FF, "Нямаш права за да ползваш командата!");
new stringevent[256];
new events=0;
for(new i = 0; i < MAX_PLAYERS; i++)
{
if(PlayerInfo[i][pEvent] >= 1)
{
events+=1;
}
}
format(stringevent,256,"Онлайн хора с евент права(%d):",events);
SendClientMessage(playerid, 0x33CCFFFF,stringevent);
if(events>0)
{
for(new i = 0; i < MAX_PLAYERS; i++)
{
if(PlayerInfo[i][pEvent] >= 1)
{
format(stringevent, 256, "%s е с евент права",pname[i]);
SendClientMessage(playerid, 0xFFFFFFFF,stringevent);
}
}
}
else
{
format(stringevent, 256, "Няма онлайн евент администратори в момента!");
SendClientMessage(playerid, COLOR_RED,stringevent);
}
return 1;
}
if(strcmp(cmd, "/top", true) == 0)
{
if(dmTopKills==20)
{
return SendClientMessage(playerid,0x80FF80FF,"Все-още няма рекорд по най-много убийства без умиране в DM Area!");
}
new stringa[256];
format(stringa, 256, ">>>>>>>>>> %s - %d убийства <<<<<<<<<<",dmTopKills,dmTopNickname);
SendClientMessage(playerid, 0x80FF80FF, stringa);
return 1;
}
if(strcmp(cmd, "/help", true)==0)
{
new string2230[512]; new string2230result[2230];
format(string2230,512,"{00FF00}---Основни команди---\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/stats - показва вашата статистика\n");
strcat(string2230result, string2230);
format(string2230,512,"{008000}/pm - пращане на лично съобщение до играч\n");
strcat(string2230result, string2230);
format(string2230,512,"{FF0000}/ignore - игнорира даден играч от твоите лични съобщения\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/unignore - маха игнорирането на играч от твоите лични съобщения\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/buylevel - за да вдигнете вашия левел\n");
strcat(string2230result, string2230);
format(string2230,512,"{008000}/buyes - за да вдигнете вашия EP Skill левел\n");
strcat(string2230result, string2230);
format(string2230,512,"{008000}/buyms - за да вдигнете вашия Money Skill левел\n");
strcat(string2230result, string2230);
format(string2230,512,"{008000}/buyws - за да вдигнете вашия Weapon Skill левел\n");
strcat(string2230result, string2230);
format(string2230,512,"{FF0000}/buyhouse - за да купите къща\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/buybiz - за да купите бизнес\n");
strcat(string2230result, string2230);
format(string2230,512,"{008000}/enter - за да влезете в къща или бизнес\n");
strcat(string2230result, string2230);
format(string2230,512,"{FF0000}/exit - за да излезете от къща или бизнес\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/changepass - сменяне на паролата\n");
strcat(string2230result, string2230);
format(string2230,512,"{008000}/spawn - за да промениш твоя spawn\n");
strcat(string2230result, string2230);
format(string2230,512,"{FF0000}/report - докладване на хакери\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/time - скрива/показва часовника на екрана\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/site - скрива/показва сайта на екрана\n");
strcat(string2230result, string2230);
format(string2230,512,"{FF0000}/statistic - показва статистиката на екрана\n");
strcat(string2230result, string2230);
format(string2230,512,"{FF0000}/id - показва ID-то на играч\n");
strcat(string2230result, string2230);
format(string2230,512,"{008000}/admins - показва онлайн админите\n");
strcat(string2230result, string2230);
format(string2230,512,"{FF0000}/ifc - показва онлайн членовете на Intense Fuel Company\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/lotto - залагане на тото\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/checklotto - за да провериш стойността на джакпота на лотарията\n");
strcat(string2230result, string2230);
format(string2230,512,"{008000}/c - пуска брояч\n");
strcat(string2230result, string2230);
format(string2230,512,"{FF0000}/rules - показва правилата на сървъра\n");
strcat(string2230result, string2230);
format(string2230,512,"{008000}/vipusers - показва онлайн VIP играчите\n");
strcat(string2230result, string2230);
format(string2230,512,"{FF0000}/leaders - показва онлайн лидерите\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/idveh - за да видите ID-то на превозното средство\n");
strcat(string2230result, string2230);
format(string2230,512,"{008000}/bank - за да отворите менюто на банката\n");
strcat(string2230result, string2230);
ShowPlayerDialog(playerid,12,DIALOG_STYLE_MSGBOX,"{FFFFFF}КО{008000}МАН{FF0000}ДИ",string2230result,"Други","Затвори");
return 1;
}
if(strcmp(cmd, "/ifchelp", true)==0)
{
if(PlayerInfo[playerid][pIFC]==0) return SendClientMessage(playerid,0xE60000FF,"Трябва да си член на Intense Fuel Company!");
new string2230[512];
new string2230result[1500];
strcat(string2230result, string2230);
format(string2230,512,"{00FF00}---Команди за членовете на Intense Fuel Company---\n");
format(string2230,512,"{FFFFFF}/refillpt - за да заредиш цистерната\n");
strcat(string2230result, string2230);
format(string2230,512,"{008000}/refillgs - за да заредиш бензиностанцията\n");
strcat(string2230result, string2230);
format(string2230,512,"{FF0000}/ifcduty - за да влезете/излезете от IFC служба\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/checkfuel - за да провериш колко литра има всяка бензиностанция\n");
strcat(string2230result, string2230);
format(string2230,512,"{008000}/gpsfuel - за да разбереш дадена бензиностанция къде се намира\n");
strcat(string2230result, string2230);
format(string2230,512,"{FF0000}/leaveifc - за да напуснеш Intense Fuel Company\n");
strcat(string2230result, string2230);
ShowPlayerDialog(playerid,3500,DIALOG_STYLE_MSGBOX,"IFC HELP",string2230result,"Затвори","");
return 1;
}
if(strcmp(cmd, "/clothes", true)==0)
{
if(PlayerInfo[playerid][pVip]<6 && freevip==0) return SendClientMessage(playerid,0xB4B5B7FF,"Нямаш достатъчно VIP права за да ползваш командата!");
if(loadedClothes[playerid]==false)
{
SendClientMessage(playerid,0xFFFFFFFF,"* Ти зареди твоите обжекти, използвай /clothes за достъп до тях *");
loadedClothes[playerid]=true;
}
else if(loadedClothes[playerid]==true)
{
new string2230[512];
new string2230result[1500];
for(new i=1; i<9; i++)
{
new clothID = PlayerInfo[playerid][pClothes][i];
format(string2230,512,"{FFFFFF}Слот %d {FFFF00}[%s]\n",i,GetClothName(clothID));
strcat(string2230result, string2230);
}
ShowPlayerDialog(playerid,DIALOG_CLOTHES,DIALOG_STYLE_LIST,"Clothes:",string2230result,"Избери","Излез");
}
return 1;
}
if(strcmp(cmd, "/viphelp", true)==0)
{
new string2230[512];
new string2230result[1500];
strcat(string2230result,"{00FF00}VIP MOD системата е услуга която ви дава по-голям набор от команди и бонуси\n");
format(string2230,512,"{00FF00}VIP MOD системата може да се получи чрез канене на хора VIP левелите са до 6-ти левел\n\n");
strcat(string2230result, string2230);
format(string2230,512,"{FF0000}------------= Бонуси =--------------\n");
strcat(string2230result, string2230);
format(string2230,512,"{00FF00}\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF} \n");
strcat(string2230result, string2230);
format(string2230,512,"{00FF00}---= VIP Level 1 =---\n\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}•Когато убиеш играч получаваш $250, а когато умреш губиш $50\n");
strcat(string2230result, string2230);
format(string2230,512,"{00FF00}---= VIP Level 2 =---\n\n");
strcat(string2230result, string2230);
format(string2230,512,"{008000}•На всеки Payday получаваш 1EP и $1000\n");
strcat(string2230result, string2230);
format(string2230,512,"{00FF00}---= VIP Level 3 =---\n\n");
strcat(string2230result, string2230);
format(string2230,512,"{FF0000}•На всеки Payday получаваш 2EP и $2000\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}•Времето за чакане на нова работа е 30 минути\n");
strcat(string2230result, string2230);
format(string2230,512,"{00FF00}---= VIP Level 4 =---\n\n");
strcat(string2230result, string2230);
format(string2230,512,"{008000}•На всеки Payday получаваш 3EP и $3000\n");
strcat(string2230result, string2230);
format(string2230,512,"{FF0000}•Времето за чакане на нова работа е 30 минути\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}•При всеки SPAWN те пуска с 100 ARMOUR\n");
strcat(string2230result, string2230);
format(string2230,512,"{008000}•Ще имаш закачен 3D текст на главата - VIP\n");
strcat(string2230result, string2230);
format(string2230,512,"{FF0000}•Ще имаш лазер на оръжията - M4 и MP5\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}•Ще получаваш 2EP за всяка свършена работа\n");
strcat(string2230result, string2230);
format(string2230,512,"{00FF00}---= VIP Level 5 =---\n\n");
strcat(string2230result, string2230);
format(string2230,512,"{008000}•На всеки Payday получаваш 4EP и $4000\n");
strcat(string2230result, string2230);
format(string2230,512,"{FF0000}•При всеки SPAWN ще те пуска с 5 гранати\n");
strcat(string2230result, string2230);
format(string2230,512,"{00FF00}---= VIP Level 6 =---\n\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}•На всеки Payday получаваш 5EP и $5000\n");
strcat(string2230result, string2230);
format(string2230,512,"{008000}•При всеки SPAWN ще те пуска с още 5 гранати\n");
strcat(string2230result, string2230);
format(string2230,512,"{FF0000}•Времето за чакане на нова работа е 20 минути\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}•Ще получаваш 3EP за всяка свършена работа\n");
strcat(string2230result, string2230);
format(string2230,512,"{008000}•Когато си в кола и натиснеш Y превозното средство ще се FLIP-ва\n");
strcat(string2230result, string2230);
format(string2230,512,"{FF0000}•Kaто убиеш играч ще получаваш $500\n");
strcat(string2230result, string2230);
format(string2230,512,"{00FF00}Цъкни на бутона Команди за да видиш всички VIP команди \n");
strcat(string2230result, string2230);
ShowPlayerDialog(playerid,4,DIALOG_STYLE_MSGBOX,"{FFFFFF}VIP {008000}MOD {FF0000}BONUS",string2230result,"Команди","Затвори");
return 1;
}
if(strcmp(cmd,"/lock",true)==0)
{
if(PlayerInfo[playerid][pVip]<3 && freevip==0) return SendClientMessage(playerid,0xB4B5B7FF,"Нямаш достатъчно VIP права за да ползваш командата!");
if (driver[playerid]==0) return SendClientMessage(playerid,COLOR_GRAD1,"Трябва да си в превозно средство като щофьор!");
for(new i=0; i < MAX_PLAYERS; i++)
{
if(i == playerid) continue;
SetVehicleParamsForPlayer(GetPlayerVehicleID(playerid),i,0,1);
}
vehLocker[playerid]=GetPlayerVehicleID(playerid);
SendClientMessage(playerid,0x9ACD32FF,"* Вие заключихте вратите на превозното средство *");
SendClientMessage(playerid,0xFFFFFFFF,"SERVER: Когато излезете от превозното средство вратите автоматично ще се отключат!");
return 1;
}
if(strcmp(cmd,"/unlock",true)==0)
{
if(PlayerInfo[playerid][pVip]<3 && freevip==0) return SendClientMessage(playerid,0xB4B5B7FF,"Нямаш достатъчно VIP права за да ползваш командата!");
if (driver[playerid]==0) return SendClientMessage(playerid,COLOR_GRAD1,"Трябва да си в превозно средство като щофьор!");
for(new i=0; i < MAX_PLAYERS; i++)
{
if(i == playerid) continue;
SetVehicleParamsForPlayer(GetPlayerVehicleID(playerid),i,0,0);
}
SendClientMessage(playerid,0x9ACD32FF,"* Вие отключихте вратите на превозното средство *");
return 1;
}
if  (strcmp(cmd,"/sgchange", true)==0)
{
if(PlayerInfo[playerid][pVip]<5 && freevip==0) return SendClientMessage(playerid,0xB4B5B7FF,"Нямаш достатъчно VIP права за да ползваш командата!");
if(PlayerInfo[playerid][pChantichki]==0)
PlayerInfo[playerid][pChantichki]=1;
else
PlayerInfo[playerid][pChantichki]=0;
return 1;
}
if  (strcmp(cmd,"/eject", true)==0){
if(PlayerInfo[playerid][pVip]<6 && freevip==0) return SendClientMessage(playerid,0xB4B5B7FF,"Нямаш достатъчно VIP права за да ползваш командата!");
if (driver[playerid]==0) return SendClientMessage(playerid,COLOR_GRAD1,"Трябва да си в превозно средство като щофьор!");
tmp = strtok(cmdtext,idx);
if (!strlen(tmp))
{
SendClientMessage(playerid,0xFFFFFFFF,"Използвай: /eject [playerid]");
return 1;
}
para1[playerid] = strval(tmp);
if(para1[playerid] == INVALID_PLAYER_ID) return SendClientMessage(playerid,0xB4B5B7FF,"Посоченото ID не е в сървъра!");
if (para1[playerid]==playerid) return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да изгониш себе си от превозното средство!");
if (!IsPlayerInVehicle(para1[playerid],GetPlayerVehicleID(playerid))) return SendClientMessage(playerid,COLOR_GRAD1,"Този играч не е в твоето превозно средство!");
RemovePlayerFromVehicle(para1[playerid]);
return 1;
}
if (strcmp(cmdtext, "/hyd", true)==0)
{
if(PlayerInfo[playerid][pVip] >= 1 || freevip==1)
{
if(IsPlayerInAnyVehicle(playerid))
{
if(inevent[playerid]== 1 && ehyd==0) return SendClientMessage(playerid, COLOR_GRAD1,"Командата /hyd е забранена в евента!");
if(GetPlayerVehicleID(playerid) != 448 && GetPlayerVehicleID(playerid) != 461 && GetPlayerVehicleID(playerid) != 462 && GetPlayerVehicleID(playerid) != 463
&& GetPlayerVehicleID(playerid) != 468 && GetPlayerVehicleID(playerid) != 481 && GetPlayerVehicleID(playerid) != 509 && GetPlayerVehicleID(playerid) != 510
&& GetPlayerVehicleID(playerid) != 521 && GetPlayerVehicleID(playerid) != 522 && GetPlayerVehicleID(playerid) != 581 && GetPlayerVehicleID(playerid) != 586
&& GetPlayerVehicleID(playerid) != 417 && GetPlayerVehicleID(playerid) != 425 && GetPlayerVehicleID(playerid) != 447 && GetPlayerVehicleID(playerid) != 460
&& GetPlayerVehicleID(playerid) != 469 && GetPlayerVehicleID(playerid) != 476 && GetPlayerVehicleID(playerid) != 487 && GetPlayerVehicleID(playerid) != 488
&& GetPlayerVehicleID(playerid) != 497 && GetPlayerVehicleID(playerid) != 511 && GetPlayerVehicleID(playerid) != 512 && GetPlayerVehicleID(playerid) != 513
&& GetPlayerVehicleID(playerid) != 519 && GetPlayerVehicleID(playerid) != 520 && GetPlayerVehicleID(playerid) != 548 && GetPlayerVehicleID(playerid) != 553
&& GetPlayerVehicleID(playerid) != 563 && GetPlayerVehicleID(playerid) != 577 && GetPlayerVehicleID(playerid) != 592 && GetPlayerVehicleID(playerid) != 593
&& GetPlayerVehicleID(playerid) != 538
&& GetPlayerVehicleID(playerid) != 537)
{
AddVehicleComponent(GetPlayerVehicleID(playerid), 1087);
PlayerPlaySound(playerid, 1056, 0.0, 0.0, 0.0);
}
else
{
SendClientMessage(playerid,0xB4B5B7FF,"Не можеш да добавиш хидравлика на това превозно средство!");
}
}
else
{
SendClientMessage(playerid,0xB4B5B7FF,"Ти не си в превозно средство!");
}
}
else
{
SendClientMessage(playerid,0xB4B5B7FF,"Нямаш достатъчно VIP права за да ползваш командата!");
}
return 1;
}
if (strcmp(cmdtext, "/nos", true)==0)
{
if(PlayerInfo[playerid][pVip] >= 1 || freevip==1)
{
if(IsPlayerInAnyVehicle(playerid))
{
if(inevent[playerid]== 1 && enos==0) return SendClientMessage(playerid, COLOR_GRAD1,"Командата /nos е забранена в евента!");
if(GetPlayerVehicleID(playerid) != 448 && GetPlayerVehicleID(playerid) != 461 && GetPlayerVehicleID(playerid) != 462 && GetPlayerVehicleID(playerid) != 463
&& GetPlayerVehicleID(playerid) != 468 && GetPlayerVehicleID(playerid) != 481 && GetPlayerVehicleID(playerid) != 509 && GetPlayerVehicleID(playerid) != 510
&& GetPlayerVehicleID(playerid) != 521 && GetPlayerVehicleID(playerid) != 522 && GetPlayerVehicleID(playerid) != 581 && GetPlayerVehicleID(playerid) != 586
&& GetPlayerVehicleID(playerid) != 417 && GetPlayerVehicleID(playerid) != 425 && GetPlayerVehicleID(playerid) != 447 && GetPlayerVehicleID(playerid) != 460
&& GetPlayerVehicleID(playerid) != 469 && GetPlayerVehicleID(playerid) != 476 && GetPlayerVehicleID(playerid) != 487 && GetPlayerVehicleID(playerid) != 488
&& GetPlayerVehicleID(playerid) != 497 && GetPlayerVehicleID(playerid) != 511 && GetPlayerVehicleID(playerid) != 512 && GetPlayerVehicleID(playerid) != 513
&& GetPlayerVehicleID(playerid) != 519 && GetPlayerVehicleID(playerid) != 520 && GetPlayerVehicleID(playerid) != 548 && GetPlayerVehicleID(playerid) != 553
&& GetPlayerVehicleID(playerid) != 563 && GetPlayerVehicleID(playerid) != 577 && GetPlayerVehicleID(playerid) != 592 && GetPlayerVehicleID(playerid) != 593
&& GetPlayerVehicleID(playerid) != 538
&& GetPlayerVehicleID(playerid) != 537)
{
PlayerPlaySound(playerid, 1056, 0.0, 0.0, 0.0);
if(PlayerInfo[playerid][pInfiniteNos]==0)
{
AddVehicleComponent(GetPlayerVehicleID(playerid),1008);
}
else
{
AddVehicleComponent(GetPlayerVehicleID(playerid), 1010);
}
}
else
{
SendClientMessage(playerid,0xB4B5B7FF,"Не можеш да добавиш нитро на това превозно средство!");
}
}
else
{
SendClientMessage(playerid,0xB4B5B7FF,"Ти не си в превозно средство!");
}
}
else
{
SendClientMessage(playerid,0xB4B5B7FF,"Нямаш достатъчно VIP права за да ползваш командата!");
}
return 1;
}
if(strcmp(cmdtext, "/cnos", true) == 0)
{
if(PlayerInfo[playerid][pVip] >= 2 || freevip==1)
{
if(PlayerInfo[playerid][pInfiniteNos] == 0)
{
SendClientMessage(playerid, 0x0066FFFF,"Твоето нитро вече е безкрайно!");
PlayerInfo[playerid][pInfiniteNos] = 1;
PlayerInfo[playerid][pInfiniteNosTimer]=2;
if(IsPlayerInAnyVehicle(playerid))
{
AddVehicleComponent(GetPlayerVehicleID(playerid),1010);
}
}
else
{
PlayerInfo[playerid][pInfiniteNos] = 0;
if(IsPlayerInAnyVehicle(playerid))
{
AddVehicleComponent(GetPlayerVehicleID(playerid),1008);
}
SendClientMessage(playerid, 0x0066FFFF,"Твоето нитро вече е краино!");
}
}
else
{
SendClientMessage(playerid,0xB4B5B7FF,"Нямаш достатъчно VIP права за да ползваш командата!");
}
return 1;
}
if(strcmp(cmdtext,"/flip",true)==0)
{
if(PlayerInfo[playerid][pVip] >= 1 || freevip==1)
{
if(!IsPlayerInAnyVehicle(playerid))
{
SendClientMessage(playerid,0xB4B5B7FF,"Трябва да си в превозно средство!");
return 1;
}
if(inevent[playerid]== 1 && eflip==0) return SendClientMessage(playerid, COLOR_GRAD1,"Командата /flip е забранена в евента!");
GetPlayerPos(playerid,X[playerid],Y[playerid],Z[playerid]);
new Float:currentVehAngle;
GetVehicleZAngle(GetPlayerVehicleID(playerid), currentVehAngle);
SetVehiclePos(GetPlayerVehicleID(playerid),X[playerid],Y[playerid],Z[playerid]);
SetVehicleZAngle(GetPlayerVehicleID(playerid),currentVehAngle);
SendClientMessage(playerid, 0xFFFFFFFF, "* Вие преобърнахте вашето превозно средство *");
}
else
{
SendClientMessage(playerid,0xB4B5B7FF,"Нямаш достатъчно VIP права за да ползваш командата!");
}
return 1;
}
if(strcmp(cmd, "/ip", true) == 0)
{
if (PlayerInfo[playerid][pAdmin] >0)
{
new ip[35];
GetPlayerIp(playerid,ip,35);
format(string115, 115, "Your IP: %s\n", ip);
SendClientMessage(playerid, 0xFFFF00FF, string115);
}
else
{
SendClientMessage(playerid, 0xB4B5B7FF, "Нямаш права за да ползваш командата!");
}
return 1;
}
if(strcmp(cmd, "/cbp",true)==0)
{
if(cbchat[playerid]==0) return SendClientMessage(playerid, 0xB4B5B7FF, "Ти в момента не си превключил на нито един CB Chanel!");
format(string256, 256, "Онлайн играчи в CB Chanel %d:",cbchat[playerid]);
SendClientMessage(playerid, 0x40BF00FF,string256);
for(new i = 0; i < MAX_PLAYERS; i++)
{
if(cbchat[playerid] == cbchat[i])
{
format(string256, 256, "%s (ID: %d)",pname[i], i);
SendClientMessage(playerid, 0xFFFFFFFF, string256);
}
}
return 1;
}
if (strcmp(cmd, "/cboff", true) == 0)
{
if(cbchat[playerid]==0) return SendClientMessage(playerid, 0xB4B5B7FF, "Ти в момента не си превключил на нито един CB Chanel!");
SendClientMessage(playerid, 0xFF9933FF, "CB Chanel: Ти изключи твоя CB Chanel!");
cbchat[playerid] = 0;
return 1;
}
if (strcmp(cmd, "/cb", true) == 0)
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /cb [1-9999]");
return 1;
}
new cbc = strval(tmp);
if(cbc < 2 || cbc > 999) return SendClientMessage(playerid, 0xB4B5B7FF, "Числото трябва да е от 2 до 999!");
cbchat[playerid] = cbc;
format(string256, 256, "CB Channel: Ти си смени твоя CB Channel на %d.", cbc);
SendClientMessage(playerid, 0xFF9933FF, string256);
return 1;
}
if(strcmp(cmd, "/bizname", true) == 0)
{
if(PlayerInfo[playerid][pBizO]==-1)
{
return SendClientMessage(playerid,0xB4B5B7FF,"Ти не притежаваш бизнес!");
}
new length = strlen(cmdtext);
while ((idx < length) && (cmdtext[idx] <= ' '))
{
idx++;
}
new offset = idx;
new result[256];
while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
{
result[idx - offset] = cmdtext[idx];
idx++;
}
result[idx - offset] = EOS;
if(!strlen(result))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /bizname [name]");
return 1;
}
if(strfind( result , "||", true) == 0 || strfind( result , "|", true ) == 0 || strfind( result , "~", true ) == 0 || strfind( result , ",", true ) == 0)
{
return SendClientMessage(playerid,0xB4B5B7FF,"Ти не можеш да използваш забранени символи!");
}
if(strlen(result)<1 || strlen(result)>20)
{
return SendClientMessage(playerid,0xB4B5B7FF,"Името на бизнеса трябва да бъде между 1 и 20 символа!");
}
SendClientMessage(playerid, 0x00CCCCFF, "Ти промени името на твоя бизнес!");
format(BizInfo[PlayerInfo[playerid][pBizO]][bName], 256, "%s", result);
return 1;
}
if(strcmp(cmd, "/fee", true) == 0)
{
if(PlayerInfo[playerid][pBizO]==-1)
{
return SendClientMessage(playerid,0xB4B5B7FF,"Ти не притежаваш бизнес!");
}
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /fee [ammount]");
return 1;
}
new level;
level = strval(tmp);
new playersBiz=PlayerInfo[playerid][pBizO];
if(BizInfo[playersBiz][bType]==27) return SendClientMessage(playerid,0xB4B5B7FF,"Твоят бизнес не може да има цена за вход!");
if(level<1 || level>50) return SendClientMessage(playerid,0xB4B5B7FF,"Цената на входа трябва да бъде между $1 и $50!");
SendClientMessage(playerid, 0x00CCCCFF, "Ти промени цената за вход в твоя бизнес!");
BizInfo[PlayerInfo[playerid][pBizO]][bFee]=level;
return 1;
}
if(strcmp(cmd, "/createbiz", true) == 0)
{
if(PlayerInfo[playerid][pAdmin] >= 5)
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /createbiz [price] [interior 1-26] [level 1-9999] [payout 1-999999] [ep]");
SendClientMessage(playerid, 0x00CCCCFF, "Opitons: 1: 24/7, 2: Bar, 3: Ammu, 4: License, 5: 24/7, 6: ProLaps, 7: Office");
SendClientMessage(playerid, 0x00CCCCFF, "Opitons: 8: BurShot, 9: HorseBet, 10: 24/7, 11: Urban, 12: Ammu, 13: Ammu 14: Disco");
SendClientMessage(playerid, 0x00CCCCFF, "Opitons: 15: SexShop, 16: Gym, 17: Gym, 18: Casino, 19: StripClub, 20: DMBizz");
SendClientMessage(playerid, 0x00CCCCFF, "Opitons: 21: FourDragons Casino, 22: Caligulas Casino, 23: Bar, 24: Rusty Brounns");
SendClientMessage(playerid, 0x00CCCCFF, "Opitons: 25: CluckinBell, 26: Restaurant, 27: N.E., 28: Advert, 29: Drugs, 30: Drugs");
return 1;
}
GetPlayerPos(playerid, X[playerid],Y[playerid],Z[playerid]);
new model;
model = strval(tmp);
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /createbiz [price] [interior 1-26] [level 1-9999] [payout 1-999999] [ep]");
SendClientMessage(playerid, 0x00CCCCFF, "Opitons: 1: 24/7, 2: Bar, 3: Ammu, 4: License, 5: 24/7, 6: ProLaps, 7: Office");
SendClientMessage(playerid, 0x00CCCCFF, "Opitons: 8: BurShot, 9: HorseBet, 10: 24/7, 11: Urban, 12: Ammu, 13: Ammu 14: Disco");
SendClientMessage(playerid, 0x00CCCCFF, "Opitons: 15: SexShop, 16: Gym, 17: Gym, 18: Casino, 19: StripClub, 20: DMBizz");
SendClientMessage(playerid, 0x00CCCCFF, "Opitons: 21: FourDragons Casino, 22: Caligulas Casino, 23: Bar, 24: Rusty Brounns");
SendClientMessage(playerid, 0x00CCCCFF, "Opitons: 25: CluckinBell, 26: Restaurant, 27: N.E., 28: Advert, 29: Drugs, 30: Drugs");
return 1;
}
new type;
type = strval(tmp);
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /createbiz [price] [interior 1-26] [level 1-9999] [payout 1-999999] [ep]");
SendClientMessage(playerid, 0x00CCCCFF, "Opitons: 1: 24/7, 2: Bar, 3: Ammu, 4: License, 5: 24/7, 6: ProLaps, 7: Office");
SendClientMessage(playerid, 0x00CCCCFF, "Opitons: 8: BurShot, 9: HorseBet, 10: 24/7, 11: Urban, 12: Ammu, 13: 14: Disco");
SendClientMessage(playerid, 0x00CCCCFF, "Opitons: 15: SexShop, 16: Gym, 17: Gym, 18: Casino, 19: StripClub, 20: DMBizz");
SendClientMessage(playerid, 0x00CCCCFF, "Opitons: 21: FourDragons Casino, 22: Caligulas Casino, 23: Bar, 24: Rusty Brounns");
SendClientMessage(playerid, 0x00CCCCFF, "Opitons: 25: CluckinBell, 26: Restaurant, 27: N.E., 28: Advert, 29: Drugs, 30: Drugs");
return 1;
}
new bizlevel;
bizlevel = strval(tmp);
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /createbiz [price] [interior 1-26] [level 1-9999] [payout 1-999999] [ep]");
SendClientMessage(playerid, 0x00CCCCFF, "Opitons: 1: 24/7, 2: Bar, 3: Ammu, 4: License, 5: 24/7, 6: ProLaps, 7: Office");
SendClientMessage(playerid, 0x00CCCCFF, "Opitons: 8: BurShot, 9: HorseBet, 10: 24/7, 11: Urban, 12: Ammu, 13: 14: Disco");
SendClientMessage(playerid, 0x00CCCCFF, "Opitons: 15: SexShop, 16: Gym, 17: Gym, 18: Casino, 19: StripClub, 20: DMBizz");
SendClientMessage(playerid, 0x00CCCCFF, "Opitons: 21: FourDragons Casino, 22: Caligulas Casino, 23: Bar, 24: Rusty Brounns");
SendClientMessage(playerid, 0x00CCCCFF, "Opitons: 25: CluckinBell, 26: Restaurant, 27: N.E., 28: Advert, 29: Drugs, 30: Drugs");
return 1;
}
new bizpayout;
bizpayout = strval(tmp);
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /createbiz [price] [interior 1-26] [level 1-9999] [payout 1-999999] [ep]");
SendClientMessage(playerid, 0x00CCCCFF, "Opitons: 1: 24/7, 2: Bar, 3: Ammu, 4: License, 5: 24/7, 6: ProLaps, 7: Office");
SendClientMessage(playerid, 0x00CCCCFF, "Opitons: 8: BurShot, 9: HorseBet, 10: 24/7, 11: Urban, 12: Ammu, 13: 14: Disco");
SendClientMessage(playerid, 0x00CCCCFF, "Opitons: 15: SexShop, 16: Gym, 17: Gym, 18: Casino, 19: StripClub, 20: DMBizz");
SendClientMessage(playerid, 0x00CCCCFF, "Opitons: 21: FourDragons Casino, 22: Caligulas Casino, 23: Bar, 24: Rusty Brounns");
SendClientMessage(playerid, 0x00CCCCFF, "Opitons: 25: CluckinBell, 26: Restaurant, 27: N.E., 28: Advert, 29: Drugs, 30: Drugs");
return 1;
}
new eplevel;
eplevel = strval(tmp);
if(model < 1) return SendClientMessage(playerid, 0xB4B5B7FF, "Цената трябва да е по-голяма от $0!");
if(type < 1 || type > 30) return SendClientMessage(playerid, 0xB4B5B7FF, "Този тип е невалиден!");
if(bizlevel<1 || bizlevel>999) return SendClientMessage(playerid, 0xB4B5B7FF, "Нивото на бизнеса трябва да е от 1 до 9999!");
if(bizpayout<1 || bizpayout>999999) return SendClientMessage(playerid, 0xB4B5B7FF, "PayOut на бизнеса трябва да е от 1 до 999999!");
if(GetPlayerVirtualWorld(playerid)!=0) return SendClientMessage(playerid,0xB4B5B7FF,"Не можеш да създадеш бизнес в този Virtual World!");
if(GetPlayerInterior(playerid)!=0) return SendClientMessage(playerid,0xB4B5B7FF,"Не можеш да създадеш бизнес в този Interior!");
new biz[64];
new oldbizid=ReturnNextUnusedBizID();
format(biz, 64, "/Bizz/%d.ini", ReturnNextUnusedBizID());
SendClientMessage(playerid, 0x00CCCCFF,"Ти успешно създаде нов бизнес!");
maxbiz+=1;
if(!dini_Exists(biz))
{
dini_Create(biz);
dini_IntSet(biz, "bEP",eplevel);
dini_IntSet(biz, "bOwner",0);
dini_Set(biz, "bOwnerName", "None");
dini_FloatSet(biz, "bX",X[playerid]);
dini_FloatSet(biz, "bY",Y[playerid]);
dini_FloatSet(biz, "bZ",Z[playerid]);
dini_IntSet(biz, "bLocked",0);
dini_IntSet(biz, "bType",type);
dini_IntSet(biz, "bPrice",model);
if(type!=27)
{
dini_IntSet(biz, "bFee",50);
}
dini_IntSet(biz,"bPayOut",bizpayout);
BizInfo[oldbizid][bX]=dini_Float(biz, "bX");
BizInfo[oldbizid][bY]=dini_Float(biz, "bY");
BizInfo[oldbizid][bZ]=dini_Float(biz, "bZ");
BizInfo[oldbizid][bOwner]=dini_Int(biz, "bOwner");
BizInfo[oldbizid][bLocked]=dini_Int(biz, "bLocked");
BizInfo[oldbizid][bEP]=dini_Int(biz, "bEP");
BizInfo[oldbizid][bPrice]=dini_Int(biz, "bPrice");
BizInfo[oldbizid][bType]=dini_Int(biz, "bType");
BizInfo[oldbizid][bPayOut]=dini_Int(biz, "bPayOut");
if(type!=27)
{
BizInfo[oldbizid][bFee]=50;
}
new stringbiz[828];
if(BizInfo[oldbizid][bEP] >= 1)
{
format(stringbiz,828,"{00FF00}Ако притежаваш този бизнес\n ще получаваш {FFFFFF}%d EP{00FF00} на всеки {FF0000}Payday",BizInfo[oldbizid][bEP]);
BizInfo[oldbizid][bText] = Create3DTextLabel(stringbiz ,0x00FF00AA,BizInfo[oldbizid][bX], BizInfo[oldbizid][bY], BizInfo[oldbizid][bZ],25, 0, 1);
}
format(BizInfo[oldbizid][bOwnerName],256,"%s",dini_Get(biz,"bOwnerName"));
bizpickup[oldbizid]=CreatePickup(1272, 1, X[playerid],Y[playerid],Z[playerid],0);
dini_IntSet(biz, "bLevel",bizlevel);
BizInfo[oldbizid][bLevel]=dini_Int(biz, "bLevel");
if(type==1)
{
dini_Set(biz, "bName","store");
format(BizInfo[oldbizid][bName],256,"STORE");
}
if(type==2)
{
dini_Set(biz, "bName","BAR");
format(BizInfo[oldbizid][bName],256,"BAR");
}
if(type==3)
{
dini_Set(biz, "bName","Ammu-nation");
format(BizInfo[oldbizid][bName],256,"Ammu-nation");
}
if(type==4)
{
dini_Set(biz, "bName","DMV");
format(BizInfo[oldbizid][bName],256,"DMV");
}
if(type==5)
{
dini_Set(biz, "bName","STORE");
format(BizInfo[oldbizid][bName],256,"STORE");
}
if(type==6)
{
dini_Set(biz, "bName","PROLAPS");
format(BizInfo[oldbizid][bName],256,"PROLAPS");
}
if(type==7)
{
dini_Set(biz, "bName","OFFICE");
format(BizInfo[oldbizid][bName],256,"OFFICE");
}
if(type==8)
{
dini_Set(biz, "bName","BURGER SHOT");
format(BizInfo[oldbizid][bName],256,"BURGER SHOT");
}
if(type==9)
{
dini_Set(biz, "bName","HORSE BET");
format(BizInfo[oldbizid][bName],256,"HORSE BET");
}
if(type==10)
{
dini_Set(biz, "bName","STORE");
format(BizInfo[oldbizid][bName],256,"STORE");
}
if(type==11)
{
dini_Set(biz, "bName","URBAN");
format(BizInfo[oldbizid][bName],256,"urban");
}
if(type==12)
{
dini_Set(biz, "bName","ammu-nation");
format(BizInfo[oldbizid][bName],256,"ammu-nation");
}
if(type==13)
{
dini_Set(biz, "bName","ammu-nation");
format(BizInfo[oldbizid][bName],256,"ammu-nation");
}
if(type==14)
{
dini_Set(biz, "bName","DISCO");
format(BizInfo[oldbizid][bName],256,"DISCO");
}
if(type==15)
{
dini_Set(biz, "bName","SEX SHOP");
format(BizInfo[oldbizid][bName],256,"SEX SHOP");
}
if(type==16)
{
dini_Set(biz, "bName","Gym");
format(BizInfo[oldbizid][bName],256,"Gym");
}
if(type==17)
{
dini_Set(biz, "bName","Gym");
format(BizInfo[oldbizid][bName],256,"Gym");
}
if(type==18)
{
dini_Set(biz, "bName","CASINO");
format(BizInfo[oldbizid][bName],256,"CASINO");
}
if(type==19)
{
dini_Set(biz, "bName","STRIP CLUB");
format(BizInfo[oldbizid][bName],256,"STRIP CLUB");
}
if(type==20)
{
dini_Set(biz, "bName","DM BIZ");
format(BizInfo[oldbizid][bName],256,"DM BIZ");
}
if(type==21)
{
dini_Set(biz, "bName","4 DRAGONS");
format(BizInfo[oldbizid][bName],256,"4 DRAGONS");
}
if(type==22)
{
dini_Set(biz, "bName","CALIGULA'S");
format(BizInfo[oldbizid][bName],256,"CALIGULA'S");
}
if(type==23)
{
dini_Set(biz, "bName","BAR");
format(BizInfo[oldbizid][bName],256,"BAR");
}
if(type==24)
{
dini_Set(biz, "bName","Restaurant");
format(BizInfo[oldbizid][bName],256,"Restaurant");
}
if(type==25)
{
dini_Set(biz, "bName","CLUCKIN' BELL");
format(BizInfo[oldbizid][bName],256,"CLUCKIN' BELL");
}
if(type==26)
{
dini_Set(biz, "bName","Restaurant");
format(BizInfo[oldbizid][bName],256,"Restaurant");
}
if(type==27)
{
dini_Set(biz, "bName","NOT ENTERABLE");
format(BizInfo[oldbizid][bName],256,"not enterable");
}
if(type==28)
{
dini_Set(biz, "bName","advertisiment");
format(BizInfo[oldbizid][bName],256,"advertisiment");
}
if(type==29)
{
dini_Set(biz, "bName","drug factory");
format(BizInfo[oldbizid][bName],256,"drug factory");
}
if(type==30)
{
dini_Set(biz, "bName","drug factory");
format(BizInfo[oldbizid][bName],256,"drug factory");
}
}
}
else
{
SendClientMessage(playerid, 0xB4B5B7FF, "Нямаш права за да ползваш командата!");
}
return 1;
}
if(strcmp(cmd, "/createhouse", true) == 0)
{
if(PlayerInfo[playerid][pAdmin] >= 5)
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /createhouse [price] [interior 1-26] [level 1-9999]");
return 1;
}
GetPlayerPos(playerid, X[playerid],Y[playerid],Z[playerid]);
new model;
model = strval(tmp);
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /createhouse [price] [interior 1-26] [level 1-9999]");
return 1;
}
new type;
type = strval(tmp);
tmp = strtok(cmdtext, idx);
if(!strlen(tmp)) return SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /createhouse [price] [interior 1-26] [level 1-9999]");
new houselevel;
houselevel = strval(tmp);
if(model < 1) return SendClientMessage(playerid, 0xB4B5B7FF, "Цената трябва да е по-голяма от $0!");
if(type < 1 || type > 28) return SendClientMessage(playerid, 0xB4B5B7FF, "Този интериор е невалиден!");
if(houselevel<1 || houselevel>9999) return SendClientMessage(playerid, 0xB4B5B7FF, "Нивото на къщата трябва да е от 0 до 9999!");
if(GetPlayerVirtualWorld(playerid)!=0) return SendClientMessage(playerid,0xB4B5B7FF,"Не можеш да създадеш къща в този Virtual World!");
if(GetPlayerInterior(playerid)!=0) return SendClientMessage(playerid,0xB4B5B7FF,"Не можеш да създадеш къща в този Interior!");
new house[64];
new oldhouseid=ReturnNextUnusedHouseID();
format(house, 64, "/Houses/%d.ini", ReturnNextUnusedHouseID());
SendClientMessage(playerid, 0x00FF40FF,"Ти успешно създаде нова къща!");
maxhouses+=1;
if(!dini_Exists(house))
{
dini_Create(house);
dini_IntSet(house, "hOwner",0);
dini_Set(house, "hOwnerName", "None");
dini_IntSet(house, "hOwner",0);
dini_IntSet(house, "hcVeh",0);
dini_FloatSet(house, "hX",X[playerid]);
dini_FloatSet(house, "hY",Y[playerid]);
dini_FloatSet(house, "hZ",Z[playerid]);
dini_IntSet(house, "hLocked",0);
dini_IntSet(house, "hInterior",type);
dini_IntSet(house, "hPrice",model);
HouseInfo[oldhouseid][hX]=dini_Float(house, "hX");
HouseInfo[oldhouseid][hY]=dini_Float(house, "hY");
HouseInfo[oldhouseid][hZ]=dini_Float(house, "hZ");
HouseInfo[oldhouseid][hOwner]=dini_Int(house, "hOwner");
HouseInfo[oldhouseid][hLocked]=dini_Int(house, "hLocked");
HouseInfo[oldhouseid][hcVeh]=dini_Int(house, "hcVeh");
HouseInfo[oldhouseid][hPrice]=dini_Int(house, "hPrice");
HouseInfo[oldhouseid][hInterior]=dini_Int(house, "hInterior");
format(HouseInfo[oldhouseid][hOwnerName],256,"%s",dini_Get(house,"hOwnerName"));
housepickup[oldhouseid]=CreatePickup(1273, 1, X[playerid],Y[playerid],Z[playerid],0);
dini_IntSet(house, "hLevel",houselevel);
HouseInfo[oldhouseid][hLevel]=dini_Int(house, "hLevel");
}
}
else
{
SendClientMessage(playerid, 0xB4B5B7FF, "Нямаш права за да ползваш командата!");
}
return 1;
}
if(strcmp(cmd, "/getip", true) == 0)
{
if (PlayerInfo[playerid][pAdmin] >2)
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /getip [playerid]");
return 1;
}
para1[playerid] = ReturnUser(tmp);
if(para1[playerid] != INVALID_PLAYER_ID)
{
new ip[35];
GetPlayerIp(para1[playerid],ip,35);
format(string115, 115, "%s's IP: %s\n",pname[para1[playerid]], ip);
SendClientMessage(playerid, 0xFFFF00FF, string115);
}
else
{
SendClientMessage(playerid,0xB4B5B7FF,"Посоченото ID не е в сървъра!");
}
}
else
{
SendClientMessage(playerid, 0xB4B5B7FF, "Нямаш права за да ползваш командата!");
}
return 1;
}
if(strcmp(cmd, "/freeze", true) == 0)
{
if (PlayerInfo[playerid][pAdmin] >1)
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /freeze [playerid]");
return 1;
}
para1[playerid] = ReturnUser(tmp);
tmp = strtok(cmdtext, idx);
if(para1[playerid] != INVALID_PLAYER_ID)
{
TogglePlayerControllable(para1[playerid], 0);
format(string115, 115, "* Ти замрази %s *",pname[para1[playerid]]);
SendClientMessage(playerid, 0xFFFF00FF,string115);
format(string115, 115, "* %s те замрази *",pname[playerid]);
SendClientMessage(para1[playerid], 0xFFFF00FF,string115);
}
else
{
SendClientMessage(playerid,0xB4B5B7FF,"Посоченото ID не е в сървъра!");
}
}
else
{
SendClientMessage(playerid, 0xB4B5B7FF, "Нямаш права за да ползваш командата!");
}
return 1;
}
if(strcmp(cmd, "/explode", true) == 0)
{
if (PlayerInfo[playerid][pAdmin] >1)
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /explode [playerid]");
return 1;
}
para1[playerid] = ReturnUser(tmp);
tmp = strtok(cmdtext, idx);
if(para1[playerid] != INVALID_PLAYER_ID)
{
GetPlayerPos(para1[para1[playerid]], X[para1[playerid]], Y[para1[playerid]], Z[para1[playerid]]);
CreateExplosion(X[para1[playerid]], Y[para1[playerid]], Z[para1[playerid]], 7, 1.0);
format(string115, 115, "* Ти взриви %s *",pname[para1[playerid]]);
SendClientMessage(playerid, 0xFFFF00FF,string115);
format(string115, 115, "* %s те взриви *",pname[playerid]);
SendClientMessage(para1[playerid], 0xFFFF00FF,string115);
format(string115,115,"Explode: %s взриви %s",pname[playerid],pname[para1[playerid]]);
SendClientMessageToAll(0xE60000FF,string115);
}
else
{
SendClientMessage(playerid,0xB4B5B7FF,"Посоченото ID не е в сървъра!");
}
}
else
{
SendClientMessage(playerid, 0xB4B5B7FF, "Нямаш права за да ползваш командата!");
}
return 1;
}
if(strcmp(cmd, "/disarm", true) == 0)
{
if (PlayerInfo[playerid][pAdmin] >1)
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /disarm [playerid]");
return 1;
}
para1[playerid] = ReturnUser(tmp);
tmp = strtok(cmdtext, idx);
if(para1[playerid] != INVALID_PLAYER_ID)
{
ResetPlayerWeapons(para1[playerid]);
format(string115, 115, "* Ти взе всички оръжия на %s *",pname[para1[playerid]]);
SendClientMessage(playerid, 0xFFFFFFFF,string115);
format(string115, 115, "* %s взе всички твои оръжия *",pname[playerid]);
SendClientMessage(para1[playerid], 0xFFFF00FF,string115);
}
else
{
SendClientMessage(playerid,0xB4B5B7FF,"Посоченото ID не е в сървъра!");
}
}
else
{
SendClientMessage(playerid, 0xB4B5B7FF, "Нямаш права за да ползваш командата!");
}
return 1;
}
if(strcmp(cmd, "/unfreeze", true) == 0)
{
if (PlayerInfo[playerid][pAdmin] >1)
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /unfreeze [playerid]");
return 1;
}
para1[playerid] = ReturnUser(tmp);
tmp = strtok(cmdtext, idx);
if(para1[playerid] != INVALID_PLAYER_ID)
{
TogglePlayerControllable(para1[playerid], 1);
format(string115, 115, "* Ти отмрази %s *",pname[para1[playerid]]);
SendClientMessage(playerid, 0xFFFF00FF,string115);
format(string115, 115, "* %s те отмрази *",pname[playerid]);
SendClientMessage(para1[playerid], 0xFFFF00FF,string115);
}
else
{
SendClientMessage(playerid,0xB4B5B7FF,"Посоченото ID не е в сървъра!");
}
}
else
{
SendClientMessage(playerid, 0xB4B5B7FF, "Нямаш права за да ползваш командата!");
}
return 1;
}
if(strcmp(cmd, "/isjailed", true) == 0)
{
if (PlayerInfo[playerid][pAdmin] >1)
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /isjailed [playerid]");
return 1;
}
para1[playerid] = ReturnUser(tmp);
tmp = strtok(cmdtext, idx);
if(para1[playerid] != INVALID_PLAYER_ID)
{
if(PlayerInfo[para1[playerid]][pJail] == 0)
{
return SendClientMessage(playerid, 0xB4B5B7FF, "Този играч не е в затвора!");
}
if(PlayerInfo[para1[playerid]][pJail] > 0)
{
new jailreason[115];
if(PlayerInfo[para1[playerid]][pJailReason] == 2) { jailreason = "Каране на Job Vehicle за собствени цели"; }
else if(PlayerInfo[para1[playerid]][pJailReason] == 4) { jailreason = "Биене/Крадене на кола в тунинг гараж"; }
else if(PlayerInfo[para1[playerid]][pJailReason] == 1) { jailreason = "Лъже играчите"; }
else if(PlayerInfo[para1[playerid]][pJailReason] == 3) { jailreason = "DB без шофьор"; }
else if(PlayerInfo[para1[playerid]][pJailReason] == 5) { jailreason = "Пречи на хората да работят"; }
else if(PlayerInfo[para1[playerid]][pJailReason] == 6) { jailreason = "Грешен Report/Advert"; }
else if(PlayerInfo[para1[playerid]][pJailReason] == 7) { jailreason = "Биене на TFC служител On-Duty"; }
else if(PlayerInfo[para1[playerid]][pJailReason] == 8) { jailreason = "Glitch"; }
else if(PlayerInfo[para1[playerid]][pJailReason] == 9) { jailreason = "Оплакване във форума"; }
else if(PlayerInfo[para1[playerid]][pJailReason] == 10) { jailreason = "Грешно използване на /me или /do"; }
else if(PlayerInfo[para1[playerid]][pJailReason] == 11) { jailreason = "AFK в Job Vehicle"; }
else if(PlayerInfo[para1[playerid]][pJailReason] == 12) { jailreason = "Биене на ADMIN ON-DUTY"; }
else if(PlayerInfo[para1[playerid]][pJailReason] == 13) { jailreason = "Самоубива се на DMON"; }
else if(PlayerInfo[para1[playerid]][pJailReason] == 14) { jailreason = "Прочети правилата /rules"; }
format(string256, 256, "Този играч е в затвора и причината е - %s!", jailreason);
SendClientMessage(playerid, 0xE60000FF, string256);
}
else
{
SendClientMessage(playerid,0xE60000FF,"Този играч не е заглушен!");
}
}
else
{
SendClientMessage(playerid,0xB4B5B7FF,"Посоченото ID не е в сървъра!");
}
}
else
{
SendClientMessage(playerid, 0xB4B5B7FF, "Нямаш права за да ползваш командата!");
}
return 1;
}
if(strcmp(cmd, "/drink", true) == 0)
{
if(!IsPlayerInRangeOfPoint(playerid, 4, 497.4557,-75.6231,998.7578) && !IsPlayerInRangeOfPoint(playerid, 4, 499.3484,-20.5936,1000.6797) &&
!IsPlayerInRangeOfPoint(playerid, 4, 1215.0492,-12.2688,1000.9219) && !IsPlayerInRangeOfPoint(playerid, 4, 287.8558,-109.2027,1001.5156) && !IsPlayerInRangeOfPoint(playerid, 4, -224.7806,1404.6755,27.7734)
&& !IsPlayerInRangeOfPoint(playerid, 4,2537.1509,-1286.3304,1054.6406))
{
SendClientMessage(playerid, 0xB4B5B7FF, "Трябва да си в бар за да използваш тази команда!");
return 1;
}
if(BizInfo[enteredbiz[playerid]][bOwner]==0)
{
SendClientMessage(playerid, 0xB4B5B7FF, "Бизнесът няма притежател и не можеш да си купиш напитка от тук!");
return 1;
}
ShowPlayerDialog(playerid, 23, DIALOG_STYLE_LIST, "Напитки", "{FFFFFF}Бира - {40BF00}$50\n{FFFFFF}Вино - {40BF00}$60\n{FFFFFF}Водка - {40BF00}$100", "Избери", "Излез");
return 1;
}
if(strcmp(cmd, "/train", true)==0)
{
new level[32];
if(!IsPlayerInRangeOfPoint(playerid, 4, 773.6641,-72.9778,1000.6484) && !IsPlayerInRangeOfPoint(playerid, 4, 773.0745,-39.3959,1000.6865))
{
SendClientMessage(playerid, 0xB4B5B7FF, "Трябва да си в салон за да тренираш!");
return 1;
}
if(BizInfo[enteredbiz[playerid]][bOwner]==0)
{
SendClientMessage(playerid, 0xB4B5B7FF, "Бизнесът няма притежател и не можеш да си тренираш тук!");
return 1;
}
if(IsPlayerInRangeOfPoint(playerid, 4, 773.6641,-72.9778,1000.6484))
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /train [fighting style]");
SendClientMessage(playerid, 0xFF8040FF, "Fighting Styles: normal $20000, grabkick $100000, boxing $200000");
return 1;
}
strmid(level, tmp, 0, sizeof(level), sizeof(level));
if (strcmp(level, "normal", false) == 0)
{
if(PlayerInfo[playerid][pStyle]==0)
{
SendClientMessage(playerid, 0xB4B5B7FF, "Ти вече владееш този боен стил!");
return 1;
}
if(PlayerInfo[playerid][pCash]<20000)
{
SendClientMessage(playerid, 0xB4B5B7FF, "Ти нямаш достатъчно пари за да научиш този боен стил!");
return 1;
}
SendClientMessage(playerid, 0xFF8040FF, "Ти научи боен стил Normal и това ти струваше $20000!");
PlayerInfo[playerid][pStyle]=0;
GivePlayerCash(playerid,-20000);BizInfo[enteredbiz[playerid]][bEarnings]+=20000;
SetPlayerFightingStyle(playerid, FIGHT_STYLE_NORMAL);
}
if (strcmp(level, "grabkick", false) == 0)
{
if(PlayerInfo[playerid][pStyle]==1)
{
SendClientMessage(playerid, 0xB4B5B7FF, "Ти вече владееш този боен стил!");
return 1;
}
if(PlayerInfo[playerid][pCash]<100000)
{
SendClientMessage(playerid, 0xB4B5B7FF, "Ти нямаш достатъчно пари за да научиш този боен стил!");
return 1;
}
SendClientMessage(playerid, 0xFF8040FF, "Ти научи боен стил Grab Kick и това ти струваше $100000!");
PlayerInfo[playerid][pStyle]=1;
GivePlayerCash(playerid,-100000);BizInfo[enteredbiz[playerid]][bEarnings]+=100000;
SetPlayerFightingStyle(playerid, FIGHT_STYLE_GRABKICK);
}
if (strcmp(level, "boxing", false) == 0)
{
if(PlayerInfo[playerid][pStyle]==2)
{
SendClientMessage(playerid, 0xB4B5B7FF, "Ти вече владееш този боен стил!");
return 1;
}
if(PlayerInfo[playerid][pCash]<200000)
{
SendClientMessage(playerid, 0xB4B5B7FF, "Ти нямаш достатъчно пари за да научиш този боен стил!");
return 1;
}
SendClientMessage(playerid, 0xFF8040FF, "Ти научи боен стил Boxing и това ти струваше $200000!");
PlayerInfo[playerid][pStyle]=2;
GivePlayerCash(playerid,-200000);BizInfo[enteredbiz[playerid]][bEarnings]+=200000;
SetPlayerFightingStyle(playerid, FIGHT_STYLE_BOXING);
}
}
if(IsPlayerInRangeOfPoint(playerid,4, 773.0745,-39.3959,1000.6865))
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /train [fighting style]");
SendClientMessage(playerid, 0xFF8040FF, "Fighting Styles: kungfu $300000, elbow $400000, kneehead $500000");
return 1;
}
strmid(level, tmp, 0, sizeof(level), sizeof(level));
if (strcmp(level, "kungfu", false) == 0)
{
if(PlayerInfo[playerid][pStyle]==3)
{
SendClientMessage(playerid, 0xB4B5B7FF, "Ти вече владееш този боен стил!");
return 1;
}
if(PlayerInfo[playerid][pCash]<300000)
{
SendClientMessage(playerid, 0xB4B5B7FF, "Ти нямаш достатъчно пари за да научиш този боен стил!");
return 1;
}
SendClientMessage(playerid, 0xFF8040FF, "Ти научи боен стил Kungfu и това ти струваше $300000!");
PlayerInfo[playerid][pStyle]=3;
GivePlayerCash(playerid,-30000);BizInfo[enteredbiz[playerid]][bEarnings]+=300000;
SetPlayerFightingStyle(playerid, FIGHT_STYLE_KUNGFU);
}
if (strcmp(level, "elbow", false) == 0)
{
if(PlayerInfo[playerid][pStyle]==4)
{
SendClientMessage(playerid, 0xB4B5B7FF, "Ти вече владееш този боен стил!");
return 1;
}
if(PlayerInfo[playerid][pCash]<400000)
{
SendClientMessage(playerid, 0xB4B5B7FF, "Ти нямаш достатъчно пари за да научиш този боен стил!");
return 1;
}
SendClientMessage(playerid, 0xFF8040FF, "Ти научи боен стил Elbow и това ти струваше $400000!");
PlayerInfo[playerid][pStyle]=4;
GivePlayerCash(playerid,-400000);BizInfo[enteredbiz[playerid]][bEarnings]+=400000;
SetPlayerFightingStyle(playerid, FIGHT_STYLE_ELBOW);
}
if (strcmp(level, "kneehead", false) == 0)
{
if(PlayerInfo[playerid][pStyle]==5)
{
SendClientMessage(playerid, 0xB4B5B7FF, "Ти вече владееш този боен стил!");
return 1;
}
if(PlayerInfo[playerid][pCash]<500000)
{
SendClientMessage(playerid, 0xB4B5B7FF, "Ти нямаш достатъчно пари за да научиш този боен стил!");
return 1;
}
SendClientMessage(playerid, 0xFF8040FF, "Ти научи боен стил Kneehead и това ти струваше $500000!");
PlayerInfo[playerid][pStyle]=5;
GivePlayerCash(playerid,-500000);BizInfo[enteredbiz[playerid]][bEarnings]+=500000;
SetPlayerFightingStyle(playerid, FIGHT_STYLE_KNEEHEAD);
}
}
return 1;
}
if(strcmp(cmd, "/drugs", true) == 0)
{
format(string256,256,"Спиртно питие: %d литра, Трева: %d грам(а), Кокаин %d грам(а), Хероин %d грам(а)",PlayerInfo[playerid][pMoonshine],PlayerInfo[playerid][pWeed],PlayerInfo[playerid][pCocaine],PlayerInfo[playerid][pHeroin]);
SendClientMessage(playerid, 0xFF2D2DFF, string256);
return 1;
}
if(strcmp(cmd, "/briefcase", true) == 0 || strcmp(cmd,"/bcase",true)==0)
{
if(PlayerInfo[playerid][pBriefcase]==0) return SendClientMessage(playerid, 0xB4B5B7FF, "Ти нямаш куфарче!");
new x_job[256];
tmp = strtok(cmdtext, idx);
if(!strlen(tmp)) {
SendClientMessage(playerid, 0xFFFFFFFF,"Използвай: /briefcase(/bcase) [hold/hide/store/get/view]");
return 1;
}
new invalidfunction=1;
//new invalidfunction2=1;
if(strcmp(tmp,"get",true) == 0)
{
invalidfunction=0;
if(!IsPlayerAttachedObjectSlotUsed(playerid, 4)) return SendClientMessage(playerid, 0xB4B5B7FF, "Ти в момента не държиш куфара в ръце!");
new x_job2[256];
x_job2 = strtok(cmdtext, idx);
new level;
new tmp2[256];
//if(!strlen(x_job2))
//{
//SendClientMessage(playerid, 0xFFFFFFFF,"Използвай: /briefcase(/bcase) store [drug name] [gram/liter]");
//SendClientMessage(playerid, 0xFF2D2DFF,"Drug names: Moonshine, Weed, Cocaine, Heroin");
//}
tmp2=strtok(cmdtext, idx);
level=strval(tmp2);
if(!strlen(tmp2))
{
SendClientMessage(playerid, 0xFFFFFFFF,"Използвай: /briefcase(/bcase) get [drug name] [gram/liter]");
SendClientMessage(playerid, 0xFF2D2DFF,"Drug names: Moonshine, Weed, Cocaine, Heroin");
return 1;
}
if(level<1 || level>1000) return SendClientMessage(playerid, 0xB4B5B7FF, "Можеш да съхраняваш дрога с количество от 1 до 1000!");
if(strcmp(x_job2,"moonshine",false) == 0 || strcmp(x_job2,"Moonshine",false) == 0)
{
if(level>PlayerInfo[playerid][pMoonshine1]) return SendClientMessage(playerid, 0xB4B5B7FF, "Нямаш толкова литра спиртно питие в куфара!");
PlayerInfo[playerid][pMoonshine1]-=level;
PlayerInfo[playerid][pMoonshine]+=level;
if(level==1)
{
return SendClientMessage(playerid, 0xFF2D2DFF,"Ти взе 1 литър спиртно питие от твоя куфар!");
}
else
{
format(string256,256,"Ти взе %d литра спиртно питие от твоя куфар!",level);
return SendClientMessage(playerid, 0xFF2D2DFF,string256);
}
}
if(strcmp(x_job2,"cocaine",false) == 0 || strcmp(x_job2,"Cocaine",false) == 0)
{
if(level>PlayerInfo[playerid][pCocaine1]) return SendClientMessage(playerid, 0xB4B5B7FF, "Нямаш толкова грама кокаин в куфара!");
PlayerInfo[playerid][pCocaine1]-=level;
PlayerInfo[playerid][pCocaine]+=level;
if(level==1)
{
return SendClientMessage(playerid, 0xFF2D2DFF,"Ти взе 1 грам кокаин от твоя куфар!");
}
else
{
format(string256,256,"Ти взе %d грама кокаин от твоя куфар!",level);
return SendClientMessage(playerid, 0xFF2D2DFF,string256);
}
}
if(strcmp(x_job2,"heroin",false) == 0 || strcmp(x_job2,"Heroin",false) == 0)
{
if(level>PlayerInfo[playerid][pHeroin1]) return SendClientMessage(playerid, 0xB4B5B7FF, "Нямаш толкова грама хероин в куфара!");
PlayerInfo[playerid][pHeroin1]-=level;
PlayerInfo[playerid][pHeroin]+=level;
if(level==1)
{
return SendClientMessage(playerid, 0xFF2D2DFF,"Ти взе 1 грам хероин от твоя куфар!");
}
else
{
format(string256,256,"Ти взе %d грама хероин от твоя куфар!",level);
return SendClientMessage(playerid, 0xFF2D2DFF,string256);
}
}
if(strcmp(x_job2,"weed",false) == 0 || strcmp(x_job2,"Weed",false) == 0)
{
if(level>PlayerInfo[playerid][pWeed1]) return SendClientMessage(playerid, 0xB4B5B7FF, "Нямаш толкова грама трева в куфара!");
PlayerInfo[playerid][pWeed1]-=level;
PlayerInfo[playerid][pWeed]+=level;
if(level==1)
{
return SendClientMessage(playerid, 0xFF2D2DFF,"Ти взе 1 грам трева от твоя куфар!");
}
else
{
format(string256,256,"Ти взе %d грама трева от твоя куфар!",level);
return SendClientMessage(playerid, 0xFF2D2DFF,string256);
}
}
}
if(strcmp(tmp,"view",true) == 0)
{
invalidfunction=0;
if(!IsPlayerAttachedObjectSlotUsed(playerid, 4)) return SendClientMessage(playerid, 0xB4B5B7FF, "Ти в момента не държиш куфара в ръце!");
format(string256,256,"Спиртно питие: %d литра, Трева: %d грам(а), Кокаин %d грам(а), Хероин %d грам(а)",PlayerInfo[playerid][pMoonshine1],PlayerInfo[playerid][pWeed1],PlayerInfo[playerid][pCocaine1],PlayerInfo[playerid][pHeroin1]);
SendClientMessage(playerid, 0xFF2D2DFF, string256);
}
if(strcmp(tmp,"store",true) == 0)
{
invalidfunction=0;
if(!IsPlayerAttachedObjectSlotUsed(playerid, 4)) return SendClientMessage(playerid, 0xB4B5B7FF, "Ти в момента не държиш куфара в ръце!");
new x_job2[256];
x_job2 = strtok(cmdtext, idx);
new level;
new tmp2[256];
//if(!strlen(x_job2))
//{
//SendClientMessage(playerid, 0xFFFFFFFF,"Използвай: /briefcase(/bcase) store [drug name] [gram/liter]");
//SendClientMessage(playerid, 0xFF2D2DFF,"Drug names: Moonshine, Weed, Cocaine, Heroin");
//}
tmp2=strtok(cmdtext, idx);
level=strval(tmp2);
if(!strlen(tmp2))
{
SendClientMessage(playerid, 0xFFFFFFFF,"Използвай: /briefcase(/bcase) get [drug name] [gram/liter]");
SendClientMessage(playerid, 0xFF2D2DFF,"Drug names: Moonshine, Weed, Cocaine, Heroin");
return 1;
}
if(level<1 || level>1000) return SendClientMessage(playerid, 0xB4B5B7FF, "Можеш да съхраняваш дрога с количество от 1 до 1000!");
if(strcmp(x_job2,"moonshine",true) == 0 || strcmp(x_job2,"Moonshine",true) == 0)
{
if(level>PlayerInfo[playerid][pMoonshine]) return SendClientMessage(playerid, 0xB4B5B7FF, "Нямаш толкова литра спиртно питие!");
if(level+PlayerInfo[playerid][pMoonshine1]>1000) return SendClientMessage(playerid, 0xB4B5B7FF, "Можеш да съхраняваш дрога с количество от 1 до 1000!");
PlayerInfo[playerid][pMoonshine]-=level;
PlayerInfo[playerid][pMoonshine1]+=level;
if(level==1)
{
return SendClientMessage(playerid, 0xFF2D2DFF,"Ти съхрани 1 литър спиртно питие в твоя куфар!");
}
else
{
format(string256,256,"Ти съхрани %d литра спиртно питие в твоя куфар!",level);
return SendClientMessage(playerid, 0xFF2D2DFF,string256);
}
}
if(strcmp(x_job2,"weed",true) == 0 || strcmp(x_job2,"Weed",true) == 0)
{
if(level>PlayerInfo[playerid][pWeed]) return SendClientMessage(playerid, 0xB4B5B7FF, "Нямаш толкова грама трева!");
if(level+PlayerInfo[playerid][pWeed1]>1000) return SendClientMessage(playerid, 0xB4B5B7FF, "Можеш да съхраняваш дрога с количество от 1 до 1000!");
PlayerInfo[playerid][pWeed]-=level;
PlayerInfo[playerid][pWeed1]+=level;
if(level==1)
{
return SendClientMessage(playerid, 0xFF2D2DFF,"Ти съхрани 1 грам трева в твоя куфар!");
}
else
{
format(string256,256,"Ти съхрани %d грама трева в твоя куфар!",level);
return SendClientMessage(playerid, 0xFF2D2DFF,string256);
}
}
if(strcmp(x_job2,"cocaine",true) == 0 || strcmp(x_job2,"Cocaine",true) == 0)
{
if(level>PlayerInfo[playerid][pCocaine]) return SendClientMessage(playerid, 0xB4B5B7FF, "Нямаш толкова грама кокаин!");
if(level+PlayerInfo[playerid][pCocaine1]>1000) return SendClientMessage(playerid, 0xB4B5B7FF, "Можеш да съхраняваш дрога с количество от 1 до 1000!");
PlayerInfo[playerid][pCocaine]-=level;
PlayerInfo[playerid][pCocaine1]+=level;
if(level==1)
{
return SendClientMessage(playerid, 0xFF2D2DFF,"Ти съхрани 1 грам кокаин трева в твоя куфар!");
}
else
{
format(string256,256,"Ти съхрани %d грама кокаин в твоя куфар!",level);
return SendClientMessage(playerid, 0xFF2D2DFF,string256);
}
}
if(strcmp(x_job2,"heroin",true) == 0 || strcmp(x_job2,"Heroin",true) == 0)
{
if(level>PlayerInfo[playerid][pHeroin]) return SendClientMessage(playerid, 0xB4B5B7FF, "Нямаш толкова грама хероин!");
if(level+PlayerInfo[playerid][pHeroin1]>1000) return SendClientMessage(playerid, 0xB4B5B7FF, "Можеш да съхраняваш дрога с количество от 1 до 1000!");
PlayerInfo[playerid][pHeroin]-=level;
PlayerInfo[playerid][pHeroin1]+=level;
if(level==1)
{
return SendClientMessage(playerid, 0xFF2D2DFF,"Ти съхрани 1 грам хероин трева в твоя куфар!");
}
else
{
format(string256,256,"Ти съхрани %d грама хероин в твоя куфар!",level);
return SendClientMessage(playerid, 0xFF2D2DFF,string256);
}
}
}
if(strcmp(tmp,"hide",true) == 0)
{
invalidfunction=0;
if(IsPlayerAttachedObjectSlotUsed(playerid, 4)) RemovePlayerAttachedObject(playerid, 4);
}
if(strcmp(tmp,"hold",true) == 0)
{
//new x_job2[256];
//tmp = strtok(cmdtext, idx);
x_job = strtok(cmdtext, idx);
if(!strlen(x_job)) {
SendClientMessage(playerid, 0xFFFFFFFF,"Използвай: /briefcase(/bcase) hold [left/right]");
return 1;
}
invalidfunction=0;
if(strcmp(x_job,"left",true) == 0)
//if(strfind(x_job, "left", true) == 0)
{
if(IsPlayerAttachedObjectSlotUsed(playerid, 4)) RemovePlayerAttachedObject(playerid, 4);
SetPlayerAttachedObject(playerid,4, 1210, 5,0.250000, 0.100000, 0.000000, 0.000000, 264.337768, 21.619852, 1.000000, 1.000000, 1.000000); return 1;
}
if(strcmp(x_job,"right",true) == 0)
//if(strfind(x_job, "right", true) == 0)
{
if(IsPlayerAttachedObjectSlotUsed(playerid, 4)) RemovePlayerAttachedObject(playerid, 4);
SetPlayerAttachedObject(playerid,4, 1210, 6,0.250000, 0.100000, 0.000000, 0.000000, 264.337768, 21.619852, 1.000000, 1.000000, 1.000000); return 1;
}
if(strcmp(x_job,"right",true) == 1 && strcmp(x_job,"left",true) == 1)
{
SendClientMessage(playerid, 0xFFFFFFFF,"Използвай: /briefcase(/bcase) hold [left/right]");
}
}
if(invalidfunction==1)
{
SendClientMessage(playerid, 0xB4B5B7FF, "Невалидна опция!");
}
return 1;
}
if(strcmp(cmd, "/buydrug", true) == 0)
{
if(!IsPlayerInRangeOfPoint(playerid, 4, -1395.4200,1245.6000,1039.8672) && !IsPlayerInRangeOfPoint(playerid, 4, 2548.3892,-1293.2520,1044.1250))
{
return SendClientMessage(playerid, 0xB4B5B7FF, "Трябва да си във фабрика за дрога за да използваш тази команда!");
}
if(IsPlayerInRangeOfPoint(playerid, 4, -1395.4200,1245.6000,1039.8672) || IsPlayerInRangeOfPoint(playerid, 4, 2548.3892,-1293.2520,1044.1250))
{
new x_job[256];
x_job = strtok(cmdtext, idx);
if(!strlen(x_job)) {
SendClientMessage(playerid, 0xFFFFFFFF,"Използвай: /buy [drug name] [gram/liter]");
SendClientMessage(playerid, 0xFFFF00FF,"Drug names: Moonshine $5000, Weed $6000, Cocaine $8000, Heroin $9000");
SendClientMessage(playerid, 0xFF2D2DFF, "Всяка цена е за грам/литър и всеки наркотик има ефект!");
SendClientMessage(playerid, 0xFF2D2DFF, "При употреба на 1 литър Weed (трева) получаваш 20 HEALTH и резачка (за 13 сек.)");
SendClientMessage(playerid, 0xFF2D2DFF, "При употреба на 1 литър Moonshine (спиртно питие) получаваш 20 HEALTH и резачка (за 13 сек.)");
SendClientMessage(playerid, 0xFF2D2DFF, "При употреба на 1 литър Cocaine (кокаин) получаваш 20 HEALTH и резачка (за 13 сек.)");
SendClientMessage(playerid, 0xFF2D2DFF, "При употреба на 1 литър Heroin (хероин) получаваш 20 HEALTH и резачка (за 13 сек.)");
SendClientMessage(playerid, 0xFF2D2DFF, "ВНИМАНИЕ: Ако бъдеш убит и имаш дрога в себе си ще я загубиш затова използвай куфар да я съхраняваш!");
SendClientMessage(playerid, 0xFF2D2DFF, "Куфар (briefcase) можеш да вземеш от бизнес 24/7 Shop или General Store!");
return 1;
}
if(BizInfo[enteredbiz[playerid]][bOwner]==0)
{
SendClientMessage(playerid, 0xB4B5B7FF, "Бизнесът няма притежател и не можеш да пазаруваш от тук!");
return 1;
}
tmp=strtok(cmdtext, idx);
new level=strval(tmp);
if(level<1 || level>100000)
{
return SendClientMessage(playerid, 0xB4B5B7FF, "Трябва да въведеш стойност на грама/литъра, по-голяма от 0!");
}
tmp=strtok(cmdtext, idx);
new invalid=0;
if(strcmp(x_job,"moonshine",true) == 0 || strcmp(x_job,"Moonshine",true) == 0)
{
invalid=1;
if(PlayerInfo[playerid][pCash]<level*5000) return SendClientMessage(playerid, 0xB4B5B7FF, "Ти нямаш достатъчно пари!");
PlayerInfo[playerid][pMoonshine]+=level;
GivePlayerCash(playerid,-level*5000);
BizInfo[enteredbiz[playerid]][bEarnings]+=level*5000;
if(level==1)
{
format(string256,256,"Ти си купи %d литър спиртно питие и това ти струваше $%d",level,level*5000);
SendClientMessage(playerid,0xFF2D2DFF,string256);
}
else
{
format(string256,256,"Ти си купи %d литра спиртно питие и това ти струваше $%d",level,level*5000);
SendClientMessage(playerid,0xFF2D2DFF,string256);
}
}
if(strcmp(x_job,"weed",true) == 0 || strcmp(x_job,"Weed",true) == 0)
{
invalid=1;
if(PlayerInfo[playerid][pCash]<level*6000) return SendClientMessage(playerid, 0xB4B5B7FF, "Ти нямаш достатъчно пари!");
PlayerInfo[playerid][pMoonshine]+=level;
GivePlayerCash(playerid,-level*6000);
BizInfo[enteredbiz[playerid]][bEarnings]+=level*6000;
if(level==1)
{
format(string256,256,"Ти си купи %d грам трева и това ти струваше $%d",level,level*6000);
SendClientMessage(playerid,0xFF2D2DFF,string256);
}
else
{
format(string256,256,"Ти си купи %d грама трева и това ти струваше $%d",level,level*6000);
SendClientMessage(playerid,0xFF2D2DFF,string256);
}
}
if(strcmp(x_job,"cocaine",true) == 0 || strcmp(x_job,"Cocaine",true) == 0)
{
invalid=1;
if(PlayerInfo[playerid][pCash]<level*8000) return SendClientMessage(playerid, 0xB4B5B7FF, "Ти нямаш достатъчно пари!");
PlayerInfo[playerid][pMoonshine]+=level;
GivePlayerCash(playerid,-level*8000);
BizInfo[enteredbiz[playerid]][bEarnings]+=level*8000;
if(level==1)
{
format(string256,256,"Ти си купи %d грам кокаин и това ти струваше $%d",level,level*8000);
SendClientMessage(playerid,0xFF2D2DFF,string256);
}
else
{
format(string256,256,"Ти си купи %d грама кокаин и това ти струваше $%d",level,level*8000);
SendClientMessage(playerid,0xFF2D2DFF,string256);
}
}
if(strcmp(x_job,"heroin",true) == 0 || strcmp(x_job,"Heroin",true) == 0)
{
invalid=1;
if(PlayerInfo[playerid][pCash]<level*9000) return SendClientMessage(playerid, 0xB4B5B7FF, "Ти нямаш достатъчно пари!");
PlayerInfo[playerid][pMoonshine]+=level;
GivePlayerCash(playerid,-level*9000);
BizInfo[enteredbiz[playerid]][bEarnings]+=level*9000;
if(level==1)
{
format(string256,256,"Ти си купи %d грам хероин и това ти струваше $%d",level,level*9000);
SendClientMessage(playerid,0xFF2D2DFF,string256);
}
else
{
format(string256,256,"Ти си купи %d грама хероин и това ти струваше $%d",level,level*9000);
SendClientMessage(playerid,0xFF2D2DFF,string256);
}
}
if(invalid==0)
{
return SendClientMessage(playerid, 0xB4B5B7FF, "Невалиден наркотик!");
}
GivePlayerWantedLevel(playerid,1);
}
return 1;
}
if(strcmp(cmd, "/usedrug", true) == 0)
{
new x_job[256];
x_job = strtok(cmdtext, idx);
if(!strlen(x_job))
{
SendClientMessage(playerid, 0xFFFFFFFF,"Използвай: /buy [drug name]");
return SendClientMessage(playerid, 0xFF2D2DFF,"Drug names: Moonshine $5000, Weed $6000, Cocaine $8000, Heroin $9000");
}
if(strcmp(x_job,"moonshine",true) == 0 || strcmp(x_job,"Moonshine",true) == 0)
{
if(PlayerInfo[playerid][pMoonshineEffectTime]>0) return SendClientMessage(playerid, 0xB4B5B7FF, "В момента си под действието на наркотик!");
if(PlayerInfo[playerid][pMoonshine]==0) return SendClientMessage(playerid, 0xB4B5B7FF, "Ти нямаш спиртно питие!");
SetPlayerWeather(playerid, 42);
new Float:health;
GetPlayerHealth(playerid,health);
SetPlayerHealth(playerid,health+20.0);
if(GetPlayerWeapon(playerid)==9) rezachka[playerid]=1;
GivePlayerWeapon(playerid,9,1);
PlayerInfo[playerid][pMoonshine]-=1;
PlayerInfo[playerid][pMoonshineEffectTime]=13;
}
if(strcmp(x_job,"cocaine",true) == 0 || strcmp(x_job,"Cocaine",true) == 0)
{
if(PlayerInfo[playerid][pCocaineEffectTime]>0) return SendClientMessage(playerid, 0xB4B5B7FF, "В момента си под действието на наркотик!");
if(PlayerInfo[playerid][pCocaine]==0) return SendClientMessage(playerid, 0xB4B5B7FF, "Ти нямаш кокаин!");
SetPlayerWeather(playerid, 50);
new Float:health;
GetPlayerHealth(playerid,health);
SetPlayerHealth(playerid,health+30.0);
if(GetPlayerWeapon(playerid)==9) rezachka[playerid]=1;
GivePlayerWeapon(playerid,9,1);
PlayerInfo[playerid][pCocaine]-=1;
PlayerInfo[playerid][pCocaineEffectTime]=13;
}
if(strcmp(x_job,"weed",true) == 0 || strcmp(x_job,"Weed",true) == 0)
{
if(PlayerInfo[playerid][pWeedEffectTime]>0) return SendClientMessage(playerid, 0xB4B5B7FF, "В момента си под действието на наркотик!");
if(PlayerInfo[playerid][pWeed]==0) return SendClientMessage(playerid, 0xB4B5B7FF, "Ти нямаш трева!");
SetPlayerWeather(playerid, 2009);
new Float:health;
GetPlayerHealth(playerid,health);
SetPlayerHealth(playerid,health+40.0);
if(GetPlayerWeapon(playerid)==9) rezachka[playerid]=1;
GivePlayerWeapon(playerid,9,1);
PlayerInfo[playerid][pWeed]-=1;
PlayerInfo[playerid][pWeedEffectTime]=13;
}
if(strcmp(x_job,"heroin",true) == 0 || strcmp(x_job,"Heroin",true) == 0)
{
if(PlayerInfo[playerid][pHeroinEffectTime]>0) return SendClientMessage(playerid, 0xB4B5B7FF, "В момента си под действието на наркотик!");
if(PlayerInfo[playerid][pHeroin]==0) return SendClientMessage(playerid, 0xB4B5B7FF, "Ти нямаш хероин!");
SetPlayerWeather(playerid, 100);
new Float:health;
GetPlayerHealth(playerid,health);
SetPlayerHealth(playerid,health+50.0);
if(GetPlayerWeapon(playerid)==9) rezachka[playerid]=1;
GivePlayerWeapon(playerid,9,1);
PlayerInfo[playerid][pHeroin]-=1;
PlayerInfo[playerid][pHeroinEffectTime]=13;
}
return 1;
}
if(strcmp(cmd, "/health", true) == 0)
{
if(PlayerInfo[playerid][pHouseO]==-1) return SendClientMessage(playerid, 0xB4B5B7FF, "Ти нямаш къща!");
if(enteredhouse[playerid]==0) return SendClientMessage(playerid, 0xB4B5B7FF, "Ти не си в къщата си!");
if(PlayerInfo[playerid][pHealth2]==0)
{
SendClientMessage(playerid, 0xB4B5B7FF, "Ти нямаш пакети!");
return 1;
}
SetPlayerHealth(playerid,100);
PlayerInfo[playerid][pHealth2]-=1;
return 1;
}
if(strcmp(cmd, "/armour", true) == 0)
{
if(PlayerInfo[playerid][pHouseO]==-1) return SendClientMessage(playerid, 0xB4B5B7FF, "Ти нямаш къща!");
if(enteredhouse[playerid]==0) return SendClientMessage(playerid, 0xB4B5B7FF, "Ти не си в къщата си!");
if(PlayerInfo[playerid][pArmour2]==0)
{
SendClientMessage(playerid, 0xB4B5B7FF, "Ти нямаш пакети!");
return 1;
}
SetPlayerArmour(playerid,100);
PlayerInfo[playerid][pArmour2]-=1;
return 1;
}
if(strcmp(cmd, "/buyarmour", true) == 0)
{
if(!IsPlayerInRangeOfPoint(playerid, 4, 2568.4888,-1296.4260,1037.7734))
{
return 1;
}
if(PlayerInfo[playerid][pHouseO]==-1)
{
SendClientMessage(playerid, 0xB4B5B7FF, "Ти нямаш къща!");
return 1;
}
if(PlayerInfo[playerid][pCash]<20000)
{
SendClientMessage(playerid, 0xB4B5B7FF, "Трябва да имаш $20000 за да си купиш пакети!");
return 1;
}
SendClientMessage(playerid,0x00FF00FF,"Ти си купи 10 пакета жилетки за $20000!");
PlayerInfo[playerid][pCash]-=20000;
PlayerInfo[playerid][pArmour2]+=10;
return 1;
}
if(strcmp(cmd, "/buy", true) == 0)
{
if(!IsPlayerInRangeOfPoint(playerid, 4, -30.9303,-28.3415,1003.5573) && !IsPlayerInRangeOfPoint(playerid, 4, -23.3775,-55.2958,1003.5469) &&
!IsPlayerInRangeOfPoint(playerid, 4, 287.8558,-109.2027,1001.5156) && !IsPlayerInRangeOfPoint(playerid, 4, -1353.9404,2057.6685,53.1172)
&& !IsPlayerInRangeOfPoint(playerid, 4, 369.5925,-6.7357,1001.8589) && !IsPlayerInRangeOfPoint(playerid, 4, 450.5178,-84.4856,999.5547)
&& !IsPlayerInRangeOfPoint(playerid, 4, 203.8465,-44.4779,1001.8047) && !IsPlayerInRangeOfPoint(playerid, 4, 206.9638,-129.8357,1003.5078)
&& !IsPlayerInRangeOfPoint(playerid, 4, 2548.3892,-1293.2520,1044.1250))
{
SendClientMessage(playerid, 0xB4B5B7FF, "Трябва да си в магазин за да използваш тази команда!");
return 1;
}
//376.6553,-68.1552,1001.5151
//
//
tmp=strtok(cmdtext, idx);
new level=strval(tmp);
/////////////////////////////////////////////////////////////////////////////////////////////////////////
if(IsPlayerInRangeOfPoint(playerid, 4, 203.8465,-44.4779,1001.8047) || IsPlayerInRangeOfPoint(playerid, 4, 206.9638,-129.8357,1003.5078))
{
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /buy [1-4]");
return 1;
}
if(BizInfo[enteredbiz[playerid]][bOwner]==0)
{
SendClientMessage(playerid, 0xB4B5B7FF, "Бизнесът няма притежател и не можеш да си купиш дрехи от тук!");
return 1;
}
if(PlayerInfo[playerid][pCash] < 300)
{
SendClientMessage(playerid, 0xB4B5B7FF, "Трябва да имаш поне $300 за да си купиш дрехи!");
return 1;
}
if(level==1) SetPlayerSkin(playerid,3); SendClientMessage(playerid, 0xFFFFFFFF, "Ти си купи нови дрехи за $300!");
if(level==2) SetPlayerSkin(playerid,23); SendClientMessage(playerid, 0xFFFFFFFF, "Ти си купи нови дрехи за $300!");
if(level==3) SetPlayerSkin(playerid,24); SendClientMessage(playerid, 0xFFFFFFFF, "Ти си купи нови дрехи за $300!");
if(level==4) SetPlayerSkin(playerid,47); SendClientMessage(playerid, 0xFFFFFFFF, "Ти си купи нови дрехи за $300!");
if(level>4 || level<1) return SendClientMessage(playerid, COLOR_YELLOW, "Използвай: /buy [1-4]");
GivePlayerCash(playerid,-300);
BizInfo[enteredbiz[playerid]][bEarnings]+=300;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////
if(IsPlayerInRangeOfPoint(playerid, 4, 376.6553,-68.1552,1001.5151) || IsPlayerInRangeOfPoint(playerid, 4, 2548.3892,-1293.2520,1044.1250))
{
if(BizInfo[enteredbiz[playerid]][bOwner]==0)
{
SendClientMessage(playerid, 0xB4B5B7FF, "Бизнесът няма притежател и не можеш да пазаруваш от тук!");
return 1;
}
if(level<1 || level>8)
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /buy [product number]");
SendClientMessage(playerid, 0xFFFF80FF, "Product numbers: 1: Tea $1, 2: Coffe $1, 3: Cola $2, 4: Toast $2, 5: Soup $3, 6: Chips $4");
SendClientMessage(playerid, 0xFFFF80FF, "Product numbers: 7: Burger $7, 8: Double Whopper Cheese Burger $20");
return 1;
}
new Float:healthp;
GetPlayerHealth(playerid,healthp);
if(level==1)
{if(healthp>90) return SendClientMessage(playerid, 0xB4B5B7FF, "В момента не можеш да си поръчаш това!");
//new Float:healthp;
GetPlayerHealth(playerid,healthp);
if(healthp<100)
{
SetPlayerHealth(playerid,healthp+10);
}
GivePlayerCash(playerid,-1);
BizInfo[enteredbiz[playerid]][bEarnings]+=1;
SendClientMessage(playerid, 0xFFFF80FF, "Ти си купи двоен чай и това ти струваше $1!");
}
if(level==8)
{if(healthp>20) return SendClientMessage(playerid, 0xB4B5B7FF, "В момента не можеш да си поръчаш това!");
//new Float:healthp;
GetPlayerHealth(playerid,healthp);
if(healthp<100)
{
SetPlayerHealth(playerid,healthp+80);
}
GivePlayerCash(playerid,-20);
BizInfo[enteredbiz[playerid]][bEarnings]+=20;
SendClientMessage(playerid, 0xFFFF80FF, "Ти си купи двоен чиз бургер и това ти струваше $20!");
ApplyAnimation(playerid, "FOOD", "EAT_Burger",4.1,0,1,1,0,0);
}
if(level==7)
{if(healthp>30) return SendClientMessage(playerid, 0xB4B5B7FF, "В момента не можеш да си поръчаш това!");
//new Float:healthp;
GetPlayerHealth(playerid,healthp);
if(healthp<100)
{
SetPlayerHealth(playerid,healthp+70);
}
GivePlayerCash(playerid,-7);
BizInfo[enteredbiz[playerid]][bEarnings]+=7;
SendClientMessage(playerid, 0xFFFF80FF, "Ти си купи бургер и това ти струваше $7!");ApplyAnimation(playerid, "FOOD", "EAT_Burger",4.1,0,1,1,0,0);
}
if(level==6)
{if(healthp>60) return SendClientMessage(playerid, 0xB4B5B7FF, "В момента не можеш да си поръчаш това!");
//new Float:healthp;
GetPlayerHealth(playerid,healthp);
if(healthp<100)
{
SetPlayerHealth(playerid,healthp+40);
}
GivePlayerCash(playerid,-4);
BizInfo[enteredbiz[playerid]][bEarnings]+=4;
SendClientMessage(playerid, 0xFFFF80FF, "Ти си купи чипс и това ти струваше $4!");ApplyAnimation(playerid, "FOOD", "EAT_Burger",4.1,0,1,1,0,0);
}
if(level==2)
{if(healthp>90) return SendClientMessage(playerid, 0xB4B5B7FF, "В момента не можеш да си поръчаш това!");
//new Float:healthp;
GetPlayerHealth(playerid,healthp);
if(healthp<100)
{
SetPlayerHealth(playerid,healthp+10);
}
GivePlayerCash(playerid,-1);
BizInfo[enteredbiz[playerid]][bEarnings]+=1;
SendClientMessage(playerid, 0xFFFF80FF, "Ти си купи кафе и това ти струваше $5!");
}
if(level==3)
{if(healthp>80) return SendClientMessage(playerid, 0xB4B5B7FF, "В момента не можеш да си поръчаш това!");
//new Float:healthp;
GetPlayerHealth(playerid,healthp);
if(healthp<100)
{
SetPlayerHealth(playerid,healthp+20);
}
GivePlayerCash(playerid,-2);
BizInfo[enteredbiz[playerid]][bEarnings]+=2;
SendClientMessage(playerid, 0xFFFF80FF, "Ти си купи кола и това ти струваше $2!");
}
if(level==4)
{if(healthp>80) return SendClientMessage(playerid, 0xB4B5B7FF, "В момента не можеш да си поръчаш това!");
//new Float:healthp;
GetPlayerHealth(playerid,healthp);
if(healthp<100)
{
SetPlayerHealth(playerid,healthp+20);
}
GivePlayerCash(playerid,-2);
BizInfo[enteredbiz[playerid]][bEarnings]+=2;
SendClientMessage(playerid, 0xFFFF80FF, "Ти си купи тост и това ти струваше $3!");ApplyAnimation(playerid, "FOOD", "EAT_Burger",4.1,0,1,1,0,0);
}
if(level==5)
{if(healthp>70) return SendClientMessage(playerid, 0xB4B5B7FF, "В момента не можеш да си поръчаш това!");
//new Float:healthp;
GetPlayerHealth(playerid,healthp);
if(healthp<100)
{
SetPlayerHealth(playerid,healthp+30);
}
GivePlayerCash(playerid,-3);
BizInfo[enteredbiz[playerid]][bEarnings]+=3;
SendClientMessage(playerid, 0xFFFF80FF, "Ти си купи супа и това ти струваше $2!");ApplyAnimation(playerid, "FOOD", "EAT_Burger",4.1,0,1,1,0,0);
}
}
if(IsPlayerInRangeOfPoint(playerid, 4, 450.5178,-84.4856,999.5547))
{
if(BizInfo[enteredbiz[playerid]][bOwner]==0)
{
SendClientMessage(playerid, 0xB4B5B7FF, "Бизнесът няма притежател и не можеш да пазаруваш от тук!");
return 1;
}
if(level<1 || level>8)
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /buy [product number]");
SendClientMessage(playerid, 0xFFFF80FF, "Product numbers: 1: Tea $1, 2: Coffe $1, 3: Cola $2, 4: Toast $2, 5: Soup $3, 6: Chips $4");
SendClientMessage(playerid, 0xFFFF80FF, "Product numbers: 7: Burger $7, 8: Double Whopper Cheese Burger $20");
return 1;
}
new Float:healthp;
GetPlayerHealth(playerid,healthp);
if(level==1)
{if(healthp>90) return SendClientMessage(playerid, 0xB4B5B7FF, "В момента не можеш да си поръчаш това!");
//new Float:healthp;
GetPlayerHealth(playerid,healthp);
if(healthp<100)
{
SetPlayerHealth(playerid,healthp+10);
}
GivePlayerCash(playerid,-1);
BizInfo[enteredbiz[playerid]][bEarnings]+=1;
SendClientMessage(playerid, 0xFFFF80FF, "Ти си купи двоен чай и това ти струваше $1!");
}
if(level==8)
{if(healthp>20) return SendClientMessage(playerid, 0xB4B5B7FF, "В момента не можеш да си поръчаш това!");
//new Float:healthp;
GetPlayerHealth(playerid,healthp);
if(healthp<100)
{
SetPlayerHealth(playerid,healthp+80);
}
GivePlayerCash(playerid,-20);
BizInfo[enteredbiz[playerid]][bEarnings]+=20;
SendClientMessage(playerid, 0xFFFF80FF, "Ти си купи двоен чиз бургер и това ти струваше $20!");
ApplyAnimation(playerid, "FOOD", "EAT_Burger",4.1,0,1,1,0,0);
}
if(level==7)
{if(healthp>30) return SendClientMessage(playerid, 0xB4B5B7FF, "В момента не можеш да си поръчаш това!");
//new Float:healthp;
GetPlayerHealth(playerid,healthp);
if(healthp<100)
{
SetPlayerHealth(playerid,healthp+70);
}
GivePlayerCash(playerid,-7);
BizInfo[enteredbiz[playerid]][bEarnings]+=7;
SendClientMessage(playerid, 0xFFFF80FF, "Ти си купи бургер и това ти струваше $7!");ApplyAnimation(playerid, "FOOD", "EAT_Burger",4.1,0,1,1,0,0);
}
if(level==6)
{if(healthp>60) return SendClientMessage(playerid, 0xB4B5B7FF, "В момента не можеш да си поръчаш това!");
//new Float:healthp;
GetPlayerHealth(playerid,healthp);
if(healthp<100)
{
SetPlayerHealth(playerid,healthp+40);
}
GivePlayerCash(playerid,-4);
BizInfo[enteredbiz[playerid]][bEarnings]+=4;
SendClientMessage(playerid, 0xFFFF80FF, "Ти си купи чипс и това ти струваше $4!");ApplyAnimation(playerid, "FOOD", "EAT_Burger",4.1,0,1,1,0,0);
}
if(level==2)
{if(healthp>90) return SendClientMessage(playerid, 0xB4B5B7FF, "В момента не можеш да си поръчаш това!");
//new Float:healthp;
GetPlayerHealth(playerid,healthp);
if(healthp<100)
{
SetPlayerHealth(playerid,healthp+10);
}
GivePlayerCash(playerid,-1);
BizInfo[enteredbiz[playerid]][bEarnings]+=1;
SendClientMessage(playerid, 0xFFFF80FF, "Ти си купи кафе и това ти струваше $5!");
}
if(level==3)
{if(healthp>80) return SendClientMessage(playerid, 0xB4B5B7FF, "В момента не можеш да си поръчаш това!");
//new Float:healthp;
GetPlayerHealth(playerid,healthp);
if(healthp<100)
{
SetPlayerHealth(playerid,healthp+20);
}
GivePlayerCash(playerid,-2);
BizInfo[enteredbiz[playerid]][bEarnings]+=2;
SendClientMessage(playerid, 0xFFFF80FF, "Ти си купи кола и това ти струваше $2!");
}
if(level==4)
{if(healthp>80) return SendClientMessage(playerid, 0xB4B5B7FF, "В момента не можеш да си поръчаш това!");
//new Float:healthp;
GetPlayerHealth(playerid,healthp);
if(healthp<100)
{
SetPlayerHealth(playerid,healthp+20);
}
GivePlayerCash(playerid,-2);
BizInfo[enteredbiz[playerid]][bEarnings]+=2;
SendClientMessage(playerid, 0xFFFF80FF, "Ти си купи тост и това ти струваше $3!");ApplyAnimation(playerid, "FOOD", "EAT_Burger",4.1,0,1,1,0,0);
}
if(level==5)
{if(healthp>70) return SendClientMessage(playerid, 0xB4B5B7FF, "В момента не можеш да си поръчаш това!");
//new Float:healthp;
GetPlayerHealth(playerid,healthp);
if(healthp<100)
{
SetPlayerHealth(playerid,healthp+30);
}
GivePlayerCash(playerid,-3);
BizInfo[enteredbiz[playerid]][bEarnings]+=3;
SendClientMessage(playerid, 0xFFFF80FF, "Ти си купи супа и това ти струваше $2!");ApplyAnimation(playerid, "FOOD", "EAT_Burger",4.1,0,1,1,0,0);
}
}
if(IsPlayerInRangeOfPoint(playerid, 4, 369.5925,-6.7357,1001.8589))
{
if(BizInfo[enteredbiz[playerid]][bOwner]==0)
{
SendClientMessage(playerid, 0xB4B5B7FF, "Бизнесът няма притежател и не можеш да пазаруваш от тук!");
return 1;
}
if(level<1 || level>4)
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /buy [menu number]");
SendClientMessage(playerid, 0xFFFF80FF, "Menu numbers: 1: Cluckin' Little Meal $2, 2: Cluckin' Big Meal $5, 3: Cluckin' Hude Meal $10, 4: Salad Meal $10");
return 1;
}
if(level==1)
{new Float:healthp;
GetPlayerHealth(playerid,healthp);
if(healthp>90) return SendClientMessage(playerid, 0xB4B5B7FF, "В момента не можеш да си поръчаш това!");
if(healthp<100)
{
SetPlayerHealth(playerid,healthp+10);
}
GivePlayerCash(playerid,-2);
BizInfo[enteredbiz[playerid]][bEarnings]+=2;
SendClientMessage(playerid, 0xFFFF80FF, "Ти си купи меню Cluckin' Little Meal и това ти струваше $2!");ApplyAnimation(playerid, "FOOD", "EAT_Burger",4.1,0,1,1,0,0);
}
if(level==2)
{new Float:healthp;
GetPlayerHealth(playerid,healthp);
if(healthp>80) return SendClientMessage(playerid, 0xB4B5B7FF, "В момента не можеш да си поръчаш това!");
if(healthp<100)
{
SetPlayerHealth(playerid,healthp+20);
}
GivePlayerCash(playerid,-5);
BizInfo[enteredbiz[playerid]][bEarnings]+=5;
SendClientMessage(playerid, 0xFFFF80FF, "Ти си купи меню Cluckin' Big Meal и това ти струваше $5!");ApplyAnimation(playerid, "FOOD", "EAT_Burger",4.1,0,1,1,0,0);
}
if(level==3)
{new Float:healthp;
GetPlayerHealth(playerid,healthp);
if(healthp>70) return SendClientMessage(playerid, 0xB4B5B7FF, "В момента не можеш да си поръчаш това!");
if(healthp<100)
{
SetPlayerHealth(playerid,healthp+30);
}
GivePlayerCash(playerid,-10);
BizInfo[enteredbiz[playerid]][bEarnings]+=10;
SendClientMessage(playerid, 0xFFFF80FF, "Ти си купи меню Cluckin' Big Meal и това ти струваше $10!");ApplyAnimation(playerid, "FOOD", "EAT_Burger",4.1,0,1,1,0,0);
}
if(level==4)
{
new Float:healthp;
GetPlayerHealth(playerid,healthp);
if(healthp<100)
{if(healthp>60) return SendClientMessage(playerid, 0xB4B5B7FF, "В момента не можеш да си поръчаш това!");
SetPlayerHealth(playerid,healthp+40);
}
GivePlayerCash(playerid,-10);
BizInfo[enteredbiz[playerid]][bEarnings]+=10;
SendClientMessage(playerid, 0xFFFF80FF, "Ти си купи меню Salad Meal и това ти струваше $40!");ApplyAnimation(playerid, "FOOD", "EAT_Burger",4.1,0,1,1,0,0);
}
}
if(BizInfo[enteredbiz[playerid]][bOwner]==0)
{
SendClientMessage(playerid, 0xB4B5B7FF, "Бизнесът няма притежател и не можеш да пазаруваш от тук!");
return 1;
}
if(IsPlayerInRangeOfPoint(playerid, 4, 287.8558,-109.2027,1001.5156) || IsPlayerInRangeOfPoint(playerid, 4,-1395.4200,1245.6000,1039.8672)
|| IsPlayerInRangeOfPoint(playerid, 67, 1302.0842,0.8015,1001.0249))
{
if(BizInfo[enteredbiz[playerid]][bOwner]==0)
{
SendClientMessage(playerid, 0xB4B5B7FF, "Бизнесът няма притежател и не можеш да си купиш напитка от тук!");
return 1;
}
new stringguns[600];
format(stringguns,600,"9mm\nSilenced 9mm\nDesert Eagle\nShotgun\nSawnoff\nMP5\nUzi\nTec9\nAK-47\nM4\nCountry Rifle\nSniper Rifle");
ShowPlayerDialog(playerid, DIALOG_BUYGUNS, DIALOG_STYLE_LIST, "Ammunation:", stringguns, "Избери", "Излез");
}
if(IsPlayerInRangeOfPoint(playerid, 4, -30.9303,-28.3415,1003.5573) || IsPlayerInRangeOfPoint(playerid, 4, -23.3775,-55.2958,1003.5469))
{
if(level<1 || level>15)
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /buy [item number]");
SendClientMessage(playerid, 0x91FF8DFF, "Item numbers: 1: Dice $3, 2: Flowers $5, 3: Bat $15, 4: Cane $25, 5: Shovel $30, 6: Pool Cue $80,");
SendClientMessage(playerid, 0x91FF8DFF, "Item numbers: 7: Cigarettes (x20) $100, 8: Brass Knuckles $120, 9: Fuel Container $150, 10: Knife $150");
SendClientMessage(playerid, 0x91FF8DFF, "Item numbers: 11: Golf Club $155, 12: Paraschute $250, 13: Katana $250, 14: Radio $1500, 15: Briefcase: $5000");
return 1;
}
if(level==1)
{
if(PlayerInfo[playerid][pDice]==1) return SendClientMessage(playerid, 0xB4B5B7FF, "Ти вече имаш зарче!");
if(PlayerInfo[playerid][pLevel]<3) return SendClientMessage(playerid, 0xB4B5B7FF, "Трябва да си поне 3 левел за да си купиш зарче!");
if(PlayerInfo[playerid][pCash]<3) return SendClientMessage(playerid, 0xB4B5B7FF, "Трябва да имаш поне $3 за да си купиш зарче!");
PlayerInfo[playerid][pDice]=1;
SendClientMessage(playerid, 0x91FF8DFF, "Ти купи зарче и това ти струваше $3!");
GivePlayerCash(playerid,-3);
BizInfo[enteredbiz[playerid]][bEarnings]+=3;
}
if(level==2)
{
if(PlayerInfo[playerid][pCash]<100) return SendClientMessage(playerid, 0xB4B5B7FF, "Трябва да имаш поне $5 за да си купиш цветя!");
GivePlayerCash(playerid,-5);
BizInfo[enteredbiz[playerid]][bEarnings]+=5;
SendClientMessage(playerid, 0x91FF8DFF, "Ти купи цветя и това ти струваше $5!");
GivePlayerWeapon(playerid, 14, 1);
}
if(level==3)
{
if(PlayerInfo[playerid][pCash]<100) return SendClientMessage(playerid, 0xB4B5B7FF, "Трябва да имаш поне $15 за да си купиш бухалка!");
GivePlayerCash(playerid,-15);
BizInfo[enteredbiz[playerid]][bEarnings]+=15;
SendClientMessage(playerid, 0x91FF8DFF, "Ти купи бухалка и това ти струваше $15!");
GivePlayerWeapon(playerid, 5, 1);
}
if(level==4)
{
if(PlayerInfo[playerid][pCash]<100) return SendClientMessage(playerid, 0xB4B5B7FF, "Трябва да имаш поне $25 за да си купиш бастун!");
GivePlayerCash(playerid,-25);
BizInfo[enteredbiz[playerid]][bEarnings]+=25;
SendClientMessage(playerid, 0x91FF8DFF, "Ти купи бастун и това ти струваше $25!");
GivePlayerWeapon(playerid, 15, 1);
}
if(level==5)
{
if(PlayerInfo[playerid][pCash]<100) return SendClientMessage(playerid, 0xB4B5B7FF, "Трябва да имаш поне $30 за да си купиш лопата!");
GivePlayerCash(playerid,-30);
BizInfo[enteredbiz[playerid]][bEarnings]+=30;
SendClientMessage(playerid, 0x91FF8DFF, "Ти купи лопата и това ти струваше $30!");
GivePlayerWeapon(playerid, 6, 1);
}
if(level==6)
{
if(PlayerInfo[playerid][pCash]<100) return SendClientMessage(playerid, 0xB4B5B7FF, "Трябва да имаш поне $80 за да си купиш щека!");
GivePlayerCash(playerid,-80);
BizInfo[enteredbiz[playerid]][bEarnings]+=80;
SendClientMessage(playerid, 0x91FF8DFF, "Ти купи щека и това ти струваше $80!");
GivePlayerWeapon(playerid, 7, 1);
}
if(level==7)
{
if(PlayerInfo[playerid][pLevel]<3) return SendClientMessage(playerid, 0xB4B5B7FF, "Трябва да си поне 3 левел за да си купиш цигари!");
if(PlayerInfo[playerid][pCash]<100) return SendClientMessage(playerid, 0xB4B5B7FF, "Трябва да имаш поне $100 за да си купиш цигари!");
SendClientMessage(playerid, 0x91FF8DFF, "Ти купи цигари и това ти струваше $20!");
PlayerInfo[playerid][pCigarettes]+=20;
GivePlayerCash(playerid,-100);
BizInfo[enteredbiz[playerid]][bEarnings]+=100;
}
if(level==8)
{
if(PlayerInfo[playerid][pCash]<100) return SendClientMessage(playerid, 0xB4B5B7FF, "Трябва да имаш поне $120 за да си купиш бокс!");
GivePlayerCash(playerid,-120);
BizInfo[enteredbiz[playerid]][bEarnings]+=120;
SendClientMessage(playerid, 0x91FF8DFF, "Ти купи бокс и това ти струваше $120!");
GivePlayerWeapon(playerid, 1, 1);
}
if(level==9)
{
if(PlayerInfo[playerid][pFuelcase]==1) return SendClientMessage(playerid, 0xB4B5B7FF, "Ти вече имаш бутилка за гас!");
if(PlayerInfo[playerid][pLevel]<6) return SendClientMessage(playerid, 0xB4B5B7FF, "Трябва да си поне 6 левел за да си купиш бутилка за гас!");
if(PlayerInfo[playerid][pCash]<100) return SendClientMessage(playerid, 0xB4B5B7FF, "Трябва да имаш поне $100 за да си купиш бутилка за гас!");
SendClientMessage(playerid, 0x91FF8DFF, "Ти купи бутилка за гас и това ти струваше $150!");
PlayerInfo[playerid][pFuelcase]=0;
GivePlayerCash(playerid,-150);
BizInfo[enteredbiz[playerid]][bEarnings]+=150;
}
if(level==10)
{
if(PlayerInfo[playerid][pCash]<100) return SendClientMessage(playerid, 0xB4B5B7FF, "Трябва да имаш поне $150 за да си купиш нож!");
GivePlayerCash(playerid,-150);
BizInfo[enteredbiz[playerid]][bEarnings]+=150;
SendClientMessage(playerid, 0x91FF8DFF, "Ти купи нож и това ти струваше $150!");
GivePlayerWeapon(playerid, 4, 1);
}
if(level==11)
{
if(PlayerInfo[playerid][pCash]<100) return SendClientMessage(playerid, 0xB4B5B7FF, "Трябва да имаш поне $155 за да си купиш стик за голф!");
GivePlayerCash(playerid,-155);
BizInfo[enteredbiz[playerid]][bEarnings]+=155;
SendClientMessage(playerid, 0x91FF8DFF, "Ти купи стик за голф и това ти струваше $155!");
GivePlayerWeapon(playerid, 2, 1);
}
if(level==12)
{
if(PlayerInfo[playerid][pCash]<100) return SendClientMessage(playerid, 0xB4B5B7FF, "Трябва да имаш поне $250 за да си купиш парашут!");
GivePlayerCash(playerid,-250);
BizInfo[enteredbiz[playerid]][bEarnings]+=250;
SendClientMessage(playerid, 0x91FF8DFF, "Ти купи парашут и това ти струваше $250!");
GivePlayerWeapon(playerid, 46, 1);
}
if(level==13)
{
if(PlayerInfo[playerid][pCash]<100) return SendClientMessage(playerid, 0xB4B5B7FF, "Трябва да имаш поне $250 за да си купиш меч!");
GivePlayerCash(playerid,-250);
BizInfo[enteredbiz[playerid]][bEarnings]+=250;
SendClientMessage(playerid, 0x91FF8DFF, "Ти купи меч и това ти струваше $250!");
GivePlayerWeapon(playerid, 8, 1);
}
if(level==14)
{
if(PlayerInfo[playerid][pRadio]==1) return SendClientMessage(playerid, 0xB4B5B7FF, "Ти вече имаш радио!");
if(PlayerInfo[playerid][pLevel]<2) return SendClientMessage(playerid, 0xB4B5B7FF, "Трябва да си поне 2 левел за да си купиш радио!");
if(PlayerInfo[playerid][pCash]<1500) return SendClientMessage(playerid, 0xB4B5B7FF, "Трябва да имаш поне $1500 за да си купиш радио!");
SendClientMessage(playerid, 0x91FF8DFF, "Ти купи радио и това ти струваше $1500!");
PlayerInfo[playerid][pRadio]=1;
GivePlayerCash(playerid,-1500);
BizInfo[enteredbiz[playerid]][bEarnings]+=1500;
}
if(level==15)
{
if(PlayerInfo[playerid][pBriefcase]==1) return SendClientMessage(playerid, 0xB4B5B7FF, "Ти вече имаш куфарче!");
if(PlayerInfo[playerid][pLevel]<5) return SendClientMessage(playerid, 0xB4B5B7FF, "Трябва да си поне 5 левел за да си купиш куфарче!");
if(PlayerInfo[playerid][pCash]<5000) return SendClientMessage(playerid, 0xB4B5B7FF, "Трябва да имаш поне $5000 за да си купиш куфарче!");
SendClientMessage(playerid, 0x91FF8DFF, "Ти купи куфарче и това ти струваше $5000!");
PlayerInfo[playerid][pBriefcase]=1;
GivePlayerCash(playerid,-5000);
BizInfo[enteredbiz[playerid]][bEarnings]+=5000;
}
}
return 1;
}
if(strcmp(cmd,"/healme",true)==0)
{
if(playerInDuel[playerid]==1)return SendClientMessage(playerid, COLOR_GRAD1,"Ти си в дуел и не можеш да ползваш тази команда!");
//if(inevent[playerid]==1) return SendClientMessage(playerid,0xB4B5B7FF,"Не можеш да използваш тази команда, докато си в евент!");
if(inevent[playerid]== 1 && dhealme==0) return SendClientMessage(playerid, COLOR_GRAD1,"Командата /healme е забранена в евента!");
if(PlayerInfo[playerid][pVip] >= 3)
{
if(PlayerInfo[playerid][pHealT] <= 0)
{
SetPlayerHealth(playerid, 100);
SetPlayerArmour(playerid, 100);
SendClientMessage(playerid,0x008000FF,"Ти зареди твоята кръв и жилетка на 100!");
PlayerInfo[playerid][pHealT] = 6*60;
}
else
{
SendClientMessage(playerid,COLOR_GRAD1,"Не е изминало нужното време от последното използване на командата!");
}
}
else
{
SendClientMessage(playerid, 0xB4B5B7FF, "Нямаш достатъчно VIP права за да ползваш командата!");
}
return 1;
}
if(strcmp(cmd, "/dice", true) == 0)
{
new dice1 = randomex(1, 7);
if (PlayerInfo[playerid][pDice] == 1)
{
new zarstring[256];
format(zarstring, 256, "%s метна зарче и се падна числото %d", pname[playerid], dice1);
ProxDetector(15.0, playerid, zarstring, 0xFFFFFFFF,0xFFFFFFFF,0xFFFFFFFF,0xFFFFFFFF,0xFFFFFFFF);
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш зарче за хвърляне!");
}
return 1;
}
if(strcmp(cmd, "/heal", true) == 0)
{
if(!IsPlayerInRangeOfPoint(playerid, 67, 1302.0842,0.8015,1001.0249) && !IsPlayerInRangeOfPoint(playerid, 4, 287.8558,-109.2027,1001.5156)
&& !IsPlayerInRangeOfPoint(playerid, 4, -1395.4200,1245.6000,1039.8672))
{
SendClientMessage(playerid, 0xB4B5B7FF, "Трябва да си в бизнес за оръжия или DM за да използваш тази команда!");
return 1;
}
if(PlayerInfo[playerid][pCash] < 100)
{
SendClientMessage(playerid, 0xB4B5B7FF, "Трябва да имаш поне $100 за да си купиш жилетка!");
return 1;
}
if(BizInfo[enteredbiz[playerid]][bOwner]==0)
{
SendClientMessage(playerid, 0xB4B5B7FF, "Бизнесът няма притежател и не можеш да си купиш жилетка от тук!");
return 1;
}
new Float:armour;
GetPlayerArmour(playerid, armour);
if(armour==100) return SendClientMessage(playerid, 0xB4B5B7FF, "Ти вече имаш 100 процента жилетка!");
SetPlayerArmour(playerid,100);
//SetPlayerHealth(playerid,100);
GivePlayerCash(playerid,-100);
BizInfo[enteredbiz[playerid]][bEarnings]+=100;
return 1;
}
if(strcmp(cmd, "/advert", true) == 0)
{
if(PlayerInfo[playerid][pVip]<2 && freevip==0)
{
SendClientMessage(playerid, 0xB4B5B7FF, "Нямаш достатъчно VIP права за да ползваш тази команда!");
return 1;
}
if(!IsPlayerInRangeOfPoint(playerid, 4, 1720.5767,-1671.2698,20.2241) )
{
SendClientMessage(playerid, 0xB4B5B7FF, "Трябва да си в Artium за да пуснеш обява!");
return 1;
}
if(PlayerInfo[playerid][pCash] < 500)
{
SendClientMessage(playerid, 0xB4B5B7FF, "Трябва да имаш поне $500!");
return 1;
}
if(PlayerInfo[playerid][pAdvertTime]>0)
{
SendClientMessage(playerid, 0xB4B5B7FF, "Все още не можеш да пускаш обяви!");
return 1;
}
if(BizInfo[enteredbiz[playerid]][bOwner]==0)
{
SendClientMessage(playerid, 0xB4B5B7FF, "Бизнесът няма притежател и не можеш да пуснеш обява от тук!");
return 1;
}
new length = strlen(cmdtext);
while ((idx < length) && (cmdtext[idx] <= ' '))
{
idx++;
}
new offset = idx;
new result[256];
while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
{
result[idx - offset] = cmdtext[idx];
idx++;
}
result[idx - offset] = EOS;
if(!strlen(result))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /advert [text]");
SendClientMessage(playerid, 0xFFFFFFFF, "Цена: $500");
return 1;
}
GivePlayerCash(playerid,-500);
new advertstring[700];
format(advertstring,700,"Advert From %s(%d): %s",pname[playerid],playerid,result);
SendClientMessageToAll(0xFAF305FF,advertstring);
PlayerInfo[playerid][pAdvertTime]=30*60;
BizInfo[enteredbiz[playerid]][bEarnings]+=500;
return 1;
}
if(strcmp(cmd, "/listguns", true) == 0)
{
if (PlayerInfo[playerid][pVip]==0 || freevip==1)
{
SendClientMessage(playerid, 0xB4B5B7FF, "Нямаш достатъчно VIP права за да ползваш тази команда!");
return 1;
}
tmp = strtok(cmdtext,idx);
if (!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /listguns [playerid]");
return 1;
}
new giveplayerid = ReturnUser(tmp);
if (giveplayerid == INVALID_PLAYER_ID)
{
SendClientMessage(playerid, 0xB4B5B7FF, "Посоченото ID не е в сървъра!");
return 1;
}
new sweapon, sammo, gunname[100]; new nqmaorujiq=0;
new giveplayer[MAX_PLAYER_NAME]; GetPlayerName(giveplayerid,  giveplayer, sizeof(giveplayer));
format(string256, 256, "*** Оръжията на %s ***", pname[giveplayerid]);
SendClientMessage(playerid, 0xFFFFFFFF, string256);
for (new i=0; i<12; i++)
{
GetPlayerWeaponData(giveplayerid, i, sweapon, sammo);
GetWeaponName(sweapon, gunname, sizeof(gunname));
if(sweapon != 0)
{
format(string256, 256, "%s (%d)", gunname, sammo);
SendClientMessage(playerid, 0xFFFF00FF, string256);
nqmaorujiq+=1;
}
}
if(nqmaorujiq ==0)
{
format(string256, 256, "%s няма оръжия в себе си!", pname[giveplayerid]);
SendClientMessage(playerid, 0xFFFFFFFF, string256);
}
return 1;
}
if(strcmp(cmd, "/isafk", true) == 0)
{
if (PlayerInfo[playerid][pVip]>0 || freevip==1)
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /isafk [playerid]");
return 1;
}
para1[playerid] = ReturnUser(tmp);
tmp = strtok(cmdtext, idx);
if(para1[playerid] != INVALID_PLAYER_ID)
{
if(PlayerInfo[para1[playerid]][pAFK]==0)
{
SendClientMessage(playerid,0xD6F34AFF,"Този играч не е в AFK режим!");
}
if(PlayerInfo[para1[playerid]][pAFK]<60)
{
format(string256, 256, "Този играч е в AFK режим от %d секунди !", PlayerInfo[para1[playerid]][pAFK]);
SendClientMessage(playerid, 0xD6F34AFF, string256);
}
if(PlayerInfo[para1[playerid]][pAFK]>=60)
{
format(string256, 256, "Този играч е в AFK режим от %d минути !", PlayerInfo[para1[playerid]][pAFK]/60);
SendClientMessage(playerid, 0xD6F34AFF, string256);
}
}
else
{
SendClientMessage(playerid,0xB4B5B7FF,"Посоченото ID не е в сървъра!");
}
}
else
{
SendClientMessage(playerid, 0xB4B5B7FF, "Нямаш достатъчно VIP права за да ползваш командата!");
}
return 1;
}
if(strcmp(cmd, "/isadmin", true) == 0)
{
if (PlayerInfo[playerid][pAdmin] >3)
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /isadmin [playerid]");
return 1;
}
para1[playerid] = ReturnUser(tmp);
tmp = strtok(cmdtext, idx);
if(para1[playerid] != INVALID_PLAYER_ID)
{
if(PlayerInfo[para1[playerid]][pAdmin]==0 && PlayerInfo[para1[playerid]][pTest]==0)
{
return SendClientMessage(playerid,0xFFFFFFFF,"Този играч няма администраторски права в сървъра!");
}
if(PlayerInfo[para1[playerid]][pAdmin]>0 || PlayerInfo[para1[playerid]][pTest]==1)
{
return SendClientMessage(playerid,0xFFFFFFFF,"Този играч има администраторски права в сървъра!");
}
}
else
{
SendClientMessage(playerid,0xB4B5B7FF,"Посоченото ID не е в сървъра!");
}
}
else
{
SendClientMessage(playerid, 0xB4B5B7FF, "Нямаш права за да ползваш командата!");
}
return 1;
}
if(strcmp(cmd, "/isevent", true) == 0)
{
if (PlayerInfo[playerid][pAdmin] >3)
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /isevent [playerid]");
return 1;
}
para1[playerid] = ReturnUser(tmp);
tmp = strtok(cmdtext, idx);
if(para1[playerid] != INVALID_PLAYER_ID)
{
if(PlayerInfo[para1[playerid]][pEvent]==0)
{
return SendClientMessage(playerid,0xFFFFFFFF,"Този играч няма Event Admin права в сървъра!");
}
if(PlayerInfo[para1[playerid]][pEvent]>0)
{
return SendClientMessage(playerid,0xFFFFFFFF,"Този играч има Event Admin права в сървъра!");
}
}
else
{
SendClientMessage(playerid,0xB4B5B7FF,"Посоченото ID не е в сървъра!");
}
}
else
{
SendClientMessage(playerid, 0xB4B5B7FF, "Нямаш права за да ползваш командата!");
}
return 1;
}
if(strcmp(cmd, "/cbccheck", true) == 0)
{
if (PlayerInfo[playerid][pAdmin] >3)
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /cbccheck [playerid]");
return 1;
}
para1[playerid] = ReturnUser(tmp);
tmp = strtok(cmdtext, idx);
if(para1[playerid] != INVALID_PLAYER_ID)
{
new stringa[256];
if(cbchat[para1[playerid]]>0)
{
format(stringa,256,"%s - %d CB CHAT",pname[para1[playerid]],cbchat[para1[playerid]]);
SendClientMessage(playerid,0xFF9933FF,stringa);
}
else
{
SendClientMessage(playerid,COLOR_RED,"Този играч не е в CB CHAT!");
}
}
else
{
SendClientMessage(playerid,0xB4B5B7FF,"Посоченото ID не е в сървъра!");
}
}
else
{
SendClientMessage(playerid, 0xB4B5B7FF, "Нямаш права за да ползваш командата!");
}
return 1;
}
if(strcmp(cmd, "/islevel", true) == 0)
{
if (PlayerInfo[playerid][pAdmin] >3)
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /islevel [playerid]");
return 1;
}
para1[playerid] = ReturnUser(tmp);
tmp = strtok(cmdtext, idx);
if(para1[playerid] != INVALID_PLAYER_ID)
{
new stringa[256];
format(stringa,256,"%s - %d Level",pname[para1[playerid]],PlayerInfo[para1[playerid]][pLevel]);
SendClientMessage(playerid,0xFFFFFFFF,stringa);
}
else
{
SendClientMessage(playerid,0xB4B5B7FF,"Посоченото ID не е в сървъра!");
}
}
else
{
SendClientMessage(playerid, 0xB4B5B7FF, "Нямаш права за да ползваш командата!");
}
return 1;
}
if(strcmp(cmd, "/ismanage", true) == 0)
{
if (PlayerInfo[playerid][pAdmin] >3)
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /ismanage [playerid]");
return 1;
}
para1[playerid] = ReturnUser(tmp);
tmp = strtok(cmdtext, idx);
if(para1[playerid] != INVALID_PLAYER_ID)
{
if(PlayerInfo[para1[playerid]][pManage]==0)
{
return SendClientMessage(playerid,0xFFFFFFFF,"Този играч няма Manage Admin права в сървъра!");
}
if(PlayerInfo[para1[playerid]][pManage]>0)
{
return SendClientMessage(playerid,0xFFFFFFFF,"Този играч има Manage Admin права в сървъра!");
}
}
else
{
SendClientMessage(playerid,0xB4B5B7FF,"Посоченото ID не е в сървъра!");
}
}
else
{
SendClientMessage(playerid, 0xB4B5B7FF, "Нямаш права за да ползваш командата!");
}
return 1;
}
if(strcmp(cmd, "/isvip", true) == 0)
{
if (PlayerInfo[playerid][pAdmin] >3)
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /isvip [playerid]");
return 1;
}
para1[playerid] = ReturnUser(tmp);
tmp = strtok(cmdtext, idx);
if(para1[playerid] != INVALID_PLAYER_ID)
{
if(PlayerInfo[para1[playerid]][pVip]==0)
{
return SendClientMessage(playerid,0xFFFFFFFF,"Този играч няма VIP в сървъра!");
}
if(PlayerInfo[para1[playerid]][pVip]>0)
{
return SendClientMessage(playerid,0xFFFFFFFF,"Този играч има VIP в сървъра!");
}
}
else
{
SendClientMessage(playerid,0xB4B5B7FF,"Посоченото ID не е в сървъра!");
}
}
else
{
SendClientMessage(playerid, 0xB4B5B7FF, "Нямаш права за да ползваш командата!");
}
return 1;
}
if(strcmp(cmd, "/isleader", true) == 0)
{
if (PlayerInfo[playerid][pAdmin] >3)
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /isleader [playerid]");
return 1;
}
para1[playerid] = ReturnUser(tmp);
tmp = strtok(cmdtext, idx);
if(para1[playerid] != INVALID_PLAYER_ID)
{
if(PlayerInfo[para1[playerid]][pRank]>=6)
{
return SendClientMessage(playerid,0xFFFFFFFF,"Този играч има лидер в сървъра!");
}
if(PlayerInfo[para1[playerid]][pRank]<6)
{
return SendClientMessage(playerid,0xFFFFFFFF,"Този играч няма лидер в сървъра!");
}
}
else
{
SendClientMessage(playerid,0xB4B5B7FF,"Посоченото ID не е в сървъра!");
}
}
else
{
SendClientMessage(playerid, 0xB4B5B7FF, "Нямаш права за да ползваш командата!");
}
return 1;
}
if(strcmp(cmd, "/ismuted", true) == 0)
{
if (PlayerInfo[playerid][pAdmin] >0)
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /ismuted [playerid]");
return 1;
}
para1[playerid] = ReturnUser(tmp);
tmp = strtok(cmdtext, idx);
if(para1[playerid] != INVALID_PLAYER_ID)
{
if(PlayerInfo[para1[playerid]][pMuted] == 0 && PlayerInfo[para1[playerid]][pADMINMute]==0)
{
return SendClientMessage(playerid,0xE60000FF,"Този играч не е заглушен!");
}
if(PlayerInfo[para1[playerid]][pADMINMute] ==1)
{
format(string256, 256, "Този играч е заглушен за винаги с причина - %s!",PlayerInfo[para1[playerid]][pReasonMute]);
return SendClientMessage(playerid, 0xE60000FF, string256);
}
if(PlayerInfo[para1[playerid]][pMuted] > 0)
{
new mutereason[46];
if(PlayerInfo[para1[playerid]][pMuteReason] == 2) { mutereason = "Псуване/Обиждане"; }
else if(PlayerInfo[para1[playerid]][pMuteReason] == 4) { mutereason = "Оплакване във форума"; }
else if(PlayerInfo[para1[playerid]][pMuteReason] == 1) { mutereason = "Спам"; }
else if(PlayerInfo[para1[playerid]][pMuteReason] == 3) { mutereason = "Спам/Псуване/Обиждане"; }
else if(PlayerInfo[para1[playerid]][pMuteReason] == 5) { mutereason = "Грешно използване на лидерския чат"; }
else if(PlayerInfo[para1[playerid]][pMuteReason] == 6) { mutereason = "Mute all"; }
format(string256, 256, "Този играч е заглушен и причината е - %s!", mutereason);
SendClientMessage(playerid, 0xE60000FF, string256);
}
}
else
{
SendClientMessage(playerid,0xB4B5B7FF,"Посоченото ID не е в сървъра!");
}
}
else
{
SendClientMessage(playerid, 0xB4B5B7FF, "Нямаш права за да ползваш командата!");
}
return 1;
}
/*
if(strcmp(cmd, "/isbanned", true) == 0)
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /isbanned [playerid]");
return 1;
}
para1[playerid] = ReturnUser(tmp);
tmp = strtok(cmdtext, idx);
if (PlayerInfo[playerid][pAdmin] >0)
{
if(para1[playerid] != INVALID_PLAYER_ID)
{
if(PlayerInfo[para1[playerid]][pMuted] == 0)
{
SendClientMessage(playerid, 0xB4B5B7FF, "Този играч не е заглушен!");
}
if(PlayerInfo[para1[playerid]][pMuted] > 0)
{
}
else
{
SendClientMessage(playerid,0xE60000FF,"Този играч не е заглушен !");
}
}
else
{
SendClientMessage(playerid,0xB4B5B7FF,"Посоченото ID не е в сървъра!");
}
}
else
{
SendClientMessage(playerid, 0xB4B5B7FF, "Нямаш права за да ползваш командата!");
}
return 1;
}
*/
if(strcmp(cmd, "/asay", true)==0)
{
if (PlayerInfo[playerid][pAdmin]>1)
{
/*
if(PlayerInfo[playerid][pAMuted] != 0)
{
SendClientMessage(playerid,0xB4B5B7FF, "Ти си заглушен във ADMIN CHAT !");
return 1;
}
*/
new length=strlen(cmdtext);
while ((idx<length) && (cmdtext[idx] <= ' '))
{
idx++;
}
new offset=idx;
new result[256];
while ((idx<length) && ((idx - offset)<(sizeof(result) - 1)))
{
result[idx - offset]=cmdtext[idx];
idx++;
}
result[idx - offset]=EOS;
if(!strlen(result))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /asay [text]");
return 1;
}
format(string256, 256, "Admin %s: %s", pname[playerid], result);
SendClientMessageToAll(0xFF33FFFF, string256);
}
else
{
SendClientMessage(playerid, 0xB4B5B7FF, "Нямаш права за да ползваш командата!");
}
return 1;
}
if(strcmp(cmd, "/back", true) == 0)
{
if (PlayerInfo[playerid][pAFK]==0)
{
SendClientMessage(playerid, 0xB4B5B7FF, "Ти не си в AFK режим!");
return 1;
}
if(PlayerInfo[playerid][pAFKBack]>0)
{
SendClientMessage(playerid, 0xB4B5B7FF, "Не можеш да се върнеш 3 минути след като си написал /afk!");
return 1;
}
SetPlayerHealth(playerid,0);
format(string256,256, "AFK: %s се върна в играта!", pname[playerid]);
SendClientMessageToAll(0xD6F34AFF, string256);
PlayerInfo[playerid][pAFK] = 0;
return 1;
}
if(strcmp(cmd, "/afk", true) == 0)
{
if (PlayerInfo[playerid][pAFK]>0)
{
SendClientMessage(playerid, 0xB4B5B7FF, "Ти вече си AFK!");
return 1;
}
if(playerInDeathmatch[playerid]==true) return SendClientMessage(playerid,0xB4B5B7FF,"В момента не можеш да използваш тази команда!");
if(playerInStreetRace[playerid]==true) return SendClientMessage(playerid,0xB4B5B7FF,"В момента не можеш да използваш тази команда!");
if(PlayerInfo[playerid][pADuty]==1) return SendClientMessage(playerid,0xB4B5B7FF,"Не можеш да влезеш в AFK в момента!");
if(PlayerInfo[playerid][pWanted]>0) return SendClientMessage(playerid,0xB4B5B7FF,"Не можеш да влезеш в AFK в момента!");
if(cmn1[playerid]>0)  return SendClientMessage(playerid,0xB4B5B7FF,"Не можеш да влезеш в AFK в момента1!");
if(playerInDuel[playerid]==1) return SendClientMessage(playerid,0xB4B5B7FF,"Не можеш да влезеш в AFK в момента!");
if(inevent[playerid]==1) return SendClientMessage(playerid,0xB4B5B7FF,"Не можеш да влезеш в AFK в момента!");
if(PlayerInfo[playerid][pJail] != 0) return SendClientMessage(playerid, 0xB4B5B7FF, "Не можеш да влезеш в AFK в момента!");
if(PlayerInfo[playerid][pPJail] != 0) return SendClientMessage(playerid, 0xB4B5B7FF, "Не можеш да влезеш в AFK в момента!");
if(playerInDMON[playerid]==1) return SendClientMessage(playerid,0xB4B5B7FF,"Не можеш да влезеш в AFK в момента!");
ResetPlayerWeapons(playerid);
SetPlayerInterior(playerid,15);
SetPlayerColor(playerid, 0xD6F34AFF);
SetPlayerPos(playerid,2215.454833,-1147.475585,1025.796875);
format(string256,256, "AFK: %s излезе в почивка!", pname[playerid]);
SendClientMessageToAll(0xD6F34AFF, string256);
SendClientMessage(playerid, 0xD6F34AFF,"AFK: Използвай /back като се върнеш!");
PlayerInfo[playerid][pAFK] = 1;
PlayerInfo[playerid][pAFKBack]=3*60;
SetPlayerVirtualWorld(playerid, playerid);
return 1;
}
if(strcmp(cmd, "/id", true)==0)
{
new length=strlen(cmdtext);
while ((idx<length) && (cmdtext[idx] <= ' '))
{
idx++;
}
new offset=idx;
new result[256];
while ((idx<length) && ((idx - offset)<(sizeof(result) - 1)))
{
result[idx - offset]=cmdtext[idx];
idx++;
}
result[idx - offset]=EOS;
if(!strlen(result))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /id [част от никнейма или целия]");
return 1;
}
new foundids;
//F97804
new nname[MAX_PLAYER_NAME];
format(string256, 256, "Търсене за: {FF0000}%s", result);
SendClientMessage(playerid, 0xFFFFFFFF, string256);
for(new i = 0; i < MAX_PLAYERS; i++)
{
if(IsPlayerConnected(i))
{
GetPlayerName(i, nname, sizeof(nname));
if(strfind(nname, result, true) != -1)
{
foundids+=1;
if(foundids>0)
{
format(string256, 256, "%d. %s (ID:%d)", foundids,pname[i],i);
SendClientMessage(playerid, 0xFFFF00FF, string256);
//return 1;
}
}
}
}
if(foundids==0)
{
format(string256, 256, "Няма открити играчи с този никнейм в сървъра!");
SendClientMessage(playerid, 0xE60000FF, string256);
}
return 1;
}
if(strcmp(cmd, "/lc", true)==0)
{
new length=strlen(cmdtext);
while ((idx<length) && (cmdtext[idx] <= ' '))
{
idx++;
}
new offset=idx;
new result[256];
while ((idx<length) && ((idx - offset)<(sizeof(result) - 1)))
{
result[idx - offset]=cmdtext[idx];
idx++;
}
result[idx - offset]=EOS;
if(!strlen(result))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /lc [text]");
return 1;
}
if (PlayerInfo[playerid][pTeam] >= 1 && PlayerInfo[playerid][pRank]==6)
{
if(PlayerInfo[playerid][pMuted] != 0)
{
SendClientMessage(playerid,0xB4B5B7FF, "Ти си заглушен в чата!");
return 1;
}
new ranktext[256];
switch(PlayerInfo[playerid][pRank])
{
case 1: format(ranktext, 256, "%s", TeamInfo[PlayerInfo[playerid][pTeam]][tRank1]);
case 2: format(ranktext, 256, "%s", TeamInfo[PlayerInfo[playerid][pTeam]][tRank2]);
case 3: format(ranktext, 256, "%s", TeamInfo[PlayerInfo[playerid][pTeam]][tRank3]);
case 4: format(ranktext, 256, "%s", TeamInfo[PlayerInfo[playerid][pTeam]][tRank4]);
case 5: format(ranktext, 256, "%s", TeamInfo[PlayerInfo[playerid][pTeam]][tRank5]);
case 6: format(ranktext, 256, "%s", TeamInfo[PlayerInfo[playerid][pTeam]][tRank6]);
}
format(string256, 256, "[LEADER CHAT] %s на [%s]: %s",pname[playerid],TeamInfo[PlayerInfo[playerid][pTeam]][tName],result);
for(new i=0; i<MAX_PLAYERS; i++)
{
if(PlayerInfo[i][pTeam] == PlayerInfo[playerid][pTeam] && PlayerInfo[i][pRank]==6 && PlayerInfo[i][pTogLeader]==0)
{
SendClientMessage(i, 0xD9CCC8FF, string256);
}
}
}
else
{
SendClientMessage(playerid, 0xB4B5B7FF, "Нямаш права за да ползваш командата!");
}
return 1;
}
if(strcmp(cmd, "/f", true)==0||strcmp(cmd, "/faction", true)==0)
{
new length=strlen(cmdtext);
while ((idx<length) && (cmdtext[idx] <= ' '))
{
idx++;
}
new offset=idx;
new result[256];
while ((idx<length) && ((idx - offset)<(sizeof(result) - 1)))
{
result[idx - offset]=cmdtext[idx];
idx++;
}
result[idx - offset]=EOS;
if(!strlen(result))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: (/f)action [text]");
return 1;
}
if (PlayerInfo[playerid][pTeam] >= 1)
{
if(PlayerInfo[playerid][pFMuted] != 0)
{
SendClientMessage(playerid,0xB4B5B7FF, "Ти си заглушен във FACTION CHAT!");
return 1;
}
if(TeamInfo[PlayerInfo[playerid][pTeam]][tMute] == 1 && PlayerInfo[playerid][pRank]!=6)
{
SendClientMessage(playerid,0xB4B5B7FF, "Ти си заглушен във FACTION CHAT!");
return 1;
}
new ranktext[256];
switch(PlayerInfo[playerid][pRank])
{
case 1: format(ranktext, 256, "%s", TeamInfo[PlayerInfo[playerid][pTeam]][tRank1]);
case 2: format(ranktext, 256, "%s", TeamInfo[PlayerInfo[playerid][pTeam]][tRank2]);
case 3: format(ranktext, 256, "%s", TeamInfo[PlayerInfo[playerid][pTeam]][tRank3]);
case 4: format(ranktext, 256, "%s", TeamInfo[PlayerInfo[playerid][pTeam]][tRank4]);
case 5: format(ranktext, 256, "%s", TeamInfo[PlayerInfo[playerid][pTeam]][tRank5]);
case 6: format(ranktext, 256, "%s", TeamInfo[PlayerInfo[playerid][pTeam]][tRank6]);
}
format(string256, 256, "[FACTION CHAT] %s(%d) %s(ID:%d): %s",ranktext,PlayerInfo[playerid][pRank], pname[playerid], playerid, result);
for(new i=0; i<MAX_PLAYERS; i++)
{
if(fignore[i][playerid]!=i)
{
if(PlayerInfo[i][pTeam] == PlayerInfo[playerid][pTeam] && PlayerInfo[i][pTogFaction]==0)
{
if(PlayerInfo[playerid][pRank]==6)
{
SendClientMessage(i, 0x40BF00FF, string256);
}
else
{
if(PlayerInfo[playerid][pTeam] == 14 && PlayerInfo[i][pTogFaction]==0 || PlayerInfo[playerid][pTeam] ==13 && PlayerInfo[i][pTogFaction]==0)
{
return SendClientMessage(i, 0x8D8DFFFF, string256);
}
SendClientMessage(i, 0x33CCFFFF, string256);
}
}
}
}
}
else
{
SendClientMessage(playerid, 0xB4B5B7FF, "Ти не си в банда/мафия!");
}
return 1;
}
if(strcmp(cmd, "/a", true)==0||strcmp(cmd, "/adminchat", true)==0)
{
if (PlayerInfo[playerid][pAdmin] >= 1)
{
if(PlayerInfo[playerid][pAMuted] != 0)
{
SendClientMessage(playerid,0xB4B5B7FF, "Ти си заглушен във ADMIN CHAT!");
return 1;
}
if(PlayerInfo[playerid][pAHide]==1)
{
SendClientMessage(playerid,0xB4B5B7FF, "Ти си забранил да виждаш своя ADMIN CHAT!");
return 1;
}
new length=strlen(cmdtext);
while ((idx<length) && (cmdtext[idx] <= ' '))
{
idx++;
}
new offset=idx;
new result[256];
while ((idx<length) && ((idx - offset)<(sizeof(result) - 1)))
{
result[idx - offset]=cmdtext[idx];
idx++;
}
result[idx - offset]=EOS;
if(!strlen(result))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: (/a)dminchat [text]");
return 1;
}
format(string256, 256, "%s %s(%d): %s",adminprefix[playerid], pname[playerid], playerid, result);
for(new i=0; i<MAX_PLAYERS; i++)
{
if(PlayerInfo[i][pAdmin] >= 1 && PlayerInfo[i][pAHide]==0)
{
SendClientMessage(i, 0xE60000FF, string256);
}
}
}
else
{
SendClientMessage(playerid, 0xB4B5B7FF, "Нямаш права за да ползваш командата!");
}
return 1;
}
if(strcmp(cmd, "/ta", true)==0)
{
if (PlayerInfo[playerid][pTest] >= 1 || PlayerInfo[playerid][pReadTA]==1)
{
if(PlayerInfo[playerid][pAMuted] != 0)
{
SendClientMessage(playerid,0xB4B5B7FF, "Ти си заглушен във ADMIN CHAT!");
return 1;
}
new length=strlen(cmdtext);
while ((idx<length) && (cmdtext[idx] <= ' '))
{
idx++;
}
new offset=idx;
new result[256];
while ((idx<length) && ((idx - offset)<(sizeof(result) - 1)))
{
result[idx - offset]=cmdtext[idx];
idx++;
}
result[idx - offset]=EOS;
if(!strlen(result))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /ta [text]");
return 1;
}
format(string256, 256, "Test Admin %s(%d): %s", pname[playerid], playerid, result);
for(new i=0; i<MAX_PLAYERS; i++)
{
if(PlayerInfo[i][pTest] >= 1 || PlayerInfo[i][pReadTA]==1)
{
SendClientMessage(i, 0xE60000FF, string256);
}
}
}
else
{
SendClientMessage(playerid, 0xB4B5B7FF, "Нямаш права за да ползваш командата!");
}
return 1;
}
if(strcmp(cmd, "/kill", true) == 0)
{
if (PlayerInfo[playerid][pVip]>1 || freevip==1)
{
if(cmn1[playerid]>0) { return SendClientMessage(playerid,0xB4B5B7FF,"Не можеш да се самоубиеш, докато си CMN1!"); }
if(playerInDuel[playerid]==1){ return SendClientMessage(playerid,0xB4B5B7FF,"Не можеш да се самоубиеш, докато си в дуел!");}
if(inevent[playerid]==1) return SendClientMessage(playerid,0xB4B5B7FF,"Не можеш да използваш тази команда, докато си в евент!");
if(playerInDeathmatch[playerid]==true) return SendClientMessage(playerid,0xB4B5B7FF,"В момента не можеш да използваш тази команда!");
if(playerInStreetRace[playerid]==true) return SendClientMessage(playerid,0xB4B5B7FF,"В момента не можеш да използваш тази команда!");
if(playerInDMON[playerid]==1){ return SendClientMessage(playerid,0xB4B5B7FF,"Не можеш да се самоубиеш, докато си в DMON!");}
SetPlayerHealth(playerid, 0);
SendClientMessage(playerid, 0xFFFF00FF , "Ти си луд, защото се самоуби!");
}
else
{
SendClientMessage(playerid,0xB4B5B7FF,"Нямаш достатъчно VIP права за да ползваш командата!");
}
return 1;
}
if(strcmp(cmd, "/tires", true) == 0)
{
if (PlayerInfo[playerid][pVip] < 6 && freevip==0)
{
SendClientMessage(playerid, 0xB4B5B7FF, "Нямаш достатъчно VIP права за да ползваш командата!");
return 1;
}
if(inevent[playerid]== 1 && efix==0) return SendClientMessage(playerid, COLOR_GRAD1,"Командата /tires е забранена в евента!");
if(PlayerInfo[playerid][pFixT] == 0)
{
if(IsPlayerInAnyVehicle(playerid))
{
new Panels, Doors, Lights, Tires;
new vehicleid=GetPlayerVehicleID(playerid);
GetVehicleDamageStatus(vehicleid, Panels, Doors, Lights, Tires);
UpdateVehicleDamageStatus(vehicleid,Panels, Doors, Lights, 0);
//UpdateVehicleDamageStatus(vehicleid, Panels, Doors, Lights, (Tires | 0b00));
PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
PlayerInfo[playerid][pFixT] = 30*60;
SendClientMessage(playerid, 0xFFFFFFFF, "* Вие поправихте гумите на вашето превозно средство *");
}
else
{
SendClientMessage(playerid,0xB4B5B7FF,"Ти не си в превозно средство!");
}
}
else
{
SendClientMessage(playerid,0xB4B5B7FF,"Не е изминало нужното време от последното използване на командата!");
}
return 1;
}
if(strcmp(cmd, "/fix", true) == 0)
{
if (PlayerInfo[playerid][pVip] < 2 && freevip==0)
{
SendClientMessage(playerid, 0xB4B5B7FF, "Нямаш достатъчно VIP права за да ползваш командата!");
return 1;
}
if(inevent[playerid]== 1 && efix==0) return SendClientMessage(playerid, COLOR_GRAD1,"Командата /fix е забранена в евента!");
if(PlayerInfo[playerid][pFixT] == 0)
{
if(IsPlayerInAnyVehicle(playerid))
{
SetVehicleHealth(GetPlayerVehicleID(playerid), 1000.0);
RepairVehicle(GetPlayerVehicleID(playerid));
PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
PlayerInfo[playerid][pFixT] = 30*60;
}
else
{
SendClientMessage(playerid,0xB4B5B7FF,"Ти не си в превозно средство!");
}
}
else
{
SendClientMessage(playerid,0xB4B5B7FF,"Не е изминало нужното време от последното използване на командата!");
}
return 1;
}
if(strcmp(cmd, "/cc", true) == 0)
{
if (PlayerInfo[playerid][pVip] >= 2 || freevip==1)
{
if(!IsPlayerInAnyVehicle(playerid))
{
return SendClientMessage(playerid,0xB4B5B7FF,"Ти не си в превозно средство!");
}
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /cc [color1] [color2]");
return 1;
}
if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,0xB4B5B7FF,"Ти не си в превозно средство!");
new color1;
color1 = strval(tmp);
new color2;
tmp = strtok(cmdtext, idx);
color2 = strval(tmp);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /cc [color1] [color2]");
return 1;
}
ChangeVehicleColor(GetPlayerVehicleID(playerid), color1, color2);
SendClientMessage(playerid, 0xFFFF00FF, "* Ти смени цвета на колата си *");
}
else
{
SendClientMessage(playerid, 0xB4B5B7FF, "Нямаш достатъчно VIP права за да ползваш командата!");
}
return 1;
}
if(strcmp(cmd, "/pj", true) == 0)
{
if (PlayerInfo[playerid][pVip] >= 2 || freevip==1)
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /pj [0-5]");
return 1;
}
if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,0xB4B5B7FF,"Ти не си в превозно средство!");
new nomer;
tmp = strtok(cmdtext, idx);
nomer = strval(tmp);
ChangeVehiclePaintjob(GetPlayerVehicleID(playerid), nomer);
SendClientMessage(playerid, 0xFFFF00FF, "Ти пребоядиса твоята кола!");
}
else
{
SendClientMessage(playerid, 0xB4B5B7FF, "Нямаш достатъчно VIP права за да ползваш командата!");
}
return 1;
}
if(strcmp(cmd, "/para", true) == 0)
{
if (PlayerInfo[playerid][pVip]>2 || freevip==1)
{
GivePlayerWeapon(playerid, 46,1);
}
else
{
SendClientMessage(playerid, 0xB4B5B7FF,"Нямаш достатъчно VIP права за да ползваш командата!");
}
return 1;
}
if (strcmp(cmdtext, "/sound", true) == 0)
{
if(PlayerInfo[playerid][pVip] >= 2 || freevip==1)
{
tmp = strtok(cmdtext, idx);
new soundid = strval(tmp);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /sound [sound id]");
return 1;
}
SendClientMessage(playerid,0xFFFF00FF,"Ти си пусна звук!");
PlayerPlaySound(playerid, soundid, 0.0, 0.0, 0.0);
}
else
{
SendClientMessage(playerid,0xB4B5B7FF,"Нямаш достатъчно VIP права за да ползваш командата!");
}
return 1;
}
if(strcmp(cmd, "/credits", true) == 0)
{
new cmds[256];
new closeddialog=3500;
strins(cmds,"{FFFFFF}Модът е изработен изцяло от sTrIx (C) 2018-2022\n",strlen(cmds));
strins(cmds,"{008800}Екипът, който стой зад сървъра:\n\n\n",strlen(cmds));
strins(cmds,"{FF0000}1. sTrIx - програмист на сървъра (DEVELOPER)\n",strlen(cmds));
strins(cmds,"{FFFFFF}2.  - държи сървъра в онлайн състояние (HOSTER)\n",strlen(cmds));
strins(cmds,"{008800}3.  - помага на сървъра в неговото развитие (OWNER)\n\n",strlen(cmds));
strins(cmds,"{00FF00}---Надяваме се тук да си прекарате повече от чудесно---",strlen(cmds));
ShowPlayerDialog(playerid,closeddialog,DIALOG_STYLE_MSGBOX,"{00FF00}CREDITS",cmds,"Изход","");
return 1;
}
if(strcmp(cmd, "/bounties",true)==0)
{
new hitmans=0;
for(new i = 0; i < MAX_PLAYERS; i++)
{
if(hitmanprice[i] >= 1)
{
hitmans+=1;
}
}
format(string256,256,"Онлайн играчи със заложени цени на главите им(%d):",hitmans);
SendClientMessage(playerid, 0x40BF00FF,string256);
for(new i = 0; i < MAX_PLAYERS; i++)
{
if(hitmanprice[i] >= 1)
{
format(string256,256, "%s (ID: %d) - Цена: %d",pname[i],i,hitmanprice[i]);
SendClientMessage(playerid, 0xA4A400FF,string256);
}
}
if(hitmans==0)
{
SendClientMessage(playerid, 0xE60000FF,"Няма онлайн играчи със заложени цени за главите им!");
}
return 1;
}
if(strcmp(cmd, "/vipchat", true)==0)
{
if (PlayerInfo[playerid][pVip]>0 || freevip==1)
{
new length=strlen(cmdtext);
while ((idx<length) && (cmdtext[idx] <= ' '))
{
idx++;
}
new offset=idx;
new result[256];
while ((idx<length) && ((idx - offset)<(sizeof(result) - 1)))
{
result[idx - offset]=cmdtext[idx];
idx++;
}
result[idx - offset]=EOS;
if(!strlen(result))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /vipchat [text]");
return 1;
}
format(string256, 256, "[VIP CHAT] %s(ID:%d): %s", pname[playerid], playerid, result);
for(new i=0; i<MAX_PLAYERS; i++)
{
if(PlayerInfo[i][pVip]>0 || freevip==1)
{
SendClientMessage(i, 0xE65B00FF, string256);
}
}
}
else
{
SendClientMessage(playerid, 0xB4B5B7FF, "Нямаш достатъчно VIP права за да ползваш командата!");
}
return 1;
}
//
if(strcmp(cmd, "/gmx", true) == 0)
{
if (PlayerInfo[playerid][pAdmin]>1)
{
tmp = strtok(cmdtext, idx);
new minutesz;
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /gmx [minutes] [reason]");
return 1;
}
minutesz = strval(tmp);
new length = strlen(cmdtext);
while ((idx < length) && (cmdtext[idx] <= ' '))
{
idx++;
}
new offset = idx;
new result[256];
while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
{
result[idx - offset] = cmdtext[idx];
idx++;
}
result[idx - offset] = EOS;
if(!strlen(result))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /gmx [minutes] [reason]");
return 1;
}
if(minutesz < 1)
{
SendClientMessage(playerid, 0xB4B5B7FF, "Минутите трябва да са най-малко 1!");
return 1;
}
new string256z[256];
if(minutesz==1)
format(string256z,256,"ADMIN: [ВАЖНО] Сървърът ще се рестартира след 1 минута [Причина: %s]",result);
else
format(string256z,256,"ADMIN: [ВАЖНО] Сървърът ще се рестартира след %d минути [Причина: %s]",minutesz,result);
SendClientMessageToAll(COLOR_RED, string256z);
serverrestarttimer=minutesz*60;
for(new i; i<MAX_PLAYERS; i++)
{
TextDrawShowForPlayer(i, RESTART);
}
}
else
{
SendClientMessage(playerid, 0xB4B5B7FF, "Нямаш права за да ползваш командата!");
return 1;
}
return 1;
}
//
if(strcmp(cmd, "/cnnn", true) == 0)
{
if (PlayerInfo[playerid][pAdmin]>1)
{
tmp = strtok(cmdtext, idx);
new txtid;
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /cnnn [type 1-6] [text]");
return 1;
}
txtid = strval(tmp);
new length = strlen(cmdtext);
while ((idx < length) && (cmdtext[idx] <= ' '))
{
idx++;
}
new offset = idx;
new result[256];
while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
{
result[idx - offset] = cmdtext[idx];
idx++;
}
result[idx - offset] = EOS;
if(!strlen(result))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /cnnn [type 1-4] [text]");
return 1;
}
if(txtid == 2)
{
SendClientMessage(playerid, 0xB4B5B7FF, "Не можеш да използваш id 2!");
return 1;
}
if(txtid<1 || txtid>4) return SendClientMessage(playerid, 0xB4B5B7FF, "Типът трябва да е от 1 до 4!");
format(string256, 256, "~w~%s",result);
for(new i = 0; i < MAX_PLAYERS; i++)
{
GameTextForPlayer(i, string256, 5000, txtid);
}
}
else
{
SendClientMessage(playerid, 0xB4B5B7FF, "Нямаш права за да ползваш командата!");
return 1;
}
return 1;
}
if(strcmp(cmd, "/setskin", true) == 0)
{
if (PlayerInfo[playerid][pAdmin]>2)
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /setskin [playerid] [skin id]");
return 1;
}
new level;
para1[playerid] = ReturnUser(tmp);
tmp = strtok(cmdtext, idx);
level = strval(tmp);
if(strval(tmp) < 0)
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /setskin [playerid] [skin id]");
return 1;
}
if(para1[playerid] != INVALID_PLAYER_ID)
{
for(new i=0; i<MAX_PLAYERS; i++)
{
if(PlayerInfo[i][pAdmin] >= 1 && PlayerInfo[i][pAHide]==0)
{
format(string115, 115, "* %s смени ID Skin на %s *", pname[playerid],pname[para1[playerid]]);
SendClientMessage(i,0xFFFFFFFF, string115);
}
}
format(string115, 115, "* %s смени твоя ID Skin на %d *",pname[playerid],level);
SendClientMessage(para1[playerid], 0xFFFF00FF, string115);
SetPlayerSkin(para1[playerid], level);
}
else
{
SendClientMessage(playerid,0xB4B5B7FF,"Посоченото ID не е в сървъра!");
}
}
else
{
SendClientMessage(playerid, 0xB4B5B7FF, "Нямаш права за да ползваш командата!");
}
return 1;
}
if(strcmp(cmd, "/mdutyoff", true) == 0)
{
if(IsPlayerInRangeOfPoint(playerid, 3, 1652.8765,2199.9587,10.8203) || IsPlayerInRangeOfPoint(playerid, 3, 1015.9524,-1026.5002,32.1016))
{
if(towTruckSkin[playerid]==false)
{
SendClientMessage(playerid,COLOR_GRAD1,"Твоят скин не е на механик!");
return 1;
}
RestartPlayerSkin(playerid);
towTruckSkin[playerid]=false;
}
else
{
SendClientMessage(playerid,COLOR_GRAD1,"Трябва да си до гаража за механици!");
}
return 1;
}
if(strcmp(cmd, "/mduty", true) == 0)
{
if(IsPlayerInRangeOfPoint(playerid, 3, 1652.8765,2199.9587,10.8203) || IsPlayerInRangeOfPoint(playerid, 3, 1015.9524,-1026.5002,32.1016))
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /mduty [1-2]");
SendClientMessage(playerid, 0xFFFF00FF, "Цена: $50");
return 1;
}
new skinSelect;
skinSelect = strval(tmp);
if(skinSelect < 1 || skinSelect > 2)
{
SendClientMessage(playerid, COLOR_GRAD1, "Скиновете на механиците са от 1 до 2!");
return 1;
}
if(PlayerInfo[playerid][pCash]<50) return SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш достатъчно пари за да станеш механик!");
GivePlayerCash(playerid,-50);
towTruckSkin[playerid]=true;
if(skinSelect==1) SetPlayerSkin(playerid,42);
if(skinSelect==2) SetPlayerSkin(playerid,50);
}
else
{
SendClientMessage(playerid,COLOR_GRAD1,"Трябва да си до гаража за механици!");
}
return 1;
}
if(strcmp(cmd, "/sethp", true) == 0)
{
if (PlayerInfo[playerid][pAdmin]>2)
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /sethp [playerid] [health]");
return 1;
}
new level;
para1[playerid] = ReturnUser(tmp);
tmp = strtok(cmdtext, idx);
level = strval(tmp);
if(strval(tmp) < 0)
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /sethp [playerid] [health]");
return 1;
}
if(para1[playerid] != INVALID_PLAYER_ID)
{
format(string115, 115, "* %s промени твоя живот на %d *",pname[playerid],level);
SendClientMessage(para1[playerid],0xFFFF00FF, string115);
for(new i=0; i<MAX_PLAYERS; i++)
{
if(PlayerInfo[i][pAdmin] >= 1 && PlayerInfo[i][pAHide]==0)
{
format(string115, 115, "Health: %s сложи %d Health на %s",pname[playerid],level,pname[para1[playerid]]);
SendClientMessage(i, 0xE60000FF, string115);
}
}
SetPlayerHealth(para1[playerid], level);
}
else
{
SendClientMessage(playerid,0xB4B5B7FF,"Посоченото ID не е в сървъра!");
}
}
else
{
SendClientMessage(playerid, 0xB4B5B7FF, "Нямаш права за да ползваш командата!");
}
return 1;
}
if(strcmp(cmd, "/givegun", true) == 0)
{
if (PlayerInfo[playerid][pAdmin]>2)
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /givegun [playerid] [weaponid] [ammount]");
SendClientMessage(playerid, 0x33AA33FF, "____________________________________________");
SendClientMessage(playerid, 0xBFC0C2FF, "1: Brass Knuckles 2: Golf Club 3: Nite Stick 4: Knife 5: Baseball Bat 6: Shovel 7: Pool Cue 8: Katana 9: Chainsaw");
SendClientMessage(playerid, 0xBFC0C2FF, "10: Purple Dildo 11: Small White Vibrator 12: Large White Vibrator 13: Silver Vibrator 14: Flowers 15: Cane 16: Frag Grenade");
SendClientMessage(playerid, 0xBFC0C2FF, "17: Tear Gas 18: Molotov Cocktail 19: Vehicle Missile 20: Hydra Flare 21: Jetpack 22: 9mm 23: Silenced 9mm 24: Desert Eagle");
SendClientMessage(playerid, 0xBFC0C2FF, "25: Shotgun 26: Sawnoff Shotgun 27: Combat Shotgun 28: Micro SMG (Mac 10) 29: SMG (MP5) 29: AK-47 31: M4 32: Tec-9 33: Country Rifle");
SendClientMessage(playerid, 0xBFC0C2FF, "34: Sniper Rifle 35: Rocket Launcher 36: HS Rocket Launcher 37: Flamethrower 38: Minigun 39: Satchel Charge 40: Detonator");
SendClientMessage(playerid, 0xBFC0C2FF, "41: Spraycan 42: Fire Extinguisher 43: Camera 44: Nightvision Goggles 45: Infared Vision 46: Parachute");
SendClientMessage(playerid, 0x33AA33FF, "____________________________________________");
return 1;
}
new level;
para1[playerid] = ReturnUser(tmp);
tmp = strtok(cmdtext, idx);
level = strval(tmp);
if(!strlen(tmp) || level==0)
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /givegun [playerid] [weaponid] [ammount]");
SendClientMessage(playerid, 0x33AA33FF, "____________________________________________");
SendClientMessage(playerid, 0xBFC0C2FF, "1: Brass Knuckles 2: Golf Club 3: Nite Stick 4: Knife 5: Baseball Bat 6: Shovel 7: Pool Cue 8: Katana 9: Chainsaw");
SendClientMessage(playerid, 0xBFC0C2FF, "10: Purple Dildo 11: Small White Vibrator 12: Large White Vibrator 13: Silver Vibrator 14: Flowers 15: Cane 16: Frag Grenade");
SendClientMessage(playerid, 0xBFC0C2FF, "17: Tear Gas 18: Molotov Cocktail 19: Vehicle Missile 20: Hydra Flare 21: Jetpack 22: 9mm 23: Silenced 9mm 24: Desert Eagle");
SendClientMessage(playerid, 0xBFC0C2FF, "25: Shotgun 26: Sawnoff Shotgun 27: Combat Shotgun 28: Micro SMG (Mac 10) 29: SMG (MP5) 29: AK-47 31: M4 32: Tec-9 33: Country Rifle");
SendClientMessage(playerid, 0xBFC0C2FF, "34: Sniper Rifle 35: Rocket Launcher 36: HS Rocket Launcher 37: Flamethrower 38: Minigun 39: Satchel Charge 40: Detonator");
SendClientMessage(playerid, 0xBFC0C2FF, "41: Spraycan 42: Fire Extinguisher 43: Camera 44: Nightvision Goggles 45: Infared Vision 46: Parachute");
SendClientMessage(playerid, 0x33AA33FF, "____________________________________________");
return 1;
}
if(level > 46)
{
SendClientMessage(playerid, 0xB4B5B7FF, "Посоченото ID оръжие не съществува!");
return 1;
}
tmp = strtok(cmdtext, idx);
new ammount = strval(tmp);
if(!strlen(tmp) || ammount==0)
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /givegun [playerid] [weaponid] [ammount]");
SendClientMessage(playerid, 0x33AA33FF, "____________________________________________");
SendClientMessage(playerid, 0xBFC0C2FF, "1: Brass Knuckles 2: Golf Club 3: Nite Stick 4: Knife 5: Baseball Bat 6: Shovel 7: Pool Cue 8: Katana 9: Chainsaw");
SendClientMessage(playerid, 0xBFC0C2FF, "10: Purple Dildo 11: Small White Vibrator 12: Large White Vibrator 13: Silver Vibrator 14: Flowers 15: Cane 16: Frag Grenade");
SendClientMessage(playerid, 0xBFC0C2FF, "17: Tear Gas 18: Molotov Cocktail 19: Vehicle Missile 20: Hydra Flare 21: Jetpack 22: 9mm 23: Silenced 9mm 24: Desert Eagle");
SendClientMessage(playerid, 0xBFC0C2FF, "25: Shotgun 26: Sawnoff Shotgun 27: Combat Shotgun 28: Micro SMG (Mac 10) 29: SMG (MP5) 29: AK-47 31: M4 32: Tec-9 33: Country Rifle");
SendClientMessage(playerid, 0xBFC0C2FF, "34: Sniper Rifle 35: Rocket Launcher 36: HS Rocket Launcher 37: Flamethrower 38: Minigun 39: Satchel Charge 40: Detonator");
SendClientMessage(playerid, 0xBFC0C2FF, "41: Spraycan 42: Fire Extinguisher 43: Camera 44: Nightvision Goggles 45: Infared Vision 46: Parachute");
SendClientMessage(playerid, 0x33AA33FF, "____________________________________________");
return 1;
}
if(ammount < 1)
{
SendClientMessage(playerid, 0xB4B5B7FF, "Не можеш да дадеш толкова амуниции!");
return 1;
}
if(para1[playerid] != INVALID_PLAYER_ID)
{
new weaponname[32];
GetWeaponName(level, weaponname, 32);
format(string115, 115, "* %s ти даде оръжие %s *",pname[para1[playerid]],weaponname);
SendClientMessage(para1[playerid],0xFFFF00FF, string115);
if(level==21)
{
SetPlayerArmedWeapon(para1[playerid],0);
SetPlayerSpecialAction(para1[playerid],SPECIAL_ACTION_USEJETPACK);
SetPlayerArmedWeapon(para1[playerid],0); SetPlayerArmedWeapon(para1[playerid],0); SetPlayerArmedWeapon(para1[playerid],0);
}
for(new i=0; i<MAX_PLAYERS; i++)
{
if(PlayerInfo[i][pAdmin] >= 1 && PlayerInfo[i][pAHide]==0)
{
format(string115, 115, "Gun: %s даде оръжие %s на %s!",pname[playerid],weaponname,pname[para1[playerid]]);
SendClientMessage(i, 0xE60000FF, string115);
}
}
GivePlayerWeapon(para1[playerid], level,ammount);
}
else
{
SendClientMessage(playerid,0xB4B5B7FF,"Посоченото ID не е в сървъра!");
}
}
else
{
SendClientMessage(playerid, 0xB4B5B7FF, "Нямаш права за да ползваш командата!");
}
return 1;
}
if (strcmp(cmdtext, "/clearchat", true, 10) == 0)
{
if(PlayerInfo[playerid][pAdmin]>2)
{
SendClientMessageToAll(0xFFFFFFFF," "); SendClientMessageToAll(0xFFFFFFFF," "); SendClientMessageToAll(0xFFFFFFFF," "); SendClientMessageToAll(0xFFFFFFFF," "); SendClientMessageToAll(0xFFFFFFFF," ");
SendClientMessageToAll(0xFFFFFFFF," "); SendClientMessageToAll(0xFFFFFFFF," "); SendClientMessageToAll(0xFFFFFFFF," "); SendClientMessageToAll(0xFFFFFFFF," "); SendClientMessageToAll(0xFFFFFFFF," ");
SendClientMessageToAll(0xFFFFFFFF," "); SendClientMessageToAll(0xFFFFFFFF," "); SendClientMessageToAll(0xFFFFFFFF," "); SendClientMessageToAll(0xFFFFFFFF," "); SendClientMessageToAll(0xFFFFFFFF," ");
SendClientMessageToAll(0xFFFFFFFF," "); SendClientMessageToAll(0xFFFFFFFF," "); SendClientMessageToAll(0xFFFFFFFF," "); SendClientMessageToAll(0xFFFFFFFF," "); SendClientMessageToAll(0xFFFFFFFF," ");
SendClientMessageToAll(0xFFFFFFFF," "); SendClientMessageToAll(0xFFFFFFFF," "); SendClientMessageToAll(0xFFFFFFFF," "); SendClientMessageToAll(0xFFFFFFFF," "); SendClientMessageToAll(0xFFFFFFFF," ");
SendClientMessageToAll(0xFFFFFFFF," "); SendClientMessageToAll(0xFFFFFFFF," "); SendClientMessageToAll(0xFFFFFFFF," "); SendClientMessageToAll(0xFFFFFFFF," "); SendClientMessageToAll(0xFFFFFFFF," ");
SendClientMessageToAll(0xFFFFFFFF," "); SendClientMessageToAll(0xFFFFFFFF," "); SendClientMessageToAll(0xFFFFFFFF," "); SendClientMessageToAll(0xFFFFFFFF," "); SendClientMessageToAll(0xFFFFFFFF," ");
SendClientMessageToAll(0xFFFFFFFF," "); SendClientMessageToAll(0xFFFFFFFF," "); SendClientMessageToAll(0xFFFFFFFF," "); SendClientMessageToAll(0xFFFFFFFF," "); SendClientMessageToAll(0xFFFFFFFF," ");
SendClientMessageToAll(0xFFFFFFFF," "); SendClientMessageToAll(0xFFFFFFFF," "); SendClientMessageToAll(0xFFFFFFFF," "); SendClientMessageToAll(0xFFFFFFFF," "); SendClientMessageToAll(0xFFFFFFFF," ");
SendClientMessageToAll(0xFFFFFFFF," "); SendClientMessageToAll(0xFFFFFFFF," "); SendClientMessageToAll(0xFFFFFFFF," "); SendClientMessageToAll(0xFFFFFFFF," "); SendClientMessageToAll(0xFFFFFFFF," ");
SendClientMessageToAll(0xFFFFFFFF," "); SendClientMessageToAll(0xFFFFFFFF," "); SendClientMessageToAll(0xFFFFFFFF," "); SendClientMessageToAll(0xFFFFFFFF," "); SendClientMessageToAll(0xFFFFFFFF," ");
SendClientMessageToAll(0xFFFFFFFF," "); SendClientMessageToAll(0xFFFFFFFF," "); SendClientMessageToAll(0xFFFFFFFF," "); SendClientMessageToAll(0xFFFFFFFF," "); SendClientMessageToAll(0xFFFFFFFF," ");
SendClientMessageToAll(0xFFFFFFFF," "); SendClientMessageToAll(0xFFFFFFFF," "); SendClientMessageToAll(0xFFFFFFFF," "); SendClientMessageToAll(0xFFFFFFFF," "); SendClientMessageToAll(0xFFFFFFFF," ");
SendClientMessageToAll(0xFFFFFFFF," "); SendClientMessageToAll(0xFFFFFFFF," "); SendClientMessageToAll(0xFFFFFFFF," "); SendClientMessageToAll(0xFFFFFFFF," "); SendClientMessageToAll(0xFFFFFFFF," ");
SendClientMessageToAll(0xFFFFFFFF," "); SendClientMessageToAll(0xFFFFFFFF," "); SendClientMessageToAll(0xFFFFFFFF," "); SendClientMessageToAll(0xFFFFFFFF," "); SendClientMessageToAll(0xFFFFFFFF," ");
SendClientMessageToAll(0xFFFFFFFF," "); SendClientMessageToAll(0xFFFFFFFF," "); SendClientMessageToAll(0xFFFFFFFF," "); SendClientMessageToAll(0xFFFFFFFF," "); SendClientMessageToAll(0xFFFFFFFF," ");
format(string115, 115, "ADMIN: Чатът на сървъра беше изтрит от %s",pname[playerid]);
SendClientMessageToAll(0xFFFFFFFF,string115);
}
else
{
SendClientMessage(playerid, 0xB4B5B7FF, "Нямаш права за да ползваш командата!");
}
return 1;
}
if(strcmp(cmd, "/setarmour", true) == 0)
{
if (PlayerInfo[playerid][pAdmin]>2)
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /setarmour [playerid] [armour]");
return 1;
}
new level;
para1[playerid] = ReturnUser(tmp);
tmp = strtok(cmdtext, idx);
level = strval(tmp);
if(strval(tmp) < 0)
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /setarmour [playerid] [armour]");
return 1;
}
if(para1[playerid] != INVALID_PLAYER_ID)
{
format(string115, 115, "* %s промени твоя жилетка на %d *",pname[para1[playerid]],level);
SendClientMessage(para1[playerid],0xFFFF00FF, string115);
for(new i=0; i<MAX_PLAYERS; i++)
{
if(PlayerInfo[i][pAdmin] >= 1 && PlayerInfo[i][pAHide]==0)
{
format(string115, 115, "Health: %s сложи %d Armour на %s",pname[playerid],level,pname[para1[playerid]]);
SendClientMessage(i, 0xE60000FF, string115);
}
}
SetPlayerArmour(para1[playerid], level);
}
else
{
SendClientMessage(playerid,0xB4B5B7FF,"Посоченото ID не е в сървъра!");
}
}
else
{
SendClientMessage(playerid, 0xB4B5B7FF, "Нямаш права за да ползваш командата!");
}
return 1;
}
if(strcmp(cmd, "/setworld", true) == 0)
{
if (PlayerInfo[playerid][pAdmin]>2)
{
tmp = strtok(cmdtext, idx);
para1[playerid] = ReturnUser(tmp);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /setworld [playerid] [virtualworld id]");
return 1;
}
new level;
tmp = strtok(cmdtext, idx);
level = strval(tmp);
if(strval(tmp) < 0)
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /setworld [playerid] [virtualworld id]");
}
if(para1[playerid] != INVALID_PLAYER_ID)
{
format(string115, 115, "* Ти смени ID VirtualWorld на %s*.",pname[para1[playerid]]);
SendClientMessage(playerid,0xFFFFFFFF, string115);
format(string115, 115, "* %s смени твоя ID VirtualWorld на %d*.",pname[playerid],level);
SendClientMessage(para1[playerid], 0xFFFF00FF, string115);
SetPlayerVirtualWorld(para1[playerid], level);
}
else
{
SendClientMessage(playerid,0xB4B5B7FF,"Посоченото ID не е в сървъра!");
}
}
else
{
SendClientMessage(playerid, 0xB4B5B7FF, "Нямаш права за да ползваш командата!");
}
return 1;
}
if(strcmp(cmd, "/int", true) == 0)
{
if (PlayerInfo[playerid][pAdmin]>3)
{
new level;
tmp = strtok(cmdtext, idx);
level = strval(tmp);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /int [interiorid]");
return 1;
}
if(strval(tmp) < 0)
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /int [interiorid]");
return 1;
}
format(string256, 256, "* %s смени ID Interior на всички в сървъра на %d *",pname[playerid],level);
SendClientMessageToAll(0xFFFF00FF, string256);
for(new i = 0; i < MAX_PLAYERS; i++)
{
SetPlayerInterior(i, level);
}
}
else
{
SendClientMessage(playerid, 0xB4B5B7FF, "Нямаш права за да ползваш командата!");
}
return 1;
}
if(strcmp(cmd, "/setint", true) == 0)
{
if (PlayerInfo[playerid][pAdmin]>2)
{
tmp = strtok(cmdtext, idx);
para1[playerid] = ReturnUser(tmp);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /setint [playerid] [interiorid]");
return 1;
}
new level;
tmp = strtok(cmdtext, idx);
level = strval(tmp);
if(strval(tmp) < 0)
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /setint [playerid] [interiorid]");
return 1;
}
if(!IsPlayerConnected(para1[playerid]))
{
SendClientMessage(playerid, 0xB4B5B7FF, "Посоченото ID не е в сървъра!");
return 1;
}
SetPlayerInterior(para1[playerid], level);
format(string, sizeof(string), "* Ти смени ID Interior на %s*.", pname[para1[playerid]]);
SendClientMessage(playerid, 0xFFFFFFFF, string);
format(string, sizeof(string), "* %s смени твоя ID Interior на %d*.", pname[playerid], level);
SendClientMessage(para1[playerid], COLOR_YELLOW, string);
}
else
{
SendClientMessage(playerid, 0xB4B5B7FF, "Нямаш права за да ползваш командата!");
}
return 1;
}
if(strcmp(cmd, "/crl",true)==0)
{
if (PlayerInfo[playerid][pAdmin]<3) return SendClientMessage(playerid, 0xB4B5B7FF, "Нямаш права за да ползваш командата!");
if(robberyMembers==0)
{
SendClientMessage(playerid, COLOR_RED,"Няма онлайн играч лидер на обир в момента!");
}
else
{
for(new i; i< MAX_PLAYERS; i++)
{
if(PlayerInfo[i][pRobberLead]==1)
{
format(string256,256,"%s (ID: %d) е лидер на обира",pname[i],i);
SendClientMessage(playerid, 0x40BF00FF,string256);
}
}
}
return 1;
}
if(strcmp(cmd, "/cmb",true)==0)
{
if (PlayerInfo[playerid][pAdmin]<3) return SendClientMessage(playerid, 0xB4B5B7FF, "Нямаш права за да ползваш командата!");
if(isMoneyBoxGet==false)
{
SendClientMessage(playerid, COLOR_RED,"Няма онлайн играч с куфара в момента!");
}
else
{
format(string256,256,"%s (ID: %d) е играчът с куфара",pname[whoHaveMoneyBox]);
SendClientMessage(playerid, 0x40BF00FF,string256);
}
return 1;
}
if(strcmp(cmd, "/acuffed",true)==0)
{
if (PlayerInfo[playerid][pAdmin]<4) return SendClientMessage(playerid, 0xB4B5B7FF, "Нямаш права за да ползваш командата!");
new cuffedusers;
for(new i = 0; i < MAX_PLAYERS; i++)
{
if(acuffed[i] >= 1)
{
cuffedusers+=1;
}
}
format(string256,256,"Онлайн играчи с белезници(%d):",cuffedusers);
SendClientMessage(playerid, 0x40BF00FF,string256);
for(new i = 0; i < MAX_PLAYERS; i++)
{
if(acuffed[i] == 1)
{
format(string256, 256, "%s",pname[i]);
SendClientMessage(playerid, 0xFFB366FF,string256);
}
}
if(cuffedusers==0)
{
format(string256, 256, "Няма онлайн играчи с белезници в момента!");
SendClientMessage(playerid, 0xFFB366FF,string256);
}
return 1;
}
if(strcmp(cmd, "/animlist",true)==0)
{
SendClientMessage(playerid,0xFFCC00FF,". : : Анимации : : .");
SendClientMessage(playerid,0x99CEFFFF,"/fall /injured /push /handsup /kiss /cellin /cellout /aslap /bomber /drunk /laugh");
SendClientMessage(playerid,0x99CEFFFF,"/basket /medic /spray /robman /taichi /sit /lay /sup /crossarms");
SendClientMessage(playerid,0x99CEFFFF,"/deal /crack /smoke /speak /hike /dance /fuck /strip /lean /walk /rap /caract");
SendClientMessage(playerid,0x99CEFFFF,"/tired /box /scratch /ahide /vomit /eats /cop /stance /wave /run");
SendClientMessage(playerid,0x99CEFFFF,"/flag /giver /look /show /shout /endchat /pull /lookout /wank /arresta /adie");
SendClientMessage(playerid,0x99CEFFFF,"/ciggy /pee /rocky /glitched /gangshake /shake /hug /accept /reject");
SendClientMessage(playerid,0x33AA33FF,"За да спреш анимацията натисни SPACE, LMB или ENTER");
return 1;
}
if(strcmp(cmd, "/ifc",true)==0)
{
new ifcusers;
for(new i = 0; i < MAX_PLAYERS; i++)
{
if(PlayerInfo[i][pIFC] >= 1)
{
ifcusers+=1;
}
}
format(string256,256,"Онлайн членове на Intense Fuel Company(%d):",ifcusers);
SendClientMessage(playerid, 0xFFFF00FF,string256);
new ifctext[32];
for(new i = 0; i < MAX_PLAYERS; i++)
{
if(PlayerInfo[i][pIFCDuty] == 1) { ifctext = "On Duty"; }
else if(PlayerInfo[i][pIFCDuty] == 0) { ifctext = "Off Duty"; }
if(PlayerInfo[i][pIFC] >= 1 && PlayerInfo[i][pAdmin] < 5)
{
format(string256, 256, "%s (ID: %d) %s",pname[i],i, ifctext);
SendClientMessage(playerid, COLOR_RED,string256);
}
if(PlayerInfo[i][pIFC] >= 1 && PlayerInfo[i][pAdmin] >= 5)
{
format(string256, 256, "%s(ID: %d) %s {FFFF00}[Шеф]",pname[i],i, ifctext);
SendClientMessage(playerid, COLOR_RED,string256);
}
}
if(ifcusers==0)
{
format(string256, 256, "Няма онлайн членове на Intense Fuel Company в момента!");
SendClientMessage(playerid, COLOR_RED,string256);
}
return 1;
}
if(strcmp(cmd, "/vipusers",true)==0)
{
new vipusers;
for(new i = 0; i < MAX_PLAYERS; i++)
{
if(PlayerInfo[i][pVip] >= 1)
{
vipusers+=1;
}
}
format(string256,256,"Онлайн VIP играчи(%d):",vipusers);
SendClientMessage(playerid, 0x40BF00FF,string256);
for(new i = 0; i < MAX_PLAYERS; i++)
{
if(PlayerInfo[i][pVip] >= 1)
{
format(string256, 256, "%s (ID: %d) - VIP Level: %d",pname[i],i, PlayerInfo[i][pVip]);
SendClientMessage(playerid, 0xFFB366FF,string256);
}
}
if(vipusers==0)
{
format(string256, 256, "Няма онлайн VIP играчи в момента!");
SendClientMessage(playerid, 0xFFB366FF,string256);
}
return 1;
}
if(strcmp(cmd, "/members",true)==0)
{
if(PlayerInfo[playerid][pTeam] != 0)
{
SendClientMessage(playerid, 0x40BF00FF,"Онлайн членове на банда/мафията:");
for(new i = 0; i < MAX_PLAYERS; i++)
{
new ranktext[256];
if(PlayerInfo[i][pTeam]==PlayerInfo[playerid][pTeam])
{
switch(PlayerInfo[i][pRank])
{
case 1: format(ranktext, 256, "%s", TeamInfo[PlayerInfo[i][pTeam]][tRank1]);
case 2: format(ranktext, 256, "%s", TeamInfo[PlayerInfo[i][pTeam]][tRank2]);
case 3: format(ranktext, 256, "%s", TeamInfo[PlayerInfo[i][pTeam]][tRank3]);
case 4: format(ranktext, 256, "%s", TeamInfo[PlayerInfo[i][pTeam]][tRank4]);
case 5: format(ranktext, 256, "%s", TeamInfo[PlayerInfo[i][pTeam]][tRank5]);
case 6: format(ranktext, 256, "%s", TeamInfo[PlayerInfo[i][pTeam]][tRank6]);
}
if(PlayerInfo[i][pRank]<6)
{
format(string256, 256, "%s (ID: %d) Rank: %s(%d)",pname[i], i, ranktext,PlayerInfo[i][pRank]);
SendClientMessage(playerid, 0x33CCFFFF, string256);
}
if(PlayerInfo[i][pRank]==6 && PlayerInfo[i][pGLeader]==0)
{
format(string256, 256, "{FF8200}Лидер:{33CCFF} %s (ID: %d) Rank: %s(%d)",pname[i], i, ranktext,PlayerInfo[i][pRank]);
SendClientMessage(playerid, 0x33CCFFFF, string256);
}
if(PlayerInfo[i][pRank]==6 && PlayerInfo[i][pGLeader]==1)
{
format(string256, 256, "{FF8200}Главен лидер:{33CCFF} %s (ID: %d) Rank: %s(%d)",pname[i], i, ranktext,PlayerInfo[i][pRank]);
SendClientMessage(playerid, 0x33CCFFFF, string256);
}           }
}
}
else
{
SendClientMessage(playerid, 0xB4B5B7FF, "Ти не си в банда/мафия!");
}
return 1;
}
if(strcmp(cmd, "/leaders",true)==0)
{
new onlineleaders2;
for(new i = 0; i < MAX_PLAYERS; i++)
{
if(PlayerInfo[i][pRank] == 6)
{
onlineleaders2+=1;
}
}
format(string256,256,"Онлайн лидери на банди/мафии(%d):",onlineleaders2);
SendClientMessage(playerid, 0x40BF00FF,string256);
new onlineleaders=0;
for(new i = 0; i < MAX_PLAYERS; i++)
{
if(PlayerInfo[i][pRank]==6)
{
onlineleaders=1;
new teamName[65];
format(teamName,65,"%s",TeamInfo[PlayerInfo[i][pTeam]][tName]);
if(PlayerInfo[i][pGLeader]==1)
{
format(string256,256, "Главен лидер: %s на банда/мафия - {00FF00}%s",pname[i],teamName);
SendClientMessage(playerid, 0x33CCFFFF,string256);
}
if(PlayerInfo[i][pGLeader]==0)
{
format(string256,256, "Лидер: %s на банда/мафия - {00FF00}%s",pname[i],teamName);
SendClientMessage(playerid, 0x33CCFFFF,string256);
}
}
}
if(onlineleaders==0)
{
SendClientMessage(playerid, 0xE60000FF,"Няма онлайн лидери в момента!");
}
return 1;
}
if(strcmp(cmdtext, "/gotomark", true) == 0)
{
if (PlayerInfo[playerid][pAdmin]>2)
{
if(marked[playerid]!=1)
{
SendClientMessage(playerid, 0xB4B5B7FF, "Ти не си маркирал позиция!");
return 1;
}
if(cmn1[playerid]>0) { return SendClientMessage(playerid,0xB4B5B7FF,"Не можеш да се телепортираш, докато си CMN1!"); }
if(playerInDuel[playerid]==1){ return SendClientMessage(playerid,0xB4B5B7FF,"Не можеш да се телепортираш, докато си в дуел!");}
if(inevent[playerid]==1) return SendClientMessage(playerid,0xB4B5B7FF,"Не можеш да използваш тази команда, докато си в евент!");
if(inevent[playerid]==1) return SendClientMessage(playerid,0xB4B5B7FF,"Не можеш да се телепортираш, докато си в евент!");
if(playerInDeathmatch[playerid]==true) return SendClientMessage(playerid,0xB4B5B7FF,"В момента не можеш да използваш тази команда!");
if(playerInStreetRace[playerid]==true) return SendClientMessage(playerid,0xB4B5B7FF,"В момента не можеш да използваш тази команда!");
if(playerInDMON[playerid]==1){ return SendClientMessage(playerid,0xB4B5B7FF,"Не можеш да се телепортираш, докато си в DMON!");}
for(new i=0; i<MAX_PLAYERS; i++)
{
if(PlayerInfo[i][pAdmin] >= 1 && PlayerInfo[i][pAHide]==0)
{
format(string115, 115, "Mark: %s се телепортира до маркираната си позиция!",pname[playerid]);
SendClientMessage(i, 0xE60000FF,string115);
}
}
SetPlayerInterior(playerid,AINT[playerid]);
SetPlayerVirtualWorld(playerid,AVW[playerid]);
if (GetPlayerState(playerid) == 2)
{
SetVehicleVirtualWorld(GetPlayerVehicleID(playerid), AVW[playerid]);
LinkVehicleToInterior(GetPlayerVehicleID(playerid), AINT[playerid]);
SetVehiclePos(GetPlayerVehicleID(playerid), AX[playerid],AY[playerid],AZ[playerid]);
SetVehicleZAngle(GetPlayerVehicleID(playerid),AZA[playerid]);
}
else
{
SetPlayerPos(playerid, AX[playerid],AY[playerid],AZ[playerid]);
SetPlayerFacingAngle(playerid,AZA[playerid]);
}
}
else
{
SendClientMessage(playerid, 0xB4B5B7FF, "Нямаш права за да ползваш командата!");
}
return 1;
}
if(strcmp(cmdtext, "/mark", true) == 0)
{
if (PlayerInfo[playerid][pAdmin]>2)
{
if (GetPlayerState(playerid) == 2)
{
GetVehiclePos(GetPlayerVehicleID(playerid), AX[playerid],AY[playerid],AZ[playerid]);
GetVehicleZAngle(playerid,AZA[playerid]);
}
else
{
GetPlayerFacingAngle(playerid,AZA[playerid]);
GetPlayerPos(playerid, AX[playerid],AY[playerid],AZ[playerid]);
}
AINT[playerid] = GetPlayerInterior(playerid);
AVW[playerid] = GetPlayerVirtualWorld(playerid);
SendClientMessage(playerid, 0xFFFFFFFF, "* Позицията е запазена *");
marked[playerid]=1;
for(new i=0; i<MAX_PLAYERS; i++)
{
if(PlayerInfo[i][pAdmin] >= 1 && PlayerInfo[i][pAHide]==0)
{
format(string115, 115, "Mark: %s си маркира позиция!",pname[playerid]);
SendClientMessage(i, 0xE60000FF,string115);
}
}
}
else
{
SendClientMessage(playerid, 0xB4B5B7FF, "Нямаш права за да ползваш командата!");
}
return 1;
}
if (strcmp(cmd, "/adutyskin", true) == 0)
{
if(PlayerInfo[playerid][pAdmin]>0)
{
if(IsPlayerInAnyVehicle(playerid) == 1 && PlayerInfo[playerid][pADuty]==1)
{
SendClientMessage(playerid,0xB4B5B7FF, "Трябва да си пешеходец за да си смениш скина!");
return 1;
}
DestroySelectionMenu(playerid);
SetPVarInt(playerid, "skinc_active", 1);
CreateSelectionMenu(playerid);
SelectTextDraw(playerid, 0xACCBF1FF);
}
else
{
SendClientMessage(playerid, 0xB4B5B7FF, "Нямаш права за да ползваш командата!");
}
return 1;
}
if (strcmp(cmdtext, "/afon", true) == 0)
{
if (PlayerInfo[playerid][pAdmin] <4) return SendClientMessage(playerid, 0xB4B5B7FF, "Нямаш права за да ползваш командата!");
if(AntiFallOfBike[playerid]==1) return SendClientMessage(playerid, 0xB4B5B7FF, "Ти вече си пуснал Anti fall of bike!");
AntiFallOfBike[playerid] = 1;
GameTextForPlayer(playerid, "~w~Anti fall off bike is now ~g~on", 5000, 5);
return 1;
}
if (strcmp(cmdtext, "/afoff", true) == 0)
{
if (PlayerInfo[playerid][pAdmin] <4) return SendClientMessage(playerid, 0xB4B5B7FF, "Нямаш права за да ползваш командата!");
if(AntiFallOfBike[playerid]==0) return SendClientMessage(playerid, 0xB4B5B7FF, "Anti fall of bike не е пуснат!");
GameTextForPlayer(playerid, "~w~Anti fall off bike is now ~r~off", 5000, 5);
AntiFallOfBike[playerid] = 0;
return 1;
}
if (strcmp(cmdtext, "/eventhelp", true) == 0)
{
if(PlayerInfo[playerid][pEvent]==1)
{
SendClientMessage(playerid, 0xFFFF00FF, "Event Admin команди:");
SendClientMessage(playerid, 0x00FF00FF, "/startevent /startevent1 /ec /eenter /setvhpall /efight /givegunall /sethpall /setarmourall /int /startvote");
SendClientMessage(playerid, 0x00FF00FF, "/endvote /endevent /endevent1 /endevent2 /stopevent /ename /dname /ejetpack /djetpack /setweatherall /settime");
SendClientMessage(playerid, 0x00FF00FF, "/giveep /eev /edv /ehealme /dhealme /setlimit /invisible /invisibleall");
}
else
{
SendClientMessage(playerid, 0xB4B5B7FF, "Нямаш права за да ползваш командата!");
}
return 1;
}
if(strcmp(cmd, "/togcb", true) == 0)
{
if (PlayerInfo[playerid][pAdmin] >= 3)
{
if(PlayerInfo[playerid][pTogCB]==0)
{
SendClientMessage(playerid, 0xFF9933FF, "Ти вече ще виждаш всички CB Chanels!");
PlayerInfo[playerid][pTogCB]=1;
}
else
{
SendClientMessage(playerid, 0xFF9933FF, "Ти вече няма да виждаш всички CB Chanels!");
PlayerInfo[playerid][pTogCB]=0;
}
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достатачно права за да ползваш командата!");
}
return 1;
}
if(strcmp(cmd, "/istogged", true) == 0)
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /istogged [playerid]");
return 1;
}
para1[playerid] = ReturnUser(tmp);
tmp = strtok(cmdtext, idx);
if (PlayerInfo[playerid][pAdmin] >= 3)
{
if(para1[playerid] != INVALID_PLAYER_ID)
{
new textaa[256]; new textaa2[256]; new textaa3[256]; new textaa4[256]; new string2562[256]; new notoggle=1;
if(PlayerInfo[para1[playerid]][pAHide] == 1 && PlayerInfo[para1[playerid]][pTest]==0) { textaa = "ADMIN "; notoggle=0;}
if(PlayerInfo[para1[playerid]][pAHide] == 1 && PlayerInfo[para1[playerid]][pTest]==1) { textaa = "TEST "; notoggle=0; }
if(togchat[para1[playerid]]==1) { textaa2 = "GLOBAL "; notoggle=0; }
if(PlayerInfo[playerid][pTogFaction]==1) { textaa3 = "FACTION "; notoggle=0; }
if(PlayerInfo[playerid][pTogLeader]==1) { textaa4 = "LEADER "; notoggle=0; }
if(notoggle==1)
{
format(string2562,256, "%s не е скрил никой чат!", pname[para1[playerid]]);
return SendClientMessage(playerid, 0xFFFFFFFF, string2562);
}
//if(togchat[playerid]==1) { textaa += "FACTION "; }
format(string2562,256, "%s - скрил чат %s", pname[para1[playerid]],textaa,textaa2,textaa3,textaa4);
SendClientMessage(playerid, 0xFFFFFFFF, string2562);
}
else
{
SendClientMessage(playerid,0xB4B5B7FF,"Посоченото ID не е в сървъра!");
}
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достатачно права за да ползваш командата!");
}
return 1;
}
if (strcmp(cmdtext, "/mhelp", true) == 0 || strcmp(cmdtext, "/mh", true) == 0)
{
if(PlayerInfo[playerid][pManage]==1)
{
new closeddialog=3500;
new string2230[512];
new string2230result[1500];
strcat(string2230result,"{00FF00}---= Level Manage Admin Commands =---\n");
format(string2230,512,"{33CCCC}/unwarn - Махате предупреждение на даден играч\n");
strcat(string2230result, string2230);
format(string2230,512,"{33CCCC}/nunwarn - Махате WARN на играч който не е в сървъра\n");
strcat(string2230result, string2230);
format(string2230,512,"{33CCCC}/respawncars - Respawn колите\n");
strcat(string2230result, string2230);
format(string2230,512,"{33CCCC}/crespawncars - Прекратявате Respawn колите\n");
strcat(string2230result, string2230);
format(string2230,512,"{33CCCC}/unban - Махате BAN на даден играч\n");
strcat(string2230result, string2230);
format(string2230,512,"{33CCCC}/checkrescars - Проверявате кога е имало последно Respawn на колите\n");
strcat(string2230result, string2230);
format(string2230,512,"{33CCCC}/askrescars - Питате сървъра за Respawn на колите\n");
strcat(string2230result, string2230);
format(string2230,512,"{33CCCC}/caskrescars - Прекратяване на питането за Respawn на колете\n");
strcat(string2230result, string2230);
format(string2230,512,"{33CCCC}/checkaskres - Проверявате кога последно е имало питане за Respawn на колите\n");
strcat(string2230result, string2230);
format(string2230,512,"{33CCCC}/unblock - Премахвате block-а на даден играч");
strcat(string2230result, string2230);
ShowPlayerDialog(playerid,closeddialog,DIALOG_STYLE_MSGBOX,"{FF0000}MANAGE АДМИН КОМАНДИ:",string2230result,"Изход","");
}
else
{
SendClientMessage(playerid, 0xB4B5B7FF, "Нямаш права за да ползваш командата!");
}
return 1;
}
if (strcmp(cmd, "/startevent", true) == 0)
{
if(PlayerInfo[playerid][pEvent] == 0)
{
SendClientMessage(playerid, 0xB4B5B7FF, "Нямаш права за да ползваш командата!");
return 1;
}
if(startedevent>0) return SendClientMessage(playerid, 0xB4B5B7FF, "Все още има евент!");
if(eventmembers>0) return SendClientMessage(playerid, 0xB4B5B7FF, "Все още има играчи от стария евент!");
new length = strlen(cmdtext);
while ((idx < length) && (cmdtext[idx] <= ' '))
{
idx++;
}
new offset = idx;
new result[256];
while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
{
result[idx - offset] = cmdtext[idx];
idx++;
}
tmp = strtok(cmdtext, idx);
if(!strlen(result))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /startevent [event name]");
return 1;
}
format(string, sizeof(string),"~r~ %s ~n~ ~w~ TYPE: ~g~/joinevent ~n~ ~b~ NO AWARD!!!",result);eventinterior = GetPlayerInterior(playerid);
for(new i = 0; i < MAX_PLAYERS; i++)
{
GameTextForPlayer(i, string, 5000, 3);
}
SetPlayerVirtualWorld(playerid, 1);
eventclosed=0;
eev=1;
startedevent=1; eenter=0; efight=0; ejetpack=0; dhealme=1; etune=1; efix=1; enos =1; ehyd=1; eramp=0;
GetPlayerPos(playerid, eventx, eventy, eventz);
eventlimit=1000;
cbchat[playerid] = 1;
PlayerInfo[playerid][pOrganisator]=1;
SendClientMessage(playerid, 0xFF9933FF, "CB Channel: Твоят CB Channel беше прехвърлен на 1.");
eventinterior = GetPlayerInterior(playerid);
format(string, sizeof(string), "%s: {80FF00}Напишете {F2FF00}/joinevent{80FF00} за да се присъедините към евента.{FFFFFF}  БЕЗ НАГРАДА!", result);
SendClientMessageToAll(0xFF0000FF, string);
return 1;
}
if (strcmp(cmd, "/startevent1", true) == 0)
{
if(PlayerInfo[playerid][pEvent] == 0)
{
SendClientMessage(playerid, 0xB4B5B7FF, "Нямаш права за да ползваш командата!");
return 1;
}
if(startedevent>0) return SendClientMessage(playerid, 0xB4B5B7FF, "Все още има евент!");
if(eventmembers>0) return SendClientMessage(playerid, 0xB4B5B7FF, "Все още има играчи от стария евент!");
new length = strlen(cmdtext);
while ((idx < length) && (cmdtext[idx] <= ' '))
{
idx++;
}
new offset = idx;
new result[256];
while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
{
result[idx - offset] = cmdtext[idx];
idx++;
}
tmp = strtok(cmdtext, idx);
if(!strlen(result))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /startevent1 [event name]");
return 1;
}
for(new i = 0; i < MAX_PLAYERS; i++)
{
format(string, sizeof(string),"~r~ %s ~n~ ~w~ TYPE: ~g~/joinevent ~n~ ~p~ WITH AWARD!!!",result);eventinterior = GetPlayerInterior(playerid);
GameTextForPlayer(i, string, 5000, 3);
}
SetPlayerVirtualWorld(playerid, 1);
eventclosed=0;
eev=1;
PlayerInfo[playerid][pOrganisator]=1;
cbchat[playerid] = 1;
SendClientMessage(playerid, 0xFF9933FF, "CB Channel: Твоят CB Channel беше прехвърлен на 1.");
startedevent=2; eenter=0; efight=0; ejetpack=0; dhealme=1; etune=1; efix=1; enos =1; ehyd=1; eramp=0;
GetPlayerPos(playerid, eventx, eventy, eventz);
eventinterior = GetPlayerInterior(playerid);
eventlimit=1000;
format(string, sizeof(string), "%s: {80FF00}Напишете {F2FF00}/joinevent{80FF00} за да се присъедините към евента.{FFFFFF}  С НАГРАДА!", result);
SendClientMessageToAll(0xFF0000FF, string);
return 1;
}
if(strcmp(cmd, "/ec", true) == 0)
{
if(PlayerInfo[playerid][pEvent]==0) return SendClientMessage(playerid, 0xB4B5B7FF, "Нямаш права за да ползваш командата!");
if(startedevent==0) return  SendClientMessage(playerid, 0xB4B5B7FF, "В момента няма евент!");
if(eventActiveCount == 0)
{
format(string256,256,"*** %s стартира брояча на евента, бъдете в готовност ***",pname[playerid]);
SendClientMessageToAll(0x80FF00FF,string256);
GameTextForAll("~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~r~-~b~ 3 ~r~-", 1500, 3);
eventActiveCount = 1;
eventCount0 = 2;
}
else
{
SendClientMessage(playerid, 0xB4B5B7FF, "В момента има активен брояч!");
}
return 1;
}
if(strcmp(cmd, "/eenter", true) == 0)
{
if (PlayerInfo[playerid][pEvent] == 1)
{
if(startedevent==0) return  SendClientMessage(playerid, 0xB4B5B7FF, "В момента няма евент!");
if(eenter==0)
{
eenter=1;
format(string, sizeof(string), "{FF0000}%s{80FF00} позволи натискането на F/ENTER в евента!", pname[playerid]);
SendClientMessageToAll(0x80FF00FF, string);
}
else
{
eenter=0;
format(string, sizeof(string), "{FF0000}%s{80FF00} забрани натискането на F/ENTER в евента!", pname[playerid]);
SendClientMessageToAll(0x80FF00FF, string);
}
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
}
return 1;
}
if(strcmp(cmd, "/nameoff", true) == 0)
{
if(inevent[playerid]==0) return SendClientMessage(playerid, 0xB4B5B7FF, "Ти не си в евента!");
if(ename==0) return SendClientMessage(playerid, 0xB4B5B7FF, "Командите /nameon и /nameoff са забранени!");
for(new i = 0; i < MAX_PLAYERS; i++)
{
ShowPlayerNameTagForPlayer(i, playerid, 0);
}
format(string, sizeof(string), "Вече играчите няма да виждат твоето име!", pname[playerid]);
SendClientMessage(playerid,0x80FF00FF, string);
return 1;
}
if(strcmp(cmd, "/nameon", true) == 0)
{
if(inevent[playerid]==0) return SendClientMessage(playerid, 0xB4B5B7FF, "Ти не си в евент!");
if(ename==0) return SendClientMessage(playerid, 0xB4B5B7FF, "Командите /nameon и /nameoff са забранени!");
for(new i = 0; i < MAX_PLAYERS; i++)
{
ShowPlayerNameTagForPlayer(i, playerid, 1);
}
format(string, sizeof(string), "Вече играчите ще виждат твоето име!", pname[playerid]);
SendClientMessage(playerid,0x80FF00FF, string);
return 1;
}
if(strcmp(cmd, "/dname", true) == 0)
{
if (PlayerInfo[playerid][pEvent] == 1)
{
if(startedevent==0) return SendClientMessage(playerid, 0xB4B5B7FF, "В момента няма евент!");
if(ename==0) return SendClientMessage(playerid, 0xB4B5B7FF, "Командите /nameon и /nameoff вече са забранени!");
ename=0;
for(new i = 0; i < MAX_PLAYERS; i++)
{
if(inevent[i]==1)
{
for(new i2 = 0; i2 < MAX_PLAYERS; i2++)
{
ShowPlayerNameTagForPlayer(i2, i, 1);
}
}
}
format(string, sizeof(string), "{FF0000}%s{80FF00} забрани ползването на /nameon и /nameoff в евента!", pname[playerid]);
SendClientMessageToAll(0x80FF00FF, string);
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
}
return 1;
}
if(strcmp(cmd, "/etune", true) == 0)
{
if (PlayerInfo[playerid][pEvent] == 1)
{
if(startedevent==0) return SendClientMessage(playerid, 0xB4B5B7FF, "В момента няма евент!");
if(etune==1) return SendClientMessage(playerid, 0xB4B5B7FF, "Командата /tune вече е позволена!");
etune=1;
format(string, sizeof(string), "{FF0000}%s{80FF00} позволи ползването на /tune в евента!", pname[playerid]);
SendClientMessageToAll(0x80FF00FF, string);
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
}
return 1;
}
if(strcmp(cmd, "/lockbiz", true) == 0)
{
if (PlayerInfo[playerid][pBizO]>-1)
{
BizInfo[PlayerInfo[playerid][pBizO]][bLocked]=1;
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Ти не притежаваш бизнес!");
}
return 1;
}
if(strcmp(cmd, "/unlockbiz", true) == 0)
{
if (PlayerInfo[playerid][pBizO]>-1)
{
BizInfo[PlayerInfo[playerid][pBizO]][bLocked]=0;
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Ти не притежаваш бизнес!");
}
return 1;
}
if(strcmp(cmd, "/lockhouse", true) == 0)
{
if (PlayerInfo[playerid][pHouseO]>-1)
{
HouseInfo[PlayerInfo[playerid][pHouseO]][hLocked]=1;
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш къща!");
}
return 1;
}
if(strcmp(cmd, "/unlockhouse", true) == 0)
{
if (PlayerInfo[playerid][pHouseO]>-1)
{
HouseInfo[PlayerInfo[playerid][pHouseO]][hLocked]=0;
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш къща!");
}
return 1;
}
if(strcmp(cmd, "/ejetpack", true) == 0)
{
if (PlayerInfo[playerid][pEvent] == 1)
{
if(startedevent==0) return SendClientMessage(playerid, 0xB4B5B7FF, "В момента няма евент!");
if(ejetpack==1) return SendClientMessage(playerid, 0xB4B5B7FF, "Командата /jetpack вече е позволена!");
ejetpack=1;
format(string, sizeof(string), "{FF0000}%s{80FF00} позволи ползването на /jetpack в евента!", pname[playerid]);
SendClientMessageToAll(0x80FF00FF, string);
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
}
return 1;
}
if(strcmp(cmd, "/eev", true) == 0)
{
if (PlayerInfo[playerid][pEvent] == 1)
{
if(startedevent==0) return SendClientMessage(playerid, 0xB4B5B7FF, "В момента няма евент!");
if(eev==1) return SendClientMessage(playerid, 0xB4B5B7FF, "Влизането в превозни средства вече е позволено!");
eev=1;
format(string, sizeof(string), "{FF0000}%s{80FF00} позволи влизането в превозни средства в евента!", pname[playerid]);
SendClientMessageToAll(0x80FF00FF, string);
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
}
return 1;
}
if(strcmp(cmd, "/eflip", true) == 0)
{
if (PlayerInfo[playerid][pEvent] == 1)
{
if(startedevent==0) return SendClientMessage(playerid, 0xB4B5B7FF, "В момента няма евент!");
if(eflip==1) return SendClientMessage(playerid, 0xB4B5B7FF, "Ползването на /flip вече е позволено!");
eflip=1;
format(string, sizeof(string), "{FF0000}%s{80FF00} позволи ползването на /flip в евента!", pname[playerid]);
SendClientMessageToAll(0x80FF00FF, string);
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
}
return 1;
}
if(strcmp(cmd, "/dtest", true) == 0)
{
if (PlayerInfo[playerid][pAdmin] >=5)
{
if(scripterMode[playerid]==0) return SendClientMessage(playerid, 0xB4B5B7FF, "В момента тест модът е изключен!");
scripterMode[playerid]=0;
SendClientMessage(playerid, 0xFFFFFFFF, "Ти изключи тест модът!");
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
}
return 1;
}
if(strcmp(cmd, "/etest", true) == 0)
{
if (PlayerInfo[playerid][pAdmin] >=5)
{
if(scripterMode[playerid]==1) return SendClientMessage(playerid, 0xB4B5B7FF, "В момента тест модът е включен!");
scripterMode[playerid]=1;
SendClientMessage(playerid, 0xFFFFFFFF, "Ти включи тест модът!");
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
}
return 1;
}
if(strcmp(cmd, "/dflip", true) == 0)
{
if (PlayerInfo[playerid][pEvent] == 1)
{
if(startedevent==0) return SendClientMessage(playerid, 0xB4B5B7FF, "В момента няма евент!");
if(eflip==0) return SendClientMessage(playerid, 0xB4B5B7FF, "Ползването на /flip вече е забранено!");
eflip=0;
format(string, sizeof(string), "{FF0000}%s{80FF00} забрани ползването на /flip в евента!", pname[playerid]);
SendClientMessageToAll(0x80FF00FF, string);
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
}
return 1;
}
if(strcmp(cmd, "/einvisible", true) == 0)
{
if (PlayerInfo[playerid][pEvent] == 1)
{
if(startedevent==0) return SendClientMessage(playerid, 0xB4B5B7FF, "В момента няма евент!");
if(einvisible==1) return SendClientMessage(playerid, 0xB4B5B7FF, "Ползването на /invisible вече е позволено!");
einvisible=1;
format(string, sizeof(string), "{FF0000}%s{80FF00} позволи ползването на /invisible в евента!", pname[playerid]);
SendClientMessageToAll(0x80FF00FF, string);
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
}
return 1;
}
if(strcmp(cmd, "/dramp", true) == 0)
{
if (PlayerInfo[playerid][pEvent] == 1)
{
if(startedevent==0) return SendClientMessage(playerid, 0xB4B5B7FF, "В момента няма евент!");
if(eramp==0) return SendClientMessage(playerid, 0xB4B5B7FF, "Ползването на рампи вече е забранено!");
eramp=0;
format(string, sizeof(string), "{FF0000}%s{80FF00} забрани пускането на рампи в евента!", pname[playerid]);
SendClientMessageToAll(0x80FF00FF, string);
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
}
return 1;
}
if(strcmp(cmd, "/eramp", true) == 0)
{
if (PlayerInfo[playerid][pEvent] == 1)
{
if(startedevent==0) return SendClientMessage(playerid, 0xB4B5B7FF, "В момента няма евент!");
if(eramp==1) return SendClientMessage(playerid, 0xB4B5B7FF, "Ползването на рампи вече е позволено!");
eramp=1;
format(string, sizeof(string), "{FF0000}%s{80FF00} позволи пускането на рампи в евента!", pname[playerid]);
SendClientMessageToAll(0x80FF00FF, string);
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
}
return 1;
}
if(strcmp(cmd, "/ehyd", true) == 0)
{
if (PlayerInfo[playerid][pEvent] == 1)
{
if(startedevent==0) return SendClientMessage(playerid, 0xB4B5B7FF, "В момента няма евент!");
if(ehyd==1) return SendClientMessage(playerid, 0xB4B5B7FF, "Ползването на /hyd вече е позволено!");
ehyd=1;
format(string, sizeof(string), "{FF0000}%s{80FF00} позволи ползването на /hyd в евента!", pname[playerid]);
SendClientMessageToAll(0x80FF00FF, string);
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
}
return 1;
}
if(strcmp(cmd, "/dhyd", true) == 0)
{
if (PlayerInfo[playerid][pEvent] == 1)
{
if(startedevent==0) return SendClientMessage(playerid, 0xB4B5B7FF, "В момента няма евент!");
if(ehyd==0) return SendClientMessage(playerid, 0xB4B5B7FF, "Ползването на /hyd вече е забранено!");
ehyd=0;
format(string, sizeof(string), "{FF0000}%s{80FF00} забрани ползването на /hyd в евента!", pname[playerid]);
SendClientMessageToAll(0x80FF00FF, string);
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
}
return 1;
}
if(strcmp(cmd, "/enos", true) == 0)
{
if (PlayerInfo[playerid][pEvent] == 1)
{
if(startedevent==0) return SendClientMessage(playerid, 0xB4B5B7FF, "В момента няма евент!");
if(enos==1) return SendClientMessage(playerid, 0xB4B5B7FF, "Ползването на /nos вече е позволено!");
enos=1;
format(string, sizeof(string), "{FF0000}%s{80FF00} позволи ползването на /nos в евента!", pname[playerid]);
SendClientMessageToAll(0x80FF00FF, string);
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
}
return 1;
}
if(strcmp(cmd, "/dnos", true) == 0)
{
if (PlayerInfo[playerid][pEvent] == 1)
{
if(startedevent==0) return SendClientMessage(playerid, 0xB4B5B7FF, "В момента няма евент!");
if(enos==0) return SendClientMessage(playerid, 0xB4B5B7FF, "Ползването на /nos вече е забранено!");
enos=0;
format(string, sizeof(string), "{FF0000}%s{80FF00} забрани ползването на /nos в евента!", pname[playerid]);
SendClientMessageToAll(0x80FF00FF, string);
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
}
return 1;
}
if(strcmp(cmd, "/efix", true) == 0)
{
if (PlayerInfo[playerid][pEvent] == 1)
{
if(startedevent==0) return SendClientMessage(playerid, 0xB4B5B7FF, "В момента няма евент!");
if(efix==1) return SendClientMessage(playerid, 0xB4B5B7FF, "Ползването на /fix вече е позволено!");
efix=1;
format(string, sizeof(string), "{FF0000}%s{80FF00} позволи ползването на /fix в евента!", pname[playerid]);
SendClientMessageToAll(0x80FF00FF, string);
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
}
return 1;
}
if(strcmp(cmd, "/dfix", true) == 0)
{
if (PlayerInfo[playerid][pEvent] == 1)
{
if(startedevent==0) return SendClientMessage(playerid, 0xB4B5B7FF, "В момента няма евент!");
if(efix==0) return SendClientMessage(playerid, 0xB4B5B7FF, "Ползването на /fix вече е забранено!");
efix=0;
format(string, sizeof(string), "{FF0000}%s{80FF00} забрани ползването на /fix в евента!", pname[playerid]);
SendClientMessageToAll(0x80FF00FF, string);
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
}
return 1;
}
if(strcmp(cmd, "/ehealme", true) == 0)
{
if (PlayerInfo[playerid][pEvent] == 1)
{
if(startedevent==0) return SendClientMessage(playerid, 0xB4B5B7FF, "В момента няма евент!");
if(dhealme==1) return SendClientMessage(playerid, 0xB4B5B7FF, "Ползването на /healme вече е позволено!");
dhealme=1;
format(string, sizeof(string), "{FF0000}%s{80FF00} позволи ползването на /healme в евента!", pname[playerid]);
SendClientMessageToAll(0x80FF00FF, string);
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
}
return 1;
}
if(strcmp(cmd, "/dhealme", true) == 0)
{
if (PlayerInfo[playerid][pEvent] == 1)
{
if(startedevent==0) return SendClientMessage(playerid, 0xB4B5B7FF, "В момента няма евент!");
if(dhealme==0) return SendClientMessage(playerid, 0xB4B5B7FF, "Ползването на /healme вече е забранено!");
dhealme=0;
format(string, sizeof(string), "{FF0000}%s{80FF00} забрани ползването на /healme в евента!", pname[playerid]);
SendClientMessageToAll(0x80FF00FF, string);
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
}
return 1;
}
if(strcmp(cmd, "/edv", true) == 0)
{
if (PlayerInfo[playerid][pEvent] == 1)
{
if(startedevent==0) return SendClientMessage(playerid, 0xB4B5B7FF, "В момента няма евент!");
if(eev==0) return SendClientMessage(playerid, 0xB4B5B7FF, "Влизането в превозни средства вече е забранено!");
eev=0;
format(string, sizeof(string), "{FF0000}%s{80FF00} забрани влизането в превозни средства в евента!", pname[playerid]);
SendClientMessageToAll(0x80FF00FF, string);
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
}
return 1;
}
if(strcmp(cmd, "/djetpack", true) == 0)
{
if (PlayerInfo[playerid][pEvent] == 1)
{
if(startedevent==0) return SendClientMessage(playerid, 0xB4B5B7FF, "В момента няма евент!");
if(ejetpack==0) return SendClientMessage(playerid, 0xB4B5B7FF, "Командата /jetpack вече е забранена!");
ejetpack=0;
format(string, sizeof(string), "{FF0000}%s{80FF00} забрани ползването на /jetpack в евента!", pname[playerid]);
SendClientMessageToAll(0x80FF00FF, string);
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
}
return 1;
}
if(strcmp(cmd, "/ename", true) == 0)
{
if (PlayerInfo[playerid][pEvent] == 1)
{
if(startedevent==0) return SendClientMessage(playerid, 0xB4B5B7FF, "В момента няма евент!");
if(ename==1) return SendClientMessage(playerid, 0xB4B5B7FF, "Командите /nameon и /nameoff вече са позволени!");
ename=1;
format(string, sizeof(string), "{FF0000}%s{80FF00} позволи ползването на /nameon и /nameoff в евента!", pname[playerid]);
SendClientMessageToAll(0x80FF00FF, string);
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
}
return 1;
}
if(strcmp(cmd, "/efight", true) == 0)
{
if (PlayerInfo[playerid][pEvent] == 1)
{
if(startedevent==0) return  SendClientMessage(playerid, 0xB4B5B7FF, "В момента няма евент!");
if(efight==0)
{
efight=1;
format(string, sizeof(string), "{FF0000}%s{80FF00} позволи боя в евента!", pname[playerid]);
SendClientMessageToAll(0x80FF00FF, string);
}
else
{
efight=0;
format(string, sizeof(string), "{FF0000}%s{80FF00} забрани боя в евента!", pname[playerid]);
SendClientMessageToAll(0x80FF00FF, string);
}
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
}
return 1;
}
if(strcmp(cmd, "/setarmourall", true) == 0)
{
if (PlayerInfo[playerid][pEvent]>0)
{
if(startedevent==0) return  SendClientMessage(playerid, 0xB4B5B7FF, "В момента няма евент!");
new level;
tmp = strtok(cmdtext, idx);
level = strval(tmp);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /setarmourall [armour]");
return 1;
}
if(strval(tmp) < 0)
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /setarmourall [armour]");
return 1;
}
format(string, sizeof(string), "{FF0000}%s{80FF00} сложи жилетката на всички в евента да е %d!",pname[playerid], level);
SendClientMessageToAll(0x80FF00FF, string);
for(new i; i<MAX_PLAYERS; i++)
{
if(inevent[i])
{
SetPlayerArmour(i,level);
}
}
}
else
{
SendClientMessage(playerid, 0xB4B5B7FF, "Нямаш права за да ползваш командата!");
}
return 1;
}
if(strcmp(cmd, "/int", true) == 0)
{
if (PlayerInfo[playerid][pEvent]>0)
{
if(startedevent==0) return  SendClientMessage(playerid, 0xB4B5B7FF, "В момента няма евент!");
new level;
tmp = strtok(cmdtext, idx);
level = strval(tmp);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /int [interior id]");
return 1;
}
if(strval(tmp) < 0)
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /int [interior id]");
return 1;
}
format(string, sizeof(string), "{FF0000}%s{80FF00} сложи Interior ID на евента да е %d!",pname[playerid], level);
SendClientMessageToAll(0x80FF00FF, string);
eventinterior=level;
}
else
{
SendClientMessage(playerid, 0xB4B5B7FF, "Нямаш права за да ползваш командата!");
}
return 1;
}
if(strcmp(cmd, "/sethpall", true) == 0)
{
if (PlayerInfo[playerid][pEvent]>0)
{
if(startedevent==0) return  SendClientMessage(playerid, 0xB4B5B7FF, "В момента няма евент!");
new level;
tmp = strtok(cmdtext, idx);
level = strval(tmp);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /sethpall [health]");
return 1;
}
if(strval(tmp) < 0)
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /sethpall [health]");
return 1;
}
format(string, sizeof(string), "{FF0000}%s{80FF00} сложи кръвта на всички в евента да е %d!",pname[playerid], level);
SendClientMessageToAll(0x80FF00FF, string);
for(new i; i<MAX_PLAYERS; i++)
{
if(inevent[i])
{
SetPlayerHealth(i,level);
}
}
}
else
{
SendClientMessage(playerid, 0xB4B5B7FF, "Нямаш права за да ползваш командата!");
}
return 1;
}
if(strcmp(cmd, "/unfreezeall", true) == 0)
{
if (PlayerInfo[playerid][pEvent]>0)
{
if(startedevent==0) return  SendClientMessage(playerid, 0xB4B5B7FF, "В момента няма евент!");
format(string, sizeof(string), "{FF0000}%s{80FF00} отмрази всички в евента!",pname[playerid]);
SendClientMessageToAll(0x80FF00FF, string);
for(new i; i<MAX_PLAYERS; i++)
{
if(inevent[i])
{
TogglePlayerControllable(i,1);
}
}
}
else
{
SendClientMessage(playerid, 0xB4B5B7FF, "Нямаш права за да ползваш командата!");
}
return 1;
}
if(strcmp(cmd, "/freezeall", true) == 0)
{
if (PlayerInfo[playerid][pEvent]>0)
{
if(startedevent==0) return  SendClientMessage(playerid, 0xB4B5B7FF, "В момента няма евент!");
format(string, sizeof(string), "{FF0000}%s{80FF00} замрази всички в евента!",pname[playerid]);
SendClientMessageToAll(0x80FF00FF, string);
for(new i; i<MAX_PLAYERS; i++)
{
if(inevent[i])
{
TogglePlayerControllable(i,0);
}
}
}
else
{
SendClientMessage(playerid, 0xB4B5B7FF, "Нямаш права за да ползваш командата!");
}
return 1;
}
if(strcmp(cmd, "/setskinall", true) == 0)
{
if (PlayerInfo[playerid][pEvent]>0)
{
if(startedevent==0) return  SendClientMessage(playerid, 0xB4B5B7FF, "В момента няма евент!");
new level;
tmp = strtok(cmdtext, idx);
level = strval(tmp);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /setskinall [skin id]");
return 1;
}
if(strval(tmp) < 0)
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /setskinall [skin id]");
return 1;
}
format(string, sizeof(string), "{FF0000}%s{80FF00} сложи скинът на всички в евента да е ID %d!",pname[playerid], level);
SendClientMessageToAll(0x80FF00FF, string);
for(new i; i<MAX_PLAYERS; i++)
{
if(inevent[i])
{
SetPlayerSkin(i,level);
}
}
}
else
{
SendClientMessage(playerid, 0xB4B5B7FF, "Нямаш права за да ползваш командата!");
}
return 1;
}
if(strcmp(cmd, "/removelimit", true) == 0)
{
if (PlayerInfo[playerid][pEvent]>0)
{
if(startedevent==0) return  SendClientMessage(playerid, 0xB4B5B7FF, "В момента няма евент!");
eventlimit=10000;
format(string, sizeof(string), "{FF0000}%s{80FF00} премахна лимита за влизането в евента!",pname[playerid]);
SendClientMessageToAll(0x80FF00FF, string);
}
else
{
SendClientMessage(playerid, 0xB4B5B7FF, "Нямаш права за да ползваш командата!");
}
return 1;
}
if(strcmp(cmd, "/blueteam", true) == 0)
{
if (PlayerInfo[playerid][pEvent]==1)
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /blueteam [playerid]");
return 1;
}
new level[32];
new para12 = ReturnUser(tmp);
if(inevent[para12]==0) return SendClientMessage(playerid, 0xB4B5B7FF, "Този играч не е от евента!");
strmid(level, tmp, 0, sizeof(level), sizeof(level));
if(para12 != INVALID_PLAYER_ID)
{
SetPlayerColor(para12, 0x00A2F3FF);
}
else
{
format(string256, 256, "Посоченото ID не е в сървъра!");
SendClientMessage(playerid, 0xB4B5B7FF, string256);
}
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
return 1;
}
return 1;
}
if(strcmp(cmd, "/redteam", true) == 0)
{
if (PlayerInfo[playerid][pEvent]==1)
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /redteam [playerid]");
return 1;
}
new level[32];
new para12 = ReturnUser(tmp);
if(inevent[para12]==0) return SendClientMessage(playerid, 0xB4B5B7FF, "Този играч не е от евента!");
strmid(level, tmp, 0, sizeof(level), sizeof(level));
if(para12 != INVALID_PLAYER_ID)
{
SetPlayerColor(para12, 0xFF0000FF);
}
else
{
format(string256, 256, "Посоченото ID не е в сървъра!");
SendClientMessage(playerid, 0xB4B5B7FF, string256);
}
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
return 1;
}
return 1;
}
if(strcmp(cmd, "/ncolor", true) == 0)
{
if (PlayerInfo[playerid][pEvent]==1)
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /ncolor [playerid] [color id]");
SendClientMessage(playerid, COLOR_RED, "1 - Бял 2 - Зелен 3 - Жълто 4 - Оранжев");
return 1;
}
new level[32];
new para12 = ReturnUser(tmp);
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /ncolor [playerid] [color id]");
SendClientMessage(playerid, COLOR_RED, "1 - Бяло 2 - Зелено 3 - Сиво 4 - Жълто 5 - Оранжево");
return 1;
}
if(inevent[para12]==0) return SendClientMessage(playerid, 0xB4B5B7FF, "Този играч не е от евента!");
strmid(level, tmp, 0, sizeof(level), sizeof(level));
if(para12 != INVALID_PLAYER_ID)
{
if(strcmp(level,"1",true)==1 && strcmp(level,"2",true)==1 && strcmp(level,"3",true)==1 && strcmp(level,"4",true)==1)
if (strcmp(level, "1", true) == 0)
{
SetPlayerColor(para12, 0xFFFFFFFF);
}
if (strcmp(level, "2", true) == 0)
{
SetPlayerColor(para12, 0x28BF0EFF);
}
if (strcmp(level, "3", true) == 0)
{
SetPlayerColor(para12, 0xFF0000FF);
}
if (strcmp(level, "4", true) == 0)
{
SetPlayerColor(para12, 0xFF5733FF);
}
}
else
{
format(string256, 256, "Посоченото ID не е в сървъра!");
SendClientMessage(playerid, 0xB4B5B7FF, string256);
}
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
return 1;
}
return 1;
}
if(strcmp(cmd, "/setlimit", true) == 0)
{
if (PlayerInfo[playerid][pEvent]>0)
{
if(startedevent==0) return  SendClientMessage(playerid, 0xB4B5B7FF, "В момента няма евент!");
new level;
tmp = strtok(cmdtext, idx);
level = strval(tmp);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /setlimit [limit]");
return 1;
}
if(strval(tmp) < 0)
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /setlimit [limit]");
return 1;
}
if(level < 1 || level > 1000)
{
SendClientMessage(playerid, 0xB4B5B7FF, "Лимитът може да бъде от 1 до 1000 човека!");
return 1;
}
eventlimit=level;
format(string, sizeof(string), "{FF0000}%s{80FF00} сложи лимита за влизането в евента да е %d!",pname[playerid],level);
SendClientMessageToAll(0x80FF00FF, string);
}
else
{
SendClientMessage(playerid, 0xB4B5B7FF, "Нямаш права за да ползваш командата!");
}
return 1;
}
if(strcmp(cmd, "/givegunall", true) == 0)
{
if (PlayerInfo[playerid][pEvent]>0)
{
if(startedevent==0) return  SendClientMessage(playerid, 0xB4B5B7FF, "В момента няма евент!");
new level;
tmp = strtok(cmdtext, idx);
level = strval(tmp);
if(strval(tmp) < 1 || strval(tmp) >46)
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /givegunall [weaponid]");
SendClientMessage(playerid, 0x33AA33FF, "____________________________________________");
SendClientMessage(playerid, 0xBFC0C2FF, "41: Spraycan 42: Fire Extinguisher 43: Camera 44: Nightvision Goggles 45: Infared Vision 46: Parachute");
SendClientMessage(playerid, 0xBFC0C2FF, "1: Brass Knuckles 2: Golf Club 3: Nite Stick 4: Knife 5: Baseball Bat 6: Shovel 7: Pool Cue 8: Katana 9: Chainsaw");
SendClientMessage(playerid, 0xBFC0C2FF, "10: Purple Dildo 11: Small White Vibrator 12: Large White Vibrator 13: Silver Vibrator 14: Flowers 15: Cane 16: Frag Grenade");
SendClientMessage(playerid, 0xBFC0C2FF, "17: Tear Gas 18: Molotov Cocktail 19: Vehicle Missile 20: Hydra Flare 21: Jetpack 22: 9mm 23: Silenced 9mm 24: Desert Eagle");
SendClientMessage(playerid, 0xBFC0C2FF, "25: Shotgun 26: Sawnoff Shotgun 27: Combat Shotgun 28: Micro SMG (Mac 10) 29: SMG (MP5) 29: AK-47 31: M4 32: Tec-9 33: Country Rifle");
SendClientMessage(playerid, 0xBFC0C2FF, "34: Sniper Rifle 35: Rocket Launcher 36: HS Rocket Launcher 37: Flamethrower 38: Minigun 39: Satchel Charge 40: Detonator");
SendClientMessage(playerid, 0xBFC0C2FF, "41: Spraycan 42: Fire Extinguisher 43: Camera 44: Nightvision Goggles 45: Infared Vision 46: Parachute");
SendClientMessage(playerid, 0x33AA33FF, "____________________________________________");
return 1;
}
new weaponname[32];
GetWeaponName(level, weaponname, 32);
format(string, sizeof(string), "{FF0000}%s{80FF00} даде %s на всички играчи в евента!",pname[playerid], weaponname);
SendClientMessageToAll(0x80FF00FF, string);
for(new i; i<MAX_PLAYERS; i++)
{
if(inevent[i])
{
GivePlayerWeapon(i, level,500);
}
}
}
else
{
SendClientMessage(playerid, 0xB4B5B7FF, "Нямаш права за да ползваш командата!");
}
return 1;
}
if(strcmp(cmd, "/setvhpall", true) == 0)
{
if (PlayerInfo[playerid][pEvent]>0)
{
if(startedevent==0) return  SendClientMessage(playerid, 0xB4B5B7FF, "В момента няма евент!");
new level;
tmp = strtok(cmdtext, idx);
level = strval(tmp);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /setvhpall [vehicle health]");
return 1;
}
if(strval(tmp) < 0)
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /setvhpall [vehicle health]");
return 1;
}
format(string, sizeof(string), "{FF0000}%s{80FF00} сложи %d Health на всички превозни средства в евента!",pname[playerid], level);
SendClientMessageToAll(0x80FF00FF, string);
for(new vh; vh<MAX_VEHICLES; vh++)
{
if(eventveh[vh]==1)
{
SetVehicleHealth(vh, level);
}
}
}
else
{
SendClientMessage(playerid, 0xB4B5B7FF, "Нямаш права за да ползваш командата!");
}
return 1;
}
if(strcmp(cmd, "/endevent1", true) == 0)
{
if (PlayerInfo[playerid][pEvent]>0)
{
if(startedevent==0) return  SendClientMessage(playerid, 0xB4B5B7FF, "В момента няма евент!");
format(string, sizeof(string),"~w~EVENT ~g~WINNER:~n~~r~NO",pname[para1[playerid]]);
GameTextForAll(string, 5000, 3);
for(new i = 0; i < MAX_PLAYERS; i++)
{
if(inevent[i]>0)
{
if(cbchat[i]>0)
{
SendClientMessage(i, 0xFF9933FF, "CB Chanel: Твоят CB Chanel беше изключен!");
cbchat[playerid] = 0;
}
}
PlayerInfo[i][pOrganisator]=0;
}
format(string, sizeof(string),"EVENT {00B300}WINNER: {FF0000}NO",pname[para1[playerid]]);
SendClientMessageToAll(0xFFFFFFFF,string);
startedevent=0;
}
else
{
SendClientMessage(playerid,0xB4B5B7FF,"Нямаш права за да ползваш командата!");
}
return 1;
}
if(strcmp(cmd, "/stopevent", true) == 0)
{
if (PlayerInfo[playerid][pEvent]>0)
{
format(string, sizeof(string), "Присъединяването в евента приключи");
SendClientMessageToAll(0x5065D9FF, string);
format(string, sizeof(string),"~w~EVENT ~g~JOIN ~r~OVER");
eventclosed=1;
for(new i = 0; i < MAX_PLAYERS; i++)
{
GameTextForPlayer(i, string, 5000, 3);
}
}
else
{
SendClientMessage(playerid,0xB4B5B7FF,"Нямаш права за да ползваш командата!");
}
return 1;
}
if(strcmp(cmd, "/endevent", true) == 0)
{
if (PlayerInfo[playerid][pEvent]>0)
{
if(startedevent==0) return  SendClientMessage(playerid, 0xB4B5B7FF, "В момента няма евент!");
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /endevent [winner id]");
return 1;
}
para1[playerid] = ReturnUser(tmp);
if(inevent[para1[playerid]]==0) return SendClientMessage(playerid, 0xB4B5B7FF, "Този играч не е в евента!");
if(para1[playerid] != INVALID_PLAYER_ID)
{
format(string, sizeof(string),"~w~EVENT ~g~WINNER:~n~~r~%s",pname[para1[playerid]]);
GameTextForAll(string, 5000, 3);
for(new i = 0; i < MAX_PLAYERS; i++)
{
if(inevent[i]>0)
{
if(cbchat[playerid]>0)
{
SendClientMessage(i, 0xFF9933FF, "CB Chanel: Твоят CB Chanel беше изключен!");
cbchat[playerid] = 0;
}
}
PlayerInfo[i][pOrganisator]=0;
}
format(string, sizeof(string),"EVENT {00B300}WINNER: {FF0000}%s",pname[para1[playerid]]);
SendClientMessageToAll(0xFFFFFFFF,string);
startedevent=0;
}
else
{
SendClientMessage(playerid,0xB4B5B7FF,"Посоченото ID не е в евента!");
}
}
else
{
SendClientMessage(playerid,0xB4B5B7FF,"Нямаш права за да ползваш командата!");
}
return 1;
}
if(strcmp(cmd, "/endevent2", true) == 0)
{
if (PlayerInfo[playerid][pEvent]>0)
{
if(startedevent==0) return  SendClientMessage(playerid, 0xB4B5B7FF, "В момента няма евент!");
new length = strlen(cmdtext);
while ((idx < length) && (cmdtext[idx] <= ' '))
{
idx++;
}
new offset = idx;
new result[256];
while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
{
result[idx - offset] = cmdtext[idx];
idx++;
}
result[idx - offset] = EOS;
if(strlen(result)<1)
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /endevent2 [winners]");
return 1;
}
if(para1[playerid] != INVALID_PLAYER_ID)
{
format(string, sizeof(string),"~w~EVENT ~g~WINNER:~n~~r~%s",result);
GameTextForAll(string, 5000, 3);
for(new i = 0; i < MAX_PLAYERS; i++)
{
if(inevent[i]>0)
{
if(cbchat[i]>0)
{
SendClientMessage(i, 0xFF9933FF, "CB Chanel: Твоят CB Chanel беше изключен!");
cbchat[playerid] = 0;
}
}
PlayerInfo[i][pOrganisator]=0;
}
format(string, sizeof(string),"EVENT {00B300}WINNER: {FF0000}%s",result);
SendClientMessageToAll(0xFFFFFFFF,string);
startedevent=0;
}
else
{
SendClientMessage(playerid,0xB4B5B7FF,"Посоченото ID не е в евента!");
}
}
else
{
SendClientMessage(playerid,0xB4B5B7FF,"Нямаш права за да ползваш командата!");
}
return 1;
}
if(strcmp(cmd, "/setweatherall", true) == 0)
{
if(IsPlayerConnected(playerid))
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /setweatherall [weather id]");
return 1;
}
new hour;
hour = strval(tmp);
if(hour<0 || hour>45) return SendClientMessage(playerid, 0xB4B5B7FF, "Времето трябва да бъде от 0 до 45!");
if (PlayerInfo[playerid][pEvent] == 1)
{
if(startedevent==0) return  SendClientMessage(playerid, 0xB4B5B7FF, "В момента няма евент!");
for(new i = 0; i < MAX_PLAYERS; i++)
{
if(inevent[i])
{
SetPlayerWeather(i, hour);
}
}
format(string, sizeof(string), "{FF0000}%s{80FF00} сложи Weather ID на всички играчи в евента да е %d!",pname[playerid], hour);
SendClientMessageToAll(0x80FF00FF, string);
}
else
{
SendClientMessage(playerid, 0xB4B5B7FF, "Нямаш права за да ползваш командата!");
}
}
return 1;
}
if(strcmp(cmd,"/invisibleall",true) == 0)
{
if (PlayerInfo[playerid][pEvent] == 1)
{
if(startedevent==0) return  SendClientMessage(playerid, 0xB4B5B7FF, "В момента няма евент!");
if(einvisible2==1)
{
format(string, sizeof(string), "{FF0000}%s{80FF00} направи виски играчи в евента видими!",pname[playerid]);
SendClientMessageToAll(0x80FF00FF, string);
einvisible2=0;
for(new i = 0; i < MAX_PLAYERS; i++)
{
if(inevent[i])
{
SetPlayerColor(i, 0x00FF00FF);
}
}
}
if(einvisible2==0)
{
format(string, sizeof(string), "{FF0000}%s{80FF00} направи виски играчи в евента невидими!",pname[playerid]);
SendClientMessageToAll(0x80FF00FF, string);
einvisible2=1;
for(new i = 0; i < MAX_PLAYERS; i++)
{
if(inevent[i])
{
SetPlayerColor(i, 0xFFFFFF00);
}
}
}
}
else
{
SendClientMessage(playerid, 0xB4B5B7FF, "Нямаш права за да ползваш командата!");
}
return 1;
}
if(strcmp(cmd,"/erefuel",true) == 0)
{
if(inevent[playerid]==0) return SendClientMessage(playerid, 0xB4B5B7FF, "Ти не си в евента!");
if (!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,0xB4B5B7FF,"Ти не си в превозно средство!");
if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 481
&& GetVehicleModel(GetPlayerVehicleID(playerid)) != 509
&& GetVehicleModel(GetPlayerVehicleID(playerid)) != 510
&& GetVehicleModel(GetPlayerVehicleID(playerid)) != 481)
{
if(vehfuel[GetPlayerVehicleID(playerid)]==100)
{
SendClientMessage(playerid,0xB4B5B7FF,"Твоето превозно средство вече има 100 литра бензин!");
return 1;
}
format(string256,256,"Вие заредихте успешно {FFFF00}100{FFFFFF} литра във вашето превозно средство.");
SendClientMessage(playerid,0xFFFFFFFFF,string256);
vehfuel[GetPlayerVehicleID(playerid)]=100;
}
else
{
SendClientMessage(playerid,0xB4B5B7FF,"Не можеш да заредиш това превозно средство с бензин!");
}
return 1;
}
if(strcmp(cmd,"/joinevent",true) == 0)
{
if(eventclosed==1) return SendClientMessage(playerid,0xB4B5B7FF,"Евентът е затворен!");
if(eventmembers>eventlimit-1) return SendClientMessage(playerid,0xB4B5B7FF,"Достигнат е лимитър за влизане в евента!");
if(startedevent==0) return SendClientMessage(playerid,0xB4B5B7FF,"В момента няма евент!");
if(inevent[playerid]==1) return SendClientMessage(playerid,0xB4B5B7FF,"Ти вече си в евент!");
if(GetPlayerVehicleID(playerid)!=0 && spawned[playerid]==1 && eev==0) return SendClientMessage(playerid,0xB4B5B7FF,"Трябва да си пешеходец за да влзеш в евента!");
if(cmn1[playerid]>0) { return SendClientMessage(playerid,0xB4B5B7FF,"Не можеш да влезеш, докато си CMN1!"); }
if(playerInDuel[playerid]==1){ return SendClientMessage(playerid,0xB4B5B7FF,"Не можеш да влезеш, докато си в дуел!");}
if(playerInDMON[playerid]==1){ return SendClientMessage(playerid,0xB4B5B7FF,"Не можеш да влезеш, докато си в DMON!");}
if(PlayerInfo[playerid][pADuty]==1) return SendClientMessage(playerid,0xB4B5B7FF,"Не можеш да влезеш, защото си ADMIN ON-DUTY!");
if(PlayerInfo[playerid][pIFCDuty]==1) return SendClientMessage(playerid,0xB4B5B7FF,"Не можеш да използваш тази команда, докато си IFC ON-DUTY!");
if(playerInDeathmatch[playerid]==true) return SendClientMessage(playerid,0xB4B5B7FF,"В момента не можеш да използваш тази команда!");
if(playerInStreetRace[playerid]==true) return SendClientMessage(playerid,0xB4B5B7FF,"В момента не можеш да използваш тази команда!");
if(PlayerInfo[playerid][pOrganisator]==1) return SendClientMessage(playerid,0xB4B5B7FF,"Не можеш да влезеш, защото си организатора му!");
inevent[playerid]=1;
ResetPlayerWeapons(playerid);
SetPlayerInterior(playerid, eventinterior);
SetPlayerColor(playerid,0x00FF00FF);
eventmembers+=1;
SetPlayerArmour(playerid,0); SetPlayerHealth(playerid,100);
SendClientMessage(playerid, 0xFF9933FF, "CB Channel: Твоят CB Channel беше прехвърлен на 1, защото влезе в евент!");
SetPlayerPos(playerid,eventx,eventy,eventz);
SetPlayerVirtualWorld(playerid,1);
cbchat[playerid] = 1;
if(efight==0 && eenter==0)
{
SendClientMessage(playerid, COLOR_RED , "ВНИМАНИЕ: Не удряй или стреляй и не натискай F, ENTER или TAB преди админа да е позволил !");
}
format(string, sizeof(string), "%s {80FF00}се пресъедини към евента. За да се пресъединиш и ти напиши {FF0000}/joinevent .", pname[playerid]);
SendClientMessageToAll(0xFF0000FF, string);
return 1;
}
if(strcmp(cmd,"/leftevent",true) == 0)
{
if(startedevent==0) return SendClientMessage(playerid,0xB4B5B7FF,"В момента няма евент!");
if(inevent[playerid]==0) return SendClientMessage(playerid,0xB4B5B7FF,"Ти не си в евент!");
SetPlayerHealth(playerid,0);
SendClientMessage(playerid, 0x80FF00FF, "Ти напусна евента!");
return 1;
}
if(strcmp(cmd, "/ramphelp", true)==0)
{
if(PlayerInfo[playerid][pVip]<3 && freevip==0) return SendClientMessage(playerid,0xB4B5B7FF,"Нямаш достатъчно VIP права за да ползваш командата!");
SendClientMessage(playerid,0xFF0000FF,"* Информация за рампите *");
SendClientMessage(playerid,0xFFFFFFFF,"Използвай /ramping за да позволиш/забраниш рампите за себе си.");
SendClientMessage(playerid,0xFFFFFFFF,"Използвай /myramp [1-5] за да смениш твоята рампа.");
SendClientMessage(playerid,0xFFFFFFFF,"За да се появи рампа до теб натисни бутона за стреляне или опитай друг, които ти тръгва!");
return 1;
}
if(strcmp(cmd, "/ramping", true)==0)
{
if(PlayerInfo[playerid][pVip]<3 && freevip==0) return SendClientMessage(playerid,0xB4B5B7FF,"Нямаш достатъчно VIP права за да ползваш командата!");
if(enabledramp[playerid]==0)
{
enabledramp[playerid]=1;
SendClientMessage(playerid,0xFFFF00FF,"Ти позволи рампите за себе си!");
SendClientMessage(playerid,0xFFFF00FF,"За да се появи рампа пред теб натисни бутона за стреляне или опитай друг, които ти тръгва!");
}
else
{
SendClientMessage(playerid,0xFFFF00FF,"Ти забрани рампите за себе си!"); DestroyDynamicObject(rampobject[playerid]);
enabledramp[playerid]=0;
}
return 1;
}
if(strcmp(cmd, "/myramp", true)==0)
{
if(PlayerInfo[playerid][pVip]<3 && freevip==0) return SendClientMessage(playerid,0xB4B5B7FF,"Нямаш достатъчно VIP права за да ползваш командата!");
if(enabledramp[playerid]==0) return SendClientMessage(playerid,0xB4B5B7FF,"Ти не си позволил рампите за себе си!");
new ramp;
tmp = strtok(cmdtext, idx);
ramp = strval(tmp);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /ramp [1-5]");
return 1;
}
if(ramp<1||ramp>5)
{
SendClientMessage(playerid, 0xB4B5B7FF, "Рампите са от 1 до 5!");
return 1;
}
if(enabledramp[playerid]==ramp) return SendClientMessage(playerid,0xB4B5B7FF,"Ти вече си избрал тази рампа!");
SendClientMessage(playerid,0xFFFF00FF,"Ти смени твоята рампа!");
enabledramp[playerid]=ramp;
return 1;
}
if(strcmp(cmd, "/houseview", true)==0)
{
if(PlayerInfo[playerid][pHouseO]==-1) return SendClientMessage(playerid,0xB4B5B7FF,"Ти не притежаваш къща!");
new house = PlayerInfo[playerid][pHouseO];
format(string256,256,"Health пакети: {FBB917}%d",PlayerInfo[playerid][pHealth2]);
SendClientMessage(playerid,0xFFFFFFFF,string256);
format(string256,256,"Armour пакети: {FBB917}%d",PlayerInfo[playerid][pArmour2]);
SendClientMessage(playerid,0xFFFFFFFF,string256);
return 1;
}
if(strcmp(cmd, "/househelp", true)==0)
{
if(PlayerInfo[playerid][pHouseO]==-1) return SendClientMessage(playerid,0xB4B5B7FF,"Ти не притежаваш къща!");
SendClientMessage(playerid,0x00FF40FF,"Команди: /sellhouse /enter /exit /home /lockhouse /unlockhouse /health /armour");
SendClientMessage(playerid,0x00FF40FF,"Команди: /psellhouse /housevsave /houseview /respawnveh /housev /housevcolor /houseaccept(/ha)");
SendClientMessage(playerid,0x00FF40FF,"Команди: /housecancel(/hc) /myveh /houseswitch /houseswitchaccept(/hsa) /houseswitchcancel(/hsc)");
return 1;
}
if(strcmp(cmd, "/bizhelp", true)==0)
{
if(PlayerInfo[playerid][pBizO]==-1) return SendClientMessage(playerid,0xB4B5B7FF,"Ти не притежаваш бизнес!");
SendClientMessage(playerid,0x00CCCCFF,"Команди: /sellbiz /enter /exit /biz /lockbiz /unlockbiz /psellbiz");
SendClientMessage(playerid,0x00CCCCFF,"Команди: /bizinfo /bizname /fee /earnings /bizaccept(/ba) /bizcancel(/bc)");
SendClientMessage(playerid,0x00CCCCFF,"Команди: /bizswitch /bizswitchaccept(/bsa) /bizswitchcancel(/bsc)");
return 1;
}
if(strcmp(cmd, "/biz", true)==0)
{
if(PlayerInfo[playerid][pBizO]==-1) return SendClientMessage(playerid,0xB4B5B7FF,"Ти не притежаваш бизнес!");
SendClientMessage(playerid,0x00CCCCFF,"Следвай червения маркер, той ще те отведе до твоя бизнес!");
new playersBiz=PlayerInfo[playerid][pBizO];
new Float: playerBizX=BizInfo[playersBiz][bX];
new Float: playerBizY=BizInfo[playersBiz][bY];
new Float: playerBizZ=BizInfo[playersBiz][bZ];
SetPlayerCheckpoint(playerid, playerBizX,playerBizY,playerBizZ, 4.0);
gpsOn[playerid]=true;
return 1;
}
if(strcmp(cmd, "/home", true)==0)
{
if(PlayerInfo[playerid][pHouseO]==-1) return SendClientMessage(playerid,0xB4B5B7FF,"Ти не притежаваш къща!");
SendClientMessage(playerid,0x00FF40FF,"Следвай червения маркер, той ще те отведе до твоята къща!");
new playersHouse=PlayerInfo[playerid][pHouseO];
new Float: playerHouseX=HouseInfo[playersHouse][hX];
new Float: playerHouseY=HouseInfo[playersHouse][hY];
new Float: playerHouseZ=HouseInfo[playersHouse][hZ];
SetPlayerCheckpoint(playerid, playerHouseX,playerHouseY,playerHouseZ, 4.0);
gpsOn[playerid]=true;
return 1;
}

if(strcmp(cmd, "/streetrace", true)==0)
{
if(PlayerInfo[playerid][pAdmin]>=5)
{
format(string256,256,"StreetRace: Състезанието ще започне след 3 секунди!");
SendClientMessage(playerid, COLOR_STREETRACE, string256);
streetRaceStartTimer=3;
}
return 1;
}

if(strcmp(cmd, "/startrace", true)==0)
{
if(PlayerInfo[playerid][pAdmin]>=5)
{
if(missionActive==MISSION_MONEYBOX)
{
whoHaveMoneyBox=-1;
}
missionActive=MISSION_STREETRACE;
for(new allPlayers; allPlayers<MAX_PLAYERS; allPlayers++)
{
if(IsPlayerConnected(allPlayers))
{
if(missionActive==MISSION_MONEYBOX)
{
playerWithMoneyBox[allPlayers]=false;
SendClientMessage(allPlayers, 0x40BF00FF,"SERVER: Moneybox-а свърши и никой не успя да занесе раницата!"); //todo streetrace
}
GameTextForPlayer(allPlayers, "~w~Mission~n~~b~StreetRace", 1000, 1);
PlayerPlaySound(allPlayers, 1056, 0.0, 0.0, 0.0);
new stringSRace[256];
streetRaceTypeIndex=randomex(0,MAX_RACES);
GivePlayerStreetRacePoint(allPlayers);
format(stringSRace,256,"SERVER: Време е за Streetrace тип %s! Отиди до червения маркер и чакай състезанието да започне!",StreetRaceInfo[streetRaceTypeIndex][stTypeName]);
SendClientMessage(allPlayers, COLOR_STREETRACE,stringSRace);
if(StreetRaceInfo[streetRaceTypeIndex][stWinTime]>0)
{
format(stringSRace,256,"Streetrace: Най-доброто време на това състезание е %d секунди, отбелязано от %s",StreetRaceInfo[streetRaceTypeIndex][stWinTime],StreetRaceInfo[streetRaceTypeIndex][stWinner]);
SendClientMessage(allPlayers, COLOR_STREETRACE,stringSRace);
}
else if(StreetRaceInfo[streetRaceTypeIndex][stWinTime]==0)
{
format(stringSRace,256,"Streetrace: Все още няма рекорд за това състезание");
SendClientMessage(allPlayers, COLOR_STREETRACE,stringSRace);
}
}
}
}
return 1;
}
if(strcmp(cmd, "/startdm", true)==0)
{
if(PlayerInfo[playerid][pAdmin]>=5)
{
deathmatchStarted=false;
deathmatchStartTimer=0;
missionActive=MISSION_DEATHMATCH;
for(new allPlayers; allPlayers<MAX_PLAYERS; allPlayers++)
{
if(IsPlayerConnected(allPlayers))
{
GivePlayerDeathmatchPoint(allPlayers);
GameTextForPlayer(allPlayers, "~w~Mission~n~~r~Deathmatch", 1000, 1);
PlayerPlaySound(allPlayers, 1056, 0.0, 0.0, 0.0);
}
}
new randomGun=randomex(1,5);
new gunName[30];
if(randomGun==1)
{
format(gunName,30,"Katana");
deathmatchGun = 8;
}
if(randomGun==2)
{
format(gunName,30,"Chainsaw");
deathmatchGun = 9;
}
if(randomGun==3)
{
format(gunName,30,"Molotov");
deathmatchGun = 18;
}
if(randomGun==4)
{
format(gunName,30,"Deagle");
deathmatchGun = 24;
}
if(randomGun==5)
{
format(gunName,30,"Uzi");
deathmatchGun = 28;
}
format(string256,256,"SERVER: Време е за Deathmatch с оръжие %s! Отиди до червения маркер и чакай битката да започне!",gunName);
SendClientMessageToAll(COLOR_DEATHMATCH,string256);
}
return 1;
}
if(strcmp(cmd, "/ahelp", true)==0||strcmp(cmd, "/ah", true)==0)
{
new string2230[512];
new string2230result[1500];
if(PlayerInfo[playerid][pTest]==0 && PlayerInfo[playerid][pAdmin]==0)
{
new closeddialog=3500;
strcat(string2230result,"{B4B5B7}Нямаш права за да ползваш командата!\n");
ShowPlayerDialog(playerid,closeddialog,DIALOG_STYLE_MSGBOX,"{FF0000}АДМИН КОМАНДИ:",string2230result,"Изход","");
return 1;
}
if(PlayerInfo[playerid][pTest]==1)
{
strcat(string2230result,"{00FF00}---= Level Test Admin Commands =---\n");
format(string2230,512,"{FFFF00}/mute /muted /unmute /spec /specoff /ta /kick");
strcat(string2230result, string2230);
new closeddialog=3500;
ShowPlayerDialog(playerid,closeddialog,DIALOG_STYLE_MSGBOX,"{FF0000}АДМИН КОМАНДИ:",string2230result,"Изход","");
}
//other type - location - open
if(PlayerInfo[playerid][pAdmin]==1)
{
//			forothertype=1;
strcat(string2230result,"{00FF00}---= Level 1 Admin Commands =---\n");
format(string2230,512,"{FFFF00}/mute /muted /unmute /spec /specoff /kick\n\n");
strcat(string2230result, string2230);
new closeddialog=3500;
ShowPlayerDialog(playerid,closeddialog,DIALOG_STYLE_MSGBOX,"{FF0000}АДМИН КОМАНДИ:",string2230result,"Изход","");
}
if(PlayerInfo[playerid][pAdmin]==2)
{
//			forothertype=1;
strcat(string2230result,"{00FF00}---= Level 1 Admin Commands =---\n");
format(string2230,512,"{FFFF00}/mute /muted /unmute /spec /specoff /kick\n\n");
strcat(string2230result, string2230);
format(string2230,512,"{00FF00}---= Level 2 Admin Commands =---\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFF00}/mute /muted /ismuted /kick /ban /a /ip /spec /specoff /aka /jailed /unmute\n/slap /akill /aduty /adutyskin /togadmin /check /jail /unjail /isjailed\n\n");
strcat(string2230result, string2230);
new closeddialog=3500;
ShowPlayerDialog(playerid,closeddialog,DIALOG_STYLE_MSGBOX,"{FF0000}АДМИН КОМАНДИ:",string2230result,"Изход","");
}
if(PlayerInfo[playerid][pAdmin]==3)
{
//			forothertype=1;
strcat(string2230result,"{00FF00}---= Level 1 Admin Commands =---\n");
format(string2230,512,"{FFFF00}/mute /muted /unmute /spec /specoff /kick\n\n");
strcat(string2230result, string2230);
format(string2230,512,"{00FF00}---= Level 2 Admin Commands =---\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFF00}/mute /muted /ismuted /kick /ban /a /ip /spec /specoff /aka /jailed /unmute\n/slap /akill /aduty /adutyskin /togadmin /check /jail /unjail /isjailed\n\n");
strcat(string2230result, string2230);
format(string2230,512,"{00FF00}---= Level 3 Admin Commands =---\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFF00}/nban /mark /gotomark /setskin /setint /setworld /warn /gotodesert /readta /ta\n/sethp /setarmour /givegun /clearchat /gotomc /crl /cmb /ajail /veh /rban\n/gotols /gotolv /gotosf /amute /destroycar /destroycars /mute2 /gotobank\n/bizid /houseid /lastonline /gotohveh /checkbank /nwarn /block /togcb\n\n");
strcat(string2230result, string2230);
new closeddialog=3500;
ShowPlayerDialog(playerid,closeddialog,DIALOG_STYLE_MSGBOX,"{FF0000}АДМИН КОМАНДИ:",string2230result,"Изход","");
}
if(PlayerInfo[playerid][pAdmin]==4)
{
//			forothertype=1;
strcat(string2230result,"{00FF00}---= Level 1 Admin Commands =---\n");
format(string2230,512,"{FFFF00}/mute /muted /unmute /spec /specoff /kick\n\n");
strcat(string2230result, string2230);
format(string2230,512,"{00FF00}---= Level 2 Admin Commands =---\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFF00}/mute /muted /ismuted /kick /ban /a /ip /spec /specoff /aka /jailed /unmute\n/slap /akill /aduty /adutyskin /togadmin /check /jail /unjail /isjailed\n\n");
strcat(string2230result, string2230);
format(string2230,512,"{00FF00}---= Level 3 Admin Commands =---\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFF00}/nban /mark /gotomark /setskin /setint /setworld /warn /gotodesert /readta /ta\n/sethp /setarmour /givegun /clearchat /gotomc /crl /cmb /ajail /veh /rban\n/gotols /gotolv /gotosf /amute /destroycar /destroycars /mute2 /gotobank\n/bizid /houseid /lastonline /gotohveh /checkbank /nwarn /block /togcb\n\n");
strcat(string2230result, string2230);
format(string2230,512,"{00FF00}---= Level 4 Admin Commands =---\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFF00}/startvote /endvote /arefuelall /checkfuelcars /tspec /tgoto /timemute /timejail /istogged\n/cbccheck /fixveh /int /gotoveh /weather /arefuel /jump /speed /fly /isadmin /islevel /isevent\n/ismanage /isvip /isleader /allevent /aviptext /acuff /auncuff /acuffed /god /afon /afoff /respawncars\n/crespawncars /checkrescars /askrescars /caskrescars /checkaskers /checkwarns /ncheckwarns\n\n");
strcat(string2230result, string2230);
new closeddialog=3500;
ShowPlayerDialog(playerid,closeddialog,DIALOG_STYLE_MSGBOX,"{FF0000}АДМИН КОМАНДИ:",string2230result,"Изход","");
}
if(PlayerInfo[playerid][pAdmin]>=5)
{
strcat(string2230result,"{00FF00}---= Level 1 Admin Commands =---\n");
format(string2230,512,"{FFFF00}/mute /muted /unmute /spec /specoff /kick\n\n");
strcat(string2230result, string2230);
format(string2230,512,"{00FF00}---= Level 2 Admin Commands =---\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFF00}/mute /muted /ismuted /kick /ban /a /ip /spec /specoff /aka /jailed /unmute\n/slap /akill /aduty /adutyskin /togadmin /check /jail /unjail /isjailed\n\n");
strcat(string2230result, string2230);
format(string2230,512,"{00FF00}---= Level 3 Admin Commands =---\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFF00}/nban /mark /gotomark /setskin /setint /setworld /warn /gotodesert /readta /ta\n/sethp /setarmour /givegun /clearchat /gotomc /crl /cmb /ajail /veh /rban\n/gotols /gotolv /gotosf /amute /destroycar /destroycars /mute2 /gotobank\n/bizid /houseid /lastonline /gotohveh /checkbank /nwarn /block /togcb\n\n");
strcat(string2230result, string2230);
format(string2230,512,"{00FF00}---= Level 4 Admin Commands =---\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFF00}/startvote /endvote /arefuelall /checkfuelcars /tspec /tgoto /timemute /timejail /istogged\n/cbccheck /fixveh /int /gotoveh /weather /arefuel /jump /speed /fly /isadmin /islevel /isevent\n/ismanage /isvip /isleader /allevent /aviptext /acuff /auncuff /acuffed /god /afon /afoff /respawncars\n/crespawncars /checkrescars /askrescars /caskrescars /checkaskers /checkwarns /ncheckwarns\n\n");
strcat(string2230result, string2230);
format(string2230,512,"{00FF00}---= Level 5 Admin Commands =---\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFF00}/makeadmin /makeevent /makeifc /getifc /makemanage /getadmin /makeleader /giveveh /getveh\n/aunmute /spawnpv /respawnv /makegleader /getleader /settimeall /givelevel\n/givees /giveesall /agiveep /giveepall /givecashall /givecash /gmx /removeevent /removemanage\n/setcash /setepskill /saveserver /freevip /etest /dtest /muteall /unmuteall /takemoney");
strcat(string2230result, string2230);
new closeddialog=3500;
ShowPlayerDialog(playerid,closeddialog,DIALOG_STYLE_MSGBOX,"{FF0000}АДМИН КОМАНДИ:",string2230result,"Изход","");
}
return 1;
}
if(strcmp(cmd, "/site", true) == 0)
{
if(sitec[playerid] == 0)
{
format(string256, 256, "* Вие премахнахте сайта от екрана *");
SendClientMessage(playerid, 0xFFFF00FF, string256);
TextDrawHideForPlayer(playerid, intensetext);
sitec[playerid] = 1;
return 1;
}
if(sitec[playerid] == 1)
{
format(string256, 256, "* Вие сложихте сайта на екрана *");
SendClientMessage(playerid, 0xFFFF00FF, string256);
TextDrawShowForPlayer(playerid, intensetext);
sitec[playerid] = 0;
return 1;
}
return 1;
}
if(strcmp(cmd, "/time", true) == 0)
{
if(timec[playerid] == 0)
{
format(string256, 256, "* Вие премахнахте вашия часовника и дата от екрана *");
SendClientMessage(playerid, 0xFFFF00FF, string256);
TextDrawHideForPlayer(playerid, ClockDate);
timec[playerid] = 1;
return 1;
}
if(timec[playerid] == 1)
{
format(string256, 256, "* Вие сложихте вашия часовник и дата на екрана *");
SendClientMessage(playerid, 0xFFFF00FF, string256);
TextDrawShowForPlayer(playerid, ClockDate);
timec[playerid] = 0;
return 1;
}
return 1;
}
if(strcmp(cmd, "/fixveh", true) == 0)
{
if(PlayerInfo[playerid][pAdmin] < 4)
{
SendClientMessage(playerid, 0xB4B5B7FF, "Нямаш права за да ползваш командата!");
return 1;
}
if(IsPlayerInAnyVehicle(playerid))
{
SetVehicleHealth(GetPlayerVehicleID(playerid), 1000.0);
RepairVehicle(GetPlayerVehicleID(playerid));
PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
SendClientMessage(playerid, 0xFFFFFFFF, "* Вие поправихте вашето превозно средство *");
}
return 1;
}
if(strcmp(cmd, "/givecashall", true) == 0)
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /givecashall [cash]");
return 1;
}
new money;
money = strval(tmp);
if (PlayerInfo[playerid][pAdmin] >= 5)
{
for(new i = 0; i < MAX_PLAYERS; i++)
{
GivePlayerCash(i, money);
}
format(string256,256, "ADMIN: %s даде $%d на всички играчи в сървъра!", pname[playerid], money);
SendClientMessageToAll(0xE60000FF,string256);
}
else
{
SendClientMessage(playerid, 0xB4B5B7FF, "Нямаш права за да ползваш командата!");
}
return 1;
}
if(strcmp(cmd, "/giveepall", true) == 0)
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /giveepall [EP]");
return 1;
}
new exp;
exp = strval(tmp);
if (PlayerInfo[playerid][pAdmin] >= 5)
{
for(new i = 0; i < MAX_PLAYERS; i++)
{
GivePlayerEP(i,exp);
}
format(string256,256, "ADMIN: %s даде %d EP на всички играчи в сървъра!", pname[playerid], exp);
SendClientMessageToAll(0xE60000FF,string256);
}
else
{
SendClientMessage(playerid, 0xB4B5B7FF, "Нямаш права за да ползваш командата!");
}
return 1;
}
if(strcmp(cmd, "/giveesall", true) == 0)
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /giveesall [EP]");
return 1;
}
new exp;
exp = strval(tmp);
if (PlayerInfo[playerid][pAdmin] >= 5)
{
for(new i = 0; i < MAX_PLAYERS; i++)
{
GivePlayerEPS(i,exp);
}
format(string256,256, "ADMIN: %s даде %d EP Skill на всички играчи в сървъра!", pname[playerid], exp);
SendClientMessageToAll(0xE60000FF,string256);
}
else
{
SendClientMessage(playerid, 0xB4B5B7FF, "Нямаш права за да ползваш командата!");
}
return 1;
}
if(strcmp(cmd, "/settime", true) == 0)
{
if(IsPlayerConnected(playerid))
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /settime [playerid] [time]");
return 1;
}
para1[playerid] = ReturnUser(tmp);
if(startedevent==0) return SendClientMessage(playerid, 0xB4B5B7FF, "В момента няма евент!");
if(para1[playerid] == INVALID_PLAYER_ID)
{
SendClientMessage(playerid, 0xB4B5B7FF, "Този играч не е в сървъра!");
return 1;
}
if(inevent[playerid]==0)
{
SendClientMessage(playerid, 0xB4B5B7FF, "Този играч не е в евента!");
return 1;
}
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /settime [playerid] [time]");
return 1;
}
new hour;
hour = strval(tmp);
if(hour<0 || hour>23) return SendClientMessage(playerid, 0xB4B5B7FF, "Часът трябва да бъде от 0 до 23!");
if (PlayerInfo[playerid][pEvent] >= 1)
{
SetPlayerTime(para1[playerid], hour, 0);
format(string256,256, "* %s смени твоя час на %dч. *",pname[playerid], hour);
SendClientMessage(para1[playerid], 0xFF0000, string256);
}
else
{
SendClientMessage(playerid, 0xB4B5B7FF, "Нямаш права за да ползваш командата!");
}
}
return 1;
}
if(strcmp(cmd, "/settimeall", true) == 0)
{
if(IsPlayerConnected(playerid))
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /settimeall [time]");
return 1;
}
new hour;
hour = strval(tmp);
if(hour<0 || hour>23) return SendClientMessage(playerid, 0xB4B5B7FF, "Часът трябва да бъде от 0 до 23!");
if (PlayerInfo[playerid][pAdmin] >= 5)
{
SetWorldTime(hour);
format(string256,256, "ADMIN: Часът в сървъра беше сменен от %s на %d",pname[playerid], hour);
SendClientMessageToAll(0xE60000FF, string256);
}
else
{
SendClientMessage(playerid, 0xB4B5B7FF, "Нямаш права за да ползваш командата!");
}
}
return 1;
}
if(strcmp(cmd, "/weather", true) == 0)
{
if(IsPlayerConnected(playerid))
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /weather [0-45]");
return 1;
}
new hour;
hour = strval(tmp);
if(hour<0 || hour>45) return SendClientMessage(playerid, 0xB4B5B7FF, "Времето трябва да бъде от 0 до 45!");
if (PlayerInfo[playerid][pAdmin] >= 4)
{
SetWeather(hour);
format(string256,256, "ADMIN: Времето в сървъра беше сменено от %s на id: %d",pname[playerid], hour);
SendClientMessageToAll(0xE60000FF, string256);
}
else
{
SendClientMessage(playerid, 0xB4B5B7FF, "Нямаш права за да ползваш командата!");
}
}
return 1;
}
if(strcmp(cmd, "/caskrescars", true) == 0)
{
if(PlayerInfo[playerid][pAdmin] >3 || PlayerInfo[playerid][pManage]==1)
{
if(respawnVehsVoteTimer==0) { return SendClientMessage(playerid, 0xB4B5B7FF, "В момента няма гласуване!"); }
format(string256, 256, "ADMIN: %s отмени гласуването за RESPAWN на превозните средства!",pname[playerid]);
SendClientMessageToAll(0xE60000FF, string256);
respawnVehsVoteTimer = 0;
for(new i=0; i < MAX_PLAYERS; i++)
{
PlayerInfo[i][pNone] = 0;
PlayerInfo[i][pYes] = 0;
PlayerInfo[i][pNo] = 0;
}
}
else
{
SendClientMessage(playerid, 0xB4B5B7FF, "Нямаш права за да ползваш командата!");
}
return 1;
}
if(strcmp(cmd, "/crespawncars", true) == 0)
{
if(PlayerInfo[playerid][pAdmin] >3 || PlayerInfo[playerid][pManage]==1)
{
if(respawnVehsTimer==0) { return SendClientMessage(playerid, 0xB4B5B7FF, "В момента няма пуснат брояч за RESPAWN CARS!"); }
format(string256, 256, "ADMIN: %s отмени RESPAWN на превозните средства!",pname[playerid]);
SendClientMessageToAll(0xE60000FF, string256);
respawnVehsTimer=0;
}
else
{
SendClientMessage(playerid, 0xB4B5B7FF, "Нямаш права за да ползваш командата!");
}
return 1;
}
if(strcmp(cmd, "/endvote", true) == 0)
{
if(PlayerInfo[playerid][pAdmin] >3 || PlayerInfo[playerid][pEvent]==1)
{
if(voteTimer==0) { return SendClientMessage(playerid, 0xB4B5B7FF, "В момента няма гласуване!"); }
format(string256, 256, "ADMIN: %s отмени гласуването, въпроса беше - %s",pname[playerid], voteQuestion);
SendClientMessageToAll(0xE60000FF, string256);
voteTimer = 0;
for(new i=0; i < MAX_PLAYERS; i++)
{
PlayerInfo[i][pNone] = 0;
PlayerInfo[i][pYes] = 0;
PlayerInfo[i][pNo] = 0;
}
}
else
{
SendClientMessage(playerid, 0xB4B5B7FF, "Нямаш права за да ползваш командата!");
}
return 1;
}
if(strcmp(cmd,"/arefuel",true)==0)
{
if(PlayerInfo[playerid][pAdmin] < 4)
{
return SendClientMessage(playerid, 0xB4B5B7FF, "Нямаш права за да ползваш командата!");
}
if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 481
&& GetVehicleModel(GetPlayerVehicleID(playerid)) == 509
&& GetVehicleModel(GetPlayerVehicleID(playerid)) == 510
&& GetVehicleModel(GetPlayerVehicleID(playerid)) == 481)
{
return SendClientMessage(playerid, 0xB4B5B7FF, "Това превозно средство не може да бъде заредено с бензин!");
}
if(GetPlayerVehicleID(playerid) == 0)
{
return SendClientMessage(playerid,0xB4B5B7FF,"Ти не си в превозно средство!");
}
if(vehfuel[GetPlayerVehicleID(playerid)] == 100)
{
return SendClientMessage(playerid, 0xB4B5B7FF, "Твоето превозно средство има 100 литра бензин!");
}
if(PlayerInfo[playerid][pWanted] >= 1)
{
SendClientMessage(playerid, 0xB4B5B7FF, "Не можеш да ползваш тази команда, докато си заподозрян!");
return 1;
}
if(PlayerInfo[playerid][pPlayerRefuelTimer]>0)
{
return SendClientMessage(playerid,0xB4B5B7FF,"Не са минали 6 минути от последното използване на командата!");
}
SendClientMessage(playerid,0xFFFF00FF,"Ти добави 100 литра бензин на твоето превозно средство");
vehfuel[GetPlayerVehicleID(playerid)] = 100; PlayerInfo[playerid][pPlayerRefuelTimer] = 6*60;
return 1;
}
if(strcmp(cmd,"/arefuelall",true)==0)
{
if(PlayerInfo[playerid][pAdmin] < 4)
{
return SendClientMessage(playerid, 0xB4B5B7FF, "Нямаш права за да ползваш командата!");
}
format(string256,256,"REFUEL CARS: %s презареди всички превозни средства !",pname[playerid]);
SendClientMessageToAll(0xE60000FF,string256);
isMadeRefuel=1; hhrefuel=hours; mmrefuel=minutes; ssrefuel=seconds; format(playerrefuel,115,"%s",pname[playerid]);
for(new cars = 0; cars < MAX_VEHICLES; cars++)
vehfuel[cars] = 100;
return 1;
}
if(strcmp(cmd,"/checkfuelcars",true)==0)
{
if(PlayerInfo[playerid][pAdmin] < 4)
{
return SendClientMessage(playerid, 0xB4B5B7FF, "Нямаш права за да ползваш командата!");
}
if(isMadeRefuel==0) { return SendClientMessage(playerid, 0xFFFFFFFF, "SERVER: Днес REFUEL CARS не е бил правен."); }
format(string256,256,"SERVER: Последният REFUEL CARS е направен от %s на %d.%d.%d г. в %d:%d:%d часа.",playerrefuel,day,month,year,hhrefuel,mmrefuel,ssrefuel);
SendClientMessage(playerid, 0xFFFFFFFF,string256);
return 1;
}
if(strcmp(cmd, "/respawncars", true) == 0)
{
if(PlayerInfo[playerid][pAdmin] >3 || PlayerInfo[playerid][pManage]==1)
{
format(string256, 256, "ADMIN: All vehicles will be respawned after 10 secounds by %s",pname[playerid]);
SendClientMessageToAll(0xE60000FF, string256);
respawnVehsTimer=10;
}
else
{
SendClientMessage(playerid, 0xB4B5B7FF, "Нямаш права за да ползваш командата!");
}
return 1;
}
if(strcmp(cmd, "/askrescars", true) == 0)
{
if(PlayerInfo[playerid][pAdmin] >3 || PlayerInfo[playerid][pManage]==1)
{
if(respawnVehsTimer!=0) { return SendClientMessage(playerid, 0xB4B5B7FF, "В момента има очакване за Respawn Cars!"); }
if(respawnVehsVoteTimer!=0 || voteTimer!=0) { return SendClientMessage(playerid, 0xB4B5B7FF, "В момента има гласуване!"); }
format(string256, 256, "ADMIN: %s стартира гласуване за RESPAWN на превозните средства!",pname[playerid]);
SendClientMessageToAll(0xE60000FF, string256);
format(string256, 256, "VOTE RESPAWN CARS: Използвайте /vote за да гласувате, имате 15 секунди!",pname[playerid]);
SendClientMessageToAll(0xE60000FF, string256);
respawnVehsVoteTimer = 2*15;
for(new i=0; i < MAX_PLAYERS; i++)
{
PlayerInfo[i][pNone] = 0;
PlayerInfo[i][pYes] = 0;
PlayerInfo[i][pNo] = 0;
}
}
else
{
SendClientMessage(playerid, 0xB4B5B7FF, "Нямаш права за да ползваш командата!");
}
return 1;
}
if(strcmp(cmd, "/startvote", true) == 0)
{
if(PlayerInfo[playerid][pAdmin] >3 || PlayerInfo[playerid][pEvent]==1)
{
new length = strlen(cmdtext);
while ((idx < length) && (cmdtext[idx] <= ' '))
{
idx++;
}
new offset = idx;
new result[256];
while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
{
result[idx - offset] = cmdtext[idx];
idx++;
}
result[idx - offset] = EOS;
if(!strlen(result))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /startvote [question]");
return 1;
}
if(voteTimer!=0) { return SendClientMessage(playerid, 0xB4B5B7FF, "В момента има гласуване!"); }
if(respawnVehsVoteTimer!=0) { return SendClientMessage(playerid, 0xB4B5B7FF, "В момента има гласуване!"); }
format(string256, 256, "ADMIN: %s стартира гласуване с въпрос - %s",pname[playerid], result);
SendClientMessageToAll(0xE60000FF, string256);
format(string256, 256, "VOTE: Използвайте /poll за да гласувате, имате 30 секунди!",pname[playerid], result);
SendClientMessageToAll(0xE60000FF, string256);
voteTimer = 15;
format(voteQuestion, 256, "%s", result);
for(new i=0; i < MAX_PLAYERS; i++)
{
PlayerInfo[i][pNone] = 0;
PlayerInfo[i][pYes] = 0;
PlayerInfo[i][pNo] = 0;
}
voteTimer = 15;
}
else
{
SendClientMessage(playerid, 0xB4B5B7FF, "Нямаш права за да ползваш командата!");
}
return 1;
}
if(strcmp(cmd, "/c", true) == 0)
{
if(startedevent==1) return  SendClientMessage(playerid, 0xB4B5B7FF, "В момента има евент и не можеш да пускаш брояч!");
if(activecount == 0)
{
format(string256,256,"*** %s started count ***",pname[playerid]);
SendClientMessageToAll(0x33CCFFFF,string256);
GameTextForAll("~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~g~-~y~ 3 ~g~-", 1500, 3);
activecount = 1;
counttime0 = 2;
}
else
{
SendClientMessage(playerid, 0xB4B5B7FF, "В момента има активен брояч!");
}
return 1;
}
if(strcmp(cmd, "/vote", true) == 0)
{
if(respawnVehsVoteTimer <1)
{
format(string256, 256, "В момента няма гласуване!");
SendClientMessage(playerid, 0xB4B5B7FF, string256);
return 1;
}
if(PlayerInfo[playerid][pYes] == 1 || PlayerInfo[playerid][pNo] == 1)
{
format(string256, 256, "Ти вече си гласувал за RESPAWN CARS!");
SendClientMessage(playerid, 0xB4B5B7FF, string256);
return 1;
}
format(string256, 256, "{60FA00}Да бъдат ли RESPAWN-нати превозните средства ?",voteQuestion);
ShowPlayerDialog(playerid,11,DIALOG_STYLE_MSGBOX,"{60FA00}VOTЕ:",string256,"ДА","НЕ");
return 1;
}
if(strcmp(cmd, "/poll", true) == 0)
{
if(voteTimer <1)
{
format(string256, 256, "В момента няма гласуване!");
SendClientMessage(playerid, 0xB4B5B7FF, string256);
return 1;
}
if(PlayerInfo[playerid][pYes] == 1 || PlayerInfo[playerid][pNo] == 1)
{
format(string256, 256, "Ти вече си гласувал!");
SendClientMessage(playerid, 0xB4B5B7FF, string256);
return 1;
}
format(string256, 256, "{60FA00}%s",voteQuestion);
ShowPlayerDialog(playerid,11,DIALOG_STYLE_MSGBOX,"VOTЕ:",string256,"ДА","НЕ");
return 1;
}
if(strcmp(cmd, "/rnmute", true) == 0)
{
new result[256];
tmp=strtok(cmdtext, idx);
format(result,256,"%s",strval(tmp));
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /rnmute [nickname] [reason] [time]");
return 1;
}
new result2[256];
tmp=strtok(cmdtext, idx);
format(result2,256,"%s",strval(tmp));
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /rnmute [nickname] [reason] [time]");
return 1;
}
new time=2;
if (PlayerInfo[playerid][pAdmin]>2)
{
format(string115, 115, "%s.ini",result);
if(dini_Exists(string115))
{
dini_IntSet(string115, "pMuted", time*60);
for(new i=0; i<MAX_PLAYERS; i++)
{
if(strcmp(result,pname[i],true)==0)
{
PlayerInfo[i][pMuted]=time*60;
}
}
format(string115,115,"ADMIN: %s was R&N muted by %s for %d minutes [Reason: %s]", result,pname[playerid],time,result2);
SendClientMessageToAll(COLOR_RED,string115);
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Този nickname не съществува!");
}
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
}
return 1;
}
if(strcmp(cmd, "/destroycars", true)== 0)
{
if(PlayerInfo[playerid][pAdmin] >2){
if(spawnedcars>0)
{
SendClientMessage(playerid, 0xB4B5B7FF, "Всички спаунати превозни средства са унищожени!"); }
if(spawnedcars==0)
{
SendClientMessage(playerid, 0xB4B5B7FF, "Няма спаунати превозни средства!");
return 1;
}
for(new aveh=0;aveh<MAX_VEHICLES;aveh++)
{
if(VehicleInfo[aveh][vAdminVehSpawnedBy] !=-1)
{
spawnedcars=0;
DestroyVehicle(aveh);
}
}
}
else
{
SendClientMessage(playerid, 0xB4B5B7FF, "Нямаш права за да ползваш командата!");
}
return 1;
}
if(strcmp(cmd, "/destroycar", true)== 0)
{
if(PlayerInfo[playerid][pAdmin] >2)
{
if(GetPlayerVehicleID(playerid)==0)
{
SendClientMessage(playerid, 0xB4B5B7FF, "Ти не си в превозно средство!");
return 1;
}
SendClientMessage(playerid, 0xB4B5B7FF, "Ти унищожи превозното средство!");
if(VehicleInfo[GetPlayerVehicleID(playerid)][vAdminVehSpawnedBy] !=-1)
{
spawnedcars-=1;
}
DestroyVehicle(GetPlayerVehicleID(playerid));
}
else
{
SendClientMessage(playerid, 0xB4B5B7FF, "Нямаш права за да ползваш командата!");
}
return 1;
}
if(strcmp(cmd, "/plate", true) == 0)
{
if(IsPlayerInRangeOfPoint(playerid, 10, 1838.5139,-1856.2627,13.3828) || IsPlayerInRangeOfPoint(playerid, 10, -1786.8502,1205.3788,25.1250) || IsPlayerInRangeOfPoint(playerid, 10, 2005.9323,2298.5537,10.8203))
{
if(IsPlayerInRangeOfPoint(playerid, 10, 2005.9323,2298.5537,10.8203))
{
if(BizInfo[1][bOwner]==0)
{
SendClientMessage(playerid, 0xB4B5B7FF, "Бизнесът няма притежател и не можеш да смениш текста на превозното си средство!");
return 1;
}
tmp = strtok(cmdtext, idx);
if(!strlen(tmp)) return SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /plate [text]");
if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си шофьр!");
if(strlen(tmp)<1 || strlen(tmp)>8)
{
SendClientMessage(playerid,0xB4B5B7FF,"Символите трябва да са от 1 до 8!");
return 1;
}
if(PlayerInfo[playerid][pCash] >= 500)
{
GivePlayerCash(playerid, -500);
new vehicleid = GetPlayerVehicleID(playerid);
SetVehicleNumberPlate(vehicleid,tmp);
RemovePlayerFromVehicle(playerid);
new Float:x, Float:y, Float:z, Float:zr;
new vh;
vh = GetPlayerVehicleID(playerid);
GetVehiclePos(vh, x, y, z);
GetVehicleZAngle(vh, zr);
RemovePlayerFromVehicle(playerid);
SetVehicleToRespawn(vh);
SetVehiclePos(vh, x, y, z);
SetVehicleZAngle(vh, zr);
SendClientMessage(playerid, 0xFFFFFFFF, "Ти промени текста на твоята кола!");
BizInfo[2][bEarnings]+=350;
for(new i = GetVehiclePoolSize(); i > 0; i--)
{
SetVehicleToRespawn(playerid);
}
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Трябва да имаш $500 за да смениш символите на превозното си средство!");
}
}
if(IsPlayerInRangeOfPoint(playerid, 10, -1786.8502,1205.3788,25.1250))
{
if(BizInfo[2][bOwner]==0)
{
SendClientMessage(playerid, 0xB4B5B7FF, "Бизнесът няма притежател и не можеш да смениш текста на превозното си средство!");
return 1;
}
tmp = strtok(cmdtext, idx);
if(!strlen(tmp)) return SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /plate [text]");
if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си шофьр!");
if(strlen(tmp)<1 || strlen(tmp)>8)
{
SendClientMessage(playerid,0xB4B5B7FF,"Символите трябва да са от 1 до 8!");
return 1;
}
if(PlayerInfo[playerid][pCash] >= 500)
{
GivePlayerCash(playerid, -500);
new vehicleid = GetPlayerVehicleID(playerid);
SetVehicleNumberPlate(vehicleid,tmp);
RemovePlayerFromVehicle(playerid);
new Float:x, Float:y, Float:z, Float:zr;
new vh;
vh = GetPlayerVehicleID(playerid);
GetVehiclePos(vh, x, y, z);
GetVehicleZAngle(vh, zr);
RemovePlayerFromVehicle(playerid);
SetVehicleToRespawn(vh);
SetVehiclePos(vh, x, y, z);
SetVehicleZAngle(vh, zr);
SendClientMessage(playerid, 0xFFFFFFFF, "Ти промени текста на твоята кола!");
BizInfo[2][bEarnings]+=350;
for(new i = GetVehiclePoolSize(); i > 0; i--)
{
SetVehicleToRespawn(playerid);
}
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Трябва да имаш $500 за да смениш символите на превозното си средство!");
}
}
if(IsPlayerInRangeOfPoint(playerid, 10, 1838.5139,-1856.2627,13.3828))
{
if(BizInfo[3][bOwner]==0)
{
SendClientMessage(playerid, 0xB4B5B7FF, "Бизнесът няма притежател и не можеш да смениш текста на превозното си средство!");
return 1;
}
tmp = strtok(cmdtext, idx);
if(!strlen(tmp)) return SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /plate [text]");
if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си шофьр!");
if(strlen(tmp)<1 || strlen(tmp)>8)
{
SendClientMessage(playerid,0xB4B5B7FF,"Символите трябва да са от 1 до 8!");
return 1;
}
if(PlayerInfo[playerid][pCash] >= 500)
{
GivePlayerCash(playerid, -500);
new vehicleid = GetPlayerVehicleID(playerid);
SetVehicleNumberPlate(vehicleid,tmp);
RemovePlayerFromVehicle(playerid);
new Float:x, Float:y, Float:z, Float:zr;
new vh;
vh = GetPlayerVehicleID(playerid);
GetVehiclePos(vh, x, y, z);
GetVehicleZAngle(vh, zr);
RemovePlayerFromVehicle(playerid);
SetVehicleToRespawn(vh);
SetVehiclePos(vh, x, y, z);
SetVehicleZAngle(vh, zr);
SendClientMessage(playerid, 0xFFFFFFFF, "Ти промени текста на твоята кола!");
BizInfo[1][bEarnings]+=350;
for(new i = GetVehiclePoolSize(); i > 0; i--)
{
SetVehicleToRespawn(playerid);
}
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Трябва да имаш $500 за да смениш символите на превозното си средство!");
}
}
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си до бизнес за сменяне на номерата на колата!");
}
return 1;
}
if(strcmp(cmd, "/veh", true) == 0)
{
if (PlayerInfo[playerid][pAdmin] < 3)
{
SendClientMessage(playerid, 0xB4B5B7FF, "Нямаш права за да ползваш командата!");
return 1;
}
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /veh [vehid] [color1] [color2]");
return 1;
}
new car;
car = strval(tmp);
if(car < 400 || car > 611) { SendClientMessage(playerid, 0xB4B5B7FF, "Номерата на превозните средства трябва да са от 400 до 612!"); return 1; }
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /veh [carid] [color1] [color2]");
return 1;
}
new color1;
color1 = strval(tmp);
if(color1 < 0 || color1 > 255) { SendClientMessage(playerid, 0xB4B5B7FF, "Номерата на цветовете трябва да са от 0 до 255!"); return 1; }
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /veh [carid] [color1] [color2]");
return 1;
}
new color2;
color2 = strval(tmp);
if(color2 < 0 || color2 > 255) { SendClientMessage(playerid, 0xB4B5B7FF, "Номерата на цветовете трябва да са от 0 до 255!"); return 1; }
GetPlayerPos(playerid,X[playerid],Y[playerid],Z[playerid]);
new carid = CreateVehicle(car, X[playerid],Y[playerid],Z[playerid], 0.0, color1, color2, -1);
LinkVehicleToInterior(carid, GetPlayerInterior(playerid));
SetVehicleVirtualWorld(carid, GetPlayerVirtualWorld(playerid));
PutPlayerInVehicle(playerid, carid, 0);
VehicleInfo[carid][vAdminVehSpawnedBy]=playerid;
spawnedcars+=1;
format(string256, 256, "Vehicle ID %d spawned!",GetPlayerVehicleID(playerid));
SendClientMessage(playerid, 0xFFFFFFFF, string256);
return 1;
}
if(strcmp(cmd, "/unjail", true) == 0)
{
if (PlayerInfo[playerid][pAdmin] >= 2)
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /unjail [playerid]");
return 1;
}
para1[playerid] = strval(tmp);
if(!IsPlayerConnected(para1[playerid]))
{
SendClientMessage(playerid, 0xB4B5B7FF, "Посоченото ID не е в сървъра!");
return 1;
}
if(PlayerInfo[para1[playerid]][pJail] > 0)
{
PlayerInfo[para1[playerid]][pJail] = 0; SetPlayerHealth(para1[playerid],0);
format(string256, 256, "ADMIN: %s was unjailed by %s",pname[para1[playerid]] ,pname[playerid]);
SendClientMessageToAll(0x00E600FF,string256);
//0x40BF00FF
}
else
{
SendClientMessage(playerid,0xB4B5B7FF,"Този играч не е в админ затвора!");
}
}
else
{
SendClientMessage(playerid, 0xB4B5B7FF, "Нямаш права за да ползваш командата!");
}
return 1;
}
if(strcmp(cmd, "/unmute", true) == 0)
{
if (PlayerInfo[playerid][pAdmin] >= 1 || PlayerInfo[playerid][pTest] == 1)
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /unmute [playerid]");
return 1;
}
para1[playerid] = strval(tmp);
if(!IsPlayerConnected(para1[playerid]))
{
SendClientMessage(playerid, 0xB4B5B7FF, "Посоченото ID не е в сървъра!");
return 1;
}
if(PlayerInfo[para1[playerid]][pMuted] > 0 || PlayerInfo[para1[playerid]][pADMINMute]==1)
{
PlayerInfo[para1[playerid]][pMuted] = 0; PlayerInfo[para1[playerid]][pADMINMute]=0; PlayerInfo[para1[playerid]][pLMuted] = 0;
format(string256, 256, "ADMIN: %s was unmuted by %s",pname[para1[playerid]] ,pname[playerid]);
SendClientMessageToAll(0x00E600FF,string256);
//0x40BF00FF
}
else
{
SendClientMessage(playerid,0xB4B5B7FF,"Този играч не е заглушен!");
}
}
else
{
SendClientMessage(playerid, 0xB4B5B7FF, "Нямаш права за да ползваш командата!");
}
return 1;
}
if (strcmp(cmdtext, "/muted", true) == 0)
{
if (PlayerInfo[playerid][pAdmin] >= 1 || PlayerInfo[playerid][pTest] == 1)
{
SendClientMessage(playerid, 0x40BF00FF, "Онлайн заглушени играчи:");
new muted = 0;
for(new i = 0; i < MAX_PLAYERS; i++)
{
if(PlayerInfo[i][pMuted] > 0 || PlayerInfo[i][pADMINMute]==1)
{
format(string256, 256, "%s (ID:%d)", pname[i], i);
muted = 1;
}
}
if (muted == 0) SendClientMessage(playerid,0xE60000FF,"Няма онлайн заглушени играчи."); else SendClientMessage(playerid,0xFFFFFFFF,string256);
}
else
{
SendClientMessage(playerid, 0xB4B5B7FF, "Нямаш права за да ползваш командата!");
}
return 1;
}
if (strcmp(cmdtext, "/jailed", true) == 0)
{
if (PlayerInfo[playerid][pAdmin] >= 1)
{
SendClientMessage(playerid, 0x40BF00FF, "Онлайн играчи в затвора:");
new muted = 0;
for(new i = 0; i < MAX_PLAYERS; i++)
{
if(PlayerInfo[i][pJail] > 0)
{
format(string256, 256, "%s (ID:%d)", pname[i], i);
muted = 1;
}
}
if (muted == 0) SendClientMessage(playerid,0xE60000FF,"Няма онлайн онлайн играчи в затвора."); else SendClientMessage(playerid,0xFFFFFFFF,string256);
}
else
{
SendClientMessage(playerid, 0xB4B5B7FF, "Нямаш права за да ползваш командата!");
}
return 1;
}
if(strcmp(cmd, "/specoff", true) == 0)
{
if(PlayerInfo[playerid][pAdmin] > 0 || PlayerInfo[playerid][pTest] == 1)
{
if(specing[playerid] == 0)
{
SendClientMessage(playerid, 0xB4B5B7FF, "В момента не наблюдаваш играч!");
return 1;
}
TogglePlayerSpectating(playerid, 0);
SetPlayerPos(playerid, LastCoor[playerid][sPx], LastCoor[playerid][sPy], LastCoor[playerid][sPz]);
SetPlayerFacingAngle(playerid, LastCoor[playerid][sAngle]);
SetPlayerInterior(playerid, LastCoor[playerid][sPint]);
SetPlayerVirtualWorld(playerid, LastCoor[playerid][sVw]);
specing[playerid] = 0;
}
else
{
SendClientMessage(playerid, 0xB4B5B7FF, "Нямаш права за да ползваш командата!");
}
return 1;
}
if(strcmp(cmd, "/aka", true)==0)
{
if(PlayerInfo[playerid][pAdmin]<2) return SendClientMessage(playerid, 0xB4B5B7FF, "Нямаш права за да ползваш командата!");
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /aka [playerid]");
return 1;
}
para1[playerid] = strval(tmp);
if(!IsPlayerConnected(para1[playerid]))
{
SendClientMessage(playerid, 0xB4B5B7FF, "Посоченото ID не е в сървъра!");
return 1;
}
new akafiles[80]; new ip[35]; GetPlayerIp(para1[playerid],ip,35);
format(akafiles, 80, "/Aka/%s.ini", ip);
/*format(string2230,2230,"%s",dini_Get(akafiles,"Nicknames"));
format(string2562,256,"* Aka на %s *",pname[playerid]);
SendClientMessage(playerid,0xFFFFFFFF,string2562);
SendClientMessage(playerid,0xFFFFFFFF,string2230);*/
//<---------------------------------------------->
new string130[130]; new string1300result[1300];
format(string130,130,"{FFFF80}AKA: %s (ID: %d) [IP: %s]\n",pname[para1[playerid]],para1[playerid],ip);
strcat(string1300result, string130);
format(string130,130,"{FFFF80}%s",dini_Get(akafiles,"Nicknames"));
strcat(string1300result, string130);
strreplace(string1300result, "==", "=\n");
new closeddialog=3500;
ShowPlayerDialog(playerid,closeddialog,DIALOG_STYLE_MSGBOX,"AKA",string1300result,"OK","");
//<----------------------------------------------->
return 1;
}
if(strcmp(cmd, "/spec", true) == 0)
{
if (PlayerInfo[playerid][pAdmin] >= 1 || PlayerInfo[playerid][pTest] == 1)
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /spec [playerid]");
return 1;
}
para1[playerid] = strval(tmp);
if(!IsPlayerConnected(para1[playerid]))
{
SendClientMessage(playerid, 0xB4B5B7FF, "Посоченото ID не е в сървъра!");
return 1;
}
if(PlayerInfo[playerid][pTSpec]==0) { return SendClientMessage(playerid, 0xB4B5B7FF, "Нямаш позволение да наблюдаваш играчите!");}
if(playerid == para1[playerid])
{
SendClientMessage(playerid,0xB4B5B7FF,"Не можеш да наблюдаваш себе си!");
return 1;
}
if (PlayerInfo[para1[playerid]][pBSpec] == 1)
{
SendClientMessage(playerid, 0xB4B5B7FF, "Този играч е забранил да го наблюдават!");
return 1;
}
if(specing[playerid] == 0)
{
GetPlayerPos(playerid, LastCoor[playerid][sPx], LastCoor[playerid][sPy], LastCoor[playerid][sPz]);
LastCoor[playerid][sPint] = GetPlayerInterior(playerid);
LastCoor[playerid][sVw] = GetPlayerVirtualWorld(playerid);
GetPlayerFacingAngle(playerid, LastCoor[playerid][sAngle]);
}
specing[playerid] = 1;
TogglePlayerSpectating(playerid, 1);
SetPlayerInterior(playerid, GetPlayerInterior(para1[playerid]));
SetPlayerVirtualWorld(playerid, GetPlayerVirtualWorld(para1[playerid]));
if(IsPlayerInAnyVehicle(para1[playerid]))
{
new carid = GetPlayerVehicleID(para1[playerid]);
PlayerSpectateVehicle(playerid, carid);
}
else
{
PlayerSpectatePlayer(playerid, para1[playerid]);
}
}
else
{
SendClientMessage(playerid, 0xB4B5B7FF, "Нямаш права за да ползваш командата!");
}
return 1;
}
if(strcmp(cmd, "/jail", true) == 0)
{
if (PlayerInfo[playerid][pAdmin] >= 1)
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /jail [playerid] [opiton]");
SendClientMessage(playerid, 0xFFFF00FF, "Opitons: 1: Каране на Job Vehicle за собствени цели, 2: Биене/Крадене на кола в тунинг гараж, 3: Лъже играчите, 4: DB без шофьор");
SendClientMessage(playerid, 0xFFFF00FF, "Opitons: 5: Пречи на хората да работят, 6: Грешен Report/Advert, 7: Биене на TFC служител On-Duty, 8: Glitch, 9: Оплакване във форума");
SendClientMessage(playerid, 0xFFFF00FF, "Opitons: 10: Грешно използване на /me или /do, 11: AFK в Job Vehicle, 12: Биене на ADMIN ON-DUTY, 13: Самоубива се на DMON");
SendClientMessage(playerid, 0xFFFF00FF, "Opitons: 14: Прочети правилата /rules");
return 1;
}
new level[32];
para1[playerid] = ReturnUser(tmp);
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /jail [playerid] [opiton]");
SendClientMessage(playerid, 0xFFFF00FF, "Opitons: 1: Каране на Job Vehicle за собствени цели, 2: Биене/Крадене на кола в тунинг гараж, 3: Лъже играчите, 4: DB без шофьор");
SendClientMessage(playerid, 0xFFFF00FF, "Opitons: 5: Пречи на хората да работят, 6: Грешен Report/Advert, 7: Биене на TFC служител On-Duty, 8: Glitch, 9: Оплакване във форума");
SendClientMessage(playerid, 0xFFFF00FF, "Opitons: 10: Грешно използване на /me или /do, 11: AFK в Job Vehicle, 12: Биене на ADMIN ON-DUTY, 13: Самоубива се на DMON");
SendClientMessage(playerid, 0xFFFF00FF, "Opitons: 14: Прочети правилата /rules");
return 1;
}
strmid(level, tmp, 0, 32);
if(para1[playerid] != INVALID_PLAYER_ID)
{
if(strval(level)<1||strval(level)>14)
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /jail [playerid] [opiton]");
SendClientMessage(playerid, 0xFFFF00FF, "Opitons: 1: Каране на Job Vehicle за собствени цели, 2: Биене/Крадене на кола в тунинг гараж, 3: Лъже играчите, 4: DB без шофьор");
SendClientMessage(playerid, 0xFFFF00FF, "Opitons: 5: Пречи на хората да работят, 6: Грешен Report/Advert, 7: Биене на TFC служител On-Duty, 8: Glitch, 9: Оплакване във форума");
SendClientMessage(playerid, 0xFFFF00FF, "Opitons: 10: Грешно използване на /me или /do, 11: AFK в Job Vehicle, 12: Биене на ADMIN ON-DUTY, 13: Самоубива се на DMON");
SendClientMessage(playerid, 0xFFFF00FF, "Opitons: 14: Прочети правилата /rules");
return 1;
}
if(PlayerInfo[para1[playerid]][pJail] == 0)
{
if (strcmp(level, "1", true) == 0 ||
strcmp(level, "2", true) == 0 ||
strcmp(level, "3", true) == 0 ||
strcmp(level, "4", true) == 0 ||
strcmp(level, "5", true) == 0 ||
strcmp(level, "6", true) == 0 ||
strcmp(level, "7", true) == 0 ||
strcmp(level, "8", true) == 0 ||
strcmp(level, "9", true) == 0 ||
strcmp(level, "10", true) == 0 ||
strcmp(level, "11", true) == 0 ||
strcmp(level, "12", true) == 0 ||
strcmp(level, "13", true) == 0 ||
strcmp(level, "14", true) == 0)
{
ResetPlayerWeapons(para1[playerid]);
SetPlayerVirtualWorld(para1[playerid],1);
SetPlayerInterior(para1[playerid],4);
SetPlayerPos(para1[playerid],299.7077,303.4193,999.1484);
SetPlayerAttachedObject(para1[playerid], 1, 19418, 6, -0.011000, 0.028000, -0.022000, -15.600012, -33.699977,-81.700035, 0.891999, 1.000000, 1.168000);
SetPlayerSpecialAction(para1[playerid], SPECIAL_ACTION_CUFFED);
}
if (strcmp(level, "1", true) == 0)
{
PlayerInfo[para1[playerid]][pJail] = 15*60;
format(string256, 256, "ADMIN: %s was jailed by %s for 15 minutes. [Reason: Каране на Job Vehicle за собствени цели]",pname[para1[playerid]], pname[playerid]);
SendClientMessageToAll(0xE60000FF,string256);
PlayerInfo[para1[playerid]][pJailReason] = 1;
}
if (strcmp(level, "2", true) == 0)
{
PlayerInfo[para1[playerid]][pJail] = 15*60;
format(string256, 256, "ADMIN: %s was jailed by %s for 15 minutes. [Reason: Биене/Крадене на кола в тунинг гараж]",pname[para1[playerid]], pname[playerid]);
SendClientMessageToAll(0xE60000FF,string256);
PlayerInfo[para1[playerid]][pJailReason] = 2;
}
if (strcmp(level, "3", true) == 0)
{
PlayerInfo[para1[playerid]][pJail] = 20*60;
format(string256, 256, "ADMIN: %s was jailed by %s for 20 minutes. [Reason: Лъже играчите]",pname[para1[playerid]], pname[playerid]);
SendClientMessageToAll(0xE60000FF,string256);
PlayerInfo[para1[playerid]][pJailReason] = 3;
}
if (strcmp(level, "4", true) == 0)
{
PlayerInfo[para1[playerid]][pJail] = 20*60;
format(string256, 256, "ADMIN: %s was jailed by %s for 20 minutes. [Reason: DB без шофьор]",pname[para1[playerid]], pname[playerid]);
SendClientMessageToAll(0xE60000FF,string256);
PlayerInfo[para1[playerid]][pJailReason] = 4;
}
if (strcmp(level, "5", true) == 0)
{
PlayerInfo[para1[playerid]][pJail] = 25*60;
format(string256, 256, "ADMIN: %s was jailed by %s for 25 minutes. [Reason: Пречи на хората да работят]",pname[para1[playerid]], pname[playerid]);
SendClientMessageToAll(0xE60000FF,string256);
PlayerInfo[para1[playerid]][pJailReason] = 5;
}
if (strcmp(level, "6", true) == 0)
{
PlayerInfo[para1[playerid]][pJail] = 25*60;
format(string256, 256, "ADMIN: %s was jailed by %s for 25 minutes. [Reason: Грешен Report/Advert]",pname[para1[playerid]], pname[playerid]);
SendClientMessageToAll(0xE60000FF,string256);
PlayerInfo[para1[playerid]][pJailReason] = 6;
}
if (strcmp(level, "7", true) == 0)
{
PlayerInfo[para1[playerid]][pJail] = 25*60;
format(string256, 256, "ADMIN: %s was jailed by %s for 25 minutes. [Reason: Биене на TFC служител On-Duty]",pname[para1[playerid]], pname[playerid]);
SendClientMessageToAll(0xE60000FF,string256);
PlayerInfo[para1[playerid]][pJailReason] = 7;
}
if (strcmp(level, "8", true) == 0)
{
PlayerInfo[para1[playerid]][pJail] = 35*60;
format(string256, 256, "ADMIN: %s was jailed by %s for 35 minutes. [Reason: Glitch]",pname[para1[playerid]], pname[playerid]);
SendClientMessageToAll(0xE60000FF,string256);
PlayerInfo[para1[playerid]][pJailReason] = 8;
}
if (strcmp(level, "9", true) == 0)
{
PlayerInfo[para1[playerid]][pJail] = 35*60;
format(string256, 256, "ADMIN: %s was jailed by %s for 35 minutes. [Reason: Оплакване във форума]",pname[para1[playerid]], pname[playerid]);
SendClientMessageToAll(0xE60000FF,string256);
PlayerInfo[para1[playerid]][pJailReason] = 9;
}
if (strcmp(level, "10", true) == 0)
{
PlayerInfo[para1[playerid]][pJail] = 35*60;
format(string256, 256, "ADMIN: %s was jailed by %s for 35 minutes. [Reason: Грешно използване на /me или /do]",pname[para1[playerid]], pname[playerid]);
SendClientMessageToAll(0xE60000FF,string256);
PlayerInfo[para1[playerid]][pJailReason] = 10;
}
if (strcmp(level, "11", true) == 0)
{
PlayerInfo[para1[playerid]][pJail] = 35*60;
format(string256, 256, "ADMIN: %s was jailed by %s for 35 minutes. [Reason: AFK в Job Vehicle]",pname[para1[playerid]], pname[playerid]);
SendClientMessageToAll(0xE60000FF,string256);
PlayerInfo[para1[playerid]][pJailReason] = 11;
}
if (strcmp(level, "12", true) == 0)
{
PlayerInfo[para1[playerid]][pJail] = 40*60;
format(string256, 256, "ADMIN: %s was jailed by %s for 40 minutes. [Reason: Биене на ADMIN ON-DUTY]",pname[para1[playerid]], pname[playerid]);
SendClientMessageToAll(0xE60000FF,string256);
PlayerInfo[para1[playerid]][pJailReason] = 12;
}
if (strcmp(level, "13", true) == 0)
{
PlayerInfo[para1[playerid]][pJail] = 15*60;
format(string256, 256, "ADMIN: %s was jailed by %s for 15 minutes. [Reason: Самоубива се на DMON]",pname[para1[playerid]], pname[playerid]);
SendClientMessageToAll(0xE60000FF,string256);
PlayerInfo[para1[playerid]][pJailReason] = 13;
}
if (strcmp(level, "14", true) == 0)
{
PlayerInfo[para1[playerid]][pJail] = 20*60;
format(string256, 256, "ADMIN: %s was jailed by %s for 5 minutes. [Reason: Прочети правилата /rules]",pname[para1[playerid]], pname[playerid]);
SendClientMessageToAll(0xE60000FF,string256);
PlayerInfo[para1[playerid]][pJailReason] = 14;
}
}
else
{
SendClientMessage(playerid,0xB4B5B7FF,"Този играч вече е в затвора!");
}
}
}
else
{
SendClientMessage(playerid, 0xB4B5B7FF, "Нямаш права за да ползваш командата!");
}
return 1;
}
if(strcmp(cmd, "/ajail", true) == 0)
{
if (PlayerInfo[playerid][pAdmin] >= 3)
{
new result[256];
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /ajail [nickname] [opiton]");
SendClientMessage(playerid, 0xFFFF00FF, "Opitons: 1: Каране на Job Vehicle за собствени цели, 2: Биене/Крадене на кола в тунинг гараж, 3: Лъже играчите, 4: DB без шофьор");
SendClientMessage(playerid, 0xFFFF00FF, "Opitons: 5: Пречи на хората да работят, 6: Грешен Report/Advert, 7: Биене на TFC служител On-Duty, 8: Glitch, 9: Оплакване във форума");
SendClientMessage(playerid, 0xFFFF00FF, "Opitons: 10: Грешно използване на /me или /do, 11: AFK в Job Vehicle, 12: Биене на ADMIN ON-DUTY, 13: Самоубива се на DMON");
SendClientMessage(playerid, 0xFFFF00FF, "Opitons: 14: Прочети правилата /rules");
return 1;
}
strmid(result, tmp, 0, sizeof(result), sizeof(result));
new level[32];
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /ajail [nickname] [opiton]");
SendClientMessage(playerid, 0xFFFF00FF, "Opitons: 1: Каране на Job Vehicle за собствени цели, 2: Биене/Крадене на кола в тунинг гараж, 3: Лъже играчите, 4: DB без шофьор");
SendClientMessage(playerid, 0xFFFF00FF, "Opitons: 5: Пречи на хората да работят, 6: Грешен Report/Advert, 7: Биене на TFC служител On-Duty, 8: Glitch, 9: Оплакване във форума");
SendClientMessage(playerid, 0xFFFF00FF, "Opitons: 10: Грешно използване на /me или /do, 11: AFK в Job Vehicle, 12: Биене на ADMIN ON-DUTY, 13: Самоубива се на DMON");
SendClientMessage(playerid, 0xFFFF00FF, "Opitons: 14: Прочети правилата /rules");
return 1;
}
strmid(level, tmp, 0, 32);
if(strval(level)<1||strval(level)>14)
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /ajail [nickname] [opiton]");
SendClientMessage(playerid, 0xFFFF00FF, "Opitons: 1: Каране на Job Vehicle за собствени цели, 2: Биене/Крадене на кола в тунинг гараж, 3: Лъже играчите, 4: DB без шофьор");
SendClientMessage(playerid, 0xFFFF00FF, "Opitons: 5: Пречи на хората да работят, 6: Грешен Report/Advert, 7: Биене на TFC служител On-Duty, 8: Glitch, 9: Оплакване във форума");
SendClientMessage(playerid, 0xFFFF00FF, "Opitons: 10: Грешно използване на /me или /do, 11: AFK в Job Vehicle, 12: Биене на ADMIN ON-DUTY, 13: Самоубива се на DMON");
SendClientMessage(playerid, 0xFFFF00FF, "Opitons: 14: Прочети правилата /rules");
return 1;
}
new stringnickname[115];
format(stringnickname, 115, "%s.ini",result);
if (strcmp(level, "1", true) == 0 ||
strcmp(level, "2", true) == 0 ||
strcmp(level, "3", true) == 0 ||
strcmp(level, "4", true) == 0 ||
strcmp(level, "5", true) == 0 ||
strcmp(level, "6", true) == 0 ||
strcmp(level, "7", true) == 0 ||
strcmp(level, "8", true) == 0 ||
strcmp(level, "9", true) == 0 ||
strcmp(level, "10", true) == 0 ||
strcmp(level, "11", true) == 0 ||
strcmp(level, "12", true) == 0 ||
strcmp(level, "13", true) == 0 ||
strcmp(level, "14", true) == 0)
{
if(!dini_Exists(stringnickname))
{
return SendClientMessage(playerid, COLOR_GRAD1, "Този nickname не съществува!");
}
for(new i=0; i<MAX_PLAYERS; i++)
{
if(strcmp(result,pname[i],true)==0)
{
if(PlayerInfo[i][pJail] == 1)
{
SendClientMessage(playerid,0xB4B5B7FF,"Този играч вече е в затвора!");
}
}
else
{
if(dini_Int(stringnickname, "pJail")>0)
{
return SendClientMessage(playerid,0xB4B5B7FF,"Този играч вече е в затвора!");
}
}
}
}
if (strcmp(level, "1", true) == 0)
{
dini_IntSet(stringnickname, "pJailReason", 1);
dini_IntSet(stringnickname, "pJail", 15*60);
format(string256, 256, "ADMIN: %s was jailed by %s for 15 minutes. [Reason: Каране на Job Vehicle за собствени цели]",result, pname[playerid]);
SendClientMessageToAll(0xE60000FF,string256);
}
if (strcmp(level, "2", true) == 0)
{
dini_IntSet(stringnickname, "pJailReason", 2);
dini_IntSet(stringnickname, "pJail", 15*60);
format(string256, 256, "ADMIN: %s was jailed by %s for 15 minutes. [Reason: Биене/Крадене на кола в тунинг гараж]",result, pname[playerid]);
SendClientMessageToAll(0xE60000FF,string256);
}
if (strcmp(level, "3", true) == 0)
{
dini_IntSet(stringnickname, "pJailReason", 3);
dini_IntSet(stringnickname, "pJail", 20*60);
format(string256, 256, "ADMIN: %s was jailed by %s for 20 minutes. [Reason: Лъже играчите]",result, pname[playerid]);
SendClientMessageToAll(0xE60000FF,string256);
}
if (strcmp(level, "4", true) == 0)
{
dini_IntSet(stringnickname, "pJailReason", 4);
dini_IntSet(stringnickname, "pJail", 20*60);
format(string256, 256, "ADMIN: %s was jailed by %s for 20 minutes. [Reason: DB без шофьор]",result, pname[playerid]);
SendClientMessageToAll(0xE60000FF,string256);
}
if (strcmp(level, "5", true) == 0)
{
dini_IntSet(stringnickname, "pJailReason", 5);
dini_IntSet(stringnickname, "pJail", 25*60);
format(string256, 256, "ADMIN: %s was jailed by %s for 25 minutes. [Reason: Пречи на хората да работят]",result, pname[playerid]);
SendClientMessageToAll(0xE60000FF,string256);
}
if (strcmp(level, "6", true) == 0)
{
dini_IntSet(stringnickname, "pJailReason", 6);
dini_IntSet(stringnickname, "pJail", 25*60);
format(string256, 256, "ADMIN: %s was jailed by %s for 25 minutes. [Reason: Грешен Report/Advert]",result, pname[playerid]);
SendClientMessageToAll(0xE60000FF,string256);
}
if (strcmp(level, "7", true) == 0)
{
dini_IntSet(stringnickname, "pJailReason", 7);
dini_IntSet(stringnickname, "pJail", 25*60);
format(string256, 256, "ADMIN: %s was jailed by %s for 25 minutes. [Reason: Биене на TFC служител On-Duty]",result, pname[playerid]);
SendClientMessageToAll(0xE60000FF,string256);
}
if (strcmp(level, "8", true) == 0)
{
dini_IntSet(stringnickname, "pJailReason", 8);
dini_IntSet(stringnickname, "pJail", 35*60);
format(string256, 256, "ADMIN: %s was jailed by %s for 35 minutes. [Reason: Glitch]",result, pname[playerid]);
SendClientMessageToAll(0xE60000FF,string256);
}
if (strcmp(level, "9", true) == 0)
{
dini_IntSet(stringnickname, "pJailReason", 9);
dini_IntSet(stringnickname, "pJail", 35*60);
format(string256, 256, "ADMIN: %s was jailed by %s for 35 minutes. [Reason: Оплакване във форума]",result, pname[playerid]);
SendClientMessageToAll(0xE60000FF,string256);
}
if (strcmp(level, "10", true) == 0)
{
dini_IntSet(stringnickname, "pJailReason", 10);
dini_IntSet(stringnickname, "pJail", 35*60);
format(string256, 256, "ADMIN: %s was jailed by %s for 35 minutes. [Reason: Грешно използване на /me или /do]",result, pname[playerid]);
SendClientMessageToAll(0xE60000FF,string256);
}
if (strcmp(level, "11", true) == 0)
{
dini_IntSet(stringnickname, "pJailReason", 11);
dini_IntSet(stringnickname, "pJail", 35*60);
format(string256, 256, "ADMIN: %s was jailed by %s for 35 minutes. [Reason: AFK в Job Vehicle]",result, pname[playerid]);
SendClientMessageToAll(0xE60000FF,string256);
}
if (strcmp(level, "12", true) == 0)
{
dini_IntSet(stringnickname, "pJailReason", 12);
dini_IntSet(stringnickname, "pJail", 40*60);
format(string256, 256, "ADMIN: %s was jailed by %s for 40 minutes. [Reason: Биене на ADMIN ON-DUTY]",result, pname[playerid]);
SendClientMessageToAll(0xE60000FF,string256);
}
if (strcmp(level, "13", true) == 0)
{
dini_IntSet(stringnickname, "pJailReason", 13);
dini_IntSet(stringnickname, "pJail", 15*60);
format(string256, 256, "ADMIN: %s was jailed by %s for 15 minutes. [Reason: Самоубива се на DMON]",result, pname[playerid]);
SendClientMessageToAll(0xE60000FF,string256);
}
if (strcmp(level, "14", true) == 0)
{
dini_IntSet(stringnickname, "pJailReason", 14);
dini_IntSet(stringnickname, "pJail", 20*60);
format(string256, 256, "ADMIN: %s was jailed by %s for 5 minutes. [Reason: Прочети правилата /rules]",result, pname[playerid]);
SendClientMessageToAll(0xE60000FF,string256);
}
for(new i=0; i<MAX_PLAYERS; i++)
{
if(strcmp(result,pname[i],true)==0)
{
PlayerInfo[i][pJailReason]= dini_Int(stringnickname, "pJailReason");
PlayerInfo[i][pJail]= dini_Int(stringnickname, "pJail");
ResetPlayerWeapons(i);
SetPlayerVirtualWorld(i,1);
SetPlayerInterior(i,4);
SetPlayerPos(i,299.7077,303.4193,999.1484);
SetPlayerAttachedObject(i, 1, 19418, 6, -0.011000, 0.028000, -0.022000, -15.600012, -33.699977,-81.700035, 0.891999, 1.000000, 1.168000);
SetPlayerSpecialAction(i, SPECIAL_ACTION_CUFFED);
}
}
}
else
{
SendClientMessage(playerid, 0xB4B5B7FF, "Нямаш права за да ползваш командата!");
}
return 1;
}
if(strcmp(cmd, "/checkbank", true) == 0)
{
new stringbank[256];
if (PlayerInfo[playerid][pAdmin] < 3) return SendClientMessage(playerid, 0xB4B5B7FF, "Нямаш права за да ползваш командата!");
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /checkbank [playerid]");
return 1;
}
para1[playerid] = ReturnUser(tmp);
if(para1[playerid] == INVALID_PLAYER_ID) return SendClientMessage(playerid,0xB4B5B7FF,"Посоченото ID не е в сървъра!");
format(stringbank, 256, "Играчът %s има $%d в неговата обща сума!", pname[para1[playerid]],PlayerInfo[para1[playerid]][pAccount]);
SendClientMessage(playerid, 0x40BF00FF, stringbank);
return 1;
}
//
if(strcmp(cmd, "/ncheckwarns", true) == 0)
{
new stringbank[256];
if (PlayerInfo[playerid][pAdmin] < 4) return SendClientMessage(playerid, 0xB4B5B7FF, "Нямаш права за да ползваш командата!");
tmp = strtok(cmdtext, idx);
new nickname[32];
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /ncheckwarns [nickname]");
return 1;
}
strmid(nickname, tmp, 0, sizeof(nickname), sizeof(nickname));
new nickname2[35];
format(nickname2,35,"%s.ini",nickname);
if(dini_Exists(nickname2))
{
for(new i=0; i<MAX_PLAYERS; i++)
{
if(strcmp(nickname,pname[i],true)==0)
{
format(stringbank, 256, "%s има - %d Warns", nickname,PlayerInfo[i][pWarns]);
return SendClientMessage(playerid, 0xFFFFFFFF, stringbank);
}
}
}
else
{
return SendClientMessage(playerid, COLOR_GRAD1, "Този nickname не съществува!");
}
format(stringbank, 256, "%s има - %d Warns", nickname,dini_Int(nickname,"pWarns"));
SendClientMessage(playerid, 0xFFFFFFFF, stringbank);
return 1;
}
//
if(strcmp(cmd, "/checkwarns", true) == 0)
{
new stringbank[256];
if (PlayerInfo[playerid][pAdmin] < 4) return SendClientMessage(playerid, 0xB4B5B7FF, "Нямаш права за да ползваш командата!");
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /checkwarns [playerid]");
return 1;
}
para1[playerid] = ReturnUser(tmp);
if(para1[playerid] == INVALID_PLAYER_ID) return SendClientMessage(playerid,0xB4B5B7FF,"Посоченото ID не е в сървъра!");
format(stringbank, 256, "%s има - %d Warns", pname[para1[playerid]],PlayerInfo[para1[playerid]][pWarns]);
SendClientMessage(playerid, 0xFFFFFFFF, stringbank);
return 1;
}
if(strcmp(cmd, "/unmuteall", true) == 0)
{
if (PlayerInfo[playerid][pAdmin] >= 5)
{
format(string256, 256, "ADMIN: ALL PLAYERS were unmuted by %s", pname[playerid]);
SendClientMessageToAll(0x00E600FF,string256);
for(new i; i<MAX_PLAYERS; i++)
{
PlayerInfo[i][pMuteReason] = 0; PlayerInfo[i][pMuted]=0;
}
}
else
{
SendClientMessage(playerid, 0xB4B5B7FF, "Нямаш права за да ползваш командата!");
}
return 1;
}
if(strcmp(cmd, "/muteall", true) == 0)
{
if (PlayerInfo[playerid][pAdmin] >= 5)
{
format(string256, 256, "ADMIN: ALL PLAYERS were muted by %s", pname[playerid]);
SendClientMessageToAll(0xE60000FF,string256);
for(new i; i<MAX_PLAYERS; i++) PlayerInfo[i][pMuteReason] = 6;
}
else
{
SendClientMessage(playerid, 0xB4B5B7FF, "Нямаш права за да ползваш командата!");
}
return 1;
}
if(strcmp(cmd, "/mute", true) == 0)
{
if (PlayerInfo[playerid][pAdmin] >= 1 || PlayerInfo[playerid][pTest] == 1)
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /mute [playerid] [opiton]");
SendClientMessage(playerid, 0x00FF00FF, "Opitons: 1: Спам, 2: Псуване/Обиждане, 3: Спам/Псуване/Обиждане");
SendClientMessage(playerid, 0x00FF00FF, "Opitons: 4: Оплакване във форума, 5: Грешо използване на лидерския чат");
return 1;
}
new level[32];
para1[playerid] = ReturnUser(tmp);
if(para1[playerid] != INVALID_PLAYER_ID)
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /mute [playerid] [opiton]");
SendClientMessage(playerid, 0x00FF00FF, "Opitons: 1: Спам, 2: Псуване/Обиждане, 3: Спам/Псуване/Обиждане");
SendClientMessage(playerid, 0x00FF00FF, "Opitons: 4: Оплакване във форума, 5: Грешо използване на лидерския чат");
return 1;
}
strmid(level, tmp, 0, 32);
if(strval(level)<1||strval(level)>5)
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /mute [playerid] [opiton]");
SendClientMessage(playerid, 0x00FF00FF, "Opitons: 1: Спам, 2: Псуване/Обиждане, 3: Спам/Псуване/Обиждане");
SendClientMessage(playerid, 0x00FF00FF, "Opitons: 4: Оплакване във форума, 5: Грешо използване на лидерския чат");
return 1;
}
if(PlayerInfo[para1[playerid]][pMuted] == 0)
{
if (strcmp(level, "1", true) == 0)
{
PlayerInfo[para1[playerid]][pMuted] = 100*60;
format(string256, 256, "ADMIN: %s was muted by %s for 100 minutes. [Reason: Спам]",pname[para1[playerid]], pname[playerid]);
SendClientMessageToAll(0xE60000FF,string256);
PlayerInfo[para1[playerid]][pMuteReason] = 3;
}
if (strcmp(level, "2", true) == 0)
{
PlayerInfo[para1[playerid]][pMuted] = 200*60;
format(string256, 256, "ADMIN: %s was muted by %s for 200 minutes. [Reason: Псуване/Обиждане]",pname[para1[playerid]], pname[playerid]);
SendClientMessageToAll(0xE60000FF,string256);
PlayerInfo[para1[playerid]][pMuteReason] = 1;
}
if (strcmp(level, "3", true) == 0)
{
PlayerInfo[para1[playerid]][pMuted] = 300*60;
format(string256, 256, "ADMIN: %s was muted by %s for 300 minutes. [Reason: Спам/Псуване/Обиждане]",pname[para1[playerid]], pname[playerid]);
SendClientMessageToAll(0xE60000FF,string256);
PlayerInfo[para1[playerid]][pMuteReason] = 4;
}
if (strcmp(level, "4", true) == 0)
{
PlayerInfo[para1[playerid]][pMuted] = 350*60;
format(string256, 256, "ADMIN: %s was muted by %s for 350 minutes. [Reason: Оплакване във форума]",pname[para1[playerid]], pname[playerid]);
SendClientMessageToAll(0xE60000FF,string256);
PlayerInfo[para1[playerid]][pMuteReason] = 2;
}
if (strcmp(level, "5", true) == 0)
{
PlayerInfo[para1[playerid]][pMuted] = 400*60;
format(string256, 256, "ADMIN: %s was muted by %s for 400 minutes. [Reason: Грешно използване на лидерския чат]",pname[para1[playerid]], pname[playerid]);
SendClientMessageToAll(0xE60000FF,string256);
PlayerInfo[para1[playerid]][pMuteReason] = 5;
}
}
else
{
SendClientMessage(playerid,0xB4B5B7FF,"Този играч вече е заглушен!");
}
}
else
{
SendClientMessage(playerid,0xB4B5B7FF,"Посоченото ID не е в сървъра!");
}
}
else
{
SendClientMessage(playerid, 0xB4B5B7FF, "Нямаш права за да ползваш командата!");
}
return 1;
}
if(strcmp(cmd, "/mute2", true) == 0)
{
if (PlayerInfo[playerid][pAdmin] >= 1)
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /mute2 [playerid] [reason]");
return 1;
}
para1[playerid] = ReturnUser(tmp);
if(para1[playerid] != INVALID_PLAYER_ID)
{
new length = strlen(cmdtext);
while ((idx < length) && (cmdtext[idx] <= ' '))
{
idx++;
}
new offset = idx;
new result[256];
while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
{
result[idx - offset] = cmdtext[idx];
idx++;
}
result[idx - offset] = EOS;
if(!strlen(result))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /mute2 [playerid] [reason]");
return 1;
}
if(!strlen(result))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /mute2 [playerid] [reason]");
return 1;
}
if(strlen(result)<1 || strlen(result)>30)
{
SendClientMessage(playerid,0xB4B5B7FF,"Причината трябва да бъде с до 30 символа!");
return 1;
}
PlayerInfo[para1[playerid]][pADMINMute] =1;
format(PlayerInfo[para1[playerid]][pReasonMute],256,"%s",result);
format(string256, 256, "ADMIN: %s was ADMIN muted by %s [Reason: %s]", pname[playerid], pname[para1[playerid]], (result));
SendClientMessageToAll(0xE60000FF, string256);
}
else
{
format(string256, 256, "Посоченото ID не е в сървъра!");
SendClientMessage(playerid, 0xB4B5B7FF, string256);
}
}
else
{
SendClientMessage(playerid,0xB4B5B7FF,"Нямаш права за да ползваш командата!");
}
return 1;
}
if(strcmp(cmd, "/unwarn", true) == 0)
{
if (PlayerInfo[playerid][pManage] == 1)
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /unwarn [playerid] [reason]");
return 1;
}
para1[playerid] = ReturnUser(tmp);
if(para1[playerid] != INVALID_PLAYER_ID)
{
new length = strlen(cmdtext);
while ((idx < length) && (cmdtext[idx] <= ' '))
{
idx++;
}
new offset = idx;
new result[256];
while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
{
result[idx - offset] = cmdtext[idx];
idx++;
}
result[idx - offset] = EOS;
if(!strlen(result))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /unwarn [playerid] [reason]");
return 1;
}
if(!strlen(result))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /unwarn [playerid] [reason]");
return 1;
}
if(PlayerInfo[para1[playerid]][pWarns]==0) return SendClientMessage(playerid,0xB4B5B7FF,"Този играч няма предупреждения!");
PlayerInfo[para1[playerid]][pWarns] -= 1;
format(string256, 256, "ADMIN: %s премахна едно от предупрежденията на %s [%d/5] [Reason: %s]", pname[playerid], pname[para1[playerid]],PlayerInfo[para1[playerid]][pWarns], (result));
SendClientMessageToAll(0x00E600FF, string256);
}
else
{
format(string256, 256, "Посоченото ID не е в сървъра!");
SendClientMessage(playerid, 0xB4B5B7FF, string256);
}
}
else
{
SendClientMessage(playerid,0xB4B5B7FF,"Нямаш права за да ползваш командата!");
}
return 1;
}
if(strcmp(cmd, "/unawarn", true) == 0)
{
if (PlayerInfo[playerid][pManage] == 1)
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /unawarn [playerid] [reason]");
return 1;
}
para1[playerid] = ReturnUser(tmp);
if(para1[playerid] != INVALID_PLAYER_ID)
{
new length = strlen(cmdtext);
while ((idx < length) && (cmdtext[idx] <= ' '))
{
idx++;
}
new offset = idx;
new result[256];
while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
{
result[idx - offset] = cmdtext[idx];
idx++;
}
result[idx - offset] = EOS;
if(!strlen(result))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /unawarn [playerid] [reason]");
return 1;
}
if(!strlen(result))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /unawarn [playerid] [reason]");
return 1;
}
if(PlayerInfo[para1[playerid]][pAdmin]==0) return SendClientMessage(playerid, 0xB4B5B7FF, "Този играч не е администратор!");
if(PlayerInfo[para1[playerid]][pAWarns]==0) return SendClientMessage(playerid, 0xB4B5B7FF, "Този играч няма админ предупреждения!");
PlayerInfo[para1[playerid]][pAWarns] -= 1;
format(string256, 256, "ADMIN: %s премахна едно от админ предупрежденията на %s [%d/5] [Reason: %s]", pname[playerid], pname[para1[playerid]],PlayerInfo[para1[playerid]][pAWarns], (result));
SendClientMessageToAll(0x00E600FF, string256);
}
else
{
format(string256, 256, "Посоченото ID не е в сървъра!");
SendClientMessage(playerid, 0xB4B5B7FF, string256);
}
}
else
{
SendClientMessage(playerid,0xB4B5B7FF,"Нямаш права за да ползваш командата!");
}
return 1;
}
if(strcmp(cmd, "/awarn", true) == 0)
{
if (PlayerInfo[playerid][pAdmin] >= 1)
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /awarn [playerid] [reason]");
return 1;
}
para1[playerid] = ReturnUser(tmp);
if(para1[playerid] != INVALID_PLAYER_ID)
{
new length = strlen(cmdtext);
while ((idx < length) && (cmdtext[idx] <= ' '))
{
idx++;
}
new offset = idx;
new result[256];
while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
{
result[idx - offset] = cmdtext[idx];
idx++;
}
result[idx - offset] = EOS;
if(!strlen(result))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /awarn [playerid] [reason]");
return 1;
}
if(!strlen(result))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /awarn [playerid] [reason]");
return 1;
}
if(PlayerInfo[para1[playerid]][pAdmin]==0) return SendClientMessage(playerid, 0xB4B5B7FF, "Този играч не е администратор!");
PlayerInfo[para1[playerid]][pAWarns] += 1;
format(string256, 256, "ADMIN: %s сложи админ предупреждение на %s [%d/5] [Reason: %s]", pname[playerid], pname[para1[playerid]],PlayerInfo[para1[playerid]][pAWarns], (result));
SendClientMessageToAll(0xE60000FF, string256);
if(PlayerInfo[para1[playerid]][pAWarns]>=5)
{
format(string256[para1[playerid]], 256, "ADMIN: %s събра 4 админ предупреждения и сега той остана без админ права!", pname[para1[playerid]]);
SendClientMessageToAll(0xE60000FF, string256[para1[playerid]]);
PlayerInfo[para1[playerid]][pTest]=0;
scripterMode[para1[playerid]]=0;
AntiFallOfBike[playerid]=0;
PlayerInfo[para1[playerid]][pAdmin]=0;
PlayerInfo[para1[playerid]][pManage]=0; PlayerInfo[para1[playerid]][pEvent]=0;
PlayerInfo[para1[playerid]][pReadTA]=0;
PlayerInfo[para1[playerid]][pTimeMute]=0;PlayerInfo[para1[playerid]][pTSpec]=0;
}
}
else
{
format(string256, 256, "Посоченото ID не е в сървъра!");
SendClientMessage(playerid, 0xB4B5B7FF, string256);
}
}
else
{
SendClientMessage(playerid,0xB4B5B7FF,"Нямаш права за да ползваш командата!");
}
return 1;
}
if(strcmp(cmd, "/nunwarn", true) == 0)
{
if (PlayerInfo[playerid][pManage] == 1)
{
//
tmp = strtok(cmdtext, idx);
new nickname[32];
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /nunwarn [nickname] [reason]");
return 1;
}
strmid(nickname, tmp, 0, sizeof(nickname), sizeof(nickname));
tmp = strtok(cmdtext, idx);
new result[32];
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /nunwarn [nickname] [reason]");
return 1;
}
strmid(result, tmp, 0, sizeof(result), sizeof(result));
if(strlen(nickname)<1 || strlen(nickname)>30)
{
SendClientMessage(playerid,0xB4B5B7FF,"Името трябва да бъде с до 30 символа!");
return 1;
}
if(strlen(result)<1 || strlen(result)>30)
{
SendClientMessage(playerid,0xB4B5B7FF,"Причината трябва да бъде с до 30 символа!");
return 1;
}
new nickname2[32];
new warns=0;
format(nickname2,32, "%s.ini", nickname);
if(dini_Exists(nickname2))
{
for(new i=0; i<MAX_PLAYERS; i++)
{
if(strcmp(nickname,pname[i],true)!=0)
{
warns=dini_Int(nickname2, "pWarns");
if(warns==0) return SendClientMessage(playerid,0xB4B5B7FF,"Този играч няма предупреждения!");
warns-=1;
dini_IntSet(nickname2,"pWarns",warns);
format(string256, 256, "ADMIN: %s премахна едно от предупрежденията на %s [%d/5] [Reason: %s]", pname[playerid], nickname,dini_Int(nickname2,"pWarns"), result);
return SendClientMessageToAll(0x00E600FF, string256);
}
}
for(new i=0; i<MAX_PLAYERS; i++)
{
if(strcmp(nickname,pname[i],true)==0)
{
if(PlayerInfo[i][pWarns]==0) return SendClientMessage(playerid,0xB4B5B7FF,"Този играч няма предупреждения!");
PlayerInfo[i][pWarns]-=1;
format(string256, 256, "ADMIN: %s премахна едно от предупрежденията на %s [%d/5] [Reason: %s]",pname[playerid], nickname,PlayerInfo[i][pWarns], result);
return SendClientMessageToAll(0x00E600FF, string256);
}
}
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Този nickname не съществува!");
}
}
else
{
SendClientMessage(playerid,0xB4B5B7FF,"Нямаш права за да ползваш командата!");
}
return 1;
}
if(strcmp(cmd, "/nwarn", true) == 0)
{
if (PlayerInfo[playerid][pAdmin] >= 3)
{
//
tmp = strtok(cmdtext, idx);
new nickname[32];
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /nwarn [nickname] [reason]");
return 1;
}
strmid(nickname, tmp, 0, sizeof(nickname), sizeof(nickname));
//
tmp = strtok(cmdtext, idx);
new result[32];
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /nwarn [nickname] [reason]");
return 1;
}
strmid(result, tmp, 0, sizeof(result), sizeof(result));
if(strlen(nickname)<1 || strlen(nickname)>30)
{
SendClientMessage(playerid,0xB4B5B7FF,"Името трябва да бъде с до 30 символа!");
return 1;
}
if(strlen(result)<1 || strlen(result)>30)
{
SendClientMessage(playerid,0xB4B5B7FF,"Причината трябва да бъде с до 30 символа!");
return 1;
}
new nickname2[32];
new string2562[256];
new warns=0;
format(nickname2,32, "%s.ini", nickname);
if(dini_Exists(nickname2))
{
for(new i=0; i<MAX_PLAYERS; i++)
{
if(strcmp(nickname,pname[i],true)!=0)
{
warns=dini_Int(nickname2, "pWarns");
if(warns>4) return SendClientMessage(playerid,0xB4B5B7FF,"Този играч вече има 5 предупреждения!");
warns+=1;
dini_IntSet(nickname2,"pWarns",warns);
format(string256, 256, "ADMIN: %s сложи предупреждение на %s [%d/5] [Reason: %s]", pname[playerid], nickname,dini_Int(nickname2,"pWarns"), result);
SendClientMessageToAll(0xE60000FF, string256);
if(dini_Int(nickname2,"pWarns")<5) return 1;
format(string2562, 256, "ADMIN: %s was blocked by THE SERVER [Reason: get fifth warning]", nickname);
return SendClientMessageToAll(0xE60000FF, string2562);
}
}
for(new i=0; i<MAX_PLAYERS; i++)
{
if(strcmp(nickname,pname[i],true)==0)
{
if(PlayerInfo[i][pWarns]>4) return SendClientMessage(playerid,0xB4B5B7FF,"Този играч вече има 5 предупреждения!");
PlayerInfo[i][pWarns]+=1;
format(string256, 256, "ADMIN: %s сложи предупреждение на %s [%d/5] [Reason: %s]", pname[playerid], nickname,PlayerInfo[i][pWarns], result);
SendClientMessageToAll(0xE60000FF, string256);
if(dini_Int(nickname2,"pWarns")<5) return 1;
if(PlayerInfo[i][pWarns]>4)
{
format(string2562, 256, "ADMIN: %s was blocked by THE SERVER [Reason: get fifth warning]", pname[i]);
return SendClientMessageToAll(0xE60000FF, string2562);
}
}
}
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Този nickname не съществува!");
}
}
else
{
SendClientMessage(playerid,0xB4B5B7FF,"Нямаш права за да ползваш командата!");
}
return 1;
}
if(strcmp(cmd, "/warn", true) == 0)
{
if (PlayerInfo[playerid][pAdmin] >= 1)
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /warn [playerid] [reason]");
return 1;
}
para1[playerid] = ReturnUser(tmp);
if(para1[playerid] != INVALID_PLAYER_ID)
{
new length = strlen(cmdtext);
while ((idx < length) && (cmdtext[idx] <= ' '))
{
idx++;
}
new offset = idx;
new result[256];
while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
{
result[idx - offset] = cmdtext[idx];
idx++;
}
result[idx - offset] = EOS;
if(!strlen(result))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /warn [playerid] [reason]");
return 1;
}
if(!strlen(result))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /warn [playerid] [reason]");
return 1;
}
PlayerInfo[para1[playerid]][pWarns] += 1;
format(string256, 256, "ADMIN: %s сложи предупреждение на %s [%d/5] [Reason: %s]", pname[playerid], pname[para1[playerid]],PlayerInfo[para1[playerid]][pWarns], (result));
SendClientMessageToAll(0xE60000FF, string256);
if(PlayerInfo[para1[playerid]][pWarns]>=5)
{
format(string256[para1[playerid]], 256, "ADMIN: %s събра 5 предупреждения и сега е забранено да се играе с неговия акаунт!", pname[para1[playerid]]);
SendClientMessageToAll(0xE60000FF, string256[para1[playerid]]);
PlayerInfo[para1[playerid]][pKick]=1;
}
}
else
{
format(string256, 256, "Посоченото ID не е в сървъра!");
SendClientMessage(playerid, 0xB4B5B7FF, string256);
}
}
else
{
SendClientMessage(playerid,0xB4B5B7FF,"Нямаш права за да ползваш командата!");
}
return 1;
}
if(strcmp(cmd, "/acuff", true) == 0)
{
if (PlayerInfo[playerid][pAdmin] >= 4)
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /acuff [playerid]");
return 1;
}
para1[playerid] = ReturnUser(tmp);
if(para1[playerid] != INVALID_PLAYER_ID)
{
if(acuffed[para1[playerid]]==1){return SendClientMessage(playerid,0xB4B5B7FF,"Този играч вече има сложени белезници на ръцете!");}
acuffed[para1[playerid]]=1;
SetPlayerAttachedObject(para1[playerid], 1, 19418, 6, -0.011000, 0.028000, -0.022000, -15.600012, -33.699977,-81.700035, 0.891999, 1.000000, 1.168000);
SetPlayerSpecialAction(para1[playerid], SPECIAL_ACTION_CUFFED);
format(string256, 256, "ADMIN: %s ти сложи белезници на ръцете.", pname[playerid]);
SendClientMessage(para1[playerid], 0xFFFFFFFF, string256);
format(string256, 256, "ADMIN: Ти сложи белезници на ръцете на %s.", pname[para1[playerid]]);
SendClientMessage(playerid, 0xFFFFFFFF, string256);
}
else
{
format(string256, 256, "Посоченото ID не е в сървъра!");
SendClientMessage(playerid, 0xB4B5B7FF, string256);
}
}
else
{
SendClientMessage(playerid,0xB4B5B7FF,"Нямаш права за да ползваш командата!");
}
return 1;
}
if(strcmp(cmd, "/auncuff", true) == 0)
{
if (PlayerInfo[playerid][pAdmin] >= 4)
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /auncuff [playerid]");
return 1;
}
para1[playerid] = ReturnUser(tmp);
if(para1[playerid] != INVALID_PLAYER_ID)
{
if(acuffed[para1[playerid]]==0){return SendClientMessage(playerid,0xB4B5B7FF,"Този играч няма белезници на ръцете!");}
RemovePlayerAttachedObject(para1[playerid], 1);
acuffed[para1[playerid]]=0;
SetPlayerSpecialAction(para1[playerid], SPECIAL_ACTION_NONE);
format(string256, 256, "ADMIN: %s премахна твоите белезници от ръцете.", pname[playerid]);
SendClientMessage(para1[playerid], 0xFFFFFFFF, string256);
format(string256, 256, "ADMIN: Ти премахна белезниците от ръцете на %s.", pname[para1[playerid]]);
SendClientMessage(playerid, 0xFFFFFFFF, string256);
}
else
{
format(string256, 256, "Посоченото ID не е в сървъра!");
SendClientMessage(playerid, 0xB4B5B7FF, string256);
}
}
else
{
SendClientMessage(playerid,0xB4B5B7FF,"Нямаш права за да ползваш командата!");
}
return 1;
}
if(strcmp(cmd, "/god", true) == 0)
{
if (PlayerInfo[playerid][pAdmin] >= 4)
{
if(PlayerInfo[playerid][pADuty]==0)
{
SendClientMessage(playerid,0xB4B5B7FF,"Трябва да си ADMIN ON-DUTY!");
return 1;
}
if(godmode[playerid]==0)
{
godmode[playerid]=1;
SetPlayerHealth(playerid, 99999);
SetPlayerArmour(playerid, 99999);
return SendClientMessage(playerid, 0x40BF00FF, "GODMODE: Tи активира безсмъртния режим.");
}
if(godmode[playerid]==1)
{
godmode[playerid]=0;
SetPlayerHealth(playerid, 100);
SetPlayerArmour(playerid, 100);
SendClientMessage(playerid, 0xE60000FF, "GODMODE: Tи деактивира безсмъртния режим.");
}
}else SendClientMessage(playerid,0xB4B5B7FF,"Нямаш права за да ползваш командата!");
return 1;
}
if(strcmp(cmd, "/tgoto", true) == 0)
{
if (PlayerInfo[playerid][pAdmin] >= 4)
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /tgoto [playerid]");
return 1;
}
//if(PlayerInfo[para1[playerid]][pAdmin]<3) {return  SendClientMessage(playerid,0xB4B5B7FF,"Този играч няма достатъчно голямо ниво админ!");}
para1[playerid] = ReturnUser(tmp);
if(para1[playerid] != INVALID_PLAYER_ID)
{
if(PlayerInfo[para1[playerid]][pTGoto]==0)
{
PlayerInfo[para1[playerid]][pTGoto] = 1;
format(string256, 256, "ADMIN: Ти позволи на %s да се телепортира до играчите.", pname[para1[playerid]]);
SendClientMessage(playerid, 0xE60000FF, string256);
format(string256, 256, "ADMIN: %s ти позволи да се телепортираш до играчите.", pname[playerid]);
SendClientMessage(para1[playerid], 0xE60000FF, string256);
return 1;
}
if(PlayerInfo[para1[playerid]][pTGoto]==1)
{
PlayerInfo[para1[playerid]][pTGoto] = 0;
format(string256, 256, "ADMIN: Ти забрани на %s да се телепортира до играчите.", pname[para1[playerid]]);
SendClientMessage(playerid, 0xE60000FF, string256);
format(string256, 256, "ADMIN: %s ти забрани да се телепортираш до играчите.", pname[playerid]);
SendClientMessage(para1[playerid], 0xE60000FF, string256);
return 1;
}
}
else
{
format(string256, 256, "Посоченото ID не е в сървъра!");
SendClientMessage(playerid, 0xB4B5B7FF, string256);
}
}
else
{
SendClientMessage(playerid,0xB4B5B7FF,"Нямаш права за да ползваш командата!");
}
return 1;
}
if(strcmp(cmd, "/tspec", true) == 0)
{
if (PlayerInfo[playerid][pAdmin] >= 4)
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /tspec [playerid]");
return 1;
}
//if(PlayerInfo[para1[playerid]][pAdmin]<3) {return  SendClientMessage(playerid,0xB4B5B7FF,"Този играч няма достатъчно голямо ниво админ!");}
para1[playerid] = ReturnUser(tmp);
if(para1[playerid] != INVALID_PLAYER_ID)
{
if(PlayerInfo[para1[playerid]][pTSpec]==0)
{
PlayerInfo[para1[playerid]][pTSpec] = 1;
format(string256, 256, "ADMIN: Ти позволи на %s да наблюдава играчите.", pname[para1[playerid]]);
SendClientMessage(playerid, 0xE60000FF, string256);
format(string256, 256, "ADMIN: %s ти позволи да наблюдаваш играчите.", pname[playerid]);
SendClientMessage(para1[playerid], 0xE60000FF, string256);
return 1;
}
if(PlayerInfo[para1[playerid]][pTSpec]==1)
{
PlayerInfo[para1[playerid]][pTSpec] = 0;
format(string256, 256, "ADMIN: Ти забрани на %s да наблюдава играчите.", pname[para1[playerid]]);
SendClientMessage(playerid, 0xE60000FF, string256);
format(string256, 256, "ADMIN: %s ти забрани да наблюдаваш играчите.", pname[playerid]);
SendClientMessage(para1[playerid], 0xE60000FF, string256);
return 1;
}
}
else
{
format(string256, 256, "Посоченото ID не е в сървъра!");
SendClientMessage(playerid, 0xB4B5B7FF, string256);
}
}
else
{
SendClientMessage(playerid,0xB4B5B7FF,"Нямаш права за да ползваш командата!");
}
return 1;
}
if(strcmp(cmd, "/timejail", true) == 0)
{
if (PlayerInfo[playerid][pAdmin] >= 4)
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /timejail [playerid]");
return 1;
}
para1[playerid] = ReturnUser(tmp);
if(para1[playerid] != INVALID_PLAYER_ID)
{
if(PlayerInfo[para1[playerid]][pTimeJail]==0)
{
PlayerInfo[para1[playerid]][pTimeJail] = 1;
format(string256, 256, "ADMIN: Ти позволи на %s да вкарва играчи в затвора за време.", pname[playerid]);
SendClientMessage(playerid, 0xE60000FF, string256);
format(string256, 256, "ADMIN: %s ти позволи да вкарваш играчи в админ затвора за време.", pname[playerid]);
return SendClientMessage(para1[playerid], 0xE60000FF, string256);
}
if(PlayerInfo[para1[playerid]][pTimeJail]==1)
{
PlayerInfo[para1[playerid]][pTimeJail] = 0;
format(string256, 256, "ADMIN: Ти забрани на %s да вкарва играчи в затвора за време.", pname[playerid]);
SendClientMessage(playerid, 0xE60000FF, string256);
format(string256, 256, "ADMIN: %s ти забрани да вкарваш играчи в админ затвора за време.", pname[playerid]);
SendClientMessage(para1[playerid], 0xE60000FF, string256);
}
}
else
{
format(string256, 256, "Посоченото ID не е в сървъра!");
SendClientMessage(playerid, 0xB4B5B7FF, string256);
}
}
else
{
SendClientMessage(playerid,0xB4B5B7FF,"Нямаш права за да ползваш командата!");
}
return 1;
}
if(strcmp(cmd, "/timemute", true) == 0)
{
if (PlayerInfo[playerid][pAdmin] >= 4)
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /timemute [playerid]");
return 1;
}
para1[playerid] = ReturnUser(tmp);
if(para1[playerid] != INVALID_PLAYER_ID)
{
if(PlayerInfo[para1[playerid]][pTimeMute]==0)
{
PlayerInfo[para1[playerid]][pTimeMute] = 1;
format(string256, 256, "ADMIN: Ти позволи на %s да заглушава за време.", pname[playerid]);
SendClientMessage(playerid, 0xE60000FF, string256);
format(string256, 256, "ADMIN: %s ти позволи да заглушаваш за време.", pname[playerid]);
return SendClientMessage(para1[playerid], 0xE60000FF, string256);
}
if(PlayerInfo[para1[playerid]][pTimeMute]==1)
{
PlayerInfo[para1[playerid]][pTimeMute] = 0;
format(string256, 256, "ADMIN: Ти забрани на %s да заглушава за време.", pname[playerid]);
SendClientMessage(playerid, 0xE60000FF, string256);
format(string256, 256, "ADMIN: %s ти забрани да заглушаваш за време.", pname[playerid]);
return SendClientMessage(para1[playerid], 0xE60000FF, string256);
}
}
else
{
format(string256, 256, "Посоченото ID не е в сървъра!");
SendClientMessage(playerid, 0xB4B5B7FF, string256);
}
}
else
{
SendClientMessage(playerid,0xB4B5B7FF,"Нямаш права за да ползваш командата!");
}
return 1;
}
if(strcmp(cmd, "/unblock", true) == 0)
{
new length = strlen(cmdtext);
while ((idx < length) && (cmdtext[idx] <= ' '))
{
idx++;
}
new offset = idx;
new result[256];
while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
{
result[idx - offset] = cmdtext[idx];
idx++;
}
result[idx - offset] = EOS;
if(!strlen(result))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /unblock [nickname]");
return 1;
}
if (PlayerInfo[playerid][pManage]>0)
{
format(string115, 115, "%s.ini",result);
if(dini_Exists(string115))
{
if(dini_Int(string115,"pBlock")==0)
{
return SendClientMessage(playerid, COLOR_GRAD1, "Този nickname не е блокиран!");
}
dini_IntSet(string115,"pBlock",0);
if(dini_Int(string115,"pWarns")==5)
{
dini_IntSet(string115,"pWarns",0);
}
format(string115,115,"ADMIN: %s was unblocked by %s", result,pname[playerid]);
SendClientMessageToAll(0x00E600FF,string115);
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Този nickname не съществува!");
}
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
}
return 1;
}
if(strcmp(cmd, "/unban", true) == 0)
{
new length = strlen(cmdtext);
while ((idx < length) && (cmdtext[idx] <= ' '))
{
idx++;
}
new offset = idx;
new result[256];
while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
{
result[idx - offset] = cmdtext[idx];
idx++;
}
result[idx - offset] = EOS;
if(!strlen(result))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /unban [nickname]");
return 1;
}
if (PlayerInfo[playerid][pManage]>0)
{
new stringPlayerName[40];
format(stringPlayerName, 115, "%s.ini",result);
if(dini_Exists(stringPlayerName))
{
format(string256, 256, "unbanip %s",dini_Int(stringPlayerName, "pIP"));
SendRconCommand(stringPlayerName);
SendRconCommand("reloadbans");
format(string115,115,"ADMIN: [%d:%d:%d] %s was unbanned by %s",hours,minutes,seconds, result,pname[playerid]);
SendClientMessageToAll(0x00E600FF,string115);
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Този nickname не съществува!");
}
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
}
return 1;
}
if(strcmp(cmd, "/fwarn", true) == 0)
{
if (PlayerInfo[playerid][pRank] == 6)
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /fwarn [playerid]");
return 1;
}
para1[playerid] = strval(tmp);
if(!IsPlayerConnected(para1[playerid]))
{
SendClientMessage(playerid, 0xB4B5B7FF, "Посоченото ID не е в сървъра!");
return 1;
}
if(PlayerInfo[playerid][pTeam]!=PlayerInfo[para1[playerid]][pTeam]) return SendClientMessage(playerid,0xB4B5B7FF,"Този играч не е от твоята банда/мафия!");
if(PlayerInfo[para1[playerid]][pFWarns]<4)
{
PlayerInfo[para1[playerid]][pFWarns]+=1;
format(string256, 256, "[FACTION CHAT] %s was FACTION warned by %s [%d/5]",pname[para1[playerid]] ,pname[playerid],PlayerInfo[para1[playerid]][pFWarns]);
for(new i=0; i<MAX_PLAYERS; i++)
{
if(PlayerInfo[i][pTeam] == PlayerInfo[playerid][pTeam])
{
SendClientMessage(i, 0x33CCFFFF, string256);
}
}
//0x40BF00FF
}
else
{
PlayerInfo[para1[playerid]][pFWarns]+=1;
format(string256, 256, "[FACTION CHAT] %s was FACTION warned by %s [5/5]",pname[para1[playerid]] ,pname[playerid]);
for(new i=0; i<MAX_PLAYERS; i++)
{
if(PlayerInfo[i][pTeam] == PlayerInfo[playerid][pTeam])
{
SendClientMessage(i, 0x33CCFFFF, string256);
}
}
format(string256, 256, "[FACTION CHAT] %s е изгнонен от банда/мафията заради 5 FACTION WARNS",pname[para1[playerid]]);
for(new i=0; i<MAX_PLAYERS; i++)
{
if(PlayerInfo[i][pTeam] == PlayerInfo[playerid][pTeam])
{
SendClientMessage(i, 0x33CCFFFF, string256);
}
}
LeaveGangPlayerAffect(para1[playerid]);
}
}
else
{
SendClientMessage(playerid, 0xB4B5B7FF, "Нямаш права за да ползваш командата!");
}
return 1;
}
if(strcmp(cmd, "/unfwarn", true) == 0)
{
if (PlayerInfo[playerid][pRank] == 6)
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /unfwarn [playerid]");
return 1;
}
para1[playerid] = strval(tmp);
if(!IsPlayerConnected(para1[playerid]))
{
SendClientMessage(playerid, 0xB4B5B7FF, "Посоченото ID не е в сървъра!");
return 1;
}
if(PlayerInfo[playerid][pTeam]!=PlayerInfo[para1[playerid]][pTeam]) return SendClientMessage(playerid,0xB4B5B7FF,"Този играч не е от твоята банда/мафия!");
if(PlayerInfo[para1[playerid]][pFWarns]==0)
{
PlayerInfo[para1[playerid]][pFWarns]-=1;
format(string256, 256, "[FACTION CHAT] %s was FACTION unwarned by %s",pname[para1[playerid]] ,pname[playerid]);
for(new i=0; i<MAX_PLAYERS; i++)
{
if(PlayerInfo[i][pTeam] == PlayerInfo[playerid][pTeam])
{
SendClientMessage(i, 0x33CCFFFF, string256);
}
}
//0x40BF00FF
}
else
{
SendClientMessage(playerid,0xB4B5B7FF,"Този играч няма FACTION предупреждения!");
}
}
else
{
SendClientMessage(playerid, 0xB4B5B7FF, "Нямаш права за да ползваш командата!");
}
return 1;
}
if(strcmp(cmd, "/nunfwarn", true) == 0)
{
if (PlayerInfo[playerid][pRank] == 6)
{
//
tmp = strtok(cmdtext, idx);
new nickname[32];
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /nunfwarn [nickname]");
return 1;
}
strmid(nickname, tmp, 0, sizeof(nickname), sizeof(nickname));
if(strlen(nickname)<1 || strlen(nickname)>30)
{
SendClientMessage(playerid,0xB4B5B7FF,"Името трябва да бъде с до 30 символа!");
return 1;
}
new nickname2[64];
new fwarns=0;
new gang=0;
format(nickname2,32, "%s.ini", nickname);
if(dini_Exists(nickname2))
{
fwarns=dini_Int(nickname2,"pFWarns");
gang=dini_Int(nickname2,"pTeam");
for(new i=0; i<MAX_PLAYERS; i++)
{
if(IsPlayerConnected(i))
{
if(strcmp(nickname,pname[i],true)==0)
{
if(PlayerInfo[i][pTeam]!=PlayerInfo[playerid][pTeam]) return SendClientMessage(playerid,0xB4B5B7FF,"Този играч не е от твоята банда/мафия!");
if(PlayerInfo[i][pFWarns]==0) return SendClientMessage(playerid,0xB4B5B7FF,"Този играч няма FACTION предупреждения!");
PlayerInfo[i][pFWarns]-=1;
}
}
}
if(gang!=PlayerInfo[playerid][pTeam]) return SendClientMessage(playerid,0xB4B5B7FF,"Този играч не е от твоята банда/мафия!");
if(fwarns==0) return SendClientMessage(playerid,0xB4B5B7FF,"Този играч няма FACTION предупреждения!");
fwarns-=1;
dini_IntSet(nickname2, "pFWarns", fwarns);
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Този nickname не съществува!");
}
format(string256, 256, "[FACTION CHAT] %s was FACTION unwarned by %s",nickname, pname[playerid]);
for(new i=0; i<MAX_PLAYERS; i++)
{
if(PlayerInfo[i][pTeam] == PlayerInfo[playerid][pTeam])
{
SendClientMessage(i, 0x33CCFFFF, string256);
}
}
}
else
{
SendClientMessage(playerid,0xB4B5B7FF,"Нямаш права за да ползваш командата!");
}
return 1;
}
if(strcmp(cmd, "/nftmute", true) == 0)
{
tmp = strtok(cmdtext, idx);
new hisNickName[32];
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /nftmute [nickname] [time]");
return 1;
}
strmid(hisNickName, tmp, 0, sizeof(hisNickName), sizeof(hisNickName));
if(PlayerInfo[playerid][pRank] < 6)
{
SendClientMessage(playerid,0xB4B5B7FF,"Нямаш права за да ползваш командата!");
return 1;
}
if(strlen(hisNickName)<1 || strlen(hisNickName)>30)
{
SendClientMessage(playerid,0xB4B5B7FF,"Името трябва да бъде с до 30 символа!");
return 1;
}
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /nftmute [nickname] [time]");
return 1;
}
new timeMute;
timeMute = strval(tmp);
if(timeMute<1 || timeMute>1000) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва минутите да бъдат между 1 и 1000!");
new hisNickNameFile[64]; new bool:isOnlinePlayer;
format(hisNickNameFile,64, "%s.ini", hisNickName);
if(!dini_Exists(hisNickNameFile)) return SendClientMessage(playerid,0xB4B5B7FF,"Не съществува играч с такъв nickname!");
for(new i=0; i<MAX_PLAYERS; i++)
{
if(IsPlayerConnected(i))
{
if(strcmp(hisNickName,pname[i],true)==0)
{ //online ID variant
isOnlinePlayer=true;
if(PlayerInfo[i][pTeam]!=PlayerInfo[playerid][pTeam]) return SendClientMessage(playerid,0xB4B5B7FF,"Този играч не е от твоята банда/мафия!");
PlayerInfo[i][pFMuted] = timeMute*60;
format(string256, 256, "[FACTION CHAT] %s was FACTION muted by %s for %d minutes.", pname[i],pname[playerid],timeMute);
for(new allPlayers = 0; allPlayers < MAX_PLAYERS; allPlayers++)
{
if(PlayerInfo[allPlayers][pTeam] == PlayerInfo[playerid][pTeam])
{
SendClientMessage(allPlayers,0x33CCFFFF, string256);
}
}
}
}
}//online ID variant END
if(isOnlinePlayer==false) //offline ID variant
{
new offlinePlayerGang=dini_Int(hisNickNameFile, "pTeam");
new offlinePlayerWarns=dini_Int(hisNickNameFile, "pFWarns");
if(offlinePlayerGang!=PlayerInfo[playerid][pTeam]) return SendClientMessage(playerid,0xB4B5B7FF,"Този играч не е от твоята банда/мафия!");
offlinePlayerWarns+=1;
format(string256, 256, "[FACTION CHAT] %s was FACTION muted by %s for %d minutes.", hisNickName, pname[playerid],timeMute);
for(new allPlayers = 0; allPlayers < MAX_PLAYERS; allPlayers++)
{
if(PlayerInfo[allPlayers][pTeam] == PlayerInfo[playerid][pTeam])
{
SendClientMessage(allPlayers,0x33CCFFFF, string256);
}
}
dini_IntSet(hisNickNameFile,"pFMuted",timeMute*60);
}
return 1;
}
if(strcmp(cmd, "/nfmute", true) == 0)
{
tmp = strtok(cmdtext, idx);
new hisNickName[32];
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /nfmute [nickname]");
return 1;
}
strmid(hisNickName, tmp, 0, sizeof(hisNickName), sizeof(hisNickName));
if(PlayerInfo[playerid][pRank] < 6)
{
SendClientMessage(playerid,0xB4B5B7FF,"Нямаш права за да ползваш командата!");
return 1;
}
if(strlen(hisNickName)<1 || strlen(hisNickName)>30)
{
SendClientMessage(playerid,0xB4B5B7FF,"Името трябва да бъде с до 30 символа!");
return 1;
}
new hisNickNameFile[64]; new bool:isOnlinePlayer;
format(hisNickNameFile,64, "%s.ini", hisNickName);
if(!dini_Exists(hisNickNameFile)) return SendClientMessage(playerid,0xB4B5B7FF,"Не съществува играч с такъв nickname!");
for(new i=0; i<MAX_PLAYERS; i++)
{
if(IsPlayerConnected(i))
{
if(strcmp(hisNickName,pname[i],true)==0)
{ //online ID variant
isOnlinePlayer=true;
if(PlayerInfo[i][pTeam]!=PlayerInfo[playerid][pTeam]) return SendClientMessage(playerid,0xB4B5B7FF,"Този играч не е от твоята банда/мафия!");
PlayerInfo[i][pFMuted] = 1000000;
format(string256, 256, "[FACTION CHAT] %s was FACTION muted by %s", pname[i],pname[playerid]);
for(new allPlayers = 0; allPlayers < MAX_PLAYERS; allPlayers++)
{
if(PlayerInfo[allPlayers][pTeam] == PlayerInfo[playerid][pTeam])
{
SendClientMessage(allPlayers,0x33CCFFFF, string256);
}
}
}
}
}//online ID variant END
if(isOnlinePlayer==false) //offline ID variant
{
new offlinePlayerGang=dini_Int(hisNickNameFile, "pTeam");
new offlinePlayerWarns=dini_Int(hisNickNameFile, "pFWarns");
if(offlinePlayerGang!=PlayerInfo[playerid][pTeam]) return SendClientMessage(playerid,0xB4B5B7FF,"Този играч не е от твоята банда/мафия!");
offlinePlayerWarns+=1;
format(string256, 256, "[FACTION CHAT] %s was FACTION muted by %s", hisNickName, pname[playerid]);
for(new allPlayers = 0; allPlayers < MAX_PLAYERS; allPlayers++)
{
if(PlayerInfo[allPlayers][pTeam] == PlayerInfo[playerid][pTeam])
{
SendClientMessage(allPlayers,0x33CCFFFF, string256);
}
}
dini_IntSet(hisNickNameFile,"pFMuted",1000000);
}
return 1;
}
if(strcmp(cmd, "/block", true) == 0)
{
if (PlayerInfo[playerid][pAdmin] >= 3)
{
//
tmp = strtok(cmdtext, idx);
new nickname[32];
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /block [nickname] [reason]");
return 1;
}
strmid(nickname, tmp, 0, sizeof(nickname), sizeof(nickname));
//
tmp = strtok(cmdtext, idx);
new result[32];
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /block [nickname] [reason]");
return 1;
}
strmid(result, tmp, 0, sizeof(result), sizeof(result));
if(strlen(nickname)<1 || strlen(nickname)>30)
{
SendClientMessage(playerid,0xB4B5B7FF,"Името трябва да бъде с до 30 символа!");
return 1;
}
if(strlen(result)<1 || strlen(result)>30)
{
SendClientMessage(playerid,0xB4B5B7FF,"Причината трябва да бъде с до 30 символа!");
return 1;
}
new nickname2[64];
format(nickname2,32, "%s.ini", nickname);
if(dini_Exists(nickname2))
{
if(dini_Int(string115,"pBlock")==1)
{
return SendClientMessage(playerid, COLOR_GRAD1, "Този nickname е блокиран!");
}
dini_IntSet(nickname2, "pBlock", 1);
for(new i=0; i<MAX_PLAYERS; i++)
{
if(strcmp(nickname,pname[i],true)==0)
{
PlayerInfo[i][pBlock]=1;
PlayerInfo[i][pKick]=1;
}
}
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Този nickname не съществува!");
}
format(string256, 256, "ADMIN: %s was blocked by %s [Reason: %s]", nickname, pname[playerid], result);
SendClientMessageToAll(0xE60000FF, string256);
}
else
{
SendClientMessage(playerid,0xB4B5B7FF,"Нямаш права за да ползваш командата!");
}
return 1;
}
if(strcmp(cmd, "/nban", true) == 0)
{
if (PlayerInfo[playerid][pAdmin] >= 3)
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /nban [playerid] [reason]");
return 1;
}
para1[playerid] = ReturnUser(tmp);
if(para1[playerid] != INVALID_PLAYER_ID)
{
new length = strlen(cmdtext);
while ((idx < length) && (cmdtext[idx] <= ' '))
{
idx++;
}
new offset = idx;
new result[256];
while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
{
result[idx - offset] = cmdtext[idx];
idx++;
}
result[idx - offset] = EOS;
if(!strlen(result))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /nban [playerid] [reason]");
return 1;
}
if(strlen(result)<1 || strlen(result)>30)
{
SendClientMessage(playerid,0xB4B5B7FF,"Причината трябва да бъде с до 30 символа!");
return 1;
}
format(string256, 256, "ADMIN: %s was blocked by %s [Reason: %s]", pname[para1[playerid]], pname[playerid], (result));
SendClientMessageToAll(0xE60000FF, string256);
PlayerInfo[para1[playerid]][pBlock]=1;
PlayerInfo[para1[playerid]][pKick]=1;
}
else
{
format(string256, 256, "Посоченото ID не е в сървъра!");
SendClientMessage(playerid, 0xB4B5B7FF, string256);
}
}
else
{
SendClientMessage(playerid,0xB4B5B7FF,"Нямаш права за да ползваш командата!");
}
return 1;
}
if(strcmp(cmd, "/rban", true) == 0)
{
if (PlayerInfo[playerid][pAdmin] >= 3)
{
//
tmp = strtok(cmdtext, idx);
new nickname[32];
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /rban [nickname] [reason]");
return 1;
}
strmid(nickname, tmp, 0, sizeof(nickname), sizeof(nickname));
//
tmp = strtok(cmdtext, idx);
new result[32];
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /rban [nickname] [reason]");
return 1;
}
strmid(result, tmp, 0, sizeof(result), sizeof(result));
if(strlen(nickname)<1 || strlen(nickname)>30)
{
SendClientMessage(playerid,0xB4B5B7FF,"Името трябва да бъде с до 30 символа!");
return 1;
}
if(strlen(result)<1 || strlen(result)>30)
{
SendClientMessage(playerid,0xB4B5B7FF,"Причината трябва да бъде с до 30 символа!");
return 1;
}
new nicknameFile[50];
format(nicknameFile,50, "%s.ini", nickname);
if(dini_Exists(nicknameFile))
{
format(string256, 256, "ADMIN: [%d:%d:%d] %s was banned by %s [Reason: %s]",hours,minutes,seconds, nickname, pname[playerid], result);
SendClientMessageToAll(0xE60000FF, string256);
new nicknamesIP[25];
format(nicknamesIP,25,"%s",dini_Get(nicknameFile,"pIP"));
new rconCommandString[115];
format(rconCommandString, 115, "banip %s",nicknamesIP);
SendRconCommand(rconCommandString);
SendRconCommand("reloadbans");
dini_IntSet(nicknameFile, "pBlock", 1);
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Този nickname не съществува!");
}
}
else
{
SendClientMessage(playerid,0xB4B5B7FF,"Нямаш права за да ползваш командата!");
}
return 1;
}
/*
if(strcmp(cmd, "/rban", true) == 0)
{
if (PlayerInfo[playerid][pAdmin] >= 3)
{
//
tmp = strtok(cmdtext, idx);
new nickname[32];
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /rban [nickname] [reason]");
return 1;
}
strmid(nickname, tmp, 0, sizeof(nickname), sizeof(nickname));
//
tmp = strtok(cmdtext, idx);
new result[32];
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /rban [nickname] [reason]");
return 1;
}
strmid(result, tmp, 0, sizeof(result), sizeof(result));
if(strlen(nickname)<1 || strlen(nickname)>30)
{
SendClientMessage(playerid,0xB4B5B7FF,"Името трябва да бъде с до 30 символа!");
return 1;
}
if(strlen(result)<1 || strlen(result)>30)
{
SendClientMessage(playerid,0xB4B5B7FF,"Причината трябва да бъде с до 30 символа!");
return 1;
}
new nickname2[64];
format(nickname2,32, "%s.ini", nickname);
if(dini_Exists(nickname2))
{
new string1152[115];
format(string1152, 115, "banip %s",dini_Int(nickname2, "pIP"));
SendRconCommand(string1152);
SendRconCommand("reloadbans");
for(new i=0; i<MAX_PLAYERS; i++)
{
if(strcmp(nickname,pname[i],true)==0)
{
PlayerInfo[i][pBan]=1;
}
}
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Този nickname не съществува!");
}
format(string256, 256, "ADMIN: [%d:%d:%d] %s was banned by %s [Reason: %s]",hours,minutes,seconds, nickname, pname[playerid], result);
SendClientMessageToAll(0xE60000FF, string256);
}
else
{
SendClientMessage(playerid,0xB4B5B7FF,"Нямаш права за да ползваш командата!");
}
return 1;
}
*/
if(strcmp(cmd, "/ban", true) == 0)
{
if (PlayerInfo[playerid][pAdmin] >= 1)
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /ban [playerid] [reason]");
return 1;
}
para1[playerid] = ReturnUser(tmp);
if(para1[playerid] != INVALID_PLAYER_ID)
{
if(PlayerInfo[para1[playerid]][pAdmin] > PlayerInfo[playerid][pAdmin])
{
format(string256, 256, "SERVER:%s was kicked by THE SERVER [Reason: Ban a larger admin level]", pname[playerid]);
SendClientMessageToAll(0xE60000FF, string256);
PlayerInfo[playerid][pKick] = 1;
return 1;
}
new length = strlen(cmdtext);
while ((idx < length) && (cmdtext[idx] <= ' '))
{
idx++;
}
new offset = idx;
new result[256];
while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
{
result[idx - offset] = cmdtext[idx];
idx++;
}
result[idx - offset] = EOS;
if(!strlen(result))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /ban [playerid] [reason]");
return 1;
}
if(!strlen(result))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /ban [playerid] [reason]");
return 1;
}
if(strlen(result)<1 || strlen(result)>30)
{
SendClientMessage(playerid,0xB4B5B7FF,"Причината трябва да бъде с до 30 символа!");
return 1;
}
format(string256, 256, "ADMIN: [%d:%d:%d] %s was banned by %s [Reason: %s]",hours,minutes,seconds, pname[para1[playerid]], pname[playerid], (result));
SendClientMessageToAll(0xE60000FF, string256);
PlayerInfo[para1[playerid]][pBlock]=1;
SetTimerEx("BanExPublic", 1000, false, "ds", para1[playerid], result);
}
else
{
format(string256, 256, "Посоченото ID не е в сървъра!");
SendClientMessage(playerid, 0xB4B5B7FF, string256);
}
}
else
{
SendClientMessage(playerid,0xB4B5B7FF,"Нямаш права за да ползваш командата!");
}
return 1;
}
if(strcmp(cmd, "/kick", true) == 0)
{
if (PlayerInfo[playerid][pAdmin] >= 1 || PlayerInfo[playerid][pTest] == 1)
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /kick [playerid] [reason]");
return 1;
}
para1[playerid] = ReturnUser(tmp);
if(para1[playerid] != INVALID_PLAYER_ID)
{
if(PlayerInfo[para1[playerid]][pAdmin] > PlayerInfo[playerid][pAdmin] && PlayerInfo[para1[playerid]][pAdmin]>3 && PlayerInfo[playerid][pAdmin]<3)
{
format(string256, 256, "SERVER:%s was kicked by THE SERVER [Reason: Kick a larger admin level]", pname[playerid]);
SendClientMessageToAll(0xE60000FF, string256);
PlayerInfo[playerid][pKick] = 1;
return 1;
}
new length = strlen(cmdtext);
while ((idx < length) && (cmdtext[idx] <= ' '))
{
idx++;
}
new offset = idx;
new result[256];
while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
{
result[idx - offset] = cmdtext[idx];
idx++;
}
result[idx - offset] = EOS;
if(!strlen(result))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /kick [playerid] [reason]");
return 1;
}
if(!strlen(result))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /kick [playerid] [reason]");
return 1;
}
format(string256, 256, "ADMIN: %s was kicked by %s [Reason: %s]", pname[para1[playerid]], pname[playerid], (result));
SendClientMessageToAll(0xE60000FF, string256);
PlayerInfo[para1[playerid]][pKick] = 1;
}
else
{
format(string256, 256, "Посоченото ID не е в сървъра!");
SendClientMessage(playerid, 0xB4B5B7FF, string256);
}
}
else
{
SendClientMessage(playerid,0xB4B5B7FF,"Нямаш права за да ползваш командата!");
}
return 1;
}
if(strcmp(cmd, "/epay", true)==0)
{
new vehicleid=GetPlayerVehicleID(playerid);
if(vehicleid==mechanicDutyVehs[0] || vehicleid==mechanicDutyVehs[1] ||vehicleid==mechanicDutyVehs[2]
|| vehicleid==mechanicDutyVehs[3] || vehicleid==mechanicDutyVehs[4] ||vehicleid==mechanicDutyVehs[5]
|| vehicleid==mechanicDutyVehs[6] ||vehicleid==mechanicDutyVehs[7])
{
if(PlayerInfo[playerid][pCash]<150) return SendClientMessage(playerid,0xB4B5B7FF,"Ти нямаш $150 !");
GivePlayerCash(playerid,-150);
SendClientMessage(playerid, 0x808000FF,"Сега ще можеш да ползваш Tow Truck-a докато не излезеш от него. Използвай /tow за да закачаш или откачаш коли!");
SendClientMessage(playerid, 0x9ACD32FF, "* Ти включи двигателят на превозното средство *");
ToggleEngine(vehicleid, VEHICLE_PARAMS_ON);
return 1;
}
return 1;
}
if(strcmp(cmd, "/exit", true)==0)
{
new vehicleid=GetPlayerVehicleID(playerid);
if(vehicleid==mechanicDutyVehs[0] || vehicleid==mechanicDutyVehs[1] ||vehicleid==mechanicDutyVehs[2]
|| vehicleid==mechanicDutyVehs[3] || vehicleid==mechanicDutyVehs[4] ||vehicleid==mechanicDutyVehs[5]
|| vehicleid==mechanicDutyVehs[6] ||vehicleid==mechanicDutyVehs[7])
{
RemovePlayerFromVehicle(playerid);
return 1;
}
if(IsPlayerInRangeOfPoint(playerid, 2, 478.3596,-22.0018,1002.2813))
{
SetPlayerPos(playerid, 478.2492,-19.3125,1000.6797);
}
for(new alb=0; alb<maxbiz+2; alb++) // Dynamic Houses
{
//
if(IsPlayerInRangeOfPoint(playerid, 3, -27.3025,-57.6649,1003.5469)
|| IsPlayerInRangeOfPoint(playerid, 3, 501.980987,-69.150199,998.757812)
|| IsPlayerInRangeOfPoint(playerid, 3, -2026.9447,-103.6024,1035.1832)
|| IsPlayerInRangeOfPoint(playerid, 3, 296.8089,-112.0065,1001.5156)
|| IsPlayerInRangeOfPoint(playerid, 3, 1260.6464,-785.4418,1091.9063)
|| IsPlayerInRangeOfPoint(playerid, 3, -27.3512,-31.7518,1003.5573)
|| IsPlayerInRangeOfPoint(playerid, 3, 207.054992,-138.804992,1003.507812)
|| IsPlayerInRangeOfPoint(playerid, 3, 1494.4723,1303.5813,1093.2891)
|| IsPlayerInRangeOfPoint(playerid, 3, 362.8670,-75.1642,1001.5078)
|| IsPlayerInRangeOfPoint(playerid, 3, 834.6642,7.5311,1004.1870)
|| IsPlayerInRangeOfPoint(playerid, 3, -25.9455,-141.5480,1003.5469)
|| IsPlayerInRangeOfPoint(playerid, 3, 203.7447,-50.6649,1001.8047)
|| IsPlayerInRangeOfPoint(playerid, 3, 285.9084,-86.7750,1001.5229)
|| IsPlayerInRangeOfPoint(playerid, 3, 315.7523,-143.6341,999.6016)
|| IsPlayerInRangeOfPoint(playerid, 3, 493.4793,-24.9576,1000.6719)
|| IsPlayerInRangeOfPoint(playerid, 3, 744.6210,1436.3411,1102.7031)
|| IsPlayerInRangeOfPoint(playerid, 3, 773.9693,-78.8193,1000.6628)
|| IsPlayerInRangeOfPoint(playerid, 3, 774.1560,-50.4766,1000.5859)
|| IsPlayerInRangeOfPoint(playerid, 3, 1133.2222,-15.8171,1000.6797)
|| IsPlayerInRangeOfPoint(playerid, 3, 1204.7975,-13.8216,1000.9219)
|| IsPlayerInRangeOfPoint(playerid, 3, 1306.8253,3.2698,1001.0272)
|| IsPlayerInRangeOfPoint(playerid, 3, 2018.6144,1017.7792,996.8750)
|| IsPlayerInRangeOfPoint(playerid, 3, 2234.1011,1714.4489,1012.3828)
|| IsPlayerInRangeOfPoint(playerid, 3, -229.1534,1401.3180,27.7656)
|| IsPlayerInRangeOfPoint(playerid, 3, 377.0852,-193.3047,1000.6328)
|| IsPlayerInRangeOfPoint(playerid, 3, 364.9964,-11.8438,1001.8516)
|| IsPlayerInRangeOfPoint(playerid, 3, 460.5563,-88.6419,999.5547)
|| IsPlayerInRangeOfPoint(playerid, 3, 1727.7561,-1638.0088,20.2230)
|| IsPlayerInRangeOfPoint(playerid, 3, 2541.9399,-1304.0100,1025.0703)
|| IsPlayerInRangeOfPoint(playerid, 3, -1395.4200,1245.6000,1039.8672))
{
if(GetPlayerVirtualWorld(playerid) == alb+500)
{
if(BizInfo[alb][bLocked]==1)
{
GameTextForPlayer(playerid, "locked", 3000, 1);
return SendClientMessage(playerid,0x499BD4FF,"Бизнесът е заключен и не можеш да излезеш !");
}
SetPlayerPos(playerid,BizInfo[alb][bX], BizInfo[alb][bY], BizInfo[alb][bZ]);
SetPlayerInterior(playerid,0);
SetCameraBehindPlayer(playerid);
SetPlayerVirtualWorld(playerid, 0);
}
}
}
for(new alh=0; alh<maxhouses+2; alh++) // Dynamic Houses
{
//
if(IsPlayerInRangeOfPoint(playerid, 3, 2324.5479,-1149.5146,1050.7101)
|| IsPlayerInRangeOfPoint(playerid, 3, 2270.3855,-1210.4730,1047.5625)
|| IsPlayerInRangeOfPoint(playerid, 3, 2196.8506,-1204.2477,1049.0234)
|| IsPlayerInRangeOfPoint(playerid, 3, 2468.8413,-1698.4177,1013.5078)
|| IsPlayerInRangeOfPoint(playerid, 3, 1260.6464,-785.4418,1091.9063)
|| IsPlayerInRangeOfPoint(playerid, 3, 327.9635,1477.7430,1084.4375)
|| IsPlayerInRangeOfPoint(playerid, 3, 318.5932,1114.4792,1083.8828)
|| IsPlayerInRangeOfPoint(playerid, 3, 309.0916,313.6412,1003.3047)
|| IsPlayerInRangeOfPoint(playerid, 3, 261.0904,1284.2944,1080.2578)
|| IsPlayerInRangeOfPoint(playerid, 3, 226.2984,1114.3319,1080.9929)
|| IsPlayerInRangeOfPoint(playerid, 3, 225.8726,1021.4523,1084.0177)
|| IsPlayerInRangeOfPoint(playerid, 3, 223.1015,1287.0764,1082.1406)
|| IsPlayerInRangeOfPoint(playerid, 3, 140.2254,1365.9796,1083.8594)
|| IsPlayerInRangeOfPoint(playerid, 3, 83.0758,1322.2808,1083.8662)
|| IsPlayerInRangeOfPoint(playerid, 3, -68.7704,1352.9250,1080.2109)
|| IsPlayerInRangeOfPoint(playerid, 3, -42.5628,1405.5011,1084.4297)
|| IsPlayerInRangeOfPoint(playerid, 3, 2495.98,-1692.08,1014.74)
|| IsPlayerInRangeOfPoint(playerid, 3, 83.03,1322.28,1083.87)
|| IsPlayerInRangeOfPoint(playerid, 3, 2807.48,-1174.76,1025.57)
|| IsPlayerInRangeOfPoint(playerid, 3, 260.85,1237.24,1084.26)
|| IsPlayerInRangeOfPoint(playerid, 3, 2237.59,-1081.64,1049.02)
|| IsPlayerInRangeOfPoint(playerid, 3, 446.99,1397.07,1084.30)
|| IsPlayerInRangeOfPoint(playerid, 3, 377.15,1417.41,1081.33)
|| IsPlayerInRangeOfPoint(playerid, 3, 2308.77,-1212.94,1049.02)
|| IsPlayerInRangeOfPoint(playerid, 3, 243.72,304.91,999.15) || IsPlayerInRangeOfPoint(playerid, 3, 2283.04,-1140.28,1050.90))
{
if(GetPlayerVirtualWorld(playerid) == alh+50)
{
if(HouseInfo[alh][hLocked]==1)
{
GameTextForPlayer(playerid, "locked", 3000, 1);
return SendClientMessage(playerid,0x00FF40FF,"Къщата е заключена и не можеш да излезеш !");
}
SetPlayerPos(playerid,HouseInfo[alh][hX], HouseInfo[alh][hY], HouseInfo[alh][hZ]);
SetPlayerInterior(playerid,0);
SetCameraBehindPlayer(playerid);
SetPlayerVirtualWorld(playerid, 0);
}
}
}
if(IsPlayerInRangeOfPoint(playerid, 3.0,246.7372,63.0483,1003.6406) && GetPlayerVirtualWorld(playerid) == 1 && GetPlayerInterior(playerid) == 6)
{
SetPlayerInterior(playerid,0);
SetPlayerVirtualWorld(playerid,0);
SetPlayerPos(playerid,1555.2531,-1675.6143,16.1953);
SetPlayerFacingAngle(playerid,272.0170);
SetCameraBehindPlayer(playerid);
}
if(IsPlayerInRangeOfPoint(playerid, 3.0,-1444.0856,1087.5129,1040.7969) && GetPlayerVirtualWorld(playerid) == 0 && GetPlayerInterior(playerid) == 15)
{
SetPlayerInterior(playerid,0);
SetPlayerPos(playerid,2006.8207,1167.4012,10.8203);
SetPlayerFacingAngle(playerid,1040.7969);
SetCameraBehindPlayer(playerid);
}
if(IsPlayerInRangeOfPoint(playerid, 3.0,-1444.0856,1087.5129,1040.7969) && GetPlayerVirtualWorld(playerid) == 1 && GetPlayerInterior(playerid) == 15)
{
SetPlayerInterior(playerid,0);
SetPlayerPos(playerid,1411.5128,-1699.5909,13.5395);
SetPlayerFacingAngle(playerid,1040.7969);
SetPlayerVirtualWorld(playerid,0);
SetCameraBehindPlayer(playerid);
}
if(IsPlayerInRangeOfPoint(playerid, 3.0,2467.6345,-1698.2460,1013.5078) && GetPlayerVirtualWorld(playerid) == 1 && GetPlayerInterior(playerid) == 2)
{
if(PlayerInfo[playerid][pTeam]!=8) return SendClientMessage(playerid, 0xB4B5B7FF, "Трябва да си член на San Fierro Rifa!");
SetPlayerInterior(playerid,0);
SetPlayerPos(playerid,-2182.9065,956.6106,80.0000);
SetPlayerFacingAngle(playerid,92.8459);
SetPlayerVirtualWorld(playerid,0);
SetCameraBehindPlayer(playerid);
}
return 1;
}
if(strcmp(cmd, "/bizinfo", true) == 0)
{
if(PlayerInfo[playerid][pBizO]==-1)
{
return SendClientMessage(playerid,0xB4B5B7FF,"Ти не притежаваш бизнес!");
}
SendClientMessage(playerid, 0x00CCCCFF, "________________________");
format(string256,256,"Име на бизнеса: %s",BizInfo[PlayerInfo[playerid][pBizO]][bName]);
SendClientMessage(playerid, 0x00CCCCFF, string256);
format(string256,256,"Цена за вход: $%d",BizInfo[PlayerInfo[playerid][pBizO]][bFee]);
SendClientMessage(playerid, 0x00CCCCFF, string256);
format(string256,256,"Печалба: $%d",BizInfo[PlayerInfo[playerid][pBizO]][bEarnings]);
SendClientMessage(playerid, 0x00CCCCFF, string256);
format(string256,256,"Заплащане: $%d",BizInfo[PlayerInfo[playerid][pBizO]][bPayOut]);
SendClientMessage(playerid, 0x00CCCCFF, string256);
SendClientMessage(playerid, 0x00CCCCFF, "________________________");
return 1;
}
if(strcmp(cmd, "/earnings", true) == 0)
{
if(PlayerInfo[playerid][pBizO]==-1)
{
return SendClientMessage(playerid,0xB4B5B7FF,"Ти не притежаваш бизнес!");
}
if(BizInfo[PlayerInfo[playerid][pBizO]][bEarnings]==0) return SendClientMessage(playerid,0xB4B5B7FF,"Ти в момента нямаш пари в бизнеса, които да прибереш!");
new stringEarnings[256];
format(stringEarnings,256,"Ти взе $%d от твоя бизнес!",BizInfo[PlayerInfo[playerid][pBizO]][bEarnings]);
SendClientMessage(playerid, 0x00CCCCFF, stringEarnings);
GivePlayerCash(playerid,BizInfo[PlayerInfo[playerid][pBizO]][bEarnings]);
BizInfo[PlayerInfo[playerid][pBizO]][bEarnings]=0;
return 1;
}
if(strcmp(cmd, "/buybiz", true) == 0)
{
new bizznoerror=0;
for(new alb=0; alb<maxbiz+2; alb++) // Dynamic Houses
{
if(IsPlayerInRangeOfPoint(playerid, 3, BizInfo[alb][bX], BizInfo[alb][bY], BizInfo[alb][bZ]))
{
if(PlayerInfo[playerid][pBizO]>-1)
{
SendClientMessage(playerid,0xB4B5B7FF,"Ти вече притежаваш бизнес!");
return 1;
}
if(BizInfo[alb][bOwner]==1)
{
SendClientMessage(playerid,0xB4B5B7FF,"Този бизнес вече има притежател!");
return 1;
}
if(BizInfo[alb][bLevel]>PlayerInfo[playerid][pLevel])
{
SendClientMessage(playerid,0xB4B5B7FF,"Нямаш достатъчно голямо ниво за този бизнес!");
return 1;
}
if(BizInfo[alb][bPrice]>PlayerInfo[playerid][pCash])
{
SendClientMessage(playerid,0xB4B5B7FF,"Нямаш достатъчно пари за този бизнес!");
return 1;
}
new bizz[64]; format(bizz, 64, "/Bizz/%d.ini", alb);
if(!dini_Exists(bizz))
{
SendClientMessage(playerid,0xB4B5B7FF,"Ти не си близо до бизнес!");
return 1;
}
if(dini_Exists(bizz))
{
bizznoerror=1;
PlayerInfo[playerid][pBizO]=alb;
format(BizInfo[alb][bOwnerName],256,"%s",pname[playerid]);
BizInfo[alb][bOwner]=1;
BizInfo[alb][bEarnings]=0;
dini_IntSet(bizz,"bEarnings",0);
dini_IntSet(bizz, "bOwner",BizInfo[alb][bOwner]);
dini_Set(bizz, "bOwnerName", BizInfo[alb][bOwnerName]);
GivePlayerCash(playerid,-dini_Int(bizz,"bPrice"));
for(new mplh=0; mplh<MAX_PLAYERS; mplh++) // Dynamic Houses
{
if(mplh==playerid)
{
format(string256[mplh],256,"Честито, ти си купи бизнес на стойност $%d!",BizInfo[alb][bPrice]);
SendClientMessage(mplh, 0x00CCCCFF,string256[mplh]);
return 1;
}
}
}
}
}
if(bizznoerror==0)
{
SendClientMessage(playerid,0xB4B5B7FF,"Ти не се намираш близо до бизнес!");
}
return 1; }
if(strcmp(cmd, "/sellbiz", true) == 0)
{
//if(isinhousepickup[playerid]==1)
//{
new housenoerror=0;
if(PlayerInfo[playerid][pBizO]==-1)
{
SendClientMessage(playerid,0xB4B5B7FF,"Ти не притежаваш бизнес!");
return 1;
}
if(IsPlayerInRangeOfPoint(playerid, 3, BizInfo[PlayerInfo[playerid][pBizO]][bX], BizInfo[PlayerInfo[playerid][pBizO]][bY], BizInfo[PlayerInfo[playerid][pBizO]][bZ]))
{
new house[64]; format(house, 64, "/Bizz/%d.ini", PlayerInfo[playerid][pBizO]);
if(!dini_Exists(house))
{
SendClientMessage(playerid,0xB4B5B7FF,"Твоят бизнес е изтрит, свържи се с администратор!");
return 1;
}
if(dini_Exists(house))
{
housenoerror=1;
format(BizInfo[PlayerInfo[playerid][pBizO]][bOwnerName],256,"None");
BizInfo[PlayerInfo[playerid][pBizO]][bOwner]=0;
dini_IntSet(house, "bOwner",0);
dini_Set(house, "pBizName", "None");
GivePlayerCash(playerid,BizInfo[PlayerInfo[playerid][pBizO]][bPrice]/2);
format(string256[playerid],256,"Tи продаде бизнеса си за $%d!",BizInfo[PlayerInfo[playerid][pBizO]][bPrice]/2);
SendClientMessage(playerid, 0x00CCCCFF,string256[playerid]);
PlayerInfo[playerid][pBizO]=-1;
return 1;
}
}
if(housenoerror==0)
{
SendClientMessage(playerid,0xB4B5B7FF,"Ти не се намираш близо до бизнеса си!");
}
return 1; }
if(strcmp(cmd, "/sellhouse", true) == 0)
{
//if(isinhousepickup[playerid]==1)
//{
new housenoerror=0;
if(PlayerInfo[playerid][pHouseO]==-1)
{
SendClientMessage(playerid,0xB4B5B7FF,"Ти не притежаваш къща!");
return 1;
}
if(IsPlayerInRangeOfPoint(playerid, 3, HouseInfo[PlayerInfo[playerid][pHouseO]][hX], HouseInfo[PlayerInfo[playerid][pHouseO]][hY], HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]))
{
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
if(!dini_Exists(house))
{
SendClientMessage(playerid,0xB4B5B7FF,"Твоята къща е изтрита, свържи се с администратор!");
return 1;
}
if(dini_Exists(house))
{
housenoerror=1;
format(HouseInfo[PlayerInfo[playerid][pHouseO]][hOwnerName],256,"None");
HouseInfo[PlayerInfo[playerid][pHouseO]][hOwner]=0;
dini_IntSet(house, "hOwner",0);
dini_Set(house, "hOwnerName", "None");
GivePlayerCash(playerid,HouseInfo[PlayerInfo[playerid][pHouseO]][hPrice]/2);
format(string256[playerid],256,"Ти продаде къщата си за $%d!",HouseInfo[PlayerInfo[playerid][pHouseO]][hPrice]/2);
SendClientMessage(playerid, 0x00FF40FF,string256[playerid]);
PlayerInfo[playerid][pHouseO]=-1;
PlayerInfo[playerid][pArmour2]=0;
return 1;
}
}
if(housenoerror==0)
{
SendClientMessage(playerid,0xB4B5B7FF,"Ти не се намираш близо до къщата си!");
}
return 1; }
if(strcmp(cmd, "/bizid", true) == 0)
{
if(PlayerInfo[playerid][pAdmin] < 3)
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
return 1;
}
for(new alb=0; alb<maxbiz+2; alb++) // Dynamic Houses
{
if(IsPlayerInRangeOfPoint(playerid, 3, BizInfo[alb][bX], BizInfo[alb][bY], BizInfo[alb][bZ]))
{
new bizz[64]; format(bizz, 64, "/Bizz/%d.ini", alb);
if(!dini_Exists(bizz))
{
SendClientMessage(playerid,0xB4B5B7FF,"Ти не си близо до бизнес!");
return 1;
}
if(dini_Exists(bizz))
{
new stringbiz[256];
format(stringbiz, 256, "BIZZ - {FF0000}%d", alb);
return SendClientMessage(playerid, 0xFFFFFFFF, stringbiz);
}
}
else return SendClientMessage(playerid,0xB4B5B7FF,"Ти не си близо до бизнес!");
}
return 1;
}
if(strcmp(cmd, "/gotohveh", true) == 0)
{
if(PlayerInfo[playerid][pAdmin] < 3)
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
return 1;
}
tmp=strtok(cmdtext, idx);
new level=strval(tmp);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /gotohveh [house id]");
return 1;
}
if(level<0)
{
SendClientMessage(playerid, 0xB4B5B7FF, "Невалидно ID на къща!");
return 1;
}
new house[64]; format(house, 64, "/Houses/%d.ini", level);
if(!dini_Exists(house))
{
SendClientMessage(playerid,0xB4B5B7FF,"Тази къща не съществува!");
return 1;
}
if(!IsValidVehicle(HouseInfo[level][hcVeh]))
{
SendClientMessage(playerid, 0xB4B5B7FF, "Тази къща няма превозно средство!");
return 1;
}
if(dini_Exists(house))
{
new stringhouse[256]; new Float:XX; new Float: YY; new Float: ZZ;
GetVehiclePos(HouseInfo[level][hcVeh],XX,YY,ZZ);
SetPlayerPos(playerid,XX,YY,ZZ+3.0);
format(stringhouse, 256, "* Ти успешно се телепортира до превозното средство на къща ID %d *", level);
return SendClientMessage(playerid, 0xFFFFFFFF, stringhouse);
}
return 1;
}
if(strcmp(cmd, "/gotoveh", true) == 0)
{
if(PlayerInfo[playerid][pAdmin] < 4)
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
return 1;
}
tmp=strtok(cmdtext, idx);
new level=strval(tmp);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /gotoveh [vehicle id]");
return 1;
}
if(level<0)
{
SendClientMessage(playerid, 0xB4B5B7FF, "Невалидно ID на превозно средство!");
return 1;
}
if(!IsValidVehicle(level))
{
SendClientMessage(playerid, 0xB4B5B7FF, "Това превозно средство не съществува!");
return 1;
}
new stringveh[256]; new Float:XX; new Float: YY; new Float: ZZ;
GetVehiclePos(level,XX,YY,ZZ);
SetPlayerPos(playerid,XX,YY,ZZ+3.0);
format(stringveh, 256, "* Ти успешно се телепортира до превозното средство ID %d *", level);
SendClientMessage(playerid, 0xFFFFFFFF, stringveh);
return 1;
}
if(strcmp(cmd, "/houseid", true) == 0)
{
if(PlayerInfo[playerid][pAdmin] < 3)
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
return 1;
}
for(new alh=0; alh<maxhouses+2; alh++) // Dynamic Houses
{
if(IsPlayerInRangeOfPoint(playerid, 3, HouseInfo[alh][hX], HouseInfo[alh][hY], HouseInfo[alh][hZ]))
{
new house[64]; format(house, 64, "/Houses/%d.ini", alh);
if(!dini_Exists(house))
{
SendClientMessage(playerid,0xB4B5B7FF,"Ти не си близо до къща!");
return 1;
}
if(dini_Exists(house))
{
new stringhouse[256];
format(stringhouse, 256, "HOUSE - {FF0000}%d", alh);
return SendClientMessage(playerid, 0xFFFFFFFF, stringhouse);
}
}
else return SendClientMessage(playerid,0xB4B5B7FF,"Ти не си близо до къща!");
}
return 1;
}
/*if(strcmp(cmd, "/psellhouse", true) == 0)
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /psellhouse [playerid] [стойност]");
return 1;
}
new giveplayerid = ReturnUser(tmp);
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /psellhouse [playerid] [стойност]");
return 1;
}
new moneys = strval(tmp);
if(moneys < 1 || moneys > 100000000)
{
SendClientMessage(playerid, COLOR_GRAD1, "Парите трябва да са от 1 до 100 000 000.");
return 1;
}
if (IsPlayerConnected(giveplayerid))
{
if(houseSwitching[giveplayerid]==true) return SendClientMessage(playerid, COLOR_GRAD1, "Играчът има покана за размяна на къщи.");
if(houseSwitching[playerid]==true) return SendClientMessage(playerid, COLOR_GRAD1, "Ти имаш покана за размяна на къщи.");
if(houseSellSender[playerid]!=-1) return SendClientMessage(playerid,0xB4B5B7FF,"Ти вече си изпратил покана за продажба на къща!");
if(houseSellReceiver[playerid]!=-1) return SendClientMessage(playerid,0xB4B5B7FF,"Ти вече имаш покана за продажба на къща!");
if(houseSellSender[para1[playerid]]!=-1) return SendClientMessage(playerid,0xB4B5B7FF,"Този играч вече има покана за продажба на къща!");
if(houseSellReceiver[para1[playerid]]!=-1) return SendClientMessage(playerid,0xB4B5B7FF,"Този играч вече има покана за продажба на къща!");
houseSelling[giveplayerid]=true; houseSelling[playerid]=true;
houseSellSenderPrice[playerid]=moneys; //Sender' Massive have the money
houseSellSender[playerid]=giveplayerid; //Sender is PlayerID and have GivePlayerID
houseSellReceiver[giveplayerid]=playerid; //receives PlayerID
new stringSellHouse[256];
format(stringSellHouse,256,"Ти изпрати покана да продадеш къщата си на %s за $%d",pname[para1[playerid]],moneys);
SendClientMessage(playerid,0x00FF40FF,stringSellHouse);
format(stringSellHouse,256,"%s иска да ти продаде къщата си за $%d",pname[playerid],moneys);
SendClientMessage(giveplayerid,0x00FF40FF,stringSellHouse);
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Посоченото ID не е в сървъра!");
}
return 1;
}
if(strcmp(cmd, "/houseaccept", true) == 0 || strcmp(cmd, "/ha", true) == 0)
{
if(houseSellReceiver[playerid]==-1) return SendClientMessage(playerid,0xB4B5B7FF,"Ти нямаш покана за продажба на къща!");
new housePrice=houseSellSenderPrice[houseSellReceiver[playerid]];
if(PlayerInfo[playerid][pCash] < housePrice) return SendClientMessage(playerid,0xB4B5B7FF,"Ти нямаш достатъчно пари!");
new stringReceiver[256];
format(stringReceiver,256,"Ти купи къщата на %s за $%d",pname[houseSellReceiver[playerid]],housePrice);
SendClientMessage(playerid,0x00FF40FF,stringReceiver);
new currentReceiverHouse=PlayerInfo[houseSellReceiver[playerid]][pHouseO];
//-------------------------------------------------------------------------//
new stringSender[256];
format(stringSender,256,"%s купи твоята къща за $%d",pname[playerid],housePrice);
SendClientMessage(houseSellReceiver[playerid],0x00FF40FF,stringSender);
new currentSenderHouse=PlayerInfo[playerid][pHouseO];
//-----------------------------------------------------------------------//
PlayerInfo[playerid][pHouseO]=currentReceiverHouse;
PlayerInfo[houseSellReceiver[playerid]][pHouseO]=currentSenderHouse;
BoughtHouse(playerid, currentReceiverHouse); // gets information for PLAYERID
BoughtHouse(houseSellReceiver[playerid], currentSenderHouse); //gets information for SENDERID
//-----------------------------------------------------------------------//
new SenderID=houseSwitchReceiver[playerid];
GivePlayerCash(playerid-housePrice);
GivePlayerCash(SenderID,housePrice);
houseSellReceiver[playerid]=-1; //sender ID GET
houseSellSender[SenderID]=-1; //receiver ID GET
houseSelling[playerid]=false;
houseSelling[SenderID]=false;
return 1;
}*/
if(strcmp(cmd, "/houseswitchaccept", true) == 0 || strcmp(cmd, "/hsa", true) == 0)
{
if(houseSwitchReceiver[playerid]==-1) return SendClientMessage(playerid,0xB4B5B7FF,"Не ти е предлагана къща за размяна!");
new stringReceiver[256];
format(stringReceiver,256,"Ти прие поканата за размяна на къщи на %s",pname[houseSwitchReceiver[playerid]]);
SendClientMessage(playerid,0x00FF40FF,stringReceiver);
new currentReceiverHouse=PlayerInfo[houseSwitchReceiver[playerid]][pHouseO];
//-------------------------------------------------------------------------//
new stringSender[256];
format(stringSender,256,"%s прие твоята покана за размяна на къщи",pname[playerid]);
SendClientMessage(houseSwitchReceiver[playerid],0x00FF40FF,stringSender);
new currentSenderHouse=PlayerInfo[playerid][pHouseO];
//-----------------------------------------------------------------------//
PlayerInfo[playerid][pHouseO]=currentReceiverHouse;
PlayerInfo[houseSwitchReceiver[playerid]][pHouseO]=currentSenderHouse;
BoughtHouse(playerid, currentReceiverHouse); // gets information for PLAYERID
BoughtHouse(houseSwitchReceiver[playerid], currentSenderHouse); //gets information for SENDERID
//-----------------------------------------------------------------------//
new SenderID=houseSwitchReceiver[playerid];
houseSwitchReceiver[playerid]=-1; //sender ID GET
houseSwitchSender[SenderID]=-1; //receiver ID GET
houseSwitching[playerid]=false;
houseSwitching[SenderID]=false;
return 1;
}
if(strcmp(cmd, "/houseswitchcancel", true) == 0 || strcmp(cmd, "/hsc", true) == 0)
{
if(houseSwitchReceiver[playerid]==-1) return SendClientMessage(playerid,0xB4B5B7FF,"Не ти е предлагана къща за размяна!");
new stringReceiver[256];
format(stringReceiver,256,"Ти отказа поканата за размяна на къщи на %s",pname[houseSwitchReceiver[playerid]]);
SendClientMessage(playerid,0x00FF40FF,stringReceiver);
//-------------------------------------------------------------------------//
new stringSender[256];
format(stringSender,256,"%s отказа твоята покана за размяна на къщи",pname[playerid]);
SendClientMessage(houseSwitchReceiver[playerid],0x00FF40FF,stringSender);
//-----------------------------------------------------------------------//
new SenderID=houseSwitchReceiver[playerid];
houseSwitchReceiver[playerid]=-1; //sender ID GET
houseSwitchSender[SenderID]=-1; //receiver ID GET
houseSwitching[playerid]=false;
houseSwitching[SenderID]=false;
return 1;
}
if(strcmp(cmd, "/houseswitch", true) == 0)
{
if(PlayerInfo[playerid][pHouseO]==-1)
{
SendClientMessage(playerid,0xB4B5B7FF,"Ти нямаш къща!");
return 1;
}
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /houseswitch [playerid]");
return 1;
}
para1[playerid] = ReturnUser(tmp);
if(para1[playerid]==playerid)
{
return SendClientMessage(playerid, COLOR_GRAD1,"Не можеш да размениш къщата си със себе си!");
}
if(para1[playerid] != INVALID_PLAYER_ID)
{
if(PlayerInfo[para1[playerid]][pHouseO]==-1)
{
SendClientMessage(playerid,0xB4B5B7FF,"Този играч няма къща!");
return 1;
}
if(houseSwitchSender[playerid]!=-1) return SendClientMessage(playerid,0xB4B5B7FF,"Ти вече си изпратил покана за размяна на къщи!");
if(houseSwitchReceiver[playerid]!=-1) return SendClientMessage(playerid,0xB4B5B7FF,"Ти вече имаш покана за размяна на къщи!");
if(houseSwitchSender[para1[playerid]]!=-1) return SendClientMessage(playerid,0xB4B5B7FF,"Този играч вече има покана за размяна на къщи!");
if(houseSwitchReceiver[para1[playerid]]!=-1) return SendClientMessage(playerid,0xB4B5B7FF,"Този играч вече има покана за размяна на къщи!");
houseSwitchSender[playerid]=para1[playerid];
houseSwitchReceiver[para1[playerid]]=playerid;
houseSwitching[playerid]=true;
houseSwitching[para1[playerid]]=true;
new stringSender[256];
format(stringSender,256,"Ти изпрати покана за размяна на къщи до %s",pname[para1[playerid]]);
SendClientMessage(playerid,0x00FF40FF,stringSender);
new stringReceiver[256];
format(stringReceiver,256,"%s ти изпрати покана за размяна на къщи.",pname[playerid]);
SendClientMessage(para1[playerid],0x00FF40FF,stringReceiver);
SendClientMessage(para1[playerid],0x00FF40FF,"Използвай /hsa за да приемеш или /hsc за да откажеш");
}
else
{
SendClientMessage(playerid, COLOR_GRAD1,"Посоченото ID не е в сървъра!");
}
return 1;
}
if(strcmp(cmd, "/bizswitchaccept", true) == 0 || strcmp(cmd, "/bsa", true) == 0)
{
if(bizSwitchReceiver[playerid]==-1) return SendClientMessage(playerid,0xB4B5B7FF,"Не ти е предлаган бизнес за размяна!");
new stringReceiver[256];
format(stringReceiver,256,"Ти прие поканата за размяна на бизнеси на %s",pname[houseSwitchReceiver[playerid]]);
SendClientMessage(playerid,0x00CCCCFF,stringReceiver);
new currentReceiverBiz=PlayerInfo[bizSwitchReceiver[playerid]][pBizO];
//-------------------------------------------------------------------------//
new stringSender[256];
format(stringSender,256,"%s прие твоята покана за размяна на бизнеси",pname[playerid]);
SendClientMessage(bizSwitchReceiver[playerid],0x00CCCCFF,stringSender);
new currentSenderBiz=PlayerInfo[playerid][pBizO];
//-----------------------------------------------------------------------//
PlayerInfo[playerid][pBizO]=currentReceiverBiz;
PlayerInfo[houseSwitchReceiver[playerid]][pBizO]=currentSenderBiz;
BoughtHouse(playerid, currentReceiverBiz); // gets information for PLAYERID
BoughtHouse(bizSwitchReceiver[playerid], currentSenderBiz); //gets information for SENDERID
//-----------------------------------------------------------------------//
new SenderID=bizSwitchReceiver[playerid];
bizSwitchReceiver[playerid]=-1; //sender ID GET
bizSwitchSender[SenderID]=-1; //receiver ID GET
bizSwitching[playerid]=false;
bizSwitching[SenderID]=false;
return 1;
}
if(strcmp(cmd, "/bizswitchcancel", true) == 0 || strcmp(cmd, "/bsc", true) == 0)
{
if(bizSwitchReceiver[playerid]==-1) return SendClientMessage(playerid,0xB4B5B7FF,"Не ти е предлаган бизнес за размяна!");
new stringReceiver[256];
format(stringReceiver,256,"Ти отказа поканата за размяна на бизнеси на %s",pname[bizSwitchReceiver[playerid]]);
SendClientMessage(playerid,0x00CCCCFF,stringReceiver);
//-------------------------------------------------------------------------//
new stringSender[256];
format(stringSender,256,"%s отказа твоята покана за размяна на бизнеси",pname[playerid]);
SendClientMessage(bizSwitchReceiver[playerid],0x00CCCCFF,stringSender);
//-----------------------------------------------------------------------//
new SenderID=bizSwitchReceiver[playerid];
bizSwitchReceiver[playerid]=-1; //sender ID GET
bizSwitchSender[SenderID]=-1; //receiver ID GET
bizSwitching[playerid]=false;
bizSwitching[SenderID]=false;
return 1;
}
if(strcmp(cmd, "/bizswitch", true) == 0)
{
if(PlayerInfo[playerid][pBizO]==-1)
{
SendClientMessage(playerid,0xB4B5B7FF,"Ти нямаш бизнес!");
return 1;
}
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /bizswitch [playerid]");
return 1;
}
para1[playerid] = ReturnUser(tmp);
if(para1[playerid]==playerid)
{
return SendClientMessage(playerid, COLOR_GRAD1,"Не можеш да размениш бизнеса си със себе си!");
}
if(para1[playerid] != INVALID_PLAYER_ID)
{
if(PlayerInfo[para1[playerid]][pBizO]==-1)
{
SendClientMessage(playerid,0xB4B5B7FF,"Този играч няма бизнес!");
return 1;
}
if(houseSwitchSender[playerid]!=-1) return SendClientMessage(playerid,0xB4B5B7FF,"Ти вече си изпратил покана за размяна на бизнеси!");
if(houseSwitchReceiver[playerid]!=-1) return SendClientMessage(playerid,0xB4B5B7FF,"Ти вече имаш покана за размяна на бизнеси!");
if(houseSwitchSender[para1[playerid]]!=-1) return SendClientMessage(playerid,0xB4B5B7FF,"Този играч вече има покана за размяна на бизнеси!");
if(houseSwitchReceiver[para1[playerid]]!=-1) return SendClientMessage(playerid,0xB4B5B7FF,"Този играч вече има покана за размяна на бизнеси!");
houseSwitchSender[playerid]=para1[playerid];
houseSwitchReceiver[para1[playerid]]=playerid;
bizSwitching[playerid]=true;
bizSwitching[para1[playerid]]=true;
new stringSender[256];
format(stringSender,256,"Ти изпрати покана за размяна на бизнеси до %s",pname[para1[playerid]]);
SendClientMessage(playerid,0x00CCCCFF,stringSender);
new stringReceiver[256];
format(stringReceiver,256,"%s ти изпрати покана за размяна на бизнеси.",pname[playerid]);
SendClientMessage(para1[playerid],0x00CCCCFF,stringReceiver);
SendClientMessage(para1[playerid],0x00CCCCFF,"Използвай /bsa за да приемеш или /bsc за да откажеш");
}
else
{
SendClientMessage(playerid, COLOR_GRAD1,"Посоченото ID не е в сървъра!");
}
return 1;
}
if(strcmp(cmd, "/buyhouse", true) == 0)
{
//if(isinhousepickup[playerid]==1)
//{
new housenoerror=0;
new houseBoughtID;
for(new alh=0; alh<maxhouses+2; alh++) // Dynamic Houses
{
if(IsPlayerInRangeOfPoint(playerid, 3, HouseInfo[alh][hX], HouseInfo[alh][hY], HouseInfo[alh][hZ]))
{
if(PlayerInfo[playerid][pHouseO]>-1)
{
SendClientMessage(playerid,0xB4B5B7FF,"Ти вече притежаваш къща!");
return 1;
}
if(HouseInfo[alh][hOwner]==1)
{
SendClientMessage(playerid,0xB4B5B7FF,"Тази къща вече има притежател!");
return 1;
}
if(HouseInfo[alh][hLevel]>PlayerInfo[playerid][pLevel])
{
SendClientMessage(playerid,0xB4B5B7FF,"Нямаш достатъчно голямо ниво за тази къща!");
return 1;
}
if(HouseInfo[alh][hPrice]>PlayerInfo[playerid][pCash])
{
SendClientMessage(playerid,0xB4B5B7FF,"Нямаш достатъчно пари за тази къща!");
return 1;
}
new house[64]; format(house, 64, "/Houses/%d.ini", alh);
if(!dini_Exists(house))
{
SendClientMessage(playerid,0xB4B5B7FF,"Ти не си близо до къща!");
return 1;
}
if(dini_Exists(house))
{
housenoerror=1;
PlayerInfo[playerid][pHouseO]=alh;
BoughtHouse(playerid, alh);
houseBoughtID=alh;
GivePlayerCash(playerid,-dini_Int(house,"hPrice"));
}
}
}
if(housenoerror==0)
{
return SendClientMessage(playerid,0xB4B5B7FF,"Ти не се намираш близо до къща!");
}
new stringBoughtHouse[256];
format(stringBoughtHouse,256,"Честито, ти си купи къща на стойност $%d!",HouseInfo[houseBoughtID][hPrice]);
SendClientMessage(playerid, 0x00FF40FF,stringBoughtHouse);
return 1;
}
if(strcmp(cmd, "/enter", true) == 0)
{
if(IsPlayerInRangeOfPoint(playerid, 2, 478.2492,-19.3125,1000.6797))
{
SetPlayerPos(playerid, 478.3596,-22.0018,1002.2813);
GivePlayerCash(playerid,-50);
BizInfo[enteredbiz[playerid]][bEarnings]+=50;
}
for(new alb=0; alb<maxbiz; alb++) // Dynamic Houses
{
if(IsPlayerInRangeOfPoint(playerid, 3, BizInfo[alb][bX], BizInfo[alb][bY], BizInfo[alb][bZ]))
{
if(BizInfo[alb][bLocked]==1)
{
GameTextForPlayer(playerid, "locked", 3000, 1);
return SendClientMessage(playerid,0x499BD4FF,"Бизнесът е заключен и не можеш да влезеш !");
}
if(BizInfo[alb][bFee]>PlayerInfo[playerid][pCash] && PlayerInfo[playerid][pBizO]!=alb)
{
return SendClientMessage(playerid,0xFFFFFFFF,"Нямаш достатъчно пари за да влезеш в бизнеса !");
}
if(PlayerInfo[playerid][pBizO]!=alb)
{
GivePlayerCash(playerid,-BizInfo[alb][bFee]);
BizInfo[alb][bEarnings]+=BizInfo[alb][bFee];
}
enteredbiz[playerid]=alb;
if(BizInfo[alb][bType] == 1) // 24/7 Business
{
//format(string, sizeof(string), "* %s pushes the door and enters the shop.", RPN(playerid));
//SendNearbyMessage(playerid, 15, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
SetPlayerPos(playerid, -27.3025,-57.6649,1003.5469);
SetPlayerFacingAngle(playerid, 357.5915);
SetCameraBehindPlayer(playerid);
SetPlayerInterior(playerid, 6);
SetPlayerVirtualWorld(playerid, alb+500);
//format(string, sizeof(string), "** ????? ????? ??? %s's ? ??????? ?? (( /buy )) **", BizInfo[b][bOwner]);
//SendClientMessage(playerid, COLOR_ORANGE, string);
// return 1;
}
if(BizInfo[alb][bType] == 2) // Bar Business
{
//format(string, sizeof(string), "* %s pushes the door and enters the shop.", RPN(playerid));
//SendNearbyMessage(playerid, 15, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
SetPlayerPos(playerid, 501.980987,-69.150199,998.757812);
SetPlayerFacingAngle(playerid, 179.826400);
SetCameraBehindPlayer(playerid);
SetPlayerInterior(playerid, 11);
SetPlayerVirtualWorld(playerid, alb+500);
//format(string, sizeof(string), "** ????? ????? ??? %s's ? ???? ?? (( /drinks )) **", BizInfo[b][bOwner]);
//SendClientMessage(playerid, COLOR_ORANGE, string);
//  return 1;
}
if(BizInfo[alb][bType] == 3) // Ammunation Business
{
//format(string, sizeof(string), "* %s pushes the door and enters the shop.", RPN(playerid));
//SendNearbyMessage(playerid, 15, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
SetPlayerPos(playerid, 296.8089,-112.0065,1001.5156);
SetPlayerFacingAngle(playerid, 76.7251);
SetCameraBehindPlayer(playerid);
SetPlayerInterior(playerid, 6);
SetPlayerVirtualWorld(playerid, alb+500);
//format(string, sizeof(string), "** ????? ????? ??? %s's ? ???????? ?? ?? ?????? (( /Buyweapon )) **", BizInfo[b][bOwner]);
//SendClientMessage(playerid, COLOR_ORANGE, string);
// return 1;
}
if(BizInfo[alb][bType] == 4) // + Club Business
{
//format(string, sizeof(string), "* %s pushes the door and enters the shop.", RPN(playerid));
//SendNearbyMessage(playerid, 15, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
SetPlayerPos(playerid, -2026.9447,-103.6024,1035.1832);
SetPlayerFacingAngle(playerid, 183.4428);
SetCameraBehindPlayer(playerid);
SetPlayerInterior(playerid, 3);
SetPlayerVirtualWorld(playerid, alb+500);
//format(string, sizeof(string), "** ????? ????? ??? %s's ? ?????????? ?? (( /buyvehicle )) **", BizInfo[b][bOwner]);
//SendClientMessage(playerid, COLOR_ORANGE, string);
//  return 1;
}
if(BizInfo[alb][bType] == 5) // Advertisement Agency
{
//format(string, sizeof(string), "* %s pushes the door and enters the shop.", RPN(playerid));
//SendNearbyMessage(playerid, 15, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
SetPlayerPos(playerid, -27.3512,-31.7518,1003.5573);
SetPlayerFacingAngle(playerid, 86.7239);
SetCameraBehindPlayer(playerid);
SetPlayerInterior(playerid, 4);
SetPlayerVirtualWorld(playerid, alb+500);
//format(string, sizeof(string), "** ????? ????? ??? %s's ? ?????????? ?? ??????? (( /buyfishtools )) **", BizInfo[b][bOwner]);
//SendClientMessage(playerid, COLOR_ORANGE, string);
//  return 1;
}
if(BizInfo[alb][bType] == 6) // Fast Food
{
//format(string, sizeof(string), "* %s pushes the door and enters the shop.", RPN(playerid));
//SendNearbyMessage(playerid, 15, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
SetPlayerPos(playerid, 207.054992,-138.804992,1003.507812);
SetPlayerFacingAngle(playerid, 182.1137);
SetCameraBehindPlayer(playerid);
SetPlayerInterior(playerid, 3);
SetPlayerVirtualWorld(playerid, alb+500);
//format(string, sizeof(string), "** ????? ????? ??? %s's ? ???????? ?? ?? ????? (( /buyclothes )) **", BizInfo[b][bOwner]);
//SendClientMessage(playerid, COLOR_ORANGE, string);
// return 1;
}
if(BizInfo[alb][bType] == 7) // Casino
{
//format(string, sizeof(string), "* %s pushes the door and enters the casino.", RPN(playerid));
//SendNearbyMessage(playerid, 15, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
SetPlayerPos(playerid, 1494.4723,1303.5813,1093.2891);
SetPlayerFacingAngle(playerid, 0.4216);
SetCameraBehindPlayer(playerid);
SetPlayerInterior(playerid, 3);
SetPlayerVirtualWorld(playerid, alb+500);
//format(string, sizeof(string), "** ????? ????? ??? %s ??? ??????? ?? ?? ?????? (( /dmv )) **", BizInfo[b][bOwner]);
//SendClientMessage(playerid, COLOR_ORANGE, string);
//return 1;
}
if(BizInfo[alb][bType] == 8) // Casino
{
//format(string, sizeof(string), "* %s pushes the door and enters the casino.", RPN(playerid));
//SendNearbyMessage(playerid, 15, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
SetPlayerPos(playerid, 362.8670,-75.1642,1001.5078);
SetPlayerFacingAngle(playerid, 0.4216);
SetCameraBehindPlayer(playerid);
SetPlayerInterior(playerid, 10);
SetPlayerVirtualWorld(playerid, alb+500);
//format(string, sizeof(string), "** ????? ????? ??? %s ??? ??????? ?? ????? ??????? (( /buy )) **", BizInfo[b][bOwner]);
//SendClientMessage(playerid, COLOR_ORANGE, string);
// return 1;
}
if(BizInfo[alb][bType] == 9) // Casino
{
//format(string, sizeof(string), "* %s pushes the door and enters the casino.", RPN(playerid));
//SendNearbyMessage(playerid, 15, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
SetPlayerPos(playerid, 834.6642,7.5311,1004.1870);
SetPlayerFacingAngle(playerid, 0.4216);
SetCameraBehindPlayer(playerid);
SetPlayerInterior(playerid, 3);
SetPlayerVirtualWorld(playerid, alb+500);
//format(string, sizeof(string), "** ????? ????? ??? %s ??? ??????? ?? ?? ????????? (( /bet )) **", BizInfo[b][bOwner]);
//SendClientMessage(playerid, COLOR_ORANGE, string);
}
if(BizInfo[alb][bType] == 10) // 24/7
{
//format(string, sizeof(string), "* %s pushes the door and enters the casino.", RPN(playerid));
//SendNearbyMessage(playerid, 15, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
SetPlayerPos(playerid, -25.9455,-141.5480,1003.5469);
SetPlayerFacingAngle(playerid, 0.4216);
SetCameraBehindPlayer(playerid);
SetPlayerInterior(playerid, 16);
SetPlayerVirtualWorld(playerid, alb+500);
//format(string, sizeof(string), "** ????? ????? ??? %s ??? ??????? ?? ?? ????????? (( /bet )) **", BizInfo[b][bOwner]);
//SendClientMessage(playerid, COLOR_ORANGE, string);
// return 1;
}
if(BizInfo[alb][bType] == 11) // 24/7
{
//format(string, sizeof(string), "* %s pushes the door and enters the casino.", RPN(playerid));
//SendNearbyMessage(playerid, 15, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
SetPlayerPos(playerid, 203.7447,-50.6649,1001.8047);
SetPlayerFacingAngle(playerid, 0.4216);
SetCameraBehindPlayer(playerid);
SetPlayerInterior(playerid, 1);
SetPlayerVirtualWorld(playerid, alb+500);
//format(string, sizeof(string), "** ????? ????? ??? %s ??? ??????? ?? ?? ????????? (( /bet )) **", BizInfo[b][bOwner]);
//SendClientMessage(playerid, COLOR_ORANGE, string);
//  return 1;
}
if(BizInfo[alb][bType] == 12) // 24/7
{
//format(string, sizeof(string), "* %s pushes the door and enters the casino.", RPN(playerid));
//SendNearbyMessage(playerid, 15, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
SetPlayerPos(playerid, 285.9084,-86.7750,1001.5229);
SetPlayerFacingAngle(playerid, 0.4216);
SetCameraBehindPlayer(playerid);
SetPlayerInterior(playerid, 4);
SetPlayerVirtualWorld(playerid, alb+500);
//format(string, sizeof(string), "** ????? ????? ??? %s ??? ??????? ?? ?? ????????? (( /bet )) **", BizInfo[b][bOwner]);
//SendClientMessage(playerid, COLOR_ORANGE, string);
//  return 1;
}
if(BizInfo[alb][bType] == 13) // ammo
{
//format(string, sizeof(string), "* %s pushes the door and enters the casino.", RPN(playerid));
//SendNearbyMessage(playerid, 15, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
SetPlayerPos(playerid, 315.7523,-143.6341,999.6016);
SetPlayerFacingAngle(playerid, 0.4216);
SetCameraBehindPlayer(playerid);
SetPlayerInterior(playerid, 7);
SetPlayerVirtualWorld(playerid, alb+500);
//format(string, sizeof(string), "** ????? ????? ??? %s ??? ??????? ?? ?? ????????? (( /bet )) **", BizInfo[b][bOwner]);
//SendClientMessage(playerid, COLOR_ORANGE, string);
//   return 1;
}
if(BizInfo[alb][bType] == 14) // ammo
{
//format(string, sizeof(string), "* %s pushes the door and enters the casino.", RPN(playerid));
//SendNearbyMessage(playerid, 15, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
SetPlayerPos(playerid, 493.4793,-24.9576,1000.6719);
SetPlayerFacingAngle(playerid, 0.4216);
SetCameraBehindPlayer(playerid);
SetPlayerInterior(playerid, 17);
SetPlayerVirtualWorld(playerid, alb+500);
//format(string, sizeof(string), "** ????? ????? ??? %s ??? ??????? ?? ?? ????????? (( /bet )) **", BizInfo[b][bOwner]);
//SendClientMessage(playerid, COLOR_ORANGE, string);
// return 1;
}
if(BizInfo[alb][bType] == 15) // ammo
{
//format(string, sizeof(string), "* %s pushes the door and enters the casino.", RPN(playerid));
//SendNearbyMessage(playerid, 15, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
SetPlayerPos(playerid, 744.6210,1436.3411,1102.7031);
SetPlayerFacingAngle(playerid, 0.4216);
SetCameraBehindPlayer(playerid);
SetPlayerInterior(playerid, 6);
SetPlayerVirtualWorld(playerid, alb+500);
//format(string, sizeof(string), "** ????? ????? ??? %s ??? ??????? ?? ?? ????????? (( /bet )) **", BizInfo[b][bOwner]);
//SendClientMessage(playerid, COLOR_ORANGE, string);
//  return 1;
}
if(BizInfo[alb][bType] == 16) // ammo
{
//format(string, sizeof(string), "* %s pushes the door and enters the casino.", RPN(playerid));
//SendNearbyMessage(playerid, 15, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
SetPlayerPos(playerid, 773.9693,-78.8193,1000.6628);
SetPlayerFacingAngle(playerid, 0.4216);
SetCameraBehindPlayer(playerid);
SetPlayerInterior(playerid, 7);
SetPlayerVirtualWorld(playerid, alb+500);
//format(string, sizeof(string), "** ????? ????? ??? %s ??? ??????? ?? ?? ????????? (( /bet )) **", BizInfo[b][bOwner]);
//SendClientMessage(playerid, COLOR_ORANGE, string);
// return 1;
}
if(BizInfo[alb][bType] == 17) // ammo
{
//format(string, sizeof(string), "* %s pushes the door and enters the casino.", RPN(playerid));
//SendNearbyMessage(playerid, 15, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
SetPlayerPos(playerid, 774.1560,-50.4766,1000.5859);
SetPlayerFacingAngle(playerid, 0.4216);
SetCameraBehindPlayer(playerid);
SetPlayerInterior(playerid, 6);
SetPlayerVirtualWorld(playerid, alb+500);
//format(string, sizeof(string), "** ????? ????? ??? %s ??? ??????? ?? ?? ????????? (( /bet )) **", BizInfo[b][bOwner]);
//SendClientMessage(playerid, COLOR_ORANGE, string);
// return 1;
}
if(BizInfo[alb][bType] == 18) // ammo
{
//format(string, sizeof(string), "* %s pushes the door and enters the casino.", RPN(playerid));
//SendNearbyMessage(playerid, 15, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
SetPlayerPos(playerid, 1133.2222,-15.8171,1000.6797);
SetPlayerFacingAngle(playerid, 0.4216);
SetCameraBehindPlayer(playerid);
SetPlayerInterior(playerid, 12);
SetPlayerVirtualWorld(playerid, alb+500);
//format(string, sizeof(string), "** ????? ????? ??? %s ??? ??????? ?? ?? ????????? (( /bet )) **", BizInfo[b][bOwner]);
//SendClientMessage(playerid, COLOR_ORANGE, string);
// return 1;
}
if(BizInfo[alb][bType] == 19) // ammo
{
//format(string, sizeof(string), "* %s pushes the door and enters the casino.", RPN(playerid));
//SendNearbyMessage(playerid, 15, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
SetPlayerPos(playerid, 1204.7975,-13.8216,1000.9219);
SetPlayerFacingAngle(playerid, 0.4216);
SetCameraBehindPlayer(playerid);
SetPlayerInterior(playerid, 2);
SetPlayerVirtualWorld(playerid, alb+500);
//format(string, sizeof(string), "** ????? ????? ??? %s ??? ??????? ?? ?? ????????? (( /bet )) **", BizInfo[b][bOwner]);
//SendClientMessage(playerid, COLOR_ORANGE, string);
// return 1;
}
if(BizInfo[alb][bType] == 20) // ammo
{
//format(string, sizeof(string), "* %s pushes the door and enters the casino.", RPN(playerid));
//SendNearbyMessage(playerid, 15, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
SetPlayerPos(playerid, 1306.8253,3.2698,1001.0272);
SetPlayerFacingAngle(playerid, 90.3947);
SetCameraBehindPlayer(playerid);
SetPlayerInterior(playerid, 18);
SetPlayerVirtualWorld(playerid, alb+500);
//format(string, sizeof(string), "** ????? ????? ??? %s ??? ??????? ?? ?? ????????? (( /bet )) **", BizInfo[b][bOwner]);
//SendClientMessage(playerid, COLOR_ORANGE, string);
//  return 1;
}
if(BizInfo[alb][bType] == 21) // ammo
{
//format(string, sizeof(string), "* %s pushes the door and enters the casino.", RPN(playerid));
//SendNearbyMessage(playerid, 15, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
SetPlayerPos(playerid, 2018.6144,1017.7792,996.8750);
SetPlayerFacingAngle(playerid, 0.4216);
SetCameraBehindPlayer(playerid);
SetPlayerInterior(playerid, 10);
SetPlayerVirtualWorld(playerid, alb+500);
//format(string, sizeof(string), "** ????? ????? ??? %s ??? ??????? ?? ?? ????????? (( /bet )) **", BizInfo[b][bOwner]);
//SendClientMessage(playerid, COLOR_ORANGE, string);
//  return 1;
}
if(BizInfo[alb][bType] == 22) // ammo
{
//format(string, sizeof(string), "* %s pushes the door and enters the casino.", RPN(playerid));
//SendNearbyMessage(playerid, 15, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
SetPlayerPos(playerid, 2234.1011,1714.4489,1012.3828);
SetPlayerFacingAngle(playerid, 0.4216);
SetCameraBehindPlayer(playerid);
SetPlayerInterior(playerid, 1);
SetPlayerVirtualWorld(playerid, alb+500);
//format(string, sizeof(string), "** ????? ????? ??? %s ??? ??????? ?? ?? ????????? (( /bet )) **", BizInfo[b][bOwner]);
//SendClientMessage(playerid, COLOR_ORANGE, string);
//return 1;
}
if(BizInfo[alb][bType] == 23) // ammo
{
//format(string, sizeof(string), "* %s pushes the door and enters the casino.", RPN(playerid));
//SendNearbyMessage(playerid, 15, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
SetPlayerPos(playerid, -229.1534,1401.3180,27.7656);
SetPlayerFacingAngle(playerid, 0.4216);
SetCameraBehindPlayer(playerid);
SetPlayerInterior(playerid, 18);
SetPlayerVirtualWorld(playerid, alb+500);
//format(string, sizeof(string), "** ????? ????? ??? %s ??? ??????? ?? ?? ????????? (( /bet )) **", BizInfo[b][bOwner]);
//SendClientMessage(playerid, COLOR_ORANGE, string);
//  return 1;
}
if(BizInfo[alb][bType] == 24) // ammo
{
//format(string, sizeof(string), "* %s pushes the door and enters the casino.", RPN(playerid));
//SendNearbyMessage(playerid, 15, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
SetPlayerPos(playerid, 377.0852,-193.3047,1000.6328);
SetPlayerFacingAngle(playerid, 0.4216);
SetCameraBehindPlayer(playerid);
SetPlayerInterior(playerid, 17);
SetPlayerVirtualWorld(playerid, alb+500);
//format(string, sizeof(string), "** ????? ????? ??? %s ??? ??????? ?? ?? ????????? (( /bet )) **", BizInfo[b][bOwner]);
//SendClientMessage(playerid, COLOR_ORANGE, string);
//  return 1;
}
if(BizInfo[alb][bType] == 25) // ammo
{
//format(string, sizeof(string), "* %s pushes the door and enters the casino.", RPN(playerid));
//SendNearbyMessage(playerid, 15, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
SetPlayerPos(playerid, 364.9964,-11.8438,1001.8516);
SetPlayerFacingAngle(playerid, 0.4216);
SetCameraBehindPlayer(playerid);
SetPlayerInterior(playerid, 9);
SetPlayerVirtualWorld(playerid, alb+500);
//format(string, sizeof(string), "** ????? ????? ??? %s ??? ??????? ?? ?? ????????? (( /bet )) **", BizInfo[b][bOwner]);
//SendClientMessage(playerid, COLOR_ORANGE, string);
//  return 1;
}
if(BizInfo[alb][bType] == 26) // ammo
{
//format(string, sizeof(string), "* %s pushes the door and enters the casino.", RPN(playerid));
//SendNearbyMessage(playerid, 15, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
SetPlayerPos(playerid, 460.5563,-88.6419,999.5547);
SetPlayerFacingAngle(playerid, 0.4216);
SetCameraBehindPlayer(playerid);
SetPlayerInterior(playerid, 4);
SetPlayerVirtualWorld(playerid, alb+500);
//format(string, sizeof(string), "** ????? ????? ??? %s ??? ??????? ?? ?? ????????? (( /bet )) **", BizInfo[b][bOwner]);
//SendClientMessage(playerid, COLOR_ORANGE, string);
//  return 1;
}
if(BizInfo[alb][bType] == 28) // ammo
{
//format(string, sizeof(string), "* %s pushes the door and enters the casino.", RPN(playerid));
//SendNearbyMessage(playerid, 15, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
SetPlayerPos(playerid, 1727.7561,-1638.0088,20.2230);
SetPlayerFacingAngle(playerid, 172.4654);
SetCameraBehindPlayer(playerid);
SetPlayerInterior(playerid, 18);
SetPlayerVirtualWorld(playerid, alb+500);
//format(string, sizeof(string), "** ????? ????? ??? %s ??? ??????? ?? ?? ????????? (( /bet )) **", BizInfo[b][bOwner]);
//SendClientMessage(playerid, COLOR_ORANGE, string);
//  return 1;
}
if(BizInfo[alb][bType] == 29) // ammo
{
//format(string, sizeof(string), "* %s pushes the door and enters the casino.", RPN(playerid));
//SendNearbyMessage(playerid, 15, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
SetPlayerPos(playerid, 2541.9399,-1304.0100,1025.0703);
SetPlayerFacingAngle(playerid, 345.3745);
SetCameraBehindPlayer(playerid);
SetPlayerInterior(playerid, 2);
SetPlayerVirtualWorld(playerid, alb+500);
//format(string, sizeof(string), "** ????? ????? ??? %s ??? ??????? ?? ?? ????????? (( /bet )) **", BizInfo[b][bOwner]);
//SendClientMessage(playerid, COLOR_ORANGE, string);
//  return 1;
}
if(BizInfo[alb][bType] == 30) // ammo
{
//format(string, sizeof(string), "* %s pushes the door and enters the casino.", RPN(playerid));
//SendNearbyMessage(playerid, 15, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
SetPlayerPos(playerid, -1395.4200,1245.6000,1039.8672);
SetPlayerFacingAngle(playerid, 92.1224);
SetCameraBehindPlayer(playerid);
SetPlayerInterior(playerid, 16);
SetPlayerVirtualWorld(playerid, alb+500);
//format(string, sizeof(string), "** ????? ????? ??? %s ??? ??????? ?? ?? ????????? (( /bet )) **", BizInfo[b][bOwner]);
//SendClientMessage(playerid, COLOR_ORANGE, string);
//  return 1;
}
if(BizInfo[alb][bType] == 27) // 24/7 Business
{
SendClientMessage(playerid,0x499BD4FF,"В този бизнес не може да се влиза !");
}}}
for(new alh=0; alh<maxhouses+2; alh++) // Dynamic Houses
{
if(IsPlayerInRangeOfPoint(playerid, 3, HouseInfo[alh][hX], HouseInfo[alh][hY], HouseInfo[alh][hZ]))
{
if(HouseInfo[alh][hLocked]==1 && PlayerInfo[playerid][pHouseO]!=alh)
{
GameTextForPlayer(playerid, "locked", 3000, 1);
return SendClientMessage(playerid,0x00FF40FF,"Къщата е заключена и не можеш да влезеш!");
}
SetPlayerVirtualWorld(playerid, alh+50);
enteredhouse[playerid]=alh;
if(HouseInfo[alh][hInterior] == 1)
{
SetPlayerPos(playerid, 2283.04,-1140.28,1050.90);
SetPlayerFacingAngle(playerid, 267.0980);
SetCameraBehindPlayer(playerid);
SetPlayerInterior(playerid, 11);
}
if(HouseInfo[alh][hInterior] == 2)
{
SetPlayerPos(playerid, 243.72,304.91,999.15);
SetPlayerFacingAngle(playerid, 267.3974);
SetCameraBehindPlayer(playerid);
SetPlayerInterior(playerid, 1);
}
if(HouseInfo[alh][hInterior] == 3)
{
SetPlayerPos(playerid, 2308.77,-1212.94,1049.02);
SetPlayerFacingAngle(playerid, 359.8550);
SetCameraBehindPlayer(playerid);
SetPlayerInterior(playerid, 6);
}
if(HouseInfo[alh][hInterior] == 4)
{
SetPlayerPos(playerid, 377.15,1417.41,1081.33);
SetPlayerFacingAngle(playerid, 1.6415);
SetCameraBehindPlayer(playerid);
SetPlayerInterior(playerid, 15);
}
if(HouseInfo[alh][hInterior] == 5)
{
SetPlayerPos(playerid, 446.99,1397.07,1084.30);
SetPlayerFacingAngle(playerid, 359.1347);
SetCameraBehindPlayer(playerid);
SetPlayerInterior(playerid, 2);
}
if(HouseInfo[alh][hInterior] == 6)
{
SetPlayerPos(playerid, 2237.59,-1081.64,1049.02);
SetPlayerFacingAngle(playerid, 89.1791);
SetCameraBehindPlayer(playerid);
SetPlayerInterior(playerid, 2);
}
if(HouseInfo[alh][hInterior] == 7)
{
SetPlayerPos(playerid, 260.85,1237.24,1084.26);
SetPlayerFacingAngle(playerid, 359.8550);
SetCameraBehindPlayer(playerid);
SetPlayerInterior(playerid, 9);
}
if(HouseInfo[alh][hInterior] == 8)
{
SetPlayerPos(playerid, 2807.48,-1174.76,1025.57);
SetPlayerFacingAngle(playerid, 89.4224);
SetCameraBehindPlayer(playerid);
SetPlayerInterior(playerid, 8);
}
if(HouseInfo[alh][hInterior] == 9)
{
SetPlayerPos(playerid, 83.03,1322.28,1083.87);
SetPlayerFacingAngle(playerid, 0.7248);
SetCameraBehindPlayer(playerid);
SetPlayerInterior(playerid, 9);
}
if(HouseInfo[alh][hInterior] == 10)
{
SetPlayerPos(playerid, 2495.98,-1692.08,1014.74);
SetPlayerFacingAngle(playerid, 359.5183);
SetCameraBehindPlayer(playerid);
SetPlayerInterior(playerid, 3);
}
if(HouseInfo[alh][hInterior] == 11)
{
SetPlayerPos(playerid, -42.5628,1405.5011,1084.4297);
SetPlayerFacingAngle(playerid, 359.5183);
SetCameraBehindPlayer(playerid);
SetPlayerInterior(playerid, 8);
}
if(HouseInfo[alh][hInterior] == 12)
{
SetPlayerPos(playerid, -68.7704,1352.9250,1080.2109);
SetPlayerFacingAngle(playerid, 359.5183);
SetCameraBehindPlayer(playerid);
SetPlayerInterior(playerid, 6);
}
if(HouseInfo[alh][hInterior] == 13)
{
SetPlayerPos(playerid, 83.0758,1322.2808,1083.8662);
SetPlayerFacingAngle(playerid, 359.5183);
SetCameraBehindPlayer(playerid);
SetPlayerInterior(playerid, 9);
}
if(HouseInfo[alh][hInterior] == 14)
{
SetPlayerPos(playerid, 140.2254,1365.9796,1083.8594);
SetPlayerFacingAngle(playerid, 359.5183);
SetCameraBehindPlayer(playerid);
SetPlayerInterior(playerid, 5);
}
if(HouseInfo[alh][hInterior] == 15)
{
SetPlayerPos(playerid, 223.1015,1287.0764,1082.1406);
SetPlayerFacingAngle(playerid, 359.5183);
SetCameraBehindPlayer(playerid);
SetPlayerInterior(playerid, 1);
}
if(HouseInfo[alh][hInterior] == 16)
{
SetPlayerPos(playerid, 225.8726,1021.4523,1084.0177);
SetPlayerFacingAngle(playerid, 359.5183);
SetCameraBehindPlayer(playerid);
SetPlayerInterior(playerid, 7);
}
if(HouseInfo[alh][hInterior] == 17)
{
SetPlayerPos(playerid, 226.2984,1114.3319,1080.9929);
SetPlayerFacingAngle(playerid, 359.5183);
SetCameraBehindPlayer(playerid);
SetPlayerInterior(playerid, 5);
}
if(HouseInfo[alh][hInterior] == 18)
{
SetPlayerPos(playerid, 261.0904,1284.2944,1080.2578);
SetPlayerFacingAngle(playerid, 359.5183);
SetCameraBehindPlayer(playerid);
SetPlayerInterior(playerid, 4);
}
if(HouseInfo[alh][hInterior] == 19)
{
SetPlayerPos(playerid, 309.0916,313.6412,1003.3047);
SetPlayerFacingAngle(playerid, 359.5183);
SetCameraBehindPlayer(playerid);
SetPlayerInterior(playerid, 4);
}
if(HouseInfo[alh][hInterior] == 20)
{
SetPlayerPos(playerid, 318.5932,1114.4792,1083.8828);
SetPlayerFacingAngle(playerid, 359.5183);
SetCameraBehindPlayer(playerid);
SetPlayerInterior(playerid, 5);
}
if(HouseInfo[alh][hInterior] == 21)
{
SetPlayerPos(playerid, 327.9635,1477.7430,1084.4375);
SetPlayerFacingAngle(playerid, 359.5183);
SetCameraBehindPlayer(playerid);
SetPlayerInterior(playerid, 15);
}
if(HouseInfo[alh][hInterior] == 22)
{
SetPlayerPos(playerid, 1260.6464,-785.4418,1091.9063);
SetPlayerFacingAngle(playerid, 359.5183);
SetCameraBehindPlayer(playerid);
SetPlayerInterior(playerid, 5);
}
if(HouseInfo[alh][hInterior] == 23)
{
SetPlayerPos(playerid, 2468.8413,-1698.4177,1013.5078);
SetPlayerFacingAngle(playerid, 359.5183);
SetCameraBehindPlayer(playerid);
SetPlayerInterior(playerid, 2);
}
if(HouseInfo[alh][hInterior] == 24)
{
SetPlayerPos(playerid, 2196.8506,-1204.2477,1049.0234);
SetPlayerFacingAngle(playerid, 359.5183);
SetCameraBehindPlayer(playerid);
SetPlayerInterior(playerid, 6);
}
if(HouseInfo[alh][hInterior] == 25)
{
SetPlayerPos(playerid, 2270.3855,-1210.4730,1047.5625);
SetPlayerFacingAngle(playerid, 359.5183);
SetCameraBehindPlayer(playerid);
SetPlayerInterior(playerid, 10);
}
if(HouseInfo[alh][hInterior] == 26)
{
SetPlayerPos(playerid, 2324.5479,-1149.5146,1050.7101);
SetPlayerFacingAngle(playerid, 359.5183);
SetCameraBehindPlayer(playerid);
SetPlayerInterior(playerid, 12);
}
}
}
if(IsPlayerInRangeOfPoint(playerid, 3.0,1555.2531,-1675.6143,16.1953) && GetPlayerVirtualWorld(playerid) == 0 && GetPlayerInterior(playerid) == 0)
{
SetPlayerInterior(playerid,6);
SetPlayerPos(playerid,246.6557,65.1160,1003.6406);
SetPlayerFacingAngle(playerid,359.9001);
SetPlayerVirtualWorld(playerid,1);
SetCameraBehindPlayer(playerid);
}
if(IsPlayerInRangeOfPoint(playerid, 3.0,1411.5128,-1699.5909,13.5395) && GetPlayerVirtualWorld(playerid) == 0 && GetPlayerInterior(playerid) == 0)
{
SetPlayerInterior(playerid,15);
SetPlayerPos(playerid,-1444.0856,1087.5129,1040.7969);
SetPlayerFacingAngle(playerid,1040.7969);
SetPlayerVirtualWorld(playerid,1);
SetCameraBehindPlayer(playerid);
}
if(IsPlayerInRangeOfPoint(playerid, 3.0,2006.8207,1167.4012,10.8203) && GetPlayerVirtualWorld(playerid) == 0 && GetPlayerInterior(playerid) == 0)
{
SetPlayerInterior(playerid,15);
SetPlayerPos(playerid,-1444.0856,1087.5129,1040.7969);
SetPlayerFacingAngle(playerid,1040.7969);
SetCameraBehindPlayer(playerid);
}
if(IsPlayerInRangeOfPoint(playerid, 3.0,-2182.9065,956.6106,80.0000) && GetPlayerVirtualWorld(playerid) == 0 && GetPlayerInterior(playerid) == 0)
{
if(PlayerInfo[playerid][pTeam]!=8) return SendClientMessage(playerid, 0xB4B5B7FF, "Трябва да си член на San Fierro Rifa!");
SetPlayerInterior(playerid,2);
SetPlayerVirtualWorld(playerid,1);
SetPlayerPos(playerid,2467.6345,-1698.2460,1013.5078);
SetPlayerFacingAngle(playerid,92.8459);
SetCameraBehindPlayer(playerid);
}
return 1;
}
else if(strcmp(cmd, "/unignore", true) == 0)
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /unignore [ID на играч]");
return 1;
}
para1[playerid] = strval(tmp);
if(!IsPlayerConnected(para1[playerid]))
{
SendClientMessage(playerid, COLOR_GRAD1, "Този играч, който сте въвели не в онлайн в момента");
return 1;
}
if(playerid==para1[playerid])
{
SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да премахнеш игнориране от себе си!");
return 1;
}
if(ignore[playerid][para1[playerid]]==0)
{
SendClientMessage(playerid, COLOR_GRAD1, "Ти не си игнорирал този играч!");
return 1;
}
ignore[playerid][para1[playerid]]=0;
new togapmstring[256];
format(togapmstring, 256, "Ти премахна игнорирането на %s от твоите лични съобщения!", pname[playerid]);
SendClientMessage(para1[playerid], 0xFFFF00FF, togapmstring);
format(togapmstring, 256, "* %s премахна игнорирането от неговите лични съобщения!", pname[para1[playerid]]);
SendClientMessage(playerid,  0xFFFF00FF, togapmstring);
return 1;
}
if(strcmp(cmd, "/funignore", true) == 0)
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /funignore [playerid]");
return 1;
}
para1[playerid] = strval(tmp);
if(!IsPlayerConnected(para1[playerid]))
{
SendClientMessage(playerid, 0xB4B5B7FF, "Посоченото ID не е в сървъра!");
return 1;
}
if(playerid==para1[playerid])
{
SendClientMessage(playerid, 0xB4B5B7FF, "Не можеш да премахнеш игнориране от себе си!");
return 1;
}
for(new allids; allids<MAX_PLAYERS; allids++)
{
if(fignore[allids][playerid]==para1[playerid])
{
SendClientMessage(playerid, 0xB4B5B7FF, "Ти вече не си игнорирал този играч!");
return 1;
}
}
new readypm = 0;
for(new allids; allids<MAX_PLAYERS; allids++)
{
if(fignore[allids][playerid]!=-1 && readypm==0)
{
fignore[allids][playerid]=para1[playerid];
readypm=1;
}
}
new togapmstring[256];
format(togapmstring, 256, "Ти премахна игнорирането на %s и сега ще виждаш неговите съобщения във FACTION чата!", pname[playerid]);
SendClientMessage(para1[playerid], 0x33CCFFFF, togapmstring);
//format(togapmstring, 256, "* %s премахна игнорирането от неговите лични съобщения!", pname[para1[playerid]]);
//SendClientMessage(playerid,  0xFFFF00FF, togapmstring);
return 1;
}
if(strcmp(cmd, "/fignore", true) == 0)
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /fignore [playerid]");
return 1;
}
para1[playerid] = strval(tmp);
if(!IsPlayerConnected(para1[playerid]))
{
SendClientMessage(playerid, 0xB4B5B7FF, "Посоченото ID не е в сървъра!");
return 1;
}
if(PlayerInfo[playerid][pTeam]!=PlayerInfo[para1[playerid]][pTeam]) return SendClientMessage(playerid, 0xB4B5B7FF, "Този играч не е от твоята банда/мафия!");
if(playerid==para1[playerid])
{
SendClientMessage(playerid, 0xB4B5B7FF, "Не можеш да игнорираш себе си!");
return 1;
}
for(new allids; allids<MAX_PLAYERS; allids++)
{
if(fignore[playerid][allids]==para1[playerid])
{
SendClientMessage(playerid, 0xB4B5B7FF, "Ти вече си игнорирал този играч!");
return 1;
}
}
new readypm = 0;
for(new allids; allids<MAX_PLAYERS; allids++)
{
if(fignore[allids][playerid]==para1[playerid] && readypm==0)
{
fignore[allids][playerid]=-1;
readypm=1;
}
}
new togapmstring[256];
format(togapmstring, 256, "Ти игнорира %s да не виждаш неговите съобщения във FACTION чата!", pname[playerid]);
SendClientMessage(para1[playerid], 0x33CCFFFF, togapmstring);
return 1;
}
else if(strcmp(cmd, "/ignore", true) == 0)
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /ignore [ID на играч]");
return 1;
}
para1[playerid] = strval(tmp);
if(!IsPlayerConnected(para1[playerid]))
{
SendClientMessage(playerid, COLOR_GRAD1, "Този играч, който сте въвели не в онлайн в момента");
return 1;
}
if(playerid==para1[playerid])
{
SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да игнорираш себе си!");
return 1;
}
if(ignore[playerid][para1[playerid]]==1)
{
SendClientMessage(playerid, COLOR_GRAD1, "Ти вече си игнорирал този играч!");
return 1;
}
ignore[playerid][para1[playerid]]=1;
new togapmstring[256];
format(togapmstring, 256, "Ти игнорира %s от твоите лични съобщения!", pname[playerid]);
SendClientMessage(para1[playerid], 0xFFFF00FF, togapmstring);
format(togapmstring, 256, "* %s те игнорира от личните си съобщения!", pname[para1[playerid]]);
SendClientMessage(playerid,  0xFFFF00FF, togapmstring);
return 1;
}
if(strcmp(cmd, "/idveh", true) == 0)
{
if(GetPlayerVehicleID(playerid) > -1)
{
format(string256,256, "ID-то на твоето превозно средство е {FF0000}%d",GetVehicleModel(GetPlayerVehicleID(playerid)));
SendClientMessage(playerid, 0xFFFFFFFF,string256);
}
else
{
format(string256, 256, "Ти не си в превозно средство!");
SendClientMessage(playerid, 0xB4B5B7FF,string256);
}
return 1;
}
if(strcmp(cmd, "/report", true) == 0)
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /report [playerid] [text]");
return 1;
}
para1[playerid] = strval(tmp);
if(!IsPlayerConnected(para1[playerid]))
{
SendClientMessage(playerid, 0xB4B5B7FF, "Посоченото ID не е в сървъра!");
return 1;
}
if(playerid==para1[playerid])
{
SendClientMessage(playerid, 0xB4B5B7FF, "Не можеш да изпратиш Report за себе си!");
return 1;
}
new length = strlen(cmdtext);
while ((idx < length) && (cmdtext[idx] <= ' '))
{
idx++;
}
new offset = idx;
new result[256];
while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
{
result[idx - offset] = cmdtext[idx];
idx++;
}
result[idx - offset] = EOS;
if(!strlen(result))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /report [playerid] [text]");
return 1;
}
format(string256, 256, "Ти успешно изпрати своя доклад до онлайн администраторите!", pname[para1[playerid]],para1[playerid], result);
SendClientMessage(playerid,  0xFFFF00FF, string256);
for(new i = 0; i < MAX_PLAYERS; i++)
{
if(PlayerInfo[i][pTest] == 1 || PlayerInfo[i][pAdmin]>0)
{
format(string256, 256, "Report от %s(%d) за %s(%d) Причина: %s", pname[playerid],playerid , pname[para1[playerid]], para1[playerid], result);
SendClientMessage(i,  0xF7AEC2FF, string256);//to6o
}
}
return 1;
}
if(strcmp(cmd, "/r", true) == 0)
{
if(replyPm[playerid]==false) return SendClientMessage(playerid, 0xB4B5B7FF, "Ти не си изпратил лично съобщение до никого!");
if(!IsPlayerConnected(PlayerInfo[playerid][pLastPM]))
{
SendClientMessage(playerid, 0xB4B5B7FF, "Посоченото ID не е в сървъра!");
return 1;
}
if(PlayerInfo[PlayerInfo[playerid][pLastPM]][pIgnorePM] == 1)
{
SendClientMessage(playerid, 0xB4B5B7FF, "Играчът е игнорирал своите лични съобщения!");
return 1;
}
if(PlayerInfo[playerid][pVip]<2 && freevip==0)
{
SendClientMessage(playerid, 0xB4B5B7FF, "Нямаш достатъчно VIP права за да ползваш командата!");
return 1;
}
if(PlayerInfo[playerid][pIgnorePM] == 1)
{
SendClientMessage(playerid, 0xB4B5B7FF, "Ти си игнорирал своите лични съобщения!");
return 1;
}
for(new allids; allids<MAX_PLAYERS; allids++)
{
if(ignore[allids][para1[playerid]]==playerid)
{
SendClientMessage(playerid, 0xB4B5B7FF, "Този играч е игнорирал твоите лични съобщения!");
return 1;
}
}
new length = strlen(cmdtext);
while ((idx < length) && (cmdtext[idx] <= ' '))
{
idx++;
}
new offset = idx;
new result[256];
while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
{
result[idx - offset] = cmdtext[idx];
idx++;
}
result[idx - offset] = EOS;
if(!strlen(result))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /r [text]");
return 1;
}
new togapmstring[256];
format(togapmstring, 256, "* PM from %s(ID: %d): %s", pname[playerid], playerid, result);
SendClientMessage(PlayerInfo[playerid][pLastPM], 0xFFFF00FF, togapmstring);
format(togapmstring, 256, "* PM to %s(ID: %d): %s", pname[PlayerInfo[playerid][pLastPM]],PlayerInfo[playerid][pLastPM], result);
SendClientMessage(playerid,  0xFFFF00FF, togapmstring);
if(PlayerInfo[PlayerInfo[playerid][pLastPM]][pAFK]>0){
SendClientMessage(playerid, 0x636363FF, "Играчът е AFK и може да не види твоето съобщение!"); }
for(new i = 0; i < MAX_PLAYERS; i++)
{
if(PlayerInfo[i][pTogPM] == 1)
{
new togapmstring2[256];
format(togapmstring2, 256, "* PM from %s(ID: %d) to %s(ID: %d): %s", pname[playerid], playerid, pname[PlayerInfo[playerid][pLastPM]], PlayerInfo[playerid][pLastPM], result);
SendClientMessage(i,  0xFFFF00FF, togapmstring2);//to6o
}
}
return 1;
}
if(strcmp(cmd, "/pm", true) == 0)
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /pm [playerid] [text]");
return 1;
}
para1[playerid] = strval(tmp);
if(!IsPlayerConnected(para1[playerid]))
{
SendClientMessage(playerid, 0xB4B5B7FF, "Посоченото ID не е в сървъра!");
return 1;
}
if(PlayerInfo[para1[playerid]][pIgnorePM] == 1)
{
SendClientMessage(playerid, 0xB4B5B7FF, "Играчът е игнорирал своите лични съобщения!");
return 1;
}
if(PlayerInfo[playerid][pIgnorePM] == 1)
{
SendClientMessage(playerid, 0xB4B5B7FF, "Ти си игнорирал своите лични съобщения!");
return 1;
}
if(playerid==para1[playerid])
{
SendClientMessage(playerid, 0xB4B5B7FF, "Не можеш да изпратиш лично съобщение до себе си!");
return 1;
}
if(ignore[para1[playerid]][playerid]==1)
{
SendClientMessage(playerid, COLOR_GRAD1, "Този играч ти е забранил да му изпращаш съобщения!");
return 1;
}
new length = strlen(cmdtext);
while ((idx < length) && (cmdtext[idx] <= ' '))
{
idx++;
}
new offset = idx;
new result[256];
while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
{
result[idx - offset] = cmdtext[idx];
idx++;
}
result[idx - offset] = EOS;
if(!strlen(result))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /pm [playerid] [text]");
return 1;
}
new togapmstring[256];
replyPm[playerid]=true;
PlayerInfo[playerid][pLastPM] = para1[playerid];
format(togapmstring, 256, "* PM from %s(ID: %d): %s", pname[playerid], playerid, result);
SendClientMessage(para1[playerid], 0xFFFF00FF, togapmstring);
format(togapmstring, 256, "* PM to %s(ID: %d): %s", pname[para1[playerid]],para1[playerid], result);
SendClientMessage(playerid,  0xFFFF00FF, togapmstring);
if(PlayerInfo[para1[playerid]][pAFK]>0){
SendClientMessage(playerid, 0x636363FF, "Играчът е AFK и може да не види твоето съобщение!"); }
for(new i = 0; i < MAX_PLAYERS; i++)
{
if(PlayerInfo[i][pTogPM] == 1)
{
new togapmstring2[256];
format(togapmstring2, 256, "* PM from %s(ID: %d) to %s(ID: %d): %s", pname[playerid], playerid, pname[para1[playerid]], para1[playerid], result);
SendClientMessage(i,  0xFFFF00FF, togapmstring2);//to6o
}
}
return 1;
}
if(strcmp(cmd, "/vehres", true)==0)
{
new haveprivate=0;
for(new alv=1;alv<MAX_PRIVATEVEHS;alv++)
{
if(strcmp(PrivateVeh[alv][pvOwner], pname[playerid], true)==0)
{
SetVehicleToRespawn(PrivateVeh[alv][pvID]);
haveprivate=1;
}
}
if(haveprivate==0) return SendClientMessage(playerid, 0xB4B5B7FF, "Ти нямаш лично превозно средство!");
format(string256, 256, "Own Vehicle: Ти respawn-на твоите лични превозни средства!");
SendClientMessage(playerid, 0xB8860BFF, string256);
return 1;
}
if(strcmp(cmd, "/vehnorespawn", true)==0)
{
new vehiclestring[64]; new haveprivate=0; new inveh=0;
for(new alv=1;alv<MAX_PRIVATEVEHS;alv++)
{
if(strcmp(PrivateVeh[alv][pvOwner], pname[playerid], true)==0)
{
haveprivate=1;
if(IsPlayerInVehicle(playerid,PrivateVeh[alv][pvID]))
{
format(vehiclestring,64, "/Vehicles/%d.ini", alv);
dini_IntSet(vehiclestring,"VehicleRES",-1);
inveh=1;
}
}
}
if(haveprivate==0) return SendClientMessage(playerid, 0xB4B5B7FF, "Ти нямаш лично превозно средство!");
if(inveh==0)
{
return SendClientMessage(playerid, 0xB4B5B7FF, "Ти не си в своето превозно средство!");
}
SendClientMessage(playerid, 0xB8860BFF, "Ти сложи NO RESPAWN на твоето превозно средство!");
SendClientMessage(playerid, 0xB8860BFF, "SERVER: Превозното средство ще бъде NO RESPAWN след рестартиране на сървъра!");
return 1;
}
if(strcmp(cmd, "/vehrespawn", true)==0)
{
new vehiclestring[64]; new haveprivate=0; new inveh=0;
for(new alv=1;alv<MAX_PRIVATEVEHS;alv++)
{
if(strcmp(PrivateVeh[alv][pvOwner], pname[playerid], true)==0)
{
haveprivate=1;
}
}
if(haveprivate==0) return SendClientMessage(playerid, 0xB4B5B7FF, "Ти нямаш лично превозно средство!");
new c1;
tmp=strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /vehrespawn [секунди]");
return 1;
}
c1=strval(tmp);
if(c1<1 || c1>999999) return SendClientMessage(playerid, 0xB4B5B7FF, "Секундите трябва да са от 1 до 999999!");
for(new alv=1;alv<MAX_PRIVATEVEHS;alv++)
{
if(strcmp(PrivateVeh[alv][pvOwner], pname[playerid], true)==0)
{
if(IsPlayerInVehicle(playerid,PrivateVeh[alv][pvID]))
{
dini_IntSet(vehiclestring,"VehicleRES",c1);
inveh=1;
}
}
}
if(inveh==0)
{
return SendClientMessage(playerid, 0xB4B5B7FF, "Ти не си в своето превозно средство!");
}
SendClientMessage(playerid, 0xB8860BFF, "Ти сложи време за Respawn на твоето превозно средство!");
SendClientMessage(playerid, 0xB8860BFF, "SERVER: Превозното средство ще бъде с времето за RESPAWN след рестартиране на сървъра!");
return 1;
}

if(strcmp(cmd, "/vehcolor", true)==0)
{
tmp=strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /vehcolor [color 1] [color 2]");
return 1;
}
new c1;
c1=strval(tmp);
tmp=strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /vehcolor [color 1] [color 2]");
return 1;
}
new c2;
c2=strval(tmp);
if(c1>255 || c2 >255) return SendClientMessage(playerid, 0xB4B5B7FF, "Цветовете трябва да са от 0 до 255!");
new haveprivate=0; new inveh=0;
for(new alv=1;alv<MAX_PRIVATEVEHS;alv++)//MAX_PRIVATEVEHS
{
if(strcmp(PrivateVeh[alv][pvOwner], pname[playerid], true)==0)
{
haveprivate=1;
if(IsPlayerInVehicle(playerid,PrivateVeh[alv][pvID]))
{
inveh=1;
}
}
new vehiclestring[64];
if(IsPlayerInVehicle(playerid,PrivateVeh[alv][pvID]))
{
format(vehiclestring,64, "/Vehicles/%d.ini", alv);
dini_IntSet(vehiclestring,"VehicleC1",c1);
dini_IntSet(vehiclestring,"VehicleC2",c2);
}
}
if(haveprivate==0) return SendClientMessage(playerid, 0xB4B5B7FF, "Ти нямаш лично превозно средство!");
if(inveh==0) return SendClientMessage(playerid, 0xB4B5B7FF, "Ти не си в своето превозно средство!");
SendClientMessage(playerid, 0xB8860BFF, "Ти промени цвета на твоето превозно средство!");
return 1;
}

if(strcmp(cmd, "/vehsave", true)==0)
{
new haveprivate=0; new inveh=0;
new vehiclestring[64];
new Float:angleveh;
GetVehicleZAngle(GetPlayerVehicleID(playerid),angleveh);
new Float:vehx,Float:vehy,Float:vehz;
new saveli=0;
GetVehiclePos(GetPlayerVehicleID(playerid),vehx,vehy,vehz);
for(new alv=1;alv<MAX_PRIVATEVEHS;alv++)//MAX_PRIVATEVEHS
{
if(strcmp(PrivateVeh[alv][pvOwner], pname[playerid], true)==0)
{
haveprivate=1;
if(IsPlayerInVehicle(playerid,PrivateVeh[alv][pvID]))
{
format(vehiclestring,64, "/Vehicles/%d.ini", alv);
dini_FloatSet(vehiclestring,"VehicleX",vehx);
dini_FloatSet(vehiclestring,"VehicleY",vehy);
dini_FloatSet(vehiclestring,"VehicleZ",vehz);
dini_FloatSet(vehiclestring,"VehicleA",angleveh);
dini_IntSet(vehiclestring,"VirtualWorld",GetPlayerVirtualWorld(playerid));
inveh=1;
}
}
}
if(haveprivate==0) return SendClientMessage(playerid, 0xB4B5B7FF, "Ти нямаш лично превозно средство!");
if(inveh==0) return SendClientMessage(playerid, 0xB4B5B7FF, "Ти не си в своето превозно средство!");
SendClientMessage(playerid, 0xBFFF80FF, "Новата позиция на твоето превозно средство ще бъде валидна след рестарт!");
return 1;
}
if(strcmp(cmd, "/respawnv", true)==0)
{
if(GetPlayerVehicleID(playerid)<1) return SendClientMessage(playerid, 0xB4B5B7FF, "Ти не си в превозно средство!");
if (PlayerInfo[playerid][pAdmin] >= 5)
{
SetVehicleToRespawn(GetPlayerVehicleID(playerid));
}
else
{
SendClientMessage(playerid, 0xB4B5B7FF, "Нямаш права за да ползваш командата!");
}
return 1;
}
if(strcmp(cmd, "/spawnpv", true)==0)
{
if (PlayerInfo[playerid][pAdmin] >= 5)
{
new level;
tmp=strtok(cmdtext, idx);
level=strval(tmp);
if(level<1||level>500)
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /spawnpv [vehicles 1-500]");
return 1;
}
if(level==-1) return SendClientMessage(playerid, 0xB4B5B7FF, "Това превозно средство е невалидно!");
if(level==0) return SendClientMessage(playerid, 0xB4B5B7FF, "Това превозно средство е невалидно!");
new vehiclesstring[64];
format(vehiclesstring, 64, "/Vehicles/%d.ini", level);
if(!dini_Exists(vehiclesstring))
{
return SendClientMessage(playerid, 0xB4B5B7FF, "В момента това превозно средство е невалидно, създай го, чрез /giveveh!");
}
new Float:X3,Float:Y3,Float:Z3;
GetPlayerPos(playerid, X3, Y3, Z3);
SetVehicleToRespawn(PrivateVeh[level][pvID]);
SetVehiclePos(PrivateVeh[level][pvID], X3,Y3,Z3);
SetVehicleVirtualWorld(PrivateVeh[level][pvID],0);
PutPlayerInVehicle(playerid, PrivateVeh[level][pvID], 0);
}
else
{
SendClientMessage(playerid, 0xB4B5B7FF, "Нямаш права за да ползваш командата!");
}
return 1;
}
if(strcmp(cmd, "/giveveh", true)==0)
{
if (PlayerInfo[playerid][pAdmin] >= 5)
{
tmp=strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /giveveh [playerid] [vehicles 0-500]");
return 1;
}
new level;
para1[playerid]=ReturnUser(tmp);
tmp=strtok(cmdtext, idx);
level=strval(tmp);
if(para1[playerid] != INVALID_PLAYER_ID)
{
if(level<0||level>500)
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /giveveh [playerid] [vehicles 0-500]");
return 1;
}
if(level>=MAX_PRIVATEVEHS) return SendClientMessage(playerid, 0xB4B5B7FF, "Това превозно средство все-още не е създадено!");
format(string256, 256, "* %s ти даде превозно средство, честито *", pname[playerid]);
SendClientMessage(para1[playerid], 0xBFFF80FF, string256);
format(string256, 256, "* Ти даде превозно средство на %s *", pname[para1[playerid]]);
SendClientMessage(playerid, 0xBFFF80FF, string256);
new vehiclesstring[64];
format(vehiclesstring, 64, "/Vehicles/%d.ini", level);
if(!dini_Exists(vehiclesstring))
{
dini_Create(vehiclesstring);
dini_IntSet(vehiclesstring,"VehicleOwn",1);
}
format(PrivateVeh[level][pvOwner],40,"%s",pname[para1[playerid]]);
dini_Set(vehiclesstring,"VehicleOwner",pname[para1[playerid]]);
dini_IntSet(vehiclesstring,"VehicleOwn",1);
PrivateVeh[level][pvIsOwned]=1;
}
else
{
SendClientMessage(playerid,0xB4B5B7FF,"Посоченото ID не е в сървъра!");
}
}
else
{
SendClientMessage(playerid, 0xB4B5B7FF, "Нямаш права за да ползваш командата!");
}
return 1;
}
//<<<<<<<<<<<<<<<<<<<<<<<<<<<<>>>>>>>>>>>>>>>>>>>
if(strcmp(cmd, "/getveh", true)==0)
{
if (PlayerInfo[playerid][pAdmin] >= 5)
{
new level;
tmp=strtok(cmdtext, idx);
level=strval(tmp);
if(level<1 || level>MAX_PRIVATEVEHS)
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /getveh [vehicles 0-4]");
return 1;
}
if(level>=MAX_PRIVATEVEHS) return SendClientMessage(playerid, 0xB4B5B7FF, "Това превозно средство все-още не е създадено!");
if(PrivateVeh[level][pvOwner]==0) return SendClientMessage(playerid, 0xB4B5B7FF, "Това предство няма притежател!");
format(string256, 256, "* Ти премахна собствеността на лично превозно средство ID: %d*", level);
SendClientMessage(playerid, 0xBFFF80FF, string256);
new vehiclesstring[64];
format(vehiclesstring, 64, "/Vehicles/%d.ini", level);
format(PrivateVeh[level][pvOwner],40,"None");
dini_Set(vehiclesstring,"VehicleOwner","None");
dini_IntSet(vehiclesstring,"VehicleOwn",0);
PrivateVeh[level][pvOwner]=0;
}
else
{
SendClientMessage(playerid, 0xB4B5B7FF, "Нямаш права за да ползваш командата!");
}
return 1;
}
//<<<<<<<<<<<<<<<<<<<<<<<<>>>>>>>>>>>>>>>>>>>>>>>
if(strcmp(cmd, "/dfcars", true) == 0)
{
if(sfpermission==0)
{
if(PlayerInfo[playerid][pTeam]!=15 && PlayerInfo[playerid][pRank]<6) return SendClientMessage(playerid, 0xB4B5B7FF, "Ти не си лидер на Delta Force!");
sfpermission=1;
format(string256, 256, "[FACTION CHAT] %s позволи да се карат Special Force превозните средства!",pname[playerid]);
for(new i=0; i<MAX_PLAYERS; i++)
{
if(PlayerInfo[i][pTeam] == PlayerInfo[playerid][pTeam])
{
SendClientMessage(i, 0xA4A400FF, string256);
}
}
}
else
{
sfpermission=0;
format(string256, 256, "[FACTION CHAT] %s забрани да се карат Special Force превозните средства!",pname[playerid]);
for(new i=0; i<MAX_PLAYERS; i++)
{
if(PlayerInfo[i][pTeam] == PlayerInfo[playerid][pTeam])
{
SendClientMessage(i, 0xA4A400FF, string256);
}
}
}
return 1;
}
if (strcmp(cmd, "/ifcduty", true)==0)
{
if(!IsPlayerInRangeOfPoint(playerid,3.0,283.4191,1387.8158,10.5859))
{
return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си на мястото за влизане в служба!");
}
if(PlayerInfo[playerid][pADuty] > 0)
{
SendClientMessage(playerid,0xB4B5B7FF,"Не можеш да използваш тази команда, докато си ADMIN ON-DUTY!");
return 1;
}
if(PlayerInfo[playerid][pIFC]==0) return SendClientMessage(playerid,0xE60000FF,"Трябва да си член на Intense Fuel Company!");
if(PlayerInfo[playerid][pIFCDuty]==1)
{
SendClientMessage(playerid, 0xA4FFA4FF, "* Вие вече не сте на служба в Intense Fuel Company *");
PlayerInfo[playerid][pIFCDuty]=0;
return SetPlayerSkin(playerid,spawnselectedskin[playerid]);
}
else
{
SendClientMessage(playerid, 0xA4FFA4FF, "* Вие вече сте на служба в Intense Fuel Company *");
PlayerInfo[playerid][pIFCDuty]=1;
SetPlayerSkin(playerid,202);
}
return 1;
}
if (strcmp(cmd, "/dfduty", true)==0)
{
if(!IsPlayerInRangeOfPoint(playerid,3.0,211.5823,1812.2897,21.8594))
{
return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си на мястото за влизане в служба!");
}
if(PlayerInfo[playerid][pADuty] > 0)
{
SendClientMessage(playerid,0xB4B5B7FF,"Не можеш да използваш тази команда, докато си ADMIN ON-DUTY!");
return 1;
}
if(PlayerInfo[playerid][pTeam]!=15) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си член на Delta Force!");
if(PlayerInfo[playerid][pSpecialForce]==0) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си член на Special Force!");
if(PlayerInfo[playerid][pDFDuty]==1)
{
SendClientMessage(playerid, 0xA4A400FF, "[FACTION CHAT] Ти излезе от Special Force смяна!");
PlayerInfo[playerid][pDFDuty]=0;
}
else
{
SendClientMessage(playerid, 0xA4A400FF, "[FACTION CHAT] Ти влезе в Special Force смяна!");
PlayerInfo[playerid][pDFDuty]=1;
}
return 1;
}
if(strcmp(cmd, "/specialforce", true)==0)
{
tmp=strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /specialforce [playerid]");
return 1;
}
para1[playerid]=ReturnUser(tmp);
if(para1[playerid] != INVALID_PLAYER_ID)
{
if (PlayerInfo[playerid][pRank] == 6 && PlayerInfo[playerid][pTeam]==FACTION_DELTAFORCE)
{
if(PlayerInfo[para1[playerid]][pTeam]!=15)
{
return SendClientMessage(playerid, 0xB4B5B7FF, "Този играч не е член на Delta Force!");
}
if(PlayerInfo[para1[playerid]][pSpecialForce]==1)
{
return SendClientMessage(playerid, 0xB4B5B7FF, "Този играч вече е Special Force!");
}
if(PlayerInfo[para1[playerid]][pRank]<5)
{
return SendClientMessage(playerid, 0xB4B5B7FF, "Този играч трябва първо да бъде 5 ранг!");
}
PlayerInfo[para1[playerid]][pSpecialForce]=1;
format(string256, 256, "%s добави %s към Special Force членовете на Delta Force!",pname[playerid],pname[para1[playerid]]);
for(new i=0; i<MAX_PLAYERS; i++)
{
if(PlayerInfo[i][pTeam] == PlayerInfo[playerid][pTeam])
{
SendClientMessage(i, 0xA4A400FF, string256);
}
}
}
else
{
SendClientMessage(playerid, 0xB4B5B7FF, "Нямаш права за да ползваш командата!");
}
}
else
{
SendClientMessage(playerid,0xB4B5B7FF,"Посоченото ID не е в сървъра!");
}
return 1;
}
if(strcmp(cmd, "/unspecialforce", true)==0)
{
tmp=strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /unspecialforce [playerid]");
return 1;
}
para1[playerid]=ReturnUser(tmp);
if(para1[playerid] != INVALID_PLAYER_ID)
{
if(PlayerInfo[para1[playerid]][pTeam]!=15)
{
return SendClientMessage(playerid, 0xB4B5B7FF, "Този играч не е член на Delta Force!");
}
if (PlayerInfo[playerid][pRank] == 6 && PlayerInfo[playerid][pTeam]==FACTION_DELTAFORCE)
{
if(PlayerInfo[para1[playerid]][pSpecialForce]==0)
{
return SendClientMessage(playerid, 0xB4B5B7FF, "Този играч не е Special Force!");
}
PlayerInfo[para1[playerid]][pSpecialForce]=0;
PlayerInfo[para1[playerid]][pDFDuty]=0;
format(string256, 256, "%s премахна %s от Special Force членовете на Delta Force!",pname[playerid],pname[para1[playerid]]);
for(new i=0; i<MAX_PLAYERS; i++)
{
if(PlayerInfo[i][pTeam] == PlayerInfo[playerid][pTeam])
{
SendClientMessage(i, 0xA4A400FF, string256);
}
}
}
else
{
SendClientMessage(playerid, 0xB4B5B7FF, "Нямаш права за да ползваш командата!");
}
}
else
{
SendClientMessage(playerid,0xB4B5B7FF,"Посоченото ID не е в сървъра!");
}
return 1;
}
if(strcmp(cmd, "/makegleader", true)==0)
{
tmp=strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /makeleader [playerid]");
return 1;
}
para1[playerid]=ReturnUser(tmp);
if(para1[playerid] != INVALID_PLAYER_ID)
{
if (PlayerInfo[playerid][pAdmin] >= 5)
{
if(PlayerInfo[para1[playerid]][pGLeader]==1)
{
return SendClientMessage(playerid, 0xB4B5B7FF, "Този играч вече е главен лидер!");
}
if(PlayerInfo[para1[playerid]][pRank]<6)
{
return SendClientMessage(playerid, 0xB4B5B7FF, "Този играч трябва първо да бъде лидер!");
}
PlayerInfo[para1[playerid]][pGLeader]=1;
PlayerInfo[para1[playerid]][pRank]=6;
new teamName[60];
format(teamName,60,"%s",TeamInfo[PlayerInfo[para1[playerid]][pTeam]][tName]);
format(string256,256, "*** %s беше назначен за главен лидер на банда/мафия %s ***",pname[playerid],teamName);
SendClientMessageToAll(0xF97804FF, string256);
}
else
{
SendClientMessage(playerid, 0xB4B5B7FF, "Нямаш права за да ползваш командата!");
}
}
else
{
SendClientMessage(playerid,0xB4B5B7FF,"Посоченото ID не е в сървъра!");
}
return 1;
}
if(strcmp(cmd, "/makeleader", true)==0)
{
if (PlayerInfo[playerid][pAdmin] >= 5)
{
tmp=strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /makeleader [playerid] [team 1-22]");
SendClientMessage(playerid, 0xFFFF00FF, "Opitons: 1: VIP, 2: Grove Street Families, 3: Rolling Heights Ballas");
SendClientMessage(playerid, 0xFFFF00FF, "Opitons: 4: Los Santos Vagos, 5: Varrio Los Aztecas, 6: Vinewood Cripz");
SendClientMessage(playerid, 0xFFFF00FF, "Opitons: 7: San Fierro Triads, 8: San Fierro Rifa, 9: Sons Of Anarchy");
SendClientMessage(playerid, 0xFFFF00FF, "Opitons: 10: Da Nang Boys, 11: Italian Mafia, 12: Bounty Hunters");
SendClientMessage(playerid, 0xFFFFFFFF, "Opitons: 13: Los Santos Police Department, 14: Las Venturas Police Department");
SendClientMessage(playerid, 0xFFFFFFFF, "Opitons: 15: Delta Force");
SendClientMessage(playerid, 0xFFFF00FF, "Opitons: 16: Soldier Boys, 17: Yakuza 18: Syndicate Texas, 19: Blood Mafia");
SendClientMessage(playerid, 0xFFFF00FF, "Opitons: 20: MS-13, 21: Bulgarian Mafia, 22: 343 Black Street");
return 1;
}
new level;
para1[playerid]=ReturnUser(tmp);
tmp=strtok(cmdtext, idx);
level=strval(tmp);
if(para1[playerid] != INVALID_PLAYER_ID)
{
if(level<1||level>22)
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /makeleader [playerid] [team 1-22]");
SendClientMessage(playerid, 0xFFFF00FF, "Opitons: 1: VIP, 2: Grove Street Families, 3: Rolling Heights Ballas");
SendClientMessage(playerid, 0xFFFF00FF, "Opitons: 4: Los Santos Vagos, 5: Varrio Los Aztecas, 6: Vinewood Cripz");
SendClientMessage(playerid, 0xFFFF00FF, "Opitons: 7: San Fierro Triads, 8: San Fierro Rifa, 9: Sons Of Anarchy");
SendClientMessage(playerid, 0xFFFF00FF, "Opitons: 10: Da Nang Boys, 11: Italian Mafia, 12: Bounty Hunters");
SendClientMessage(playerid, 0xFFFFFFFF, "Opitons: 13: Los Santos Police Department, 14: Las Venturas Police Department");
SendClientMessage(playerid, 0xFFFFFFFF, "Opitons: 15: Delta Force");
SendClientMessage(playerid, 0xFFFF00FF, "Opitons: 16: Soldier Boys, 17: Yakuza 18: Syndicate Texas, 19: Blood Mafia");
SendClientMessage(playerid, 0xFFFF00FF, "Opitons: 20: MS-13, 21: Bulgarian Mafia, 22: 343 Black Street");
return 1;
}
if(level!=15)
{
PlayerInfo[para1[playerid]][pDFDuty]=0;
}
if(level==15)
{
PlayerInfo[para1[playerid]][pSpecialForce]=1;
}
PlayerInfo[para1[playerid]][pTeam]=level;
PlayerInfo[para1[playerid]][pRank]=6;
PlayerInfo[para1[playerid]][pGLeader]=0;
format(string256,256, "*** %s беше назначен за лидер на банда/мафия %s ***",pname[para1[playerid]],TeamInfo[level][tName]);
SendClientMessageToAll(0xF97804FF, string256);
format(string256, 256, "Ти беше назначен за лидер в %s от %s.",TeamInfo[level][tName],pname[playerid]);
SendClientMessage(para1[playerid], 0xF97804FF, string256);
RestartVIPLaser(playerid); if(PlayerInfo[para1[playerid]][pADuty]==0) RestartPlayerColor(para1[playerid]);
if(PlayerInfo[para1[playerid]][pADuty]==0 && GetPlayerVehicleID(para1[playerid])>0)
{
return SendClientMessage(para1[playerid],0xFFFFFFFF, "* Твоят скин не се смени, защото не си пешеходец *");
}
RestartPlayerSkin(para1[playerid]);
if(PlayerInfo[para1[playerid]][pSpawnO]!=2)
{
PlayerInfo[para1[playerid]][pSpawnO]=2; SendClientMessage(para1[playerid], 0xFFFFFFFF, "SERVER: Твоят spawn беше променен на Faction spawn!");
}
}
else
{
SendClientMessage(playerid,0xB4B5B7FF,"Посоченото ID не е в сървъра!");
}
}
else
{
SendClientMessage(playerid, 0xB4B5B7FF, "Нямаш права за да ползваш командата!");
}
return 1;
}
if(strcmp(cmd, "/dm", true)==0)
{
if(PlayerInfo[playerid][pAFK]> 0)
{
SendClientMessage(playerid, 0xB4B5B7FF, "Ти си в AFK режим и не можеш да се телепортираш!");
return 1;
}
if(PlayerInfo[playerid][pJail]> 0)
{
SendClientMessage(playerid, 0xB4B5B7FF, "Ти си в админ затвора и не можеш да се телепортираш!");
return 1;
}
if(playerInDeathmatch[playerid]==true) return SendClientMessage(playerid,0xB4B5B7FF,"Не можеш да използваш тази команда в момента!");
if(playerInStreetRace[playerid]==true) return SendClientMessage(playerid,0xB4B5B7FF,"Не можеш да използваш тази команда в момента!");
if(PlayerInfo[playerid][pPJail]> 0)
{
SendClientMessage(playerid, 0xB4B5B7FF, "Ти си в затвора и не можеш да се телепортираш!");
return 1;
}
new Float:pHealth;
GetPlayerHealth(playerid,pHealth);
new Float:pArmour;
GetPlayerArmour(playerid,pArmour);
if(pHealth <= 99 && pArmour<=99)
{
SendClientMessage(playerid, 0xB4B5B7FF, "Не можеш да се телепортираш, докато си под 100 жилетка и 100 кръв!");
return 1;
}
SetPlayerPos(playerid, 2391.9109,1038.5081,10.8203);
SetPlayerFacingAngle(playerid,177.0329);
SetPlayerInterior(playerid, 0);
SetPlayerVirtualWorld(playerid, 0);
SendClientMessage(playerid, 0xFFFFFFFF, "Ти успешно се телепортира на DM");
SetCameraBehindPlayer(playerid);
return 1;
}
if(strcmp(cmd, "/dm2", true)==0)
{
if(PlayerInfo[playerid][pAFK]> 0)
{
SendClientMessage(playerid, 0xB4B5B7FF, "Ти си в AFK режим и не можеш да се телепортираш!");
return 1;
}
if(PlayerInfo[playerid][pJail]> 0)
{
SendClientMessage(playerid, 0xB4B5B7FF, "Ти си в админ затвора и не можеш да се телепортираш!");
return 1;
}
if(playerInDeathmatch[playerid]==true) return SendClientMessage(playerid,0xB4B5B7FF,"В момента не можеш да използваш тази команда!");
if(playerInStreetRace[playerid]==true) return SendClientMessage(playerid,0xB4B5B7FF,"В момента не можеш да използваш тази команда!");
if(PlayerInfo[playerid][pPJail]> 0)
{
SendClientMessage(playerid, 0xB4B5B7FF, "Ти си в затвора и не можеш да се телепортираш!");
return 1;
}
new Float:pHealth;
GetPlayerHealth(playerid,pHealth);
new Float:pArmour;
GetPlayerArmour(playerid,pArmour);
if(pHealth <= 99 && pArmour<=99)
{
SendClientMessage(playerid, 0xB4B5B7FF, "Не можеш да се телепортираш, докато си под 100 жилетка и 100 кръв!");
return 1;
}
SetPlayerPos(playerid, 1135.5582,1335.1517,10.8203);
SetPlayerFacingAngle(playerid,177.0329);
SetPlayerInterior(playerid, 0);
SetPlayerVirtualWorld(playerid, 0);
SendClientMessage(playerid, 0xFFFFFFFF, "Ти успешно се телепортира на DM 2");
SetCameraBehindPlayer(playerid);
return 1;
}
if(strcmp(cmd, "/hitman", true)==0)
{
tmp=strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /hitman [playerid] [cash]");
return 1;
}
new level;
para1[playerid]=ReturnUser(tmp);
tmp=strtok(cmdtext, idx);
level=strval(tmp);
if(para1[playerid] != INVALID_PLAYER_ID)
{
if(para1[playerid]==playerid)
{
SendClientMessage(playerid,0xB4B5B7FF,"Не можеш да заложиш пари за себе си !");
return 1;
}
if(level<1000000||level>100000000)
{
SendClientMessage(playerid,0xB4B5B7FF,"Парите трябва да са от 1 000 000 до 100 000 000 !");
return 1;
}
if(level>PlayerInfo[playerid][pCash])
{
SendClientMessage(playerid,0xB4B5B7FF,"Ти нямаш толкова пари !");
return 1;
}
hitmanprice[para1[playerid]]+=level;
hitmanby[para1[playerid]]=playerid;
hitmaner[playerid]=para1[playerid];
GivePlayerCash(playerid,-level);
format(string256, 256, "Hitman: %s заложи $%d за главата на %s", pname[playerid], level,pname[para1[playerid]]);
SendClientMessageToAll(0xA4A400FF, string256);
format(string256, 256, "Hitman: Ти заложи $%d за главата на %s",level, pname[para1[playerid]]);
SendClientMessage(playerid, 0xA4A400FF, string256);
}
else
{
SendClientMessage(playerid,0xB4B5B7FF,"Посоченото ID не е в сървъра!");
}
return 1;
}
/*	if(strcmp(cmd, "/getoffice", true)==0)
{
if (PlayerInfo[playerid][pAdmin] >= 5)
{
tmp=strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /getoffice [playerid]");
return 1;
}
para1[playerid]=ReturnUser(tmp);
if(para1[playerid] != INVALID_PLAYER_ID)
{
if(PlayerInfo[para1[playerid]][pOffice]==0)
{
SendClientMessage(playerid, 0xB4B5B7FF, "Този играч няма офис!");
return 1;
}
PlayerInfo[para1[playerid]][pOffice]=0;
format(string256[playerid], 256, "%s взе твоя офис.", pname[playerid]);
SendClientMessage(para1[playerid], 0x00FF00FF, string256[playerid]);
format(string256[playerid], 256, "Ти взе офиса на %s", pname[para1[playerid]]);
SendClientMessage(playerid, 0x00FF00FF, string256[playerid]);
new stringoffices[21][70];
new offices[64];
format(offices, 64, "/Offices/%d.ini", level);
dini_IntSet(offices,"OwnerC",0);
dini_Set(offices,"Owner","Няма");
for(new alo=0; alo<21; alo++)
{
format(offices, 64, "/Offices/%d.ini", alo);
if(dini_Exists(offices))
{
if(dini_Int(offices,"OwnerC")==0)
{
format(stringoffices[alo],70,"Етаж %d\nПритежател:{FF0000} Няма",alo);
}
if(dini_Int(offices,"OwnerC")==1)
{
format(stringoffices[alo],70,"Етаж %d\nПритежател:{FF0000} %s",alo,dini_Int(offices, "Owner"));
}
}
}
}
else
{
SendClientMessage(playerid,0xB4B5B7FF,"Посоченото ID не е в сървъра!");
}
}
else
{
SendClientMessage(playerid, 0xB4B5B7FF, "Нямаш права за да ползваш командата!");
}
return 1;
}*/
if(strcmp(cmd, "/intron", true)==0)
{
new level;
tmp=strtok(cmdtext, idx);
level=strval(tmp);
introon[playerid]=1;
if(level<1||level>8)
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /intron [1-8]");
return 1;
}
if(level==1)
{
PlayAudioStreamForPlayer(playerid, "http://k003.kiwi6.com/hotlink/rpxqi09ojz/Coolio_-_Gangsta_Paradise.mp3");
}
if(level==2)
{
PlayAudioStreamForPlayer(playerid, "http://k003.kiwi6.com/hotlink/zpk5k464m4/50_Cent_-_Candy_Shop_ft._Olivia-_AudioTrimmer.com_.mp3");
}
if(level==3)
{
PlayAudioStreamForPlayer(playerid, "http://k003.kiwi6.com/hotlink/7bv42eb2nz/Chamillionaire_-_Ridin_ft._Krayzie_Bone-_AudioTrimmer.com_.mp3");
}
if(level==4)
{
PlayAudioStreamForPlayer(playerid, "http://k003.kiwi6.com/hotlink/ogmzy9sjat/Eminem_-_Phenomenal_Lyric_Video_-_AudioTrimmer.com_.mp3");
}
if(level==5)
{
PlayAudioStreamForPlayer(playerid, "http://k003.kiwi6.com/hotlink/8sb17wkrqx/Roy_Jones_Jr._-_Can_t_Be_Touched.mp3");
}
if(level==6)
{
PlayAudioStreamForPlayer(playerid, "http://k003.kiwi6.com/hotlink/7iyf4xb2fz/Tokyo_Drift_-_Teriyaki_Boyz_MUSIC_VIDEO_HD.mp3");
}
if(level==7)
{
PlayAudioStreamForPlayer(playerid, "http://k003.kiwi6.com/hotlink/tcmbazycnr/Usher_-_Yeah_ft._Lil_Jon_Ludacris.mp3");
}
if(level==8)
{
PlayAudioStreamForPlayer(playerid, "http://k003.kiwi6.com/hotlink/vmyupqresi/Wiz_Khalifa_-_Black_And_Yellow_G-Mix_ft._Snoop_Dogg_Juicy_J_and_T-Pain.mp3");
}
SendClientMessage(playerid,0xFFFFFFFF,"Ти пусна песен от интрото!");
return 1;
}
if(strcmp(cmd, "/introff", true)==0)
{
if(introon[playerid]==0) { return SendClientMessage(playerid,0xB4B5B7FF,"Ти не си пуснал песен от интрото!"); }
introon[playerid]=0;
StopAudioStreamForPlayer(playerid); SendClientMessage(playerid,0xFFFFFFFF,"Ти спря песента от интрото!");
return 1;
}
if(strcmp(cmd, "/freevip", true)==0)
{
if (PlayerInfo[playerid][pAdmin] >= 5)
{
if(freevip==0)
{
freevip=1;
format(string256, 256, "* %s активира безплатен VIP Level 6 за всички *", pname[playerid]);
SendClientMessageToAll(0xE65B00FF, string256);
}
else
{
freevip=0;
format(string256, 256, "* %s деактивира безплатния VIP Level 6 за всички *", pname[playerid]);
SendClientMessageToAll(0xE65B00FF, string256);
}
}
else
{
SendClientMessage(playerid, 0xB4B5B7FF, "Нямаш права за да ползваш командата!");
}
return 1;
}
if(strcmp(cmd, "/pay", true) == 0)
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /pay [playerid] [стойност]");
return 1;
}
new giveplayerid = ReturnUser(tmp);
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /pay [playerid] [стойност]");
return 1;
}
new moneys = strval(tmp);
if(moneys < 1 || moneys > 100000000)
{
SendClientMessage(playerid, COLOR_GRAD1, "Парите трябва да са от 1 до 100 000 000.");
return 1;
}
if (IsPlayerConnected(giveplayerid))
{
if (CorDetector(4.0, playerid, giveplayerid))
{
if(PlayerInfo[playerid][pCash]<moneys) return SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш толкова пари!");
GivePlayerCash(playerid, -moneys);
GivePlayerCash(giveplayerid, moneys);
new stringpay[500];
format(stringpay, 500, "{FFFFFF}Ти даде пари на {FFFFFF}%s {FFFFFF}на стойност {40BF00}$%d.", pname[giveplayerid], moneys);
SendClientMessage(playerid, 0xFFFFFFFF, stringpay);
format(stringpay, 500, "{FFFFFF}Ти получи пари на стойност {40BF00}$%d {FFFFFF}от {FFFFFF}%s.", moneys, pname[playerid]);
SendClientMessage(giveplayerid, 0xFFFFFFFF, stringpay);
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Ти не си близо до играчът на който искаш да дадеш пари!");
}
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Посоченото ID не е в сървъра!");
}
return 1;
}
if (strcmp(cmdtext, "/vehelp", true) == 0)
{
SendClientMessage(playerid, 0xFFFF00AA, "{FF9900}/eon {FF0000}| {FF9900}/eoff {000000}- {66FF33}Включване {FF0000}| {66FF33}Изключване на двигателя");
SendClientMessage(playerid, 0xFFFF00AA, "{FF9900}/lon {FF0000}| {FF9900}/loff {000000}- {66FF33}Включване {FF0000}| {66FF33}Изключване на фаровете");
SendClientMessage(playerid, 0xFFFF00AA, "{FF9900}/aon {FF0000}| {FF9900}/aoff {000000}- {66FF33}Включване {FF0000}| {66FF33}Спиране на алармата");
SendClientMessage(playerid, 0xFFFF00AA, "{FF9900}/bontetoon {FF0000}| {FF9900}/bontetooff {000000}- {66FF33}Включване {FF0000}| {66FF33}Спиране на предния капак");
SendClientMessage(playerid, 0xFFFF00AA, "{FF9900}/booton {FF0000}| {FF9900}/bootoff {000000}- {66FF33}Включване {FF0000}| {66FF33}Затваряне на багажника");
return 1;
}
if (strcmp("/jump", cmdtext, true, 10) == 0)
{
if(PlayerInfo[playerid][pAdmin] >= 4)
{
if(PlayerInfo[playerid][pADuty] == 1)
{
if(Jump[playerid] == 1)
{SendClientMessage(playerid, 0xFFFF00FF, "{FFFFFF}SERVER: Ти деактивира Jump Mode!");
Jump[playerid]=0;
return 1;
}
if(Jump[playerid] == 0)
{
SendClientMessage(playerid, 0xFFFF00FF, "{FFFFFF}SERVER: Ти активира Jump Mode!");
Jump[playerid]=1;
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
}
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си ADMIN ON-DUTY!");
}
return 1;
}
}
if (strcmp("/speed", cmdtext, true, 10) == 0)
{
if(PlayerInfo[playerid][pAdmin] >= 4)
{
if(PlayerInfo[playerid][pADuty] == 1)
{
if(PlayerInfo[playerid][pIFCDuty]==1) return SendClientMessage(playerid,0xB4B5B7FF,"Не можеш да използваш тази команда, докато си IFC ON-DUTY!");
if(Speed[playerid] == 1)
{SendClientMessage(playerid, 0xFFFFFFFF, "SERVER: Ти деактивира Speed Mode!");
Speed[playerid]=0;
return 1;
}
if(Speed[playerid] == 0)
{
SendClientMessage(playerid, 0xFFFFFFFF, "SERVER: Ти активира Speed Mode!");
SendClientMessage(playerid, 0xFFFFFFFF, "SERVER: Натисни Лявото копче на мишката(LMB) или Alt, за да използваш Speed мода");
Speed[playerid]=1;
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
}
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си ADMIN ON-DUTY!");
}
return 1;
}
}
if(strcmp(cmd, "/fly", true) == 0)
{
if(PlayerInfo[playerid][pAdmin] >= 4)
{
if(PlayerInfo[playerid][pADuty] == 1)
{
if(PlayerInfo[playerid][pIFCDuty]==1) return SendClientMessage(playerid,0xB4B5B7FF,"Не можеш да използваш тази команда, докато си IFC ON-DUTY!");
tmp = strtok(cmdtext, idx);
if(!strlen(tmp)) { if(fly[playerid] == 1) { fly[playerid] = 0; SendClientMessage(playerid,0xFFFFFFFF,"SERVER: Ти деактивира Fly Mode."); TogglePlayerControllable(playerid,true); return 1; } else if(fly[playerid] == 0) { fly[playerid] = 1; SendClientMessage(playerid,COLOR_YELLOW,"{FFFFFF}SERVER: Ти активира Fly Mode."); TogglePlayerControllable(playerid,false); return 1; } }
if(strcmp(tmp, "on", true) == 0) {
fly[playerid] = 1;
SendClientMessage(playerid,0xFFFFFFFF,"SERVER: Ти активира Fly Mode!");
TogglePlayerControllable(playerid,false);
return 1;
}
else if(strcmp(tmp, "off", true) == 0) {
fly[playerid] = 0;
SendClientMessage(playerid,0xFFFFFFFF,"SERVER: Ти деактивира Fly Mode!");
TogglePlayerControllable(playerid,true);
return 1;
}
}
else
{
SendClientMessage(playerid,COLOR_GRAD1,"Трябва да си ADMIN ON-DUTY!");
}
}
else
{
SendClientMessage(playerid,COLOR_GRAD1,"Нямаш права за да ползваш командата!");
}
return 1;
}
if (strcmp("/eoff", cmdtext, true, 10) == 0)
{
new vehicleid;
vehicleid = GetPlayerVehicleID(playerid);
if(!vehicleid) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да се качиш в превозно средство!");
if(passenger[playerid]==true)
{
SendClientMessage(playerid, COLOR_RED, "Трябва да си шофьор за да спреш двигателя !");
return 1;
}
if(!vehicleid) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да се качиш в превозно средство!");
if(vehicleid==mechanicDutyVehs[0] || vehicleid==mechanicDutyVehs[1] ||vehicleid==mechanicDutyVehs[2]
|| vehicleid==mechanicDutyVehs[3] || vehicleid==mechanicDutyVehs[4] ||vehicleid==mechanicDutyVehs[5]
|| vehicleid==mechanicDutyVehs[6] ||vehicleid==mechanicDutyVehs[7])
{
return SendClientMessage(playerid,0xE60000FF,"Не можеш да спреш двигателя на Tow Truck-а !");
}
if(vehicleid== carpizza[1] || vehicleid== carpizza[2] || vehicleid== carpizza[3] || vehicleid== carpizza[4] || vehicleid== carpizza[5] || vehicleid== carpizza[6] || vehicleid== carpizza[0])
{
SendClientMessage(playerid, 0xE60000FF, "Не можеш да спреш двигателя на превозно средство за работа !");
return 1;
}
if(vehicleid== carboat[1] || vehicleid== carboat[2] || vehicleid== carboat[3] || vehicleid== carboat[4] || vehicleid== carboat[5] || vehicleid== carboat[6] || vehicleid== carboat[0])
{
SendClientMessage(playerid, 0xE60000FF, "Не можеш да спреш двигателя на превозно средство за работа !");
return 1;
}
if(vehicleid== afterwork[0] && PlayerInfo[playerid][pAfterWork]==0
|| vehicleid== afterwork[1] && PlayerInfo[playerid][pAfterWork]==0
|| vehicleid== afterwork[2] && PlayerInfo[playerid][pAfterWork]==0
|| vehicleid== afterwork[3] && PlayerInfo[playerid][pAfterWork]==0
|| vehicleid== afterwork[4] && PlayerInfo[playerid][pAfterWork]==0
|| vehicleid== afterwork[5] && PlayerInfo[playerid][pAfterWork]==0
|| vehicleid== afterwork[6] && PlayerInfo[playerid][pAfterWork]==0
|| vehicleid== afterwork[7] && PlayerInfo[playerid][pAfterWork]==0
|| vehicleid== afterwork[8] && PlayerInfo[playerid][pAfterWork]==0
|| vehicleid== afterwork[9] && PlayerInfo[playerid][pAfterWork]==0
|| vehicleid== afterwork[10] && PlayerInfo[playerid][pAfterWork]==0
|| vehicleid== afterwork[11] && PlayerInfo[playerid][pAfterWork]==0
|| vehicleid== afterwork[12] && PlayerInfo[playerid][pAfterWork]==0
|| vehicleid== afterwork[13] && PlayerInfo[playerid][pAfterWork]==0
|| vehicleid== afterwork[14] && PlayerInfo[playerid][pAfterWork]==0
|| vehicleid== afterwork[15] && PlayerInfo[playerid][pAfterWork]==0
|| vehicleid== afterwork[16] && PlayerInfo[playerid][pAfterWork]==0
|| vehicleid== afterwork[17] && PlayerInfo[playerid][pAfterWork]==0
|| vehicleid== afterwork[18] && PlayerInfo[playerid][pAfterWork]==0
|| vehicleid== afterwork[19] && PlayerInfo[playerid][pAfterWork]==0
|| vehicleid== afterwork[20] && PlayerInfo[playerid][pAfterWork]==0
|| vehicleid== afterwork[21] && PlayerInfo[playerid][pAfterWork]==0
|| vehicleid== afterwork[22] && PlayerInfo[playerid][pAfterWork]==0
|| vehicleid== afterwork[23] && PlayerInfo[playerid][pAfterWork]==0
|| vehicleid== afterwork[24] && PlayerInfo[playerid][pAfterWork]==0
|| vehicleid== afterwork[25] && PlayerInfo[playerid][pAfterWork]==0
|| vehicleid== afterwork[26] && PlayerInfo[playerid][pAfterWork]==0
|| vehicleid== afterwork[27] && PlayerInfo[playerid][pAfterWork]==0
|| vehicleid== afterwork[28] && PlayerInfo[playerid][pAfterWork]==0
|| vehicleid== afterwork[29] && PlayerInfo[playerid][pAfterWork]==0
|| vehicleid== afterwork[30] && PlayerInfo[playerid][pAfterWork]==0
|| vehicleid== afterwork[31] && PlayerInfo[playerid][pAfterWork]==0
|| vehicleid== afterwork[32] && PlayerInfo[playerid][pAfterWork]==0
|| vehicleid== afterwork[33] && PlayerInfo[playerid][pAfterWork]==0
|| vehicleid== afterwork[34] && PlayerInfo[playerid][pAfterWork]==0
|| vehicleid== afterwork[35] && PlayerInfo[playerid][pAfterWork]==0
|| vehicleid== afterwork[36] && PlayerInfo[playerid][pAfterWork]==0
|| vehicleid== afterwork[37] && PlayerInfo[playerid][pAfterWork]==0
|| vehicleid== afterwork[38] && PlayerInfo[playerid][pAfterWork]==0
|| vehicleid== afterwork[39] && PlayerInfo[playerid][pAfterWork]==0
|| vehicleid== afterwork[40] && PlayerInfo[playerid][pAfterWork]==0
|| vehicleid== afterwork[41] && PlayerInfo[playerid][pAfterWork]==0
|| vehicleid== afterwork[42] && PlayerInfo[playerid][pAfterWork]==0)
{
SendClientMessage(playerid, 0xE60000FF, "Не можеш да спреш двигателя на превозно средство за след работа !");
return 1;
}
if(vehicleid== carcoalmine[1] || vehicleid== carcoalmine[2] || vehicleid== carcoalmine[3] || vehicleid== carcoalmine[4] || vehicleid== carcoalmine[5] || vehicleid== carcoalmine[6] || vehicleid== carcoalmine[0])
{
SendClientMessage(playerid, 0xE60000FF, "Не можеш да спреш двигателя на превозно средство за работа !");
return 1;
}
if(vehicleid== carsweeper[1] || vehicleid== carsweeper[2] || vehicleid== carsweeper[3] || vehicleid== carsweeper[4] || vehicleid== carsweeper[5] || vehicleid== carsweeper[6] || vehicleid== carsweeper[0])
{
SendClientMessage(playerid, 0xE60000FF, "Не можеш да спреш двигателя на превозно средство за работа !");
return 1;
}
if(vehicleid== carpilot[1] || vehicleid== carpilot[2] || vehicleid== carpilot[3] || vehicleid== carpilot[4] || vehicleid== carpilot[5] || vehicleid== carpilot[6] || vehicleid== carpilot[0])
{
SendClientMessage(playerid, 0xE60000FF, "Не можеш да спреш двигателя на превозно средство за работа !");
return 1;
}
if(vehicleid== cardeliver[1] || vehicleid== cardeliver[2] || vehicleid== cardeliver[3] || vehicleid== cardeliver[4] || vehicleid== cardeliver[5] || vehicleid== cardeliver[6] || vehicleid== cardeliver[0])
{
SendClientMessage(playerid, 0xE60000FF, "Не можеш да спреш двигателя на превозно средство за работа !");
return 1;
}
if(vehicleid== carbus[1] || vehicleid== carbus[2] || vehicleid== carbus[3] || vehicleid== carbus[4] || vehicleid== carbus[5] || vehicleid== carbus[6] || vehicleid== carbus[0])
{
SendClientMessage(playerid, 0xE60000FF, "Не можеш да спреш двигателя на превозно средство за работа !");
return 1;
}
if(vehicleid== cartruck[1] || vehicleid== cartruck[2] || vehicleid== cartruck[3] || vehicleid== cartruck[4] || vehicleid== cartruck[5] || vehicleid== cartruck[6] || vehicleid== cartruck[0])
{
SendClientMessage(playerid, 0xE60000FF, "Не можеш да спреш двигателя на превозно средство за работа !");
return 1;
}
if(mechanicDuty[playerid] ==0 && vehicleid==mechanicDutyVehs[0] || mechanicDuty[playerid]==0 && vehicleid==mechanicDutyVehs[1] || mechanicDuty[playerid]==0 && vehicleid==mechanicDutyVehs[2]
|| mechanicDuty[playerid] ==0 && vehicleid==mechanicDutyVehs[3] || mechanicDuty[playerid]==0 && vehicleid==mechanicDutyVehs[4] || mechanicDuty[playerid]==0 && vehicleid==mechanicDutyVehs[5]
|| mechanicDuty[playerid] ==0 && vehicleid==mechanicDutyVehs[6] || mechanicDuty[playerid]==0 && vehicleid==mechanicDutyVehs[7])
{
SendClientMessage(playerid, COLOR_RED, "Не можеш да спреш двигателя на Tow Truck-а !");
return 1;
}
new haveprivate=0;
for(new alv=1;alv<MAX_PRIVATEVEHS;alv++)
{
if(strcmp(PrivateVeh[vehicleid][pvOwner], pname[playerid], true)==0)
{
haveprivate=1;
}
if(haveprivate==0)
{
SendClientMessage(playerid, 0xE60000FF, "Не можеш да спреш двигателя на това превозно средство, защото не го притежаваш !");
}
}
format(string, 256, "* Ти изключи двигателят на превозното средство *");
SendClientMessage(playerid, 0x9ACD32FF, string);
ToggleEngine(vehicleid, VEHICLE_PARAMS_OFF);
return 1;
}
if (strcmp("/eon", cmdtext, true, 10) == 0)
{
new vehicleid;
vehicleid = GetPlayerVehicleID(playerid);
if(vehfuel[vehicleid] <= 0)
{
if(!vehicleid) return SendClientMessage(playerid, 0xE60000FF, "Не може да стартира двигателя, превозното средство няма бензин !");
return 1;
}
if(passenger[playerid]==true)
{
SendClientMessage(playerid, COLOR_RED, "Трябва да си шофьор за да пуснеш двигателя !");
return 1;
}
if(vehicleid==mechanicDutyVehs[0] || vehicleid==mechanicDutyVehs[1] ||vehicleid==mechanicDutyVehs[2]
|| vehicleid==mechanicDutyVehs[3] || vehicleid==mechanicDutyVehs[4] ||vehicleid==mechanicDutyVehs[5]
|| vehicleid==mechanicDutyVehs[6] ||vehicleid==mechanicDutyVehs[7])
{
return SendClientMessage(playerid,0xE60000FF,"Не можеш да стартираш двигателя на Tow Truck-а !");
}
if(!vehicleid) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да се качиш в превозно средство!");
if(vehicleid== carpizza[1] || vehicleid== carpizza[2] || vehicleid== carpizza[3] || vehicleid== carpizza[4] || vehicleid== carpizza[5] || vehicleid== carpizza[6] || vehicleid== carpizza[0])
{
SendClientMessage(playerid, 0xE60000FF, "Не можеш да стартираш двигателя на превозно средство за работа !");
return 1;
}
if(vehicleid== carboat[1] || vehicleid== carboat[2] || vehicleid== carboat[3] || vehicleid== carboat[4] || vehicleid== carboat[5] || vehicleid== carboat[6] || vehicleid== carboat[0])
{
SendClientMessage(playerid, 0xE60000FF, "Не можеш да стартираш двигателя на превозно средство за работа !");
return 1;
}
if(vehicleid== afterwork[0] && PlayerInfo[playerid][pAfterWork]==0
|| vehicleid== afterwork[1] && PlayerInfo[playerid][pAfterWork]==0
|| vehicleid== afterwork[2] && PlayerInfo[playerid][pAfterWork]==0
|| vehicleid== afterwork[3] && PlayerInfo[playerid][pAfterWork]==0
|| vehicleid== afterwork[4] && PlayerInfo[playerid][pAfterWork]==0
|| vehicleid== afterwork[5] && PlayerInfo[playerid][pAfterWork]==0
|| vehicleid== afterwork[6] && PlayerInfo[playerid][pAfterWork]==0
|| vehicleid== afterwork[7] && PlayerInfo[playerid][pAfterWork]==0
|| vehicleid== afterwork[8] && PlayerInfo[playerid][pAfterWork]==0
|| vehicleid== afterwork[9] && PlayerInfo[playerid][pAfterWork]==0
|| vehicleid== afterwork[10] && PlayerInfo[playerid][pAfterWork]==0
|| vehicleid== afterwork[11] && PlayerInfo[playerid][pAfterWork]==0
|| vehicleid== afterwork[12] && PlayerInfo[playerid][pAfterWork]==0
|| vehicleid== afterwork[13] && PlayerInfo[playerid][pAfterWork]==0
|| vehicleid== afterwork[14] && PlayerInfo[playerid][pAfterWork]==0
|| vehicleid== afterwork[15] && PlayerInfo[playerid][pAfterWork]==0
|| vehicleid== afterwork[16] && PlayerInfo[playerid][pAfterWork]==0
|| vehicleid== afterwork[17] && PlayerInfo[playerid][pAfterWork]==0
|| vehicleid== afterwork[18] && PlayerInfo[playerid][pAfterWork]==0
|| vehicleid== afterwork[19] && PlayerInfo[playerid][pAfterWork]==0
|| vehicleid== afterwork[20] && PlayerInfo[playerid][pAfterWork]==0
|| vehicleid== afterwork[21] && PlayerInfo[playerid][pAfterWork]==0
|| vehicleid== afterwork[22] && PlayerInfo[playerid][pAfterWork]==0
|| vehicleid== afterwork[23] && PlayerInfo[playerid][pAfterWork]==0
|| vehicleid== afterwork[24] && PlayerInfo[playerid][pAfterWork]==0
|| vehicleid== afterwork[25] && PlayerInfo[playerid][pAfterWork]==0
|| vehicleid== afterwork[26] && PlayerInfo[playerid][pAfterWork]==0
|| vehicleid== afterwork[27] && PlayerInfo[playerid][pAfterWork]==0
|| vehicleid== afterwork[28] && PlayerInfo[playerid][pAfterWork]==0
|| vehicleid== afterwork[29] && PlayerInfo[playerid][pAfterWork]==0
|| vehicleid== afterwork[30] && PlayerInfo[playerid][pAfterWork]==0
|| vehicleid== afterwork[31] && PlayerInfo[playerid][pAfterWork]==0
|| vehicleid== afterwork[32] && PlayerInfo[playerid][pAfterWork]==0
|| vehicleid== afterwork[33] && PlayerInfo[playerid][pAfterWork]==0
|| vehicleid== afterwork[34] && PlayerInfo[playerid][pAfterWork]==0
|| vehicleid== afterwork[35] && PlayerInfo[playerid][pAfterWork]==0
|| vehicleid== afterwork[36] && PlayerInfo[playerid][pAfterWork]==0
|| vehicleid== afterwork[37] && PlayerInfo[playerid][pAfterWork]==0
|| vehicleid== afterwork[38] && PlayerInfo[playerid][pAfterWork]==0
|| vehicleid== afterwork[39] && PlayerInfo[playerid][pAfterWork]==0
|| vehicleid== afterwork[40] && PlayerInfo[playerid][pAfterWork]==0
|| vehicleid== afterwork[41] && PlayerInfo[playerid][pAfterWork]==0
|| vehicleid== afterwork[42] && PlayerInfo[playerid][pAfterWork]==0)
{
SendClientMessage(playerid, 0xE60000FF, "Не можеш да стартираш двигателя на превозно средство за след работа !");
return 1;
}
if(vehicleid== carcoalmine[1] || vehicleid== carcoalmine[2] || vehicleid== carcoalmine[3] || vehicleid== carcoalmine[4] || vehicleid== carcoalmine[5] || vehicleid== carcoalmine[6] || vehicleid== carcoalmine[0])
{
SendClientMessage(playerid, 0xE60000FF, "Не можеш да стартираш двигателя на превозно средство за работа !");
return 1;
}
if(vehicleid== carsweeper[1] || vehicleid== carsweeper[2] || vehicleid== carsweeper[3] || vehicleid== carsweeper[4] || vehicleid== carsweeper[5] || vehicleid== carsweeper[6] || vehicleid== carsweeper[0])
{
SendClientMessage(playerid, 0xE60000FF, "Не можеш да стартираш двигателя на превозно средство за работа !");
return 1;
}
if(vehicleid== carpilot[1] || vehicleid== carpilot[2] || vehicleid== carpilot[3] || vehicleid== carpilot[4] || vehicleid== carpilot[5] || vehicleid== carpilot[6] || vehicleid== carpilot[0])
{
SendClientMessage(playerid, 0xE60000FF, "Не можеш да стартираш двигателя на превозно средство за работа !");
return 1;
}
if(vehicleid== cardeliver[1] || vehicleid== cardeliver[2] || vehicleid== cardeliver[3] || vehicleid== cardeliver[4] || vehicleid== cardeliver[5] || vehicleid== cardeliver[6] || vehicleid== cardeliver[0])
{
SendClientMessage(playerid, 0xE60000FF, "Не можеш да стартираш двигателя на превозно средство за работа !");
return 1;
}
if(vehicleid== carbus[1] || vehicleid== carbus[2] || vehicleid== carbus[3] || vehicleid== carbus[4] || vehicleid== carbus[5] || vehicleid== carbus[6] || vehicleid== carbus[0])
{
SendClientMessage(playerid, 0xE60000FF, "Не можеш да стартираш двигателя на превозно средство за работа !");
return 1;
}
if(vehicleid== cartruck[1] || vehicleid== cartruck[2] || vehicleid== cartruck[3] || vehicleid== cartruck[4] || vehicleid== cartruck[5] || vehicleid== cartruck[6] || vehicleid== cartruck[0])
{
SendClientMessage(playerid, 0xE60000FF, "Не можеш да стартираш двигателя на превозно средство за работа !");
return 1;
}
if(mechanicDuty[playerid] ==0 && vehicleid==mechanicDutyVehs[0] || mechanicDuty[playerid]==0 && vehicleid==mechanicDutyVehs[1] || mechanicDuty[playerid]==0 && vehicleid==mechanicDutyVehs[2]
|| mechanicDuty[playerid] ==0 && vehicleid==mechanicDutyVehs[3] || mechanicDuty[playerid]==0 && vehicleid==mechanicDutyVehs[4] || mechanicDuty[playerid]==0 && vehicleid==mechanicDutyVehs[5]
|| mechanicDuty[playerid] ==0 && vehicleid==mechanicDutyVehs[6] || mechanicDuty[playerid]==0 && vehicleid==mechanicDutyVehs[7])
{
SendClientMessage(playerid, COLOR_RED, "Не можеш да стартираш двигателя на Tow Truck-а !");
return 1;
}
new haveprivate=0;
for(new alv=1;alv<MAX_PRIVATEVEHS;alv++)
{
if(strcmp(PrivateVeh[vehicleid][pvOwner], pname[playerid], true)==0)
{
haveprivate=1;
}
if(haveprivate==0)
{
SendClientMessage(playerid, 0xE60000FF, "Не можеш да стартираш двигателя на това превозно средство, защото не го притежаваш !");
}
}
format(string, 256, "* Ти включи двигателят на превозното средство *");
SendClientMessage(playerid, 0x9ACD32FF, string);
ToggleEngine(vehicleid, VEHICLE_PARAMS_ON);
return 1;
}
if (strcmp("/alarmoff", cmdtext, true, 10) == 0)
{
new vehicleid;
vehicleid = GetPlayerVehicleID(playerid);
if(!vehicleid) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да се качиш в превозно средство!");
format(string, 256, "* Ти изключи алармата на превозното средство *");
SendClientMessage(playerid, 0x9ACD32FF, string);
ToggleAlarm(vehicleid, VEHICLE_PARAMS_OFF);
return 1;
}
if (strcmp("/alarmon", cmdtext, true, 10) == 0)
{
new vehicleid;
vehicleid = GetPlayerVehicleID(playerid);
if(!vehicleid) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да се качиш в превозно средство!");
format(string, 256, "* Ти включи алармата на превозното средство *");
SendClientMessage(playerid, 0x9ACD32FF, string);
ToggleAlarm(vehicleid, VEHICLE_PARAMS_ON);
return 1;
}
if (strcmp("/bonnetoff", cmdtext, true, 10) == 0)
{
new vehicleid;
vehicleid = GetPlayerVehicleID(playerid);
if(!vehicleid) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да се качиш в превозно средство!");
format(string, 256, "* Ти отвори капака на превозното средство *");
SendClientMessage(playerid, 0x9ACD32FF, string);
ToggleBonnet(vehicleid, VEHICLE_PARAMS_OFF);
return 1;
}
if (strcmp("/bonneton", cmdtext, true, 10) == 0)
{
new vehicleid;
vehicleid = GetPlayerVehicleID(playerid);
if(!vehicleid) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да се качиш в превозно средство!");
format(string, 256, "* Ти затвори капака на превозното средство *");
SendClientMessage(playerid, 0x9ACD32FF, string);
ToggleBonnet(vehicleid, VEHICLE_PARAMS_ON);
return 1;
}
if (strcmp("/loff", cmdtext, true, 10) == 0)
{
new vehicleid;
vehicleid = GetPlayerVehicleID(playerid);
if(!vehicleid) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да се качиш в превозно средство!");
format(string, 256, "* Ти изключи фаровете на превозното средство *");
SendClientMessage(playerid, 0x9ACD32FF, string);
ToggleLights(vehicleid, VEHICLE_PARAMS_OFF);
return 1;
}
if (strcmp("/lon", cmdtext, true, 10) == 0)
{
new vehicleid;
vehicleid = GetPlayerVehicleID(playerid);
if(!vehicleid) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да се качиш в превозно средство!");
format(string, 256, "* Ти включи фаровете на превозното средство *");
SendClientMessage(playerid, 0x9ACD32FF, string);
ToggleLights(vehicleid, VEHICLE_PARAMS_ON);
return 1;
}
if (strcmp("/bootoff", cmdtext, true, 10) == 0)
{
new vehicleid;
vehicleid = GetPlayerVehicleID(playerid);
if(!vehicleid) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да се качиш в превозно средство!");
format(string, 256, "* Ти затвори багажника на превозното средство *");
SendClientMessage(playerid, 0x9ACD32FF, string);
ToggleBoot(vehicleid, VEHICLE_PARAMS_OFF);
return 1;
}
if (strcmp("/booton", cmdtext, true, 10) == 0)
{
new vehicleid;
vehicleid = GetPlayerVehicleID(playerid);
if(!vehicleid) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да се качиш в превозно средство!");
format(string, 256, "* Ти отвори багажника на превозното средство *");
SendClientMessage(playerid, 0x9ACD32FF, string);
ToggleBoot(vehicleid, VEHICLE_PARAMS_ON);
return 1;
}
if(strcmp(cmd, "/leaveifc", true)==0)
{
new length = strlen(cmdtext);
while ((idx < length) && (cmdtext[idx] <= ' '))
{
idx++;
}
new offset = idx;
new result[256];
while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
{
result[idx - offset] = cmdtext[idx];
idx++;
}
result[idx - offset] = EOS;
if(!strlen(result))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /leaveifc [confirm]");
return 1;
}
if(strcmp(result, "confirm", true) != 0)
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /leaveifc [confirm]");
return 1;
}
if (PlayerInfo[playerid][pIFC] == 1)
{
PlayerInfo[playerid][pIFC]=0;
format(string256, 256, "* %s ти напусна Intense Fuel Company *", pname[playerid]);
SendClientMessage(playerid, 0xA4FFA4FF, string256);
if(IsPlayerInAnyVehicle(playerid) == 1 && PlayerInfo[playerid][pADuty]==0 && PlayerInfo[playerid][pIFCDuty]==1) SendClientMessage(playerid,0xFFFFFFFF, "* Твоят скин не се смени, защото не си пешеходец *");
if(IsPlayerInAnyVehicle(playerid) == 0 && PlayerInfo[playerid][pADuty]==0 && PlayerInfo[playerid][pIFCDuty]==1) SetPlayerSkin(playerid,spawnselectedskin[playerid]);
if(PlayerInfo[playerid][pSpawnO]==3)
{
PlayerInfo[playerid][pSpawnO]=2;
PlayerInfo[playerid][pIFCDuty]=0;
SendClientMessage(playerid, 0xFFFFFFFF, "SERVER: Твоят spawn беше променен на Faction spawn!");
}
}
else
{
SendClientMessage(playerid, 0xB4B5B7FF, "Трябва да си член на Intense Fuel Company!");
}
return 1;
}
if(strcmp(cmd, "/getifc", true)==0)
{
if (PlayerInfo[playerid][pAdmin] >= 5)
{
tmp=strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /getifc [playerid]");
return 1;
}
para1[playerid]=ReturnUser(tmp);
if(PlayerInfo[para1[playerid]][pIFC]==0) return SendClientMessage(playerid, 0xB4B5B7FF, "Този играч не е член на IFC!");
PlayerInfo[para1[playerid]][pIFC]=0;
format(string256, 256, "* %s те махна от Intense Fuel Company *", pname[playerid]);
SendClientMessage(para1[playerid], 0xA4FFA4FF, string256);
if(IsPlayerInAnyVehicle(para1[playerid]) == 1 && PlayerInfo[para1[playerid]][pADuty]==0) SendClientMessage(para1[playerid],0xFFFFFFFF, "* Твоят скин не се смени, защото не си пешеходец *");
if(IsPlayerInAnyVehicle(para1[playerid]) == 0 && PlayerInfo[para1[playerid]][pADuty]==0) SetPlayerSkin(para1[playerid],spawnselectedskin[para1[playerid]]);
if(PlayerInfo[para1[playerid]][pSpawnO]==3)
{
PlayerInfo[para1[playerid]][pSpawnO]=2;
PlayerInfo[para1[playerid]][pIFCDuty]=0;
SendClientMessage(para1[playerid], 0xFFFFFFFF, "SERVER: Твоят spawn беше променен на Faction spawn!");
}
format(string256, 256, "* Ти махна %s от Intense Fuel Company *", pname[para1[playerid]]);
SendClientMessage(playerid, 0xA4FFA4FF, string256);
}
else
{
SendClientMessage(playerid, 0xB4B5B7FF, "Нямаш права за да ползваш командата!");
}
return 1;
}
if(strcmp(cmd, "/makeifc", true)==0)
{
if (PlayerInfo[playerid][pAdmin] >= 5)
{
tmp=strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /makeifc [playerid]");
return 1;
}
para1[playerid]=ReturnUser(tmp);
if(PlayerInfo[para1[playerid]][pIFC]==1) return SendClientMessage(playerid, 0xB4B5B7FF, "Този играч е член на IFC!");
PlayerInfo[para1[playerid]][pIFC]=1;
format(string256, 256, "* %s те направи член на Intense Fuel Company, поздравления *", pname[playerid]);
SendClientMessage(para1[playerid], 0xA4FFA4FF, string256);
format(string256, 256, "* Ти направи %s член на Intense Fuel Company *", pname[para1[playerid]]);
SendClientMessage(playerid, 0xA4FFA4FF, string256);
}
else
{
SendClientMessage(playerid, 0xB4B5B7FF, "Нямаш права за да ползваш командата!");
}
return 1;
}
if(strcmp(cmd, "/makevip", true)==0)
{
if (PlayerInfo[playerid][pAdmin] >= 5)
{
tmp=strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /makevip [playerid] [level 1-6]");
return 1;
}
new level;
para1[playerid]=ReturnUser(tmp);
tmp=strtok(cmdtext, idx);
level=strval(tmp);
if(para1[playerid] != INVALID_PLAYER_ID)
{
if(level<1||level>6)
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /makevip [playerid] [level 1-6]");
return 1;
}
PlayerInfo[para1[playerid]][pVip]=level;
format(string256, 256, "* %s те направи %d VIP левел, поздравления *", pname[playerid], level);
SendClientMessage(para1[playerid], 0xE65B00FF, string256);
format(string256, 256, "* Ти направи %s VIP левел %d *", pname[para1[playerid]],level);
SendClientMessage(playerid, 0xE65B00FF, string256);
if(level<2)
{
PlayerInfo[playerid][pInfiniteNos] = 0;
if(IsPlayerInAnyVehicle(playerid))
{
AddVehicleComponent(GetPlayerVehicleID(playerid),1008);
}
}
if(level>3)
{
if(PlayerInfo[para1[playerid]][pTeam]==FACTION_VIP)
{
PlayerInfo[para1[playerid]][pLaser]=1;
SetPVarInt(para1[playerid], "color", 18643);
}
if(PlayerInfo[para1[playerid]][pTeam]==FACTION_GROVE)
{
PlayerInfo[para1[playerid]][pLaser]=1;
SetPVarInt(para1[playerid], "color", 19083);
}
if(PlayerInfo[para1[playerid]][pTeam]==13 || PlayerInfo[para1[playerid]][pTeam]==FACTION_LVPD)
{
PlayerInfo[para1[playerid]][pLaser]=1;
SetPVarInt(para1[playerid], "color", 19080);
}
if(PlayerInfo[para1[playerid]][pTeam]==FACTION_RIFA)
{
PlayerInfo[para1[playerid]][pLaser]=1;
SetPVarInt(para1[playerid], "color", 19080);
}
if(PlayerInfo[para1[playerid]][pTeam]==FACTION_DELTAFORCE)
{
SetPVarInt(para1[playerid], "color", 19084);
}
}
else
{
SetPVarInt(para1[playerid], "color", 0);
}
}
else
{
SendClientMessage(playerid,0xB4B5B7FF,"Посоченото ID не е в сървъра!");
}
}
else
{
SendClientMessage(playerid, 0xB4B5B7FF, "Нямаш права за да ползваш командата!");
}
return 1;
}
if(strcmp(cmd, "/giveep", true)==0)
{
if (PlayerInfo[playerid][pAdmin] >= 5)
{
tmp=strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /giveep [playerid] [ep]");
return 1;
}
new level;
para1[playerid]=ReturnUser(tmp);
tmp=strtok(cmdtext, idx);
level=strval(tmp);
if(para1[playerid] != INVALID_PLAYER_ID)
{
if(level<1)
{
SendClientMessage(playerid, 0xB4B5B7FF, "Числото трябва да е по-голямо от 0!");
return 1;
}
if(startedevent==0) return SendClientMessage(playerid, 0xB4B5B7FF, "В момента няма евент!");
if(startedevent<2) return  SendClientMessage(playerid, 0xB4B5B7FF, "Евентът е без награда!");
if(inevent[para1[playerid]]==1) return SendClientMessage(playerid, 0xB4B5B7FF, "Играчът не е от евента!");
GivePlayerEP(para1[playerid],level);
format(string115, 115, "ADMIN: %s даде %d EP на %s",pname[playerid],level,pname[para1[playerid]]);
SendClientMessageToAll(0xE60000FF,string115);
}
else
{
SendClientMessage(playerid,0xB4B5B7FF,"Посоченото ID не е в сървъра!");
}
}
else
{
SendClientMessage(playerid, 0xB4B5B7FF, "Нямаш права за да ползваш командата!");
}
return 1;
}
if(strcmp(cmd, "/agiveep", true)==0)
{
if (PlayerInfo[playerid][pAdmin] >= 5)
{
tmp=strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /agiveep [playerid] [ep]");
return 1;
}
new level;
para1[playerid]=ReturnUser(tmp);
tmp=strtok(cmdtext, idx);
level=strval(tmp);
if(para1[playerid] != INVALID_PLAYER_ID)
{
if(level<1)
{
SendClientMessage(playerid, 0xB4B5B7FF, "Числото трябва да е по-голямо от 0!");
return 1;
}
GivePlayerEP(para1[playerid],level);
format(string115, 115, "* Ти даде %d EP на %s *",level,pname[para1[playerid]]);
SendClientMessage(playerid, 0xFFFFFFFF,string115);
format(string115, 115, "* %s ти даде %d EP *",pname[playerid],level);
SendClientMessage(para1[playerid], 0xFFFF00FF,string115);
}
else
{
SendClientMessage(playerid,0xB4B5B7FF,"Посоченото ID не е в сървъра!");
}
}
else
{
SendClientMessage(playerid, 0xB4B5B7FF, "Нямаш права за да ползваш командата!");
}
return 1;
}
if(strcmp(cmd, "/givees", true)==0)
{
if (PlayerInfo[playerid][pAdmin] >= 5)
{
tmp=strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /givees [playerid] [ep skill]");
return 1;
}
new level;
para1[playerid]=ReturnUser(tmp);
tmp=strtok(cmdtext, idx);
level=strval(tmp);
if(para1[playerid] != INVALID_PLAYER_ID)
{
if(level<1)
{
SendClientMessage(playerid, 0xB4B5B7FF, "Числото трябва да е по-голямо от 0!");
return 1;
}
GivePlayerEPS(para1[playerid],level);
format(string115, 115, "* Ти увеличи EP Skill с %d на %s *",level,pname[para1[playerid]]);
SendClientMessage(playerid, 0xFFFFFFFF,string115);
if(level==1)
{
format(string115, 115, "* %s ти даде %d EP Skill *",pname[playerid],level);
SendClientMessage(para1[playerid], 0xFFFF00FF,string115); }
if(level>1)
{
format(string115, 115, "* %s ти даде %d EP Skills *",pname[playerid],level);
SendClientMessage(para1[playerid], 0xFFFF00FF,string115);
}
}
else
{
SendClientMessage(playerid,0xB4B5B7FF,"Посоченото ID не е в сървъра!");
}
}
else
{
SendClientMessage(playerid, 0xB4B5B7FF, "Нямаш права за да ползваш командата!");
}
return 1;
}
if(strcmp(cmd, "/saveserver", true)==0)
{
if (PlayerInfo[playerid][pAdmin] >= 5)
{
new accountfiles[115]; new teams[64];
format(accountfiles, 115, "%s.ini", pname[playerid]);
SendClientMessageToAll( 0xE60000FF, "SERVER: - SAVE: Цялата статистика за сървъра в момента се ЗАПАМЕТЯВА АВТОМАТИЧНО!");
SendClientMessageToAll( 0xE60000FF, "SERVER: В момента всичко за акаунтите/къщите/бизнесите се запаметява!");
SendClientMessageToAll( 0xE60000FF, "SERVER: Докато всичко се запаметява сървъра ще изглежда че все едно не работи!");
SendClientMessageToAll(  0xE60000FF, "SERVER: Няма да можете да правите нищо в сървъра, но това е само докато нещата се запаметят!");
SendClientMessageToAll( 0xE60000FF, "SERVER: Моля,изчакайте докато всичко се запамети!");
for(new i; i<MAX_PLAYERS; i++)
{
SavePlayerStats(i);
}
SendClientMessageToAll( 0xE60000FF, "SERVER: Всичко се запамети успешно, благодарим за вашето търпение!");
}
else
{
SendClientMessage(playerid, 0xB4B5B7FF, "Нямаш права за да ползваш командата!");
}
return 1;
}
if(strcmp(cmd, "/setepskill", true)==0)
{
if (PlayerInfo[playerid][pAdmin] >= 5)
{
tmp=strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /setepskill [playerid] [ep]");
return 1;
}
new level;
para1[playerid]=ReturnUser(tmp);
tmp=strtok(cmdtext, idx);
level=strval(tmp);
if(para1[playerid] != INVALID_PLAYER_ID)
{
PlayerInfo[para1[playerid]][pEPS]=level;
ActualizeDownStats(playerid);
format(string115, 115, "* Ти сложи EP Skill на %s да е %d *",pname[para1[playerid]],level);
SendClientMessage(playerid, 0xFFFFFFFF,string115);
format(string115, 115, "* %s сложи твоят EP Skill да е %d *",pname[playerid],level);
SendClientMessage(para1[playerid], 0xFFFF00FF,string115);
}
else
{
SendClientMessage(playerid,0xB4B5B7FF,"Посоченото ID не е в сървъра!");
}
}
else
{
SendClientMessage(playerid, 0xB4B5B7FF, "Нямаш права за да ползваш командата!");
}
return 1;
}
if(strcmp(cmd, "/setcash", true)==0)
{
if (PlayerInfo[playerid][pAdmin] >= 5)
{
tmp=strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /setcash [playerid] [cash]");
return 1;
}
new level;
para1[playerid]=ReturnUser(tmp);
tmp=strtok(cmdtext, idx);
level=strval(tmp);
if(para1[playerid] != INVALID_PLAYER_ID)
{
PlayerInfo[para1[playerid]][pCash]=level;
GivePlayerCash(para1[playerid],0);
format(string115, 115, "* Ти сложи парите на %s да са $%d *",pname[para1[playerid]],level);
SendClientMessage(playerid, 0xFFFFFFFF,string115);
format(string115, 115, "* %s сложи твоите пари да са $%d *",pname[playerid],level);
SendClientMessage(para1[playerid], 0xFFFF00FF,string115);
}
else
{
SendClientMessage(playerid,0xB4B5B7FF,"Посоченото ID не е в сървъра!");
}
}
else
{
SendClientMessage(playerid, 0xB4B5B7FF, "Нямаш права за да ползваш командата!");
}
return 1;
}
if(strcmp(cmd, "/takemoney", true)==0)
{
if (PlayerInfo[playerid][pAdmin] >= 5)
{
tmp=strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /takemoney [playerid] [cash]");
return 1;
}
new level;
para1[playerid]=ReturnUser(tmp);
tmp=strtok(cmdtext, idx);
level=strval(tmp);
if(para1[playerid] != INVALID_PLAYER_ID)
{
if(level<1)
{
SendClientMessage(playerid, 0xB4B5B7FF, "Парите трябва да са по-големи от 0!");
return 1;
}
GivePlayerCash(para1[playerid],-level);
format(string115, 115, "* Ти взе $%d от %s *",level,pname[para1[playerid]]);
SendClientMessage(playerid, 0xFFFFFFFF,string115);
format(string115, 115, "* %s ти взе $%d *",pname[playerid],level);
SendClientMessage(para1[playerid], 0xFFFF00FF,string115);
}
else
{
SendClientMessage(playerid,0xB4B5B7FF,"Посоченото ID не е в сървъра!");
}
}
else
{
SendClientMessage(playerid, 0xB4B5B7FF, "Нямаш права за да ползваш командата!");
}
return 1;
}
if(strcmp(cmd, "/givecash", true)==0)
{
if (PlayerInfo[playerid][pAdmin] >= 5)
{
tmp=strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /givecash [playerid] [cash]");
return 1;
}
new level;
para1[playerid]=ReturnUser(tmp);
tmp=strtok(cmdtext, idx);
level=strval(tmp);
if(para1[playerid] != INVALID_PLAYER_ID)
{
if(level<1)
{
SendClientMessage(playerid, 0xB4B5B7FF, "Парите трябва да са по-големи от 0!");
return 1;
}
GivePlayerCash(para1[playerid],level);
format(string115, 115, "* Ти даде $%d на %s *",level,pname[para1[playerid]]);
SendClientMessage(playerid, 0xFFFFFFFF,string115);
format(string115, 115, "* %s ти даде $%d *",pname[playerid],level);
SendClientMessage(para1[playerid], 0xFFFF00FF,string115);
}
else
{
SendClientMessage(playerid,0xB4B5B7FF,"Посоченото ID не е в сървъра!");
}
}
else
{
SendClientMessage(playerid, 0xB4B5B7FF, "Нямаш права за да ползваш командата!");
}
return 1;
}
if(strcmp(cmd, "/giveep", true)==0)
{
if (PlayerInfo[playerid][pEvent] == 1)
{
tmp=strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /giveep [playerid] [level]");
return 1;
}
new level;
para1[playerid]=ReturnUser(tmp);
tmp=strtok(cmdtext, idx);
level=strval(tmp);
if(para1[playerid] != INVALID_PLAYER_ID)
{
if(level<1 || level>10)
{
SendClientMessage(playerid, 0xB4B5B7FF, "EP трябва да е по-голямо от 0 и по-малко от 10!");
return 1;
}
if(inevent[playerid]==0) return SendClientMessage(playerid, 0xB4B5B7FF, "Този играч не е от евента!");
PlayerInfo[para1[playerid]][pEP]+=level;
GivePlayerEP(para1[playerid], level);
format(string115, 115, "* Ти увеличи с %d левела на %s *",level,pname[para1[playerid]]);
SendClientMessage(playerid, 0xFFFFFFFF,string115);
if(level>1)
{
format(string115, 115, "* %s ти даде %d EP *",pname[playerid],level);
SendClientMessage(para1[playerid], 0xFFFF00FF,string115); }
if(level==1)
{
format(string115, 115, "* %s ти даде %d EP *",pname[playerid],level);
SendClientMessage(para1[playerid], 0xFFFF00FF,string115); }
}
else
{
SendClientMessage(playerid,0xB4B5B7FF,"Посоченото ID не е в сървъра!");
}
}
else
{
SendClientMessage(playerid, 0xB4B5B7FF, "Нямаш права за да ползваш командата!");
}
return 1;
}
if(strcmp(cmd, "/givelevel", true)==0)
{
if (PlayerInfo[playerid][pAdmin] >= 5)
{
tmp=strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /givelevel [playerid] [level]");
return 1;
}
new level;
para1[playerid]=ReturnUser(tmp);
tmp=strtok(cmdtext, idx);
level=strval(tmp);
if(para1[playerid] != INVALID_PLAYER_ID)
{
if(level<1)
{
SendClientMessage(playerid, 0xB4B5B7FF, "Левелът трябва да е по-голям от 0!");
return 1;
}
GivePlayerLevel(para1[playerid],level);
SetPlayerScore(para1[playerid], PlayerInfo[playerid][pLevel]);
format(string115, 115, "* Ти увеличи с %d левела на %s *",level,pname[para1[playerid]]);
SendClientMessage(playerid, 0xFFFFFFFF,string115);
if(level>1)
{
format(string115, 115, "* %s ти даде %d левела *",pname[playerid],level);
SendClientMessage(para1[playerid], 0xFFFF00FF,string115); }
if(level==1)
{
format(string115, 115, "* %s ти даде %d левел *",pname[playerid],level);
SendClientMessage(para1[playerid], 0xFFFF00FF,string115); }
}
else
{
SendClientMessage(playerid,0xB4B5B7FF,"Посоченото ID не е в сървъра!");
}
}
else
{
SendClientMessage(playerid, 0xB4B5B7FF, "Нямаш права за да ползваш командата!");
}
return 1;
}
if(strcmp(cmd, "/lotto", true)==0)
{
tmp=strtok(cmdtext, idx);
new level=strval(tmp);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /lotto [1-100]");
return 1;
}
if(level<1||level>100)
{
SendClientMessage(playerid, 0xB4B5B7FF, "Числата в лотарията трябва да са от 1 до 100!");
return 1;
}
if(lottonumber[playerid]!=0)
{
SendClientMessage(playerid, 0xB4B5B7FF, "Не можеш да заложиш повече от веднъж на лотарията!");
return 1;
}
if(PlayerInfo[playerid][pCash]<200)
{
SendClientMessage(playerid, 0xB4B5B7FF, "Трябват ти поне $200 за да заложиш на тото!");
return 1;
}
format(string256, 256, "Ти закупи фиш и числото на което заложи е %d.", level);
SendClientMessage(playerid, 0xFF00FFFF, string256);
format(string256, 256, "Тегленето на лотарията ще бъде в %d:59 часа. Джакпотът е $%d!",hours , lottowin);
SendClientMessage(playerid, 0xFF00FFFF, string256);
GivePlayerCash(playerid,-200);
lottonumber[playerid]=level;
return 1;
}
if(strcmp(cmd, "/lastonline", true) == 0)
{
if (PlayerInfo[playerid][pAdmin] >= 3)
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /lastonline [ID на играч]");
return 1;
}
para1[playerid] = ReturnUser(tmp);
if(para1[playerid] != INVALID_PLAYER_ID)
{
new nameofmounth[15];
if(PlayerInfo[para1[playerid]][pMonth]==1) { nameofmounth="Януари"; }
else if(PlayerInfo[para1[playerid]][pMonth]==2) { nameofmounth="февруари"; }
else if(PlayerInfo[para1[playerid]][pMonth]==3) { nameofmounth="Март"; }
else if(PlayerInfo[para1[playerid]][pMonth]==4) { nameofmounth="Април"; }
else if(PlayerInfo[para1[playerid]][pMonth]==5) { nameofmounth="Май"; }
else if(PlayerInfo[para1[playerid]][pMonth]==6) { nameofmounth="Юни"; }
else if(PlayerInfo[para1[playerid]][pMonth]==7) { nameofmounth="Юли"; }
else if(PlayerInfo[para1[playerid]][pMonth]==8) { nameofmounth="Август"; }
else if(PlayerInfo[para1[playerid]][pMonth]==9) { nameofmounth="Септември"; }
else if(PlayerInfo[para1[playerid]][pMonth]==10) { nameofmounth="Октомври"; }
else if(PlayerInfo[para1[playerid]][pMonth]==11) { nameofmounth="Ноември"; }
else if(PlayerInfo[para1[playerid]][pMonth]==12) { nameofmounth="Декември"; }
new string2562[256];
new noonline=0;
if(PlayerInfo[para1[playerid]][pRegistred]==0)
{
SendClientMessage(playerid, 0x00E600FF,"Този играч не е влязъл в профила си!");
return 1;
}
if(PlayerInfo[para1[playerid]][pMonth]==0)
{
noonline=1;
}
if(noonline==1)
{
SendClientMessage(playerid, 0x00E600FF,"В този профил е влизано за пръв път!");
return 1;
}
format(string2562,256,"В акаунта %s е влизано последно на %d.%d.%d г. в %d:%d:%d часа!",pname[para1[playerid]],PlayerInfo[para1[playerid]][pYear], PlayerInfo[para1[playerid]][pDay],PlayerInfo[para1[playerid]][pMonth], PlayerInfo[para1[playerid]][pHours], PlayerInfo[para1[playerid]][pMinutes] ,PlayerInfo[para1[playerid]][pSeconds]);
SendClientMessage(playerid, 0x00E600FF,string2562);
}
else
{
SendClientMessage(playerid,COLOR_GRAD1,"Този играч, който сте въвели не в онлайн в момента");
}
}
else
{
SendClientMessage(playerid,0xB4B5B7FF,"Нямаш права за да ползваш командата!");
}
return 1;
}
if(strcmp(cmd, "/tog", true) == 0)
{
tmp = strtok(cmdtext, idx);
new tmp2=strval(tmp);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /tog [chat number]");
SendClientMessage(playerid, 0xFFFF00FF, "Chat Numbers: 1: Global, 2: Admin, 3: Test Admin, 4: Faction, 5: Leader");
return 1;
}
if(tmp2<1||tmp2>5)
{
SendClientMessage(playerid,0xB4B5B7FF,"Тази опция не съществува!");
}
if(tmp2==1)
{
if(togchat[playerid]==0)
{
SendClientMessage(playerid, 0xFFFFFFFF, "SERVER: Сега няма да можеш да виждаш какво пишат в главния чат!");
togchat[playerid]=1;
}
else
{
SendClientMessage(playerid, 0xFFFFFFFF, "SERVER: Сега ще можеш да виждаш какво пишат в главния чат!");
togchat[playerid]=0;
}
}
if(tmp2==2)
{
if(PlayerInfo[playerid][pAdmin]==0) return SendClientMessage(playerid,0xB4B5B7FF,"Нямаш права за да ползваш командата!");
if(PlayerInfo[playerid][pAHide]==0)
{
SendClientMessage(playerid, 0xFFFFFFFF, "SERVER: Сега няма да можеш да виждаш какво пишат в ADMIN чата!");
PlayerInfo[playerid][pAHide]=1;
}
else
{
SendClientMessage(playerid, 0xFFFFFFFF, "SERVER: Сега ще можеш да виждаш какво пишат в ADMIN чата!");
PlayerInfo[playerid][pAHide]=0;
}
}
if(tmp2==3)
{
if(PlayerInfo[playerid][pTest]==0) return SendClientMessage(playerid,0xB4B5B7FF,"Нямаш права за да ползваш командата!");
if(PlayerInfo[playerid][pAHide]==0)
{
SendClientMessage(playerid, 0xFFFFFFFF, "SERVER: Сега няма да можеш да виждаш какво пишат в TEST ADMIN чата!");
PlayerInfo[playerid][pAHide]=1;
}
else
{
SendClientMessage(playerid, 0xFFFFFFFF, "SERVER: Сега ще можеш да виждаш какво пишат в TEST ADMIN чата!");
PlayerInfo[playerid][pAHide]=0;
}
}
if(tmp2==4)
{
if(PlayerInfo[playerid][pTeam]==FACTION_CIVILIAN) return SendClientMessage(playerid,0xB4B5B7FF,"Ти не си в банда/мафия!");
if(PlayerInfo[playerid][pTogFaction]==0)
{
SendClientMessage(playerid, 0x33CCFFFF, "SERVER: Сега няма да виждаш какво пишат във FACTION чата!");
PlayerInfo[playerid][pTogFaction]=1;
}
else
{
SendClientMessage(playerid, 0x33CCFFFF, "SERVER: Сега ще виждаш какво пишат във FACTION чата!");
PlayerInfo[playerid][pTogFaction]=0;
}
}
if(tmp2==5)
{
if(PlayerInfo[playerid][pRank]<6) return SendClientMessage(playerid,0xB4B5B7FF,"Нямаш права за да ползваш командата!");
if(PlayerInfo[playerid][pTogLeader]==0)
{
SendClientMessage(playerid, 0xD9CCC8FF, "SERVER: Сега няма да виждаш какво пишат във LEADER чата!");
PlayerInfo[playerid][pTogLeader]=1;
}
else
{
SendClientMessage(playerid, 0xD9CCC8FF, "SERVER: Сега ще виждаш какво пишат във LEADER чата!");
PlayerInfo[playerid][pTogLeader]=0;
}
}
return 1;
}
if(strcmp(cmd, "/spawn", true) == 0)
{
tmp = strtok(cmdtext, idx);
new tmp2=strval(tmp);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /spawn [0-5]");
SendClientMessage(playerid, 0xFFFF00FF, "0: Office, 1: Civil, 2: Faction, 3: IFC, 4: House, 5: Bizz");
return 1;
}
if(tmp2<0||tmp2>5)
{
SendClientMessage(playerid,0xB4B5B7FF,"Тази опция не съществува!");
}
if(tmp2==0)
{
if(PlayerInfo[playerid][pSpawnO]==0) return SendClientMessage(playerid,0xB4B5B7FF,"Твоят spawn вече е на Office!");
SendClientMessage(playerid, 0xFFFFFFFF, "SERVER: Ти промени твоя spawn на Office spawn!");
}
if(tmp2==1)
{
if(PlayerInfo[playerid][pSpawnO]==1) return SendClientMessage(playerid,0xB4B5B7FF,"Твоят spawn вече е на Civl!");
SendClientMessage(playerid, 0xFFFFFFFF, "SERVER: Ти промени твоя spawn на Civil spawn!");
}
if(tmp2==2)
{
if(PlayerInfo[playerid][pTeam]==FACTION_CIVILIAN)
{
SendClientMessage(playerid,0xB4B5B7FF,"Ти не си в банда/мафия!");
return 1;
}
if(PlayerInfo[playerid][pSpawnO]==2) return SendClientMessage(playerid,0xB4B5B7FF,"Твоят spawn вече е на Faction!");
SendClientMessage(playerid, 0xFFFFFFFF, "SERVER: Ти промени твоя spawn на Faction spawn!");
}
if(tmp2==3)
{
if(PlayerInfo[playerid][pSpawnO]==3) return SendClientMessage(playerid,0xB4B5B7FF,"Твоят spawn вече е на Intense Fuel Company!");
if(PlayerInfo[playerid][pIFC]==0) return SendClientMessage(playerid,0xB4B5B7FF,"Трябва да си член на Intense Fuel Company!");
SendClientMessage(playerid, 0xFFFFFFFF, "SERVER: Ти промени твоя spawn на IFC spawn!");
}
if(tmp2==4)
{
if(PlayerInfo[playerid][pSpawnO]==4) return SendClientMessage(playerid,0xB4B5B7FF,"Твоят spawn вече е на къща!");
if(PlayerInfo[playerid][pHouseO]==-1) return SendClientMessage(playerid,0xB4B5B7FF,"Ти не притежаваш къща!");
SendClientMessage(playerid, 0xFFFFFFFF, "SERVER: Ти промени твоя spawn на House spawn!");
}
if(tmp2==5)
{
if(PlayerInfo[playerid][pSpawnO]==5) return SendClientMessage(playerid,0xB4B5B7FF,"Твоят spawn вече е на бизнес!");
if(PlayerInfo[playerid][pBizO]==-1) return SendClientMessage(playerid,0xB4B5B7FF,"Ти не притежаваш бизнес!");
SendClientMessage(playerid, 0xFFFFFFFF, "SERVER: Ти промени твоя spawn на Bizz spawn!");
}
PlayerInfo[playerid][pSpawnO]=tmp2;
return 1;
}
if(strcmp(cmd, "/akill", true) == 0)
{
if (PlayerInfo[playerid][pAdmin] >= 1 || PlayerInfo[playerid][pTest] == 1)
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /akill [playerid]");
return 1;
}
para1[playerid] = ReturnUser(tmp);
if(para1[playerid] != INVALID_PLAYER_ID)
{
SetPlayerHealth(para1[playerid], 0);
format(string115, 115, "You have been admin killed by %s", pname[playerid]);
SendClientMessage(para1[playerid], 0xE60000FF, string115);
format(string115, 115, "You killed %s", pname[para1[playerid]]);
SendClientMessage(playerid, 0xE60000FF, string115);
}
else
{
SendClientMessage(playerid,0xB4B5B7FF,"Посоченото ID не е в сървъра!");
}
}
else
{
SendClientMessage(playerid,0xB4B5B7FF,"Нямаш права за да ползваш командата!");
}
return 1;
}
if(strcmp(cmd, "/togtestadmin", true) == 0)
{
if(PlayerInfo[playerid][pTest] == 1)
{
if(PlayerInfo[playerid][pAHide] == 0)
{
PlayerInfo[playerid][pAHide] = 1;
SendClientMessage(playerid, 0xE60000FF, "Сега няма да можеш да виждаш какво пишат в TEST ADMIN чата!");
}
else
{
PlayerInfo[playerid][pAHide] = 0;
SendClientMessage(playerid, 0xE60000FF, "Сега ще виждаш какво пишат в TEST ADMIN чата!");
}
}
else
{
SendClientMessage(playerid,0xB4B5B7FF,"Нямаш права за да ползваш командата!");
}
return 1;
}
if(strcmp(cmd, "/togadmin", true) == 0)
{
if(PlayerInfo[playerid][pAdmin] >= 1)
{
if(PlayerInfo[playerid][pAHide] == 0)
{
PlayerInfo[playerid][pAHide] = 1;
SendClientMessage(playerid, 0xE60000FF, "Сега няма да можеш да виждаш какво пишат в ADMIN чата!");
}
else
{
PlayerInfo[playerid][pAHide] = 0;
SendClientMessage(playerid, 0xE60000FF, "Сега ще виждаш какво пишат в ADMIN чата!");
}
}
else
{
SendClientMessage(playerid,0xB4B5B7FF,"Нямаш права за да ползваш командата!");
}
return 1;
}
if(strcmp(cmd, "/gethere", true) == 0)
{
if (PlayerInfo[playerid][pAdmin] >= 2)
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /gethere [playerid]");
return 1;
}
para1[playerid] = ReturnUser(tmp);
if(para1[playerid]==playerid)
{
SendClientMessage(playerid,0xB4B5B7FF,"Не можеш да телепортираш себе си!");
return 1;
}
if(para1[playerid] != INVALID_PLAYER_ID)
{
GetPlayerPos(playerid,X[playerid],Y[playerid],Z[playerid]);
SetPlayerInterior(para1[playerid], GetPlayerInterior(playerid));
SetPlayerVirtualWorld(para1[playerid], GetPlayerVirtualWorld(playerid));
SetPlayerPos(para1[playerid],X[playerid], Y[playerid]+2, Z[playerid]);
format(string115, 115, "* Ти беше телепортиран до %s *", pname[playerid]);
SendClientMessage(para1[playerid], 0xFFFFFFFF, string115);
format(string115, 115, "* Ти телепортира %s до теб *", pname[para1[playerid]]);
SendClientMessage(playerid, 0xFFFFFFFF, string115);
for(new i=0; i<MAX_PLAYERS; i++)
{
if(PlayerInfo[i][pAdmin] >= 1 && PlayerInfo[i][pAHide]==0)
{
format(string115, 115, "Teleport: %s телепортира %s до себе си!", pname[playerid] ,pname[para1[playerid]]);
SendClientMessage(i,0xE60000FF, string115);
}
}
}
else
{
SendClientMessage(playerid, 0xB4B5B7FF, "Посоченото ID не е в сървъра!");
}
}
else
{
SendClientMessage(playerid, 0xB4B5B7FF, "Нямаш права за да ползваш командата!");
}
return 1;
}
if(strcmp(cmd, "/af", true) == 0 || strcmp(cmd, "/acceptfaction", true) == 0)
{
if(TeamInvite[playerid]==-1) return SendClientMessage(playerid,0xB4B5B7FF,"Ти нямаш покана за банда/мафия!");
PlayerInfo[playerid][pTeam]=TeamInvite[playerid]; TeamInvite[playerid]=-1; PlayerInfo[playerid][pSpecialForce]=0;
format(string115,115,"[FACTION CHAT] %s влезе в твоята банда/мафия.",pname[playerid]);
for(new i=0; i<MAX_PLAYERS; i++)
{
if(PlayerInfo[i][pTeam] == PlayerInfo[playerid][pTeam])
{
SendClientMessage(i, 0x33CCFFFF,string115);
}
}
RestartPlayerColor(playerid); RestartVIPLaser(playerid);
if(IsPlayerInAnyVehicle(playerid) == 1 && PlayerInfo[playerid][pADuty]==0)
{
SendClientMessage(playerid,0xFFFFFFFF, "* Твоят скин не се смени, защото не си пешеходец *");
}
if(PlayerInfo[playerid][pSpawnO]!=2)
{
PlayerInfo[playerid][pSpawnO]=2; SendClientMessage(playerid, 0xFFFFFFFF, "SERVER: Твоят spawn беше променен на Faction spawn!");
}
if(IsPlayerInAnyVehicle(playerid) == 1 && PlayerInfo[playerid][pADuty]==0)
{
return 1;
}
RestartPlayerSkin(playerid);
return 1;
}
if(strcmp(cmd, "/joinvip", true) == 0)
{
if(PlayerInfo[playerid][pLevel]>20) return SendClientMessage(playerid,0xB4B5B7FF,"Ти не можеш да влезеш във VIP, защото си над 20 левел!");
if(PlayerInfo[playerid][pTeam]!=0) return SendClientMessage(playerid,0xB4B5B7FF,"Ти вече си в банда/мафия!");
PlayerInfo[playerid][pTeam]=FACTION_VIP;
PlayerInfo[playerid][pRank]=1;
SendClientMessage(playerid,0x33CCFFFF, "Ти влезе в банда/мафия VIP, Честито!");
format(string115,115,"[FACTION CHAT] JOINVIP: %s влезе в твоята банда/мафия.",pname[playerid]);
if(IsPlayerInAnyVehicle(playerid) == 1 && PlayerInfo[playerid][pADuty]==0)
{
SendClientMessage(playerid,0xFFFFFFFF, "* Твоят скин не се смени, защото не си пешеходец *");
}
else
{
if(firstskin[playerid]==1)  SetPlayerSkin(playerid,28);
if(firstskin[playerid]==2)  SetPlayerSkin(playerid,29);
if(firstskin[playerid]==3)  SetPlayerSkin(playerid,30);
if(firstskin[playerid]==4)  SetPlayerSkin(playerid,143);
if(firstskin[playerid]==5)  SetPlayerSkin(playerid,144);
if(firstskin[playerid]==6)  SetPlayerSkin(playerid,145);
if(firstskin[playerid]==7)  SetPlayerSkin(playerid,146);
if(firstskin[playerid]==8)  SetPlayerSkin(playerid,101);
if(firstskin[playerid]==9)  SetPlayerSkin(playerid,98);
if(firstskin[playerid]==10)  SetPlayerSkin(playerid,60);
if(firstskin[playerid]==11)  SetPlayerSkin(playerid,59);
if(firstskin[playerid]==12)  SetPlayerSkin(playerid,55);
if(firstskin[playerid]==13)  SetPlayerSkin(playerid,56);
if(firstskin[playerid]==14)  SetPlayerSkin(playerid,17);
if(firstskin[playerid]==15)  SetPlayerSkin(playerid,141);
if(firstskin[playerid]==16)  SetPlayerSkin(playerid,237);
if(firstskin[playerid]==17)  SetPlayerSkin(playerid,244);
if(firstskin[playerid]==18)  SetPlayerSkin(playerid,246);
if(firstskin[playerid]==19)  SetPlayerSkin(playerid,93);
if(firstskin[playerid]==20)  SetPlayerSkin(playerid,91);
if(firstskin[playerid]==21)  SetPlayerSkin(playerid,90);
}
if(PlayerInfo[playerid][pSpawnO]!=2)
{
PlayerInfo[playerid][pSpawnO]=2; SendClientMessage(playerid, 0xFFFFFFFF, "SERVER: Твоят spawn беше променен на Faction spawn!");
}
if(IsPlayerInAnyVehicle(playerid) == 1 && PlayerInfo[playerid][pADuty]==0)
{
return 1;
}
for(new i=0; i<MAX_PLAYERS; i++)
{
if(PlayerInfo[i][pTeam] == PlayerInfo[playerid][pTeam])
{
SendClientMessage(i, 0x33CCFFFF,string115);
}
}
if(PlayerInfo[playerid][pVip]>3 || freevip==1)
{
SetPVarInt(playerid, "color", 0);
PlayerInfo[playerid][pLaser]=1;
}
if(PlayerInfo[playerid][pADuty]==0)
{
SetPlayerColor(playerid,0xFF3737FF);
}
return 1;
}
if(strcmp(cmd, "/cf", true) == 0 || strcmp(cmd, "/cancelfaction", true) == 0)
{
if(TeamInvite[playerid]==-1) return SendClientMessage(playerid,0xB4B5B7FF,"Ти нямаш покана за банда/мафия!");
format(string115,115,"%s отказа да влезе в твоята банда/мафия.",pname[playerid]);
for(new i=0; i<MAX_PLAYERS; i++)
{
if(PlayerInfo[i][pTeam] == TeamInvite[playerid])
{
SendClientMessage(playerid, 0x33CCFFFF,string115);
}
}
TeamInvite[playerid]=-1;
return 1;
}
if(strcmp(cmd, "/cduel", true) == 0)
{
if(duelsend[playerid]>-1)
{
new duelstring[256];
format(duelstring,256,"Duel: Ти отмени поканата за дуел, която изпрати на %s",pname[duelsend[playerid]]);
SendClientMessage(playerid, 0xFFE400FF,duelstring);
format(duelstring, 256, "Duel: %s отказа поканата си за дуел", pname[duelsender[duelsend[playerid]]]);
SendClientMessage(duelsender[playerid], 0xFFE400FF,duelstring);
duelsender[duelsend[playerid]]= -1;
duelsend[playerid]= -1;
}
else
{
SendClientMessage(playerid,COLOR_GRAD1,"Ти не си поканил никого на дуел!");
}
return 1;
}
if(strcmp(cmd, "/yes", true) == 0)
{
if(duelsender[playerid]>-1)
{
if(PlayerInfo[playerid][pIFCDuty]==1) return SendClientMessage(playerid,0xB4B5B7FF,"Не можеш да използваш тази команда, докато си IFC ON-DUTY!");
if(PlayerInfo[playerid][pADuty]==1) return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да играеш дуел, докато си ADMIN ON-DUTY!");
if(PlayerInfo[playerid][pAFK]> 0)
{
SendClientMessage(playerid, 0xB4B5B7FF, "Ти си в AFK режим и не можеш да играеш дуел!");
return 1;
}
if(PlayerInfo[playerid][pJail]> 0)
{
SendClientMessage(playerid, 0xB4B5B7FF, "Ти си в админ затвора и не можеш да играеш дуел!");
return 1;
}
if(PlayerInfo[playerid][pPJail]> 0)
{
SendClientMessage(playerid, 0xB4B5B7FF, "Ти си в затвора и не можеш да играеш дуел!");
return 1;
}
if(cmn1[playerid]>0) { return SendClientMessage(playerid,0xB4B5B7FF,"Не можеш да играеш дуел, докато си CMN1!"); }
if(playerInDuel[playerid]==1){ return SendClientMessage(playerid,0xB4B5B7FF,"Не можеш да играеш пак, докато си в дуел!");}
if(playerInDMON[playerid]==1){ return SendClientMessage(playerid,0xB4B5B7FF,"Не да играеш, докато си в DMON!");}
if(inevent[playerid]==1) return SendClientMessage(playerid,0xB4B5B7FF,"Не можеш да използваш тази команда, докато си в евент!");
if(PlayerInfo[playerid][pADuty]==1){ return SendClientMessage(playerid,0xB4B5B7FF,"Не да играеш, докато си ADMIN ON-DUTY!");}
if(cmn1[duelsender[playerid]]>0) { return SendClientMessage(playerid,0xB4B5B7FF,"Не можеш да играеш дуел, докато играчът е CMN1!"); }
if(playerInDeathmatch[playerid]==true) return SendClientMessage(playerid,0xB4B5B7FF,"В момента не можеш да използваш тази команда!");
if(playerInStreetRace[playerid]==true) return SendClientMessage(playerid,0xB4B5B7FF,"В момента не можеш да използваш тази команда!");
if(playerInDuel[duelsender[playerid]]==1){ return SendClientMessage(playerid,0xB4B5B7FF,"Не можеш да играеш, докато играчът е в дуел!");}
if(playerInDMON[duelsender[playerid]]==1){ return SendClientMessage(playerid,0xB4B5B7FF,"Не можеш да играеш, играчът е в DMON!");}
if(PlayerInfo[duelsender[playerid]][pADuty]==1){ return SendClientMessage(playerid,0xB4B5B7FF,"Не да играеш, играчът е ADMIN ON-DUTY!");}
format(string,256,"Duel: Ти прие поканата за дуел на %s",pname[duelsender[playerid]]);
SendClientMessage(playerid, 0xFFE400FF,string);
format(string, 256, "Duel: %s прие поканата ти за дуел", pname[playerid]);
SendClientMessage(duelsender[playerid], 0xFFE400FF,string);
playerInDuel[playerid]=1;
playerInDuel[duelsender[playerid]]=1;
duelprotivnik[playerid]=duelsender[playerid];
duelprotivnik[duelsender[playerid]]=playerid;
GetPlayerPos(playerid,prediduelX[playerid],prediduelY[playerid],prediduelZ[playerid]);
GetPlayerHealth(playerid,prediduelhealth[playerid]);
GetPlayerArmour(playerid,prediduelarmour[playerid]);
prediduelvw[playerid]=GetPlayerVirtualWorld(playerid);
prediduelinterior[playerid]=GetPlayerInterior(playerid);
prediduelvw[duelsender[playerid]]=GetPlayerVirtualWorld(playerid);
prediduelinterior[duelsender[playerid]]=GetPlayerInterior(playerid);
SetPlayerVirtualWorld(playerid,500+playerid);
SetPlayerInterior(playerid,1);
SetPlayerPos(playerid,1410.3407,-1.3358,1000.9233);
PlayerInfo[duelsender[playerid]][pDuelCountTimer]=1;
duelzalog[playerid]=duelzalog[duelsender[playerid]];
GetPlayerPos(playerid,prediduelX[duelsender[playerid]],prediduelY[duelsender[playerid]],prediduelZ[duelsender[playerid]]);
GetPlayerHealth(playerid,prediduelhealth[duelsender[playerid]]);
GetPlayerArmour(playerid,prediduelarmour[duelsender[playerid]]);
prediduelvw[duelsender[playerid]]=GetPlayerVirtualWorld(playerid);
SetPlayerVirtualWorld(duelsender[playerid],500+playerid);
SetPlayerInterior(duelsender[playerid],1);
SetPlayerPos(duelsender[playerid],1373.1509,-33.9499,1000.9219);
TogglePlayerControllable(playerid,0);
TogglePlayerControllable(duelsender[playerid],0);
SetPlayerHealth(playerid,100); SetPlayerHealth(duelsender[playerid],100);
SetPlayerArmour(playerid,100); SetPlayerArmour(duelsender[playerid],100);
SetPlayerFacingAngle(playerid,123.8814);
SetPlayerFacingAngle(duelsender[playerid],313.3936);
prediduelvw[duelsender[playerid]]=GetPlayerVirtualWorld(duelsender[playerid]);
prediduelinterior[duelsender[playerid]]=GetPlayerInterior(duelsender[playerid]);
SetPlayerColor(duelsender[playerid],0xFF9068FF);SetPlayerColor(playerid,0xFF9068FF);
SetCameraBehindPlayer(playerid);
SetCameraBehindPlayer(duelsender[playerid]);
SetPlayerArmedWeapon(playerid,0); SetPlayerArmedWeapon(duelsender[playerid],0);
}
else
{
SendClientMessage(playerid,COLOR_GRAD1,"Никой не ти е пратил покана за дуел!");
}
return 1;
}
if(strcmp(cmd, "/no", true) == 0)
{
if(duelsender[playerid]==-1)
{
return SendClientMessage(playerid,COLOR_GRAD1,"Никой не ти е пратил покана за дуел!");
}
new string356[356];
format(string356,356,"Duel: Ти отказа поканата за дуел на %s",pname[duelsender[playerid]]);
SendClientMessage(playerid, 0xFFE400FF,string356);
format(string356, 356, "Duel: %s отказа поканата ти за дуел", pname[playerid]);
SendClientMessage(duelsender[playerid], 0xFFE400FF,string356);
new duelsendera=duelsender[playerid];
duelsender[playerid]=-1;
duelsend[duelsendera]=-1;
return 1;
}
if(strcmp(cmd, "/duel", true) == 0)
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /duel [playerid] [money]");
return 1;
}
new zalog = strval(tmp);
new giveplayerid = ReturnUser(tmp);
tmp = strtok(cmdtext, idx);
zalog = strval(tmp);
if(playerInDuel[giveplayerid]==1) return SendClientMessage(playerid,0xB4B5B7FF,"В момента играчът е в друг дуел!");
if(playerInDuel[playerid]==1) return SendClientMessage(playerid,0xB4B5B7FF,"В момента си в друг дуел!");
if(giveplayerid==playerid) return SendClientMessage(playerid,0xB4B5B7FF,"Не можеш да поканиш себе си на дуел!");
if(PlayerInfo[giveplayerid][pADuty]>0) return SendClientMessage(playerid,0xB4B5B7FF,"Този играч в момента е ADMIN ON-DUTY!");
if(PlayerInfo[playerid][pADuty]>0) return SendClientMessage(playerid,0xB4B5B7FF,"Не можеш да играеш дуел, докато си ADMIN ON-DUTY!");
if(zalog<100 || zalog> 1000000) return SendClientMessage(playerid,0xB4B5B7FF,"Залогът трябва да е между $100 и $1,00,000!");
if(PlayerInfo[playerid][pCash]<zalog) return SendClientMessage(playerid,0xB4B5B7FF,"Нямаш толкова пари за залог!");
if(PlayerInfo[giveplayerid][pCash]<zalog) return SendClientMessage(playerid,0xB4B5B7FF,"Играчът няма толкова пари за залог!");
if(duelsender[playerid]>-1) return SendClientMessage(playerid,0xB4B5B7FF,"Вече си изпратил покана за дуел на друг играч!");
if(duelsend[playerid]>-1) return SendClientMessage(playerid,0xB4B5B7FF,"Имаш показа за дуел от друг играч в момента!");
if(playerInDMON[playerid]==1) return SendClientMessage(playerid,0xB4B5B7FF,"В момента си в DMON!");
format(string,256,"Duel: Ти изпрати покана за дуел на %s. Ако искаш да отмениш поканата напиши /cduel",pname[giveplayerid]);
SendClientMessage(playerid, 0xFFE400FF,string);
format(string, 256, "Duel: %s те покани на дуел със залог $%d. Напиши /yes за да приемеш или /no за да откажеш!", pname[playerid] ,zalog);
SendClientMessage(giveplayerid, 0xFFE400FF,string);
duelsender[giveplayerid]=playerid;
duelsend[playerid]=giveplayerid;
duelzalog[playerid]=zalog;
return 1;
}
if(strcmp(cmd, "/cinvite", true) == 0)
{
if (PlayerInfo[playerid][pRank]==6)
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /cinvite [playerid]");
return 1;
}
para1[playerid] = ReturnUser(tmp);
if(para1[playerid] != INVALID_PLAYER_ID)
{
if(TeamInvite[para1[playerid]]!=PlayerInfo[playerid][pTeam]) return SendClientMessage(playerid,0xB4B5B7FF,"Този човек няма покана от теб за влизане в банда/мафия!");
TeamInvite[para1[playerid]]=-1;
format(string115,115,"[FACTION CHAT] %s отказа поканата до %s да влезе в твоята банда/мафия.",pname[playerid],pname[para1[playerid]]);
for(new i=0; i<MAX_PLAYERS; i++)
{
if(PlayerInfo[i][pTeam] == PlayerInfo[playerid][pTeam])
{
SendClientMessage(i, 0x33CCFFFF,string115);
}
}
format(string115,115,"%s отказа поканата си да влезеш в %s.",pname[playerid],TeamInfo[PlayerInfo[playerid][pTeam]][tName]);
SendClientMessage(para1[playerid], 0x33CCFFFF,string115);
}
else
{
SendClientMessage(playerid,0xB4B5B7FF,"Посоченото ID не е в сървъра!");
}
}
else
{
SendClientMessage(playerid,0xB4B5B7FF,"Нямаш права за да ползваш командата!");
}
return 1;
}
if(strcmp(cmd, "/invite", true) == 0)
{
if (PlayerInfo[playerid][pRank]==6)
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /invite [playerid]");
return 1;
}
para1[playerid] = ReturnUser(tmp);
if(para1[playerid] != INVALID_PLAYER_ID)
{
if(PlayerInfo[para1[playerid]][pTeam]>=1) return SendClientMessage(playerid,0xB4B5B7FF,"Този човек вече има банда/мафия!");
TeamInvite[para1[playerid]]=PlayerInfo[playerid][pTeam];
format(string115,115,"[FACTION CHAT] %s покани %s да влезе в твоята банда/мафия.",pname[playerid],pname[para1[playerid]]);
for(new i=0; i<MAX_PLAYERS; i++)
{
if(PlayerInfo[i][pTeam] == PlayerInfo[playerid][pTeam])
{
SendClientMessage(i, 0x33CCFFFF,string115);
}
}
format(string115,115,"%s те покани да влезеш в банда/мафия %s",pname[playerid],TeamInfo[PlayerInfo[playerid][pTeam]][tName]);
SendClientMessage(para1[playerid], 0x33CCFFFF,string115);
SendClientMessage(para1[playerid], 0x33CCFFFF,"Напиши /acceptfaction(/af) за да влезеш или /cancelfaction(/cf) за да откажеш!");
}
else
{
SendClientMessage(playerid,0xB4B5B7FF,"Посоченото ID не е в сървъра!");
}
}
else
{
SendClientMessage(playerid,0xB4B5B7FF,"Нямаш права за да ползваш командата!");
}
return 1;
}
/*if(strcmp(cmd, "/gotoveh", true) == 0)
{
if (PlayerInfo[playerid][pAdmin] >= 4)
{
tmp=strtok(cmdtext, idx);
new para11=strval(tmp);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /gotoveh [vehicle id]");
return 1;
}
new Float:plocx,Float:plocy,Float:plocz;
if(para11 == INVALID_VEHICLE_ID)
{
SendClientMessage(playerid, 0xB4B5B7FF, "Посоченото ID не е валидно!");
return 1;
}
GetVehiclePos(para11, plocx, plocy, plocz);
//SetPlayerInterior(playerid, GetVehicleInterior(para1[playerid]));
SetPlayerVirtualWorld(playerid, GetVehicleVirtualWorld(para11));
if (GetPlayerState(playerid) == 2)
{
SetVehiclePos(GetPlayerVehicleID(playerid), plocx, plocy+4, plocz);
}
else
{
SetPlayerPos(playerid,plocx,plocy+2, plocz);
}
format(string115, 115, "* Ти се телепортира до Vehicle ID %d *", para11);
SendClientMessage(playerid, 0xFFFF00FF, string115);
for(new i=0; i<MAX_PLAYERS; i++)
{
if(PlayerInfo[i][pAdmin] >= 1 && PlayerInfo[i][pAHide]==0)
{
format(string115, 115, "Teleport: %s се телепортира до Vehicle ID %d", pname[playerid] ,para11);
SendClientMessage(i,0xE60000FF, string115);
}
}
}
else
{
SendClientMessage(playerid, 0xB4B5B7FF, "Нямаш права за да ползваш командата!");
}
return 1;
}*/
if(strcmp(cmd, "/goto", true) == 0)
{
if (PlayerInfo[playerid][pAdmin] >= 2)
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /goto [playerid]");
return 1;
}
new Float:plocx,Float:plocy,Float:plocz;
para1[playerid] = ReturnUser(tmp);
if(para1[playerid]==playerid)
{
SendClientMessage(playerid,0xB4B5B7FF,"Не можеш да се телепортираш до себе си!");
return 1;
}
if(PlayerInfo[playerid][pTGoto]==0) { return SendClientMessage(playerid, 0xB4B5B7FF, "Нямаш позволение да се телепортираш до играчите!");}
if(para1[playerid] != INVALID_PLAYER_ID)
{
GetPlayerPos(para1[playerid], plocx, plocy, plocz);
SetPlayerInterior(playerid, GetPlayerInterior(para1[playerid]));
SetPlayerVirtualWorld(playerid, GetPlayerVirtualWorld(para1[playerid]));
if (GetPlayerState(playerid) == 2)
{
SetVehiclePos(GetPlayerVehicleID(playerid), plocx, plocy+4, plocz);
}
else
{
SetPlayerPos(playerid,plocx,plocy+2, plocz);
}
format(string115, 115, "* %s се телепортира до теб *", pname[playerid]);
SendClientMessage(para1[playerid], 0xFFFF00FF, string115);
format(string115, 115, "* Ти се телепортира до %s *", pname[para1[playerid]]);
SendClientMessage(playerid, 0xFFFFFFFF, string115);
for(new i=0; i<MAX_PLAYERS; i++)
{
if(PlayerInfo[i][pAdmin] >= 1 && PlayerInfo[i][pAHide]==0)
{
format(string115, 115, "Teleport: %s се телепортира до %s", pname[playerid] ,pname[para1[playerid]]);
SendClientMessage(i,0xE60000FF, string115);
}
}
}
else
{
SendClientMessage(playerid, 0xB4B5B7FF, "Посоченото ID не е в сървъра!");
}
}
else
{
SendClientMessage(playerid, 0xB4B5B7FF, "Нямаш права за да ползваш командата!");
}
return 1;
}
if(strcmp(cmd, "/readta", true) == 0)
{
if(PlayerInfo[playerid][pAdmin] >= 3)
{
if(PlayerInfo[playerid][pReadTA]==1)
{
SendClientMessage(playerid,0xE60000FF,"Ти сега няма да виждаш какво пишат в TEST ADMIN чата!");
return PlayerInfo[playerid][pReadTA]=0;
}
else
{
SendClientMessage(playerid,0xE60000FF,"Ти сега ще виждаш какво пишат в TEST ADMIN чата!");
PlayerInfo[playerid][pReadTA]=1;
}
}
else
{
SendClientMessage(playerid,0xB4B5B7FF,"Нямаш права за да ползваш командата!");
}
return 1;
}
if(strcmp(cmd, "/aduty", true) == 0)
{
if(PlayerInfo[playerid][pAdmin] >= 1 || PlayerInfo[playerid][pTest] == 1)
{
if(PlayerInfo[playerid][pWanted] > 0 && PlayerInfo[playerid][pADuty]==0)
{
SendClientMessage(playerid,0xB4B5B7FF,"Не можеш да използваш тази команда, докато си издирван!");
return 1;
}
if(PlayerInfo[playerid][pIFCDuty]==1) return SendClientMessage(playerid,0xB4B5B7FF,"Не можеш да използваш тази команда, докато си IFC ON-DUTY!");
if(PlayerInfo[playerid][pRobber]==1) return SendClientMessage(playerid,0xB4B5B7FF,"Не можеш да използваш тази команда, докато си в обир!");
if(inevent[playerid]==1) return SendClientMessage(playerid,0xB4B5B7FF,"Не можеш да използваш тази команда, докато си в евент!");
if(playerInDeathmatch[playerid]==true) return SendClientMessage(playerid,0xB4B5B7FF,"В момента не можеш да използваш тази команда!");
if(playerInStreetRace[playerid]==true) return SendClientMessage(playerid,0xB4B5B7FF,"В момента не можеш да използваш тази команда!");
if(PlayerInfo[playerid][pADuty] == 0)
{
PlayerInfo[playerid][pADuty] = 1;
UpdateDynamic3DTextLabelText(PlayerLabel[playerid], 0x800000FF, " ");
format(VipText3D[playerid],26,"");
PlayerLabel[playerid] = CreateDynamic3DTextLabel(VipText3D[playerid], 0x800000FF, 0.0, 0.0, 0.0, 15.0, playerid, INVALID_VEHICLE_ID, 0, GetPlayerVirtualWorld(playerid), GetPlayerInterior(playerid), -1, 15.0);
PlayerLabel[playerid] = CreateDynamic3DTextLabel("ADMIN ON-DUTY", 0xE60000FF, 0.0, 0.0, 0.0, 15.0, playerid, INVALID_VEHICLE_ID, 0, GetPlayerVirtualWorld(playerid), GetPlayerInterior(playerid), -1, 15.0);
SendClientMessage(playerid, 0x40BF00FF,"Ти сега си On-Duty и трябва да помагаш на играчите!");
SetPlayerColor(playerid, 0x7BFFFFFF);
if(IsPlayerInAnyVehicle(playerid) == 1)
{
SendClientMessage(playerid,0xFFFFFFFF, "* Твоят скин не се смени, защото не си пешеходец *");
}else{
SetPlayerSkin(playerid,PlayerInfo[playerid][pASkin]);
adutyskinchanged[playerid]=1;
}
}
else
{
UpdateDynamic3DTextLabelText(PlayerLabel[playerid], 0x800000FF, " ");
format(VipText3D[playerid],26,"");
PlayerLabel[playerid] = CreateDynamic3DTextLabel(VipText3D[playerid], 0x800000FF, 0.0, 0.0, 0.0, 15.0, playerid, INVALID_VEHICLE_ID, 0, GetPlayerVirtualWorld(playerid), GetPlayerInterior(playerid), -1, 15.0);
adutyskinchanged[playerid]=0;
PlayerInfo[playerid][pADuty] = 0;
SendClientMessage(playerid, 0xE60000FF,"Ти сега си Off-Duty и можеш да играеш спокойно!");
SetPlayerHealth(playerid, 100);
if(fly[playerid]==1)
{
fly[playerid] = 0;
TogglePlayerControllable(playerid,true);
}
if(Jump[playerid] == 1)
{
Jump[playerid]=0;
}
if(Speed[playerid] == 1)
{
Speed[playerid]=0;
}
spawnselectedskin[playerid]=spawnselectedskin2[playerid];
SetPlayerArmour(playerid, 100);
new level=PlayerInfo[playerid][pTeam];
format(VipText3D[playerid],26,"");
UpdateDynamic3DTextLabelText(PlayerLabel[playerid], 0x800000FF, " ");
PlayerLabel[playerid] = CreateDynamic3DTextLabel(VipText3D[playerid], 0x800000FF, 0.0, 0.0, 0.0, 15.0, playerid, INVALID_VEHICLE_ID, 0, GetPlayerVirtualWorld(playerid), GetPlayerInterior(playerid), -1, 15.0);
RestartPlayerColor(playerid);
if(PlayerInfo[playerid][pTeam]==FACTION_CIVILIAN)
{
SetPlayerColor(playerid,0xFFFFFFFF);
if(IsPlayerInAnyVehicle(playerid) == 1)
{
SendClientMessage(playerid,0xFFFFFFFF, "* Твоят скин не се смени, защото не си пешеходец *");
}else{ RestartPlayerSkin(playerid); } //goto 2
}
if(IsPlayerInAnyVehicle(playerid) == 1)
{
return SendClientMessage(playerid,0xFFFFFFFF, "* Твоят скин не се смени, защото не си пешеходец *");
}
else
{
RestartPlayerSkin(playerid);
}
RestartPlayerColor(playerid);
SetPlayerHealth(playerid, 100);
SetPlayerArmour(playerid, 100);
}
}
else
{
SendClientMessage(playerid,0xB4B5B7FF,"Нямаш права за да ползваш командата!");
}
return 1;
}
/*
if(strcmp(cmd, "/aduty", true) == 0)
{
if(PlayerInfo[playerid][pAdmin] >= 1 || PlayerInfo[playerid][pTest] == 1)
{
if(PlayerInfo[playerid][pADuty] == 0)
{
PlayerInfo[playerid][pADuty] = 1;
SendClientMessage(playerid, 0xE60000FF, "Сега няма да можеш да виждаш какво пишат в ADMIN чата!");
}
else
{
PlayerInfo[playerid][pADuty] = 0;
SendClientMessage(playerid, 0xE60000FF, "Сега ще виждаш какво пишат в ADMIN чата!");
}
}
else
{
SendClientMessage(playerid,0xB4B5B7FF,"Нямаш права за да ползваш командата!");
}
return 1;
}*/
if(strcmp(cmd, "/slap", true) == 0)
{
if (PlayerInfo[playerid][pAdmin] >= 1)
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /slap [playerid]");
return 1;
}
new Float:shealth;
new Float:slx, Float:sly, Float:slz;
para1[playerid] = ReturnUser(tmp);
if(para1[playerid] != INVALID_PLAYER_ID)
{
if(PlayerInfo[para1[playerid]][pADuty]==0)
{
//GetPlayerHealth(para1[playerid], shealth);
//SetPlayerHealth(para1[playerid], shealth-5);
}
GetPlayerPos(para1[playerid], slx, sly, slz);
SetPlayerPos(para1[playerid], slx, sly, slz+5);
format(string115, 115, "you have been slapped by %s", pname[playerid]);
SendClientMessage(para1[playerid], 0xE60000FF, string115);
format(string115, 115, "you slapped %s", pname[para1[playerid]]);
SendClientMessage(playerid, 0xE60000FF, string115);
}
else
{
SendClientMessage(playerid,0xB4B5B7FF,"Посоченото ID не е в сървъра!");
}
}
else
{
SendClientMessage(playerid,0xB4B5B7FF,"Нямаш права за да ползваш командата!");
}
return 1;
}
if(strcmp(cmd, "/listguns", true) == 0)
{
if (PlayerInfo[playerid][pVip]<1 && freevip==0)
{
SendClientMessage(playerid, 0xB4B5B7FF, "Нямаш достатъчно VIP права за да ползваш тази команда!");
return 1;
}
tmp = strtok(cmdtext,idx);
if (!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /listguns [playerid/partOfName]");
return 1;
}
para1[playerid] = ReturnUser(tmp);
if (para1[playerid] == INVALID_PLAYER_ID)
{
SendClientMessage(playerid,0xB4B5B7FF,"Посоченото ID не е в сървъра!");
return 1;
}
new sweapon, sammo, gunname[100];
format(string115, 115, "*** Оръжията на %s ***", pname[para1[playerid]]);
SendClientMessage(playerid, 0xFFFFFFFF, string115);
for (new i=0; i<12; i++)
{
GetPlayerWeaponData(para1[playerid], i, sweapon, sammo);
GetWeaponName(sweapon, gunname, 100);
if(sweapon != 0)
{
format(string115, 115, "%s (%d)", i, gunname, sammo);
SendClientMessage(playerid, 0xFFFF00FF, string115);
}
}
return 1;
}
if(strcmp(cmd, "/makemanage", true)==0)
{
if (PlayerInfo[playerid][pAdmin] >= 5||IsPlayerAdmin(playerid))
{
tmp=strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /makemanage [playerid]");
return 1;
}
para1[playerid]=ReturnUser(tmp);
if(para1[playerid] != INVALID_PLAYER_ID)
{
PlayerInfo[para1[playerid]][pManage]=1;
format(string115, 115, "* Ти даде Manage Admin на %s.",pname[para1[playerid]]);
SendClientMessage(playerid, 0x408080FF, string115);
format(string115, 115, "* %s те направи Manage Admin, честито. *",pname[playerid]);
SendClientMessage(para1[playerid], 0x408080FF, string115);
format(string115, 115, "*** %s вече е Manage Admin, честито ***",pname[para1[playerid]]);
SendClientMessageToAll(0xF97804FF,string115);
}
else
{
SendClientMessage(playerid,0xB4B5B7FF,"Посоченото ID не е в сървъра!");
}
}
else
{
SendClientMessage(playerid,0xB4B5B7FF,"Нямаш права за да ползваш командата!");
}
return 1;
}
if(strcmp(cmd, "/makeevent", true)==0)
{
if (PlayerInfo[playerid][pAdmin] >= 5||IsPlayerAdmin(playerid))
{
tmp=strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /makeevent [playerid]");
return 1;
}
para1[playerid]=ReturnUser(tmp);
if(para1[playerid] != INVALID_PLAYER_ID)
{
PlayerInfo[para1[playerid]][pEvent]=1;
format(string115, 115, "* Ти даде Event Admin на %s.",pname[para1[playerid]]);
SendClientMessage(playerid, 0x408080FF, string115);
format(string115, 115, "* %s те направи Event Admin, честито. *",pname[playerid]);
SendClientMessage(para1[playerid], 0x408080FF, string115);
format(string115, 115, "*** %s вече е Event Admin, честито ***",pname[para1[playerid]]);
SendClientMessageToAll(0xF97804FF,string115);
}
else
{
SendClientMessage(playerid,0xB4B5B7FF,"Посоченото ID не е в сървъра!");
}
}
else
{
SendClientMessage(playerid,0xB4B5B7FF,"Нямаш права за да ползваш командата!");
}
return 1;
}
if(strcmp(cmd, "/removemanage", true)==0)
{
if (PlayerInfo[playerid][pAdmin] >= 5||IsPlayerAdmin(playerid))
{
tmp=strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /removemanage [playerid]");
return 1;
}
para1[playerid]=ReturnUser(tmp);
if(para1[playerid] != INVALID_PLAYER_ID)
{
if(PlayerInfo[para1[playerid]][pManage]== 0)
{
SendClientMessage(playerid,0xB4B5B7FF,"Този играч няма Manage права!");
return 1;
}
format(string115, 115, "* Ти премахна Manage правата на %s.",pname[para1[playerid]]);
SendClientMessage(playerid, 0x408080FF, string115);
format(string115, 115, "* %s премахна твоите Manage права. *",pname[playerid]);
SendClientMessage(para1[playerid], 0x408080FF, string115);
PlayerInfo[para1[playerid]][pManage]=0;
}
else
{
SendClientMessage(playerid,0xB4B5B7FF,"Посоченото ID не е в сървъра!");
}
}
else
{
SendClientMessage(playerid,0xB4B5B7FF,"Нямаш права за да ползваш командата!");
}
return 1;
}
if(strcmp(cmd, "/removeevent", true)==0)
{
if (PlayerInfo[playerid][pAdmin] >= 5||IsPlayerAdmin(playerid))
{
tmp=strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /removeevent [playerid]");
return 1;
}
para1[playerid]=ReturnUser(tmp);
if(para1[playerid] != INVALID_PLAYER_ID)
{
if(PlayerInfo[para1[playerid]][pEvent]== 0)
{
SendClientMessage(playerid,0xB4B5B7FF,"Този играч няма Event права!");
return 1;
}
format(string115, 115, "* Ти премахна Event правата на %s.",pname[para1[playerid]]);
SendClientMessage(playerid, 0x408080FF, string115);
format(string115, 115, "* %s премахна твоите Event права. *",pname[playerid]);
SendClientMessage(para1[playerid], 0x408080FF, string115);
PlayerInfo[para1[playerid]][pEvent]=0;
}
else
{
SendClientMessage(playerid,0xB4B5B7FF,"Посоченото ID не е в сървъра!");
}
}
else
{
SendClientMessage(playerid,0xB4B5B7FF,"Нямаш права за да ползваш командата!");
}
return 1;
}
if(strcmp(cmd, "/getadmin", true)==0)
{
if (PlayerInfo[playerid][pAdmin] >= 5||IsPlayerAdmin(playerid))
{
tmp=strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /getadmin [playerid]");
return 1;
}
para1[playerid]=ReturnUser(tmp);
if(para1[playerid] != INVALID_PLAYER_ID)
{
if(PlayerInfo[para1[playerid]][pAdmin]== 0 && PlayerInfo[para1[playerid]][pTest]==0)
{
SendClientMessage(playerid,0xB4B5B7FF,"Този играч няма администраторски права!");
return 1;
}
if(fly[para1[playerid]]==1)
{
fly[para1[playerid]] = 0;
TogglePlayerControllable(para1[playerid],true);
}
if(Jump[para1[playerid]] == 1)
{
Jump[para1[playerid]]=0;
}
if(Speed[para1[playerid]] == 1)
{
Speed[para1[playerid]]=0;
}
PlayerInfo[para1[playerid]][pTest]=0;
scripterMode[para1[playerid]]=0;
AntiFallOfBike[playerid]=0;
PlayerInfo[para1[playerid]][pAdmin]=0;
PlayerInfo[para1[playerid]][pManage]=0; PlayerInfo[para1[playerid]][pEvent]=0;
PlayerInfo[para1[playerid]][pReadTA]=0;
PlayerInfo[para1[playerid]][pTimeMute]=0;PlayerInfo[para1[playerid]][pTSpec]=0;
format(string115, 115, "* Ти премахна админ правата на %s.",pname[para1[playerid]]);
SendClientMessage(playerid, 0x408080FF, string115);
format(string115, 115, "* %s премахна твоите админ права. *",pname[playerid]);
SendClientMessage(para1[playerid], 0x408080FF, string115);
format(string115, 115, "*** %s вече не е част от администраторския екип ***",pname[para1[playerid]]);
SendClientMessageToAll(0xF97804FF,string115);
}
else
{
SendClientMessage(playerid,0xB4B5B7FF,"Посоченото ID не е в сървъра!");
}
}
else
{
SendClientMessage(playerid,0xB4B5B7FF,"Нямаш права за да ползваш командата!");
}
return 1;
}
if(strcmp(cmd, "/makeadmin", true)==0)
{
if (PlayerInfo[playerid][pAdmin] >= 5||IsPlayerAdmin(playerid))
{
tmp=strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /makeadmin [playerid] [opiton]");
SendClientMessage(playerid, 0x00FF00FF, "Opitons: 1: Test, 2: Helper, 3: Administrator, 4: Moderator");
SendClientMessage(playerid, 0x00FF00FF, "Opitons: 5: Grand Administrator, 6: Owner, 7: Scripter");
return 1;
}
para1[playerid]=ReturnUser(tmp);
tmp=strtok(cmdtext, idx);
new level[5];
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /makeadmin [playerid] [opiton]");
SendClientMessage(playerid, 0x00FF00FF, "Opitons: 1: Test, 2: Helper, 3: Administrator, 4: Moderator");
SendClientMessage(playerid, 0x00FF00FF, "Opitons: 5: Grand Administrator, 6: Owner, 7: Scripter");
return 1;
}
strmid(level, tmp, 0, 5, 5);
if(para1[playerid] != INVALID_PLAYER_ID)
{
if(strval(level)<1||strval(level)>7)
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /makeadmin [playerid] [opiton]");
SendClientMessage(playerid, 0x00FF00FF, "Opitons: 1: Test, 2: Helper, 3: Administrator, 4: Moderator");
SendClientMessage(playerid, 0x00FF00FF, "Opitons: 5: Grand Administrator, 6: Owner, 7: Scripter");
return 1;
}
if (strcmp(level, "1", true)==0)
{
if(PlayerInfo[playerid][pTest]==1) PlayerInfo[playerid][pAHide] = 0;
if(fly[para1[playerid]]==1)
{
fly[para1[playerid]] = 0;
TogglePlayerControllable(para1[playerid],true);
}
if(Jump[para1[playerid]] == 1)
{
Jump[para1[playerid]]=0;
}
if(Speed[para1[playerid]] == 1)
{
Speed[para1[playerid]]=0;
}
PlayerInfo[para1[playerid]][pTest]=1;
PlayerInfo[para1[playerid]][pAdmin]=0;
scripterMode[para1[playerid]]=0;
AntiFallOfBike[playerid]=0;
PlayerInfo[para1[playerid]][pTSpec]=1;
format(string115, 115, "* Ти направи %s тест админ.",pname[para1[playerid]]);
SendClientMessage(playerid, 0x408080FF, string115);
format(string115, 115, "* %s те направи тест админ, поздравления. *",pname[playerid]);
SendClientMessage(para1[playerid], 0x408080FF, string115);
format(string115, 115, "*** %s вече е тест админ, Честито! ***",pname[para1[playerid]]);
SendClientMessageToAll(0xF97804FF,string115);
}
if (strcmp(level, "2", true)==0)
{
if(PlayerInfo[playerid][pTest]==1) PlayerInfo[playerid][pAHide] = 0;
if(fly[para1[playerid]]==1)
{
fly[para1[playerid]] = 0;
TogglePlayerControllable(para1[playerid],true);
}
if(Jump[para1[playerid]] == 1)
{
Jump[para1[playerid]]=0;
}
if(Speed[para1[playerid]] == 1)
{
Speed[para1[playerid]]=0;
}
PlayerInfo[para1[playerid]][pTest]=0;
PlayerInfo[para1[playerid]][pAdmin]=1;
scripterMode[para1[playerid]]=0;
AntiFallOfBike[playerid]=0;
PlayerInfo[para1[playerid]][pTSpec]=1;
format(string115, 115, "* Ти направи %s 1 админ левел. *",pname[para1[playerid]]);
SendClientMessage(playerid, 0x408080FF, string115);
format(string115, 115, "* %s те направи 1 админ левел, позравления. *",pname[playerid]);
SendClientMessage(para1[playerid], 0x408080FF, string115);
format(string115, 115, "*** %s вече е админ с 1 левел права, Честито! ***",pname[para1[playerid]]);
SendClientMessageToAll(0xF97804FF,string115);
}
if (strcmp(level, "3", true)==0)
{
if(PlayerInfo[playerid][pTest]==1) PlayerInfo[playerid][pAHide] = 0;
if(fly[para1[playerid]]==1)
{
fly[para1[playerid]] = 0;
TogglePlayerControllable(para1[playerid],true);
}
if(Jump[para1[playerid]] == 1)
{
Jump[para1[playerid]]=0;
}
if(Speed[para1[playerid]] == 1)
{
Speed[para1[playerid]]=0;
}
PlayerInfo[para1[playerid]][pTest]=0;
PlayerInfo[para1[playerid]][pAdmin]=2;
scripterMode[para1[playerid]]=0;
PlayerInfo[para1[playerid]][pTSpec]=1;
AntiFallOfBike[playerid]=0;
format(string115, 115, "* Ти направи %s 2 админ левел. *",pname[para1[playerid]]);
SendClientMessage(playerid, 0x408080FF, string115);
format(string115, 115, "* %s те направи 2 админ левел, позравления. *",pname[playerid]);
SendClientMessage(para1[playerid], 0x408080FF, string115);
format(string115, 115, "*** %s вече е админ с 2 левел права, Честито! ***",pname[para1[playerid]]);
SendClientMessageToAll(0xF97804FF,string115);
}
if (strcmp(level, "4", true)==0)
{
if(PlayerInfo[playerid][pTest]==1) PlayerInfo[playerid][pAHide] = 0;
PlayerInfo[para1[playerid]][pTest]=0;
scripterMode[para1[playerid]]=0;
AntiFallOfBike[playerid]=0;
PlayerInfo[para1[playerid]][pAdmin]=3;
PlayerInfo[para1[playerid]][pTimeMute]=1; PlayerInfo[para1[playerid]][pTimeJail]=1;
format(string115, 115, "* Ти направи %s 3 админ левел. *",pname[para1[playerid]]);
SendClientMessage(playerid, 0x408080FF, string115);
format(string115, 115, "* %s те направи 3 админ левел, позравления. *",pname[playerid]);
SendClientMessage(para1[playerid], 0x408080FF, string115);
format(string115, 115, "*** %s вече е админ с 3 левел права, Честито! ***",pname[para1[playerid]]);
SendClientMessageToAll(0xF97804FF,string115);
}
if (strcmp(level, "5", true)==0)
{
if(PlayerInfo[playerid][pTest]==1) PlayerInfo[playerid][pAHide] = 0;
PlayerInfo[para1[playerid]][pTest]=0;
scripterMode[para1[playerid]]=0;
PlayerInfo[para1[playerid]][pAdmin]=4;
PlayerInfo[para1[playerid]][pTimeMute]=1; PlayerInfo[para1[playerid]][pTimeJail]=1;
format(string115, 115, "* Ти направи %s 4 админ левел. *",pname[para1[playerid]]);
SendClientMessage(playerid, 0x408080FF, string115);
format(string115, 115, "* %s те направи 4 админ левел, позравления. *",pname[playerid]);
SendClientMessage(para1[playerid], 0x408080FF, string115);
format(string115, 115, "*** %s вече е админ с 4 левел права, Честито! ***",pname[para1[playerid]]);
SendClientMessageToAll(0xF97804FF,string115);
}
if (strcmp(level, "6", true)==0)
{
if(PlayerInfo[playerid][pTest]==1) PlayerInfo[playerid][pAHide] = 0;
PlayerInfo[para1[playerid]][pTest]=0;
PlayerInfo[para1[playerid]][pAdmin]=5;
PlayerInfo[para1[playerid]][pTimeMute]=1; PlayerInfo[para1[playerid]][pTimeJail]=1;
format(string115, 115, "* Ти направи %s 5 админ левел. *",pname[para1[playerid]]);
SendClientMessage(playerid, 0x408080FF, string115);
format(string115, 115, "* %s те направи 5 админ левел, позравления. *",pname[playerid]);
SendClientMessage(para1[playerid], 0x408080FF, string115);
format(string115, 115, "*** %s вече е админ с 5 левел права, Честито! ***",pname[para1[playerid]]);
SendClientMessageToAll(0xF97804FF,string115);
}
if (strcmp(level, "7", true)==0)
{
if(PlayerInfo[playerid][pTest]==1) PlayerInfo[playerid][pAHide] = 0;
PlayerInfo[para1[playerid]][pTest]=0;
PlayerInfo[para1[playerid]][pAdmin]=6;
PlayerInfo[para1[playerid]][pTimeMute]=1; PlayerInfo[para1[playerid]][pTimeJail]=1;
format(string115, 115, "* Ти направи %s 5 админ левел. *",pname[para1[playerid]]);
SendClientMessage(playerid, 0x408080FF, string115);
format(string115, 115, "* %s те направи 5 админ левел, позравления. *",pname[playerid]);
SendClientMessage(para1[playerid], 0x408080FF, string115);
format(string115, 115, "*** %s вече е админ с 5 левел права, Честито! ***",pname[para1[playerid]]);
SendClientMessageToAll(0xF97804FF,string115);
}
if(PlayerInfo[para1[playerid]][pTest]==1) { adminprefix[para1[playerid]]="Test Admin"; }
else if(PlayerInfo[para1[playerid]][pAdmin]==1) { adminprefix[para1[playerid]]="Helper"; }
else if(PlayerInfo[para1[playerid]][pAdmin]==2) { adminprefix[para1[playerid]]="Administrator"; }
else if(PlayerInfo[para1[playerid]][pAdmin]==3) { adminprefix[para1[playerid]]="Moderator"; }
else if(PlayerInfo[para1[playerid]][pAdmin]==4) { adminprefix[para1[playerid]]="Grand Admin"; }
else if(PlayerInfo[para1[playerid]][pAdmin]==5) { adminprefix[para1[playerid]]="Owner";}
else if(PlayerInfo[para1[playerid]][pAdmin]==6) { adminprefix[para1[playerid]]="Scripter";}
}
else
{
SendClientMessage(playerid,0xB4B5B7FF,"Посоченото ID не е в сървъра!");
}
}
else
{
SendClientMessage(playerid,0xB4B5B7FF,"Нямаш права за да ползваш командата!");
}
return 1;
}
return 0;
}
public OnPlayerEnterVehicle(playerid, vehicleid, ispassenger)
{
for(new alh=0; alh<maxhouses+2; alh++)
{
if(vehicleid==HouseInfo[alh][hcVeh])
{
if(PlayerInfo[playerid][pHouseO]!=alh)
{
if(!ispassenger)
{
new Float:cx, Float:cy, Float:cz;
GetPlayerPos(playerid, cx, cy, cz);
SetPlayerPos(playerid, cx, cy, cz);
SendClientMessage(playerid, 0x636363FF, "Ти не притежаваш това превозно средство!");
}
}
}
}
//if(OnPlayerUpdate(playerid) == 0)
//{
SetTimerEx("OnPlayerUpdate", 62, true, "i", playerid);
//}
if(eev==0 && inevent[playerid]==1)
{
new Float:cx, Float:cy, Float:cz;
GetPlayerPos(playerid, cx, cy, cz);
SetPlayerPos(playerid, cx, cy, cz);
return SendClientMessage(playerid, COLOR_GRAD1, "Влизането в превозни средства в евента е забранено !");
}
if(!ispassenger)
{
if(vehicleid==mechanicDutyVehs[0] || vehicleid==mechanicDutyVehs[1] ||vehicleid==mechanicDutyVehs[2]
|| vehicleid==mechanicDutyVehs[3] || vehicleid==mechanicDutyVehs[4] ||vehicleid==mechanicDutyVehs[5]
|| vehicleid==mechanicDutyVehs[6] ||vehicleid==mechanicDutyVehs[7])
{
if(towTruckSkin[playerid]==false)
{
new Float:cx, Float:cy, Float:cz;
GetPlayerPos(playerid, cx, cy, cz);
SetPlayerPos(playerid, cx, cy, cz);
SendClientMessage(playerid, COLOR_RED, "Трябва да си със скин на механик за да караш Tow Truck !");
}
}
}
//-----------------------------
new stringprivate[256];
for(new alv=1;alv<MAX_PRIVATEVEHS;alv++)
{
if(vehicleid==PrivateVeh[alv][pvID])
{
if(!ispassenger)
{
if(strcmp(PrivateVeh[alv][pvOwner], pname[playerid], true)>0 || strcmp(PrivateVeh[alv][pvOwner], pname[playerid], true)<0)
{
if(PrivateVeh[alv][pvIsOwned]==1)
{
new Float:cx, Float:cy, Float:cz;
GetPlayerPos(playerid, cx, cy, cz);
SetPlayerPos(playerid, cx, cy, cz);
format(stringprivate,256,"Това превозно средство принадлежи на %s",PrivateVeh[alv][pvOwner]);
SendClientMessage(playerid, 0x636363FF, stringprivate);
return 1;
}
}
}
}
}
//-----------------------------
for(new i2=0; i2<9; i2++)
{
if(vehicleid==carshopcars[i2])
{
if(!ispassenger)
{
new Float:cx, Float:cy, Float:cz;
GetPlayerPos(playerid, cx, cy, cz);
SetPlayerPos(playerid, cx, cy, cz);
return SendClientMessage(playerid, 0x636363FF, "Купи си превозното средство и ще го караш !");
}
}
if(vehicleid==carshopcars2[i2])
{
if(!ispassenger)
{
new Float:cx, Float:cy, Float:cz;
GetPlayerPos(playerid, cx, cy, cz);
SetPlayerPos(playerid, cx, cy, cz);
return SendClientMessage(playerid, 0x636363FF, "Купи си превозното средство и ще го караш !");
}
}
}
if(vehicleid==aztecasVehs[12])
{
if(PlayerInfo[playerid][pTeam]!=5)
{
new Float:cx, Float:cy, Float:cz;
GetPlayerPos(playerid, cx, cy, cz);
SetPlayerPos(playerid, cx, cy, cz);
new string256z[256];
format(string256z,256,"Това превозно средство принадлежи на Varrio Los Aztecas");
return SendClientMessage(playerid, 0x636363FF, string256z);
}
}
if(vehicleid==ballasVehs[10])
{
if(PlayerInfo[playerid][pTeam]!=3)
{
new Float:cx, Float:cy, Float:cz;
GetPlayerPos(playerid, cx, cy, cz);
SetPlayerPos(playerid, cx, cy, cz);
new string256z[256];
format(string256z,256,"Това превозно средство принадлежи на Rolling Heights Ballas");
return SendClientMessage(playerid, 0x636363FF, string256z);
}
}
if(vehicleid==cripzVehs[9])
{
if(PlayerInfo[playerid][pTeam]!=6)
{
new Float:cx, Float:cy, Float:cz;
GetPlayerPos(playerid, cx, cy, cz);
SetPlayerPos(playerid, cx, cy, cz);
new string256z[256];
format(string256z,256,"Това превозно средство принадлежи на Vinewood Cripz");
return SendClientMessage(playerid, 0x636363FF, string256z);
}
}
if(vehicleid==cripzVehs[9])
{
if(PlayerInfo[playerid][pTeam]!=6)
{
new Float:cx, Float:cy, Float:cz;
GetPlayerPos(playerid, cx, cy, cz);
SetPlayerPos(playerid, cx, cy, cz);
new string256z[256];
format(string256z,256,"Това превозно средство принадлежи на Vinewood Cripz");
return SendClientMessage(playerid, 0x636363FF, string256z);
}
}
if(!ispassenger)
{
if(isVipGangVeh[vehicleid]==true)
{
if (PlayerInfo[playerid][pTeam] != FACTION_VIP)
{
new Float:cx, Float:cy, Float:cz;
GetPlayerPos(playerid, cx, cy, cz);
SetPlayerPos(playerid, cx, cy, cz);
new string256z[256];
format(string256z,256,"Това превозно средство принадлежи на %s",TeamInfo[FACTION_VIP][tName]);
return SendClientMessage(playerid, 0x636363FF, string256z);
}
}
}
if(!ispassenger)
{
if(isGroveGangVeh[vehicleid]==true)
{
if (PlayerInfo[playerid][pTeam] != FACTION_GROVE)
{
new Float:cx, Float:cy, Float:cz;
GetPlayerPos(playerid, cx, cy, cz);
SetPlayerPos(playerid, cx, cy, cz);
new string256z[256];
format(string256z,256,"Това превозно средство принадлежи на %s",TeamInfo[FACTION_GROVE][tName]);
return SendClientMessage(playerid, 0x636363FF, string256z);
}
}
}
if(!ispassenger)
{
if(isBallasGangVeh[vehicleid]==true)
{
if (PlayerInfo[playerid][pTeam] != FACTION_BALLAS)
{
new Float:cx, Float:cy, Float:cz;
GetPlayerPos(playerid, cx, cy, cz);
SetPlayerPos(playerid, cx, cy, cz);
new string256z[256];
format(string256z,256,"Това превозно средство принадлежи на %s",TeamInfo[FACTION_BALLAS][tName]);
return SendClientMessage(playerid, 0x636363FF, string256z);
}
}
}
if(!ispassenger)
{
if(isVagosGangVeh[vehicleid]==true)
{
if (PlayerInfo[playerid][pTeam] != FACTION_VAGOS)
{
new Float:cx, Float:cy, Float:cz;
GetPlayerPos(playerid, cx, cy, cz);
SetPlayerPos(playerid, cx, cy, cz);
new string256z[256];
format(string256z,256,"Това превозно средство принадлежи на %s",TeamInfo[FACTION_VAGOS][tName]);
return SendClientMessage(playerid, 0x636363FF, string256z);
}
}
}
if(!ispassenger)
{
if(isAztecasGangVeh[vehicleid]==true)
{
if (PlayerInfo[playerid][pTeam] != FACTION_AZTECAS)
{
new Float:cx, Float:cy, Float:cz;
GetPlayerPos(playerid, cx, cy, cz);
SetPlayerPos(playerid, cx, cy, cz);
new string256z[256];
format(string256z,256,"Това превозно средство принадлежи на %s",TeamInfo[FACTION_AZTECAS][tName]);
return SendClientMessage(playerid, 0x636363FF, string256z);
}
}
}
if(!ispassenger)
{
if(isCripzGangVeh[vehicleid]==true)
{
if (PlayerInfo[playerid][pTeam] != FACTION_CRIPZ)
{
new Float:cx, Float:cy, Float:cz;
GetPlayerPos(playerid, cx, cy, cz);
SetPlayerPos(playerid, cx, cy, cz);
new string256z[256];
format(string256z,256,"Това превозно средство принадлежи на %s",TeamInfo[FACTION_CRIPZ][tName]);
return SendClientMessage(playerid, 0x636363FF, string256z);
}
}
}
if(!ispassenger)
{
if(isTriadsGangVeh[vehicleid]==true)
{
if (PlayerInfo[playerid][pTeam] != FACTION_TRIADS)
{
new Float:cx, Float:cy, Float:cz;
GetPlayerPos(playerid, cx, cy, cz);
SetPlayerPos(playerid, cx, cy, cz);
new string256z[256];
format(string256z,256,"Това превозно средство принадлежи на %s",TeamInfo[FACTION_TRIADS][tName]);
return SendClientMessage(playerid, 0x636363FF, string256z);
}
}
}
if(!ispassenger)
{
if(isRifaGangVeh[vehicleid]==true)
{
if (PlayerInfo[playerid][pTeam] != FACTION_RIFA)
{
new Float:cx, Float:cy, Float:cz;
GetPlayerPos(playerid, cx, cy, cz);
SetPlayerPos(playerid, cx, cy, cz);
new string256z[256];
format(string256z,256,"Това превозно средство принадлежи на %s",TeamInfo[FACTION_RIFA][tName]);
return SendClientMessage(playerid, 0x636363FF, string256z);
}
}
}
if(!ispassenger)
{
if(isSoaGangVeh[vehicleid]==true)
{
if (PlayerInfo[playerid][pTeam] != FACTION_SOA)
{
new Float:cx, Float:cy, Float:cz;
GetPlayerPos(playerid, cx, cy, cz);
SetPlayerPos(playerid, cx, cy, cz);
new string256z[256];
format(string256z,256,"Това превозно средство принадлежи на %s",TeamInfo[FACTION_SOA][tName]);
return SendClientMessage(playerid, 0x636363FF, string256z);
}
}
}
if(!ispassenger)
{
if(isNangGangVeh[vehicleid]==true)
{
if (PlayerInfo[playerid][pTeam] != FACTION_NANG)
{
new Float:cx, Float:cy, Float:cz;
GetPlayerPos(playerid, cx, cy, cz);
SetPlayerPos(playerid, cx, cy, cz);
new string256z[256];
format(string256z,256,"Това превозно средство принадлежи на %s",TeamInfo[FACTION_NANG][tName]);
return SendClientMessage(playerid, 0x636363FF, string256z);
}
}
}
if(!ispassenger)
{
if(isItalianGangVeh[vehicleid]==true)
{
if (PlayerInfo[playerid][pTeam] != FACTION_ITALIAN)
{
new Float:cx, Float:cy, Float:cz;
GetPlayerPos(playerid, cx, cy, cz);
SetPlayerPos(playerid, cx, cy, cz);
new string256z[256];
format(string256z,256,"Това превозно средство принадлежи на %s",TeamInfo[FACTION_ITALIAN][tName]);
return SendClientMessage(playerid, 0x636363FF, string256z);
}
}
}
if(!ispassenger)
{
if(isBountyGangVeh[vehicleid]==true)
{
if (PlayerInfo[playerid][pTeam] != FACTION_BOUNTY)
{
new Float:cx, Float:cy, Float:cz;
GetPlayerPos(playerid, cx, cy, cz);
SetPlayerPos(playerid, cx, cy, cz);
new string256z[256];
format(string256z,256,"Това превозно средство принадлежи на %s",TeamInfo[FACTION_BOUNTY][tName]);
return SendClientMessage(playerid, 0x636363FF, string256z);
}
}
}
if(!ispassenger)
{
if(isLspdGangVeh[vehicleid]==true)
{
if (PlayerInfo[playerid][pTeam] != FACTION_LSPD)
{
new Float:cx, Float:cy, Float:cz;
GetPlayerPos(playerid, cx, cy, cz);
SetPlayerPos(playerid, cx, cy, cz);
new string256z[256];
format(string256z,256,"Това превозно средство принадлежи на %s",TeamInfo[FACTION_LSPD][tName]);
return SendClientMessage(playerid, 0x636363FF, string256z);
}
}
}
if(!ispassenger)
{
if(isLvpdGangVeh[vehicleid]==true)
{
if (PlayerInfo[playerid][pTeam] != FACTION_LVPD)
{
new Float:cx, Float:cy, Float:cz;
GetPlayerPos(playerid, cx, cy, cz);
SetPlayerPos(playerid, cx, cy, cz);
new string256z[256];
format(string256z,256,"Това превозно средство принадлежи на %s",TeamInfo[FACTION_LVPD][tName]);
return SendClientMessage(playerid, 0x636363FF, string256z);
}
}
}
if(!ispassenger)
{
if(isDeltaForceGangVeh[vehicleid]==true)
{
if (PlayerInfo[playerid][pTeam] != FACTION_DELTAFORCE)
{
new Float:cx, Float:cy, Float:cz;
GetPlayerPos(playerid, cx, cy, cz);
SetPlayerPos(playerid, cx, cy, cz);
new string256z[256];
format(string256z,256,"Това превозно средство принадлежи на %s",TeamInfo[FACTION_DELTAFORCE][tName]);
return SendClientMessage(playerid, 0x636363FF, string256z);
}
}
}
if(!ispassenger)
{
if(isSoldierGangVeh[vehicleid]==true)
{
if (PlayerInfo[playerid][pTeam] != FACTION_SOLDIER)
{
new Float:cx, Float:cy, Float:cz;
GetPlayerPos(playerid, cx, cy, cz);
SetPlayerPos(playerid, cx, cy, cz);
new string256z[256];
format(string256z,256,"Това превозно средство принадлежи на %s",TeamInfo[FACTION_SOLDIER][tName]);
return SendClientMessage(playerid, 0x636363FF, string256z);
}
}
}
if(!ispassenger)
{
if(isYakuzaGangVeh[vehicleid]==true)
{
if (PlayerInfo[playerid][pTeam] != FACTION_YAKUZA)
{
new Float:cx, Float:cy, Float:cz;
GetPlayerPos(playerid, cx, cy, cz);
SetPlayerPos(playerid, cx, cy, cz);
new string256z[256];
format(string256z,256,"Това превозно средство принадлежи на %s",TeamInfo[FACTION_YAKUZA][tName]);
return SendClientMessage(playerid, 0x636363FF, string256z);
}
}
}
if(!ispassenger)
{
if(isSyndicateGangVeh[vehicleid]==true)
{
if (PlayerInfo[playerid][pTeam] != FACTION_SYNDICATE)
{
new Float:cx, Float:cy, Float:cz;
GetPlayerPos(playerid, cx, cy, cz);
SetPlayerPos(playerid, cx, cy, cz);
new string256z[256];
format(string256z,256,"Това превозно средство принадлежи на %s",TeamInfo[FACTION_SYNDICATE][tName]);
return SendClientMessage(playerid, 0x636363FF, string256z);
}
}
}
if(!ispassenger)
{
if(isBloodMafiaGangVeh[vehicleid]==true)
{
if (PlayerInfo[playerid][pTeam] != FACTION_BLOODMAFIA)
{
new Float:cx, Float:cy, Float:cz;
GetPlayerPos(playerid, cx, cy, cz);
SetPlayerPos(playerid, cx, cy, cz);
new string256z[256];
format(string256z,256,"Това превозно средство принадлежи на %s",TeamInfo[FACTION_BLOODMAFIA][tName]);
return SendClientMessage(playerid, 0x636363FF, string256z);
}
}
}
if(!ispassenger)
{
if(isMS13GangVeh[vehicleid]==true)
{
if (PlayerInfo[playerid][pTeam] != FACTION_MS13)
{
new Float:cx, Float:cy, Float:cz;
GetPlayerPos(playerid, cx, cy, cz);
SetPlayerPos(playerid, cx, cy, cz);
new string256z[256];
format(string256z,256,"Това превозно средство принадлежи на %s",TeamInfo[FACTION_MS13][tName]);
return SendClientMessage(playerid, 0x636363FF, string256z);
}
}
}
if(!ispassenger)
{
if(isBGMafiaGangVeh[vehicleid]==true)
{
if (PlayerInfo[playerid][pTeam] != FACTION_BGMAFIA)
{
new Float:cx, Float:cy, Float:cz;
GetPlayerPos(playerid, cx, cy, cz);
SetPlayerPos(playerid, cx, cy, cz);
new string256z[256];
format(string256z,256,"Това превозно средство принадлежи на %s",TeamInfo[FACTION_BGMAFIA][tName]);
return SendClientMessage(playerid, 0x636363FF, string256z);
}
}
}
if(!ispassenger)
{
if(is343GangVeh[vehicleid]==true)
{
if (PlayerInfo[playerid][pTeam] != FACTION_343)
{
new Float:cx, Float:cy, Float:cz;
GetPlayerPos(playerid, cx, cy, cz);
SetPlayerPos(playerid, cx, cy, cz);
new string256z[256];
format(string256z,256,"Това превозно средство принадлежи на %s",TeamInfo[FACTION_343][tName]);
return SendClientMessage(playerid, 0x636363FF, string256z);
}
}
}
if (GetVehicleModel(vehicleid) == 454 || GetVehicleModel(vehicleid) == 472 || GetVehicleModel(vehicleid) == 473 || GetVehicleModel(vehicleid) == 484 || GetVehicleModel(vehicleid) == 430 || GetVehicleModel(vehicleid) == 446 || GetVehicleModel(vehicleid) == 452 || GetVehicleModel(vehicleid) == 453 || GetVehicleModel(vehicleid) == 493 || GetVehicleModel(vehicleid) == 595)
{
if(!ispassenger)
{
if(PlayerInfo[playerid][pLodka]==0)
{
new Float:cx, Float:cy, Float:cz;
GetPlayerPos(playerid, cx, cy, cz);
SetPlayerPos(playerid, cx, cy, cz);
SendClientMessage(playerid,0x636363FF, "Ти нямаш шофьорска книжка за лодка!"); return 0;
}
}
}
if (GetVehicleModel(vehicleid) == 460 || GetVehicleModel(vehicleid) == 476 || GetVehicleModel(vehicleid) == 511 || GetVehicleModel(vehicleid) == 512 || GetVehicleModel(vehicleid) == 513 || GetVehicleModel(vehicleid) == 519 || GetVehicleModel(vehicleid) == 520 || GetVehicleModel(vehicleid) == 553 || GetVehicleModel(vehicleid) == 577 || GetVehicleModel(vehicleid) == 592)
{
if(!ispassenger)
{
if(PlayerInfo[playerid][pSamolet]==0)
{
new Float:cx, Float:cy, Float:cz;
GetPlayerPos(playerid, cx, cy, cz);
SetPlayerPos(playerid, cx, cy, cz);
SendClientMessage(playerid,0x636363FF, "Ти нямаш шофьорска книжка за самолет!"); return 0;
}
}
}
if (GetVehicleModel(vehicleid) == 417 || GetVehicleModel(vehicleid) == 425 || GetVehicleModel(vehicleid) == 447 || GetVehicleModel(vehicleid) == 460 || GetVehicleModel(vehicleid) == 469 || GetVehicleModel(vehicleid) == 487 || GetVehicleModel(vehicleid) == 488 || GetVehicleModel(vehicleid) == 497 || GetVehicleModel(vehicleid) == 548 || GetVehicleModel(vehicleid) == 563)
{
if(!ispassenger)
{
if(PlayerInfo[playerid][pHelikopter]==0)
{
new Float:cx, Float:cy, Float:cz;
GetPlayerPos(playerid, cx, cy, cz);
SetPlayerPos(playerid, cx, cy, cz);
SendClientMessage(playerid,0x636363FF, "Ти нямаш шофьорска книжка за хеликоптер!"); return 0;
}
}
}
if (GetVehicleModel(vehicleid) == 537 || GetVehicleModel(vehicleid) == 538)
{
if(!ispassenger)
{
if(PlayerInfo[playerid][pVlak]==0)
{
new Float:cx, Float:cy, Float:cz;
GetPlayerPos(playerid, cx, cy, cz);
SetPlayerPos(playerid, cx, cy, cz);
SendClientMessage(playerid,0x636363FF, "Ти нямаш шофьорска книжка за влак!"); return 0;
}
}
}
if(!ispassenger)
{
for(new i2=0; i2<43; i2++)
{
if(vehicleid==afterwork[i2])
{
if (PlayerInfo[playerid][pAfterWork]==0)
{
new Float:cx, Float:cy, Float:cz;
GetPlayerPos(playerid, cx, cy, cz);
SetPlayerPos(playerid, cx, cy, cz);
SendClientMessage(playerid, 0x636363FF, "Не можеш да караш това превозно средство, защото не си завършил скоро работа!");
}
}
}
}
if(vehicleid == carpizza[5] || vehicleid == carpizza[4] || vehicleid == carpizza[3] || vehicleid == carpizza[2] || vehicleid == carpizza[1])
{
SendClientMessage(playerid, 0xB35900FF, "Pizza Deliver: За да започнеш работа като доставчик на пици напиши /pizza.");
}
if(vehicleid == carsweeper[5] || vehicleid == carsweeper[4] || vehicleid == carsweeper[3] || vehicleid == carsweeper[2] || vehicleid == carsweeper[1])
{
SendClientMessage(playerid, 0xB35900FF, "Sweeper: За да започнеш работа като чистач на улици напиши /sweep.");
}
if(vehicleid == carcoalmine[5] || vehicleid == carcoalmine[4] || vehicleid == carcoalmine[3] || vehicleid == carcoalmine[2] || vehicleid == carcoalmine[1])
{
SendClientMessage(playerid, 0xB35900FF, "Coalmine: За да започнеш работа като шофьор на самосвал напиши /coalmine.");
}
if(vehicleid == carpilot[5] || vehicleid == carpilot[4] || vehicleid == carpilot[3] || vehicleid == carpilot[2] || vehicleid == carpilot[1])
{
SendClientMessage(playerid, 0xB35900FF, "Pilot: За да започнеш работа като пилот напиши /pilot.");
}
if(vehicleid == carbus[5] || vehicleid == carbus[4] || vehicleid == carbus[3] || vehicleid == carbus[2] || vehicleid == carbus[1])
{
SendClientMessage(playerid, 0xB35900FF, "Bus: За да започнеш работа като шофьр напиши /bus.");
}
if(vehicleid == carboat[5] || vehicleid == carboat[4] || vehicleid == carboat[3] || vehicleid == carboat[2] || vehicleid == carboat[1])
{
SendClientMessage(playerid, 0xB35900FF, "Boat: За да започнеш работа като шофьр на лодка напиши /boat.");
}
if(vehicleid == cardeliver[5] || vehicleid == cardeliver[4] || vehicleid == cardeliver[3] || vehicleid == cardeliver[2] || vehicleid == cardeliver[1])
{
SendClientMessage(playerid, 0xB35900FF, "Deliver: За да започнеш работа като доставчик напиши /deliver.");
}
if(vehicleid == cartruck[5] || vehicleid == cartruck[4] || vehicleid == cartruck[3] || vehicleid == cartruck[2] || vehicleid == cartruck[1])
{
SendClientMessage(playerid, 0xB35900FF, "Truck: За да започнеш работа като тираджия напиши /truck.");
}
if(!ispassenger)
{
for(new i2=0; i2<sizeof(specialForceCars); i2++)
{
if(vehicleid==specialForceCars[i2])
{
if (PlayerInfo[playerid][pTeam] != 15)
{
SendClientMessage(playerid, 0x636363FF, "Това превозно средство принадлежи на Delta Force");
new Float:cx, Float:cy, Float:cz;
GetPlayerPos(playerid, cx, cy, cz);
SetPlayerPos(playerid, cx, cy, cz);
return 1;
}
if (PlayerInfo[playerid][pSpecialForce] ==0)
{
SendClientMessage(playerid, 0x636363FF, "Трябва да бъдеш Special Force за да караш това превозно средство");
new Float:cx, Float:cy, Float:cz;
GetPlayerPos(playerid, cx, cy, cz);
SetPlayerPos(playerid, cx, cy, cz);
return 1;
}
if (PlayerInfo[playerid][pDFDuty] ==0)
{
SendClientMessage(playerid, 0x636363FF, "Трябва да бъдеш на Special Force смяна за да караш това превозно средство");
new Float:cx, Float:cy, Float:cz;
GetPlayerPos(playerid, cx, cy, cz);
SetPlayerPos(playerid, cx, cy, cz);
return 1;
}
if(sfpermission==0)
{
SendClientMessage(playerid, 0x636363FF, "Special Force превозните средства са заключени");
new Float:cx, Float:cy, Float:cz;
GetPlayerPos(playerid, cx, cy, cz);
SetPlayerPos(playerid, cx, cy, cz);
return 1;
}
}
}
}
if(!ispassenger)
{
for(new i2=0; i2<4; i2++)
{
if(vehicleid==fueltruck[i2])
{
if(PlayerInfo[playerid][pIFC]==0)
{
SendClientMessage(playerid, 0x636363FF, "Не можеш да караш това превозно средство, защото не си член на IFC!");
new Float:cx, Float:cy, Float:cz;
GetPlayerPos(playerid, cx, cy, cz);
SetPlayerPos(playerid, cx, cy, cz);
}
if (PlayerInfo[playerid][pIFCDuty] ==0)
{
new Float:cx, Float:cy, Float:cz;
GetPlayerPos(playerid, cx, cy, cz);
SetPlayerPos(playerid, cx, cy, cz);
SendClientMessage(playerid, 0x636363FF, "Не можеш да караш това превозно средство, защото не си на служба!");
}
}
}
}
return 1;
}
public OnPlayerExitVehicle(playerid, vehicleid)
{
if(GetVehicleTrailer(vehicleid)==fuelremarke[0] || GetVehicleTrailer(vehicleid)==fuelremarke[1] || GetVehicleTrailer(vehicleid)==fuelremarke[2])
{
TextDrawHideForPlayer(playerid,vehstatus2[playerid]);
}
drive[vehicleid]=0;
if(onWork[playerid]==1)
{
new Float:cx, Float:cy, Float:cz;
GetPlayerPos(playerid, cx, cy, cz);
SetPlayerPos(playerid, cx, cy, cz);
PutPlayerInVehicle(playerid, vehicleid, 0);
}
if(loadedtext[playerid]==1)
{
TextDrawHideForPlayer(playerid,vehstatus2[playerid]);
TextDrawHideForPlayer(playerid,vehstatus[playerid]);
loadedtext[playerid]=0;
}
return 1;
}
public OnTrailerUpdate(playerid, vehicleid)
{
new withTank=0;
if(PlayerInfo[playerid][pIFCDuty]==0)
{
if(GetVehicleTrailer(GetPlayerVehicleID(playerid))==fuelremarke[0] || GetVehicleTrailer(GetPlayerVehicleID(playerid))==fuelremarke[1] || GetVehicleTrailer(GetPlayerVehicleID(playerid))==fuelremarke[2])
{
DetachTrailerFromVehicle(GetPlayerVehicleID(playerid));
GetPlayerPos(playerid,X[playerid],Y[playerid],Z[playerid]);
SetVehiclePos(GetPlayerVehicleID(playerid),X[playerid]+1,Y[playerid]+1,Z[playerid]);
SendClientMessage(playerid,COLOR_GRAD1,"Трябва да влезеш на смяна за да закачиш ремаркето!");
}
}
for(new i; i<3; i++)
{
if(GetVehicleTrailer(GetPlayerVehicleID(playerid))==fuelremarke[i])
{
new stringveha[115];
format(stringveha,115,"~n~~n~~n~~y~PT: %dL",vehfuel2[GetVehicleTrailer(GetPlayerVehicleID(playerid))]);
TextDrawSetString(vehstatus2[playerid], stringveha);
TextDrawShowForPlayer(playerid,vehstatus2[playerid]);
vehStatus2On[playerid]=true;
}
}


//TextDrawHideForPlayer(playerid,vehstatus2[playerid]);

return 0;
}
public OnPlayerStateChange(playerid, newstate, oldstate)
{
SetTimerEx("OnPlayerUpdate", 62, true, "i", playerid);
if(newstate==PLAYER_STATE_DRIVER)
{
new vehicleid=GetPlayerVehicleID(playerid);
if(vehicleid==mechanicDutyVehs[0] || vehicleid==mechanicDutyVehs[1] ||vehicleid==mechanicDutyVehs[2]
|| vehicleid==mechanicDutyVehs[3] || vehicleid==mechanicDutyVehs[4] ||vehicleid==mechanicDutyVehs[5]
|| vehicleid==mechanicDutyVehs[6] ||vehicleid==mechanicDutyVehs[7])
{
ToggleEngine(vehicleid, VEHICLE_PARAMS_OFF);
SendClientMessage(playerid,0x808000FF,"Трябва да платиш $150 за да ползваш Tow Truck! /epay или /exit ?");
}
}
if(vehLocker[playerid]!=-1)
{
if(newstate == PLAYER_STATE_PASSENGER || newstate == PLAYER_STATE_ONFOOT)
{
for(new i=0; i < MAX_PLAYERS; i++)
{
SetVehicleParamsForPlayer(vehLocker[playerid],i,0,0);
}
}
}
if (newstate == PLAYER_STATE_DRIVER || newstate == PLAYER_STATE_PASSENGER || newstate == PLAYER_STATE_ONFOOT) {
vehLocker[playerid]=-1;
}
if (newstate == PLAYER_STATE_DRIVER) {
SetPlayerArmedWeapon(playerid,0);
g_veh[playerid] = GetPlayerVehicleID(playerid);
}
if(AntiFallOfBike[playerid]==1)
{
if(GetVehicleModel(g_veh[playerid]) == 509 || GetVehicleModel(g_veh[playerid]) == 510 || GetVehicleModel(g_veh[playerid]) == 481)
{
new Float:Health; GetPlayerHealth(playerid,Health);
if(newstate == PLAYER_STATE_ONFOOT && oldstate == PLAYER_STATE_DRIVER && lastkey[playerid]!=16 && Health>0.0)
{
PutPlayerInVehicle(playerid, g_veh[playerid], 0);
}
}
}
if(newstate==PLAYER_STATE_DRIVER)
{
drive[GetPlayerVehicleID(playerid)]=1;
}
if (newstate==PLAYER_STATE_PASSENGER)
{
passenger[playerid]=true;
if(GetVehicleModel(GetPlayerVehicleID(playerid))==431
|| GetVehicleModel(GetPlayerVehicleID(playerid))==437
|| GetVehicleModel(GetPlayerVehicleID(playerid))==508
|| GetVehicleModel(GetPlayerVehicleID(playerid))==431
|| GetVehicleModel(GetPlayerVehicleID(playerid))==573)
{
SetPlayerInterior(playerid,0);
SetPlayerVirtualWorld(playerid,GetPlayerVehicleID(playerid));
SetPlayerPos(playerid,2021.8448,2235.1274,2103.9536);
SetPlayerFacingAngle(playerid,180.7037);
SetCameraBehindPlayer(playerid);
}
}
if (newstate==PLAYER_STATE_DRIVER)
{
driver[playerid]=1;
PlayerInfo[playerid][pFuel] = 25;
}
if (newstate!=PLAYER_STATE_DRIVER)
{
driver[playerid]=0;
PlayerInfo[playerid][pFuel] = -1;
}
if (newstate==PLAYER_STATE_DRIVER||newstate==PLAYER_STATE_PASSENGER)
{
if(loadedtext[playerid]==0)
{
if(speedo[playerid]==0)
{
TextDrawShowForPlayer(playerid,vehstatus[playerid]);
}
loadedtext[playerid]=1;
}
GetVehicleHealth(GetPlayerVehicleID(playerid),vehhealth[playerid]);
if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 481
&& GetVehicleModel(GetPlayerVehicleID(playerid)) != 509
&& GetVehicleModel(GetPlayerVehicleID(playerid)) != 510
&& GetVehicleModel(GetPlayerVehicleID(playerid)) != 481)
{
if(speedo[playerid]==0)
{
if(kmh[playerid]==0)
{
format(stringvehicle[playerid],115,"~p~Speed: %dkm/h~n~~g~Health: %.0f~n~~b~Fuel: %dL",GetVehicleKmh(GetPlayerVehicleID(playerid)),vehhealth[playerid],vehfuel[GetPlayerVehicleID(playerid)]);
}
else
{
new vehicleid,Float:speed_x,Float:speed_y,Float:speed_z,final_speed_int;
vehicleid = GetPlayerVehicleID(playerid);
GetVehicleVelocity(vehicleid,speed_x,speed_y,speed_z);
final_speed_int = GetVehicleKmh(vehicleid);
format(stringvehicle[playerid],115,"~p~Speed: %dm/s~n~~g~Health: %.0f~n~~b~Fuel: %dL",final_speed_int,vehhealth[playerid],vehfuel[GetPlayerVehicleID(playerid)]);
}
}
}
else
{
if(speedo[playerid]==0)
{
if(kmh[playerid]==0)
{
format(stringvehicle[playerid],115,"~p~Speed: %dkm/h~n~~g~Health: %.0f",GetVehicleKmh(GetPlayerVehicleID(playerid)),vehhealth[playerid]);
}
else
{
new vehicleid,Float:speed_x,Float:speed_y,Float:speed_z,final_speed_int;
vehicleid = GetPlayerVehicleID(playerid);
GetVehicleVelocity(vehicleid,speed_x,speed_y,speed_z);
final_speed_int = GetVehicleKmh(vehicleid);
format(stringvehicle[playerid],115,"~p~Speed: %dm/s~n~~g~Health: %.0f",final_speed_int,vehhealth[playerid]);
}
}
}
TextDrawSetString(vehstatus[playerid],stringvehicle[playerid]);
}
if (oldstate==PLAYER_STATE_DRIVER && newstate==PLAYER_STATE_ONFOOT||oldstate==PLAYER_STATE_PASSENGER && newstate==PLAYER_STATE_ONFOOT || oldstate==PLAYER_STATE_DRIVER && newstate==PLAYER_STATE_WASTED || oldstate==PLAYER_STATE_DRIVER && newstate==PLAYER_STATE_SPECTATING||oldstate==PLAYER_STATE_PASSENGER && newstate==PLAYER_STATE_SPECTATING
|| oldstate==PLAYER_STATE_DRIVER && newstate==PLAYER_STATE_SPECTATING )
{
if(loadedtext[playerid]==1)
{
TextDrawHideForPlayer(playerid,vehstatus[playerid]);
loadedtext[playerid]=0;
}
}
return 1;
}
stock SetPlayerToLastCoors(playerid)
{
SetPlayerPos(playerid, LastCoor[playerid][sPx], LastCoor[playerid][sPy], LastCoor[playerid][sPz]);
SetPlayerFacingAngle(playerid, LastCoor[playerid][sAngle]);
SetPlayerInterior(playerid, LastCoor[playerid][sPint]);
SetPlayerVirtualWorld(playerid, LastCoor[playerid][sVw]);
}
stock GetPlayerLastCoors(playerid)
{
GetPlayerPos(playerid, LastCoor[playerid][sPx], LastCoor[playerid][sPy], LastCoor[playerid][sPz]);
LastCoor[playerid][sPint] = GetPlayerInterior(playerid);
LastCoor[playerid][sVw] = GetPlayerVirtualWorld(playerid);
GetPlayerFacingAngle(playerid, LastCoor[playerid][sAngle]);
}
public OnPlayerEnterCheckpoint(playerid)
{
if (IsPlayerInRangeOfPoint(playerid, 5.0, DeathmatchCheckpoint1) || IsPlayerInRangeOfPoint(playerid, 5.0, DeathmatchCheckpoint2))
{
if(GetPlayerVirtualWorld(playerid)==0 && GetPlayerInterior(playerid) == 0)
{
if(PlayerInfo[playerid][pADuty]==1) return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да влезеш, когато си ADMIN ON Duty!");
if(onWork[playerid]==1) return SendClientMessage(playerid,COLOR_GRAD1,"В момента си на раобта и не можеш да влезеш !");
if(cmn1[playerid]==1) return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да влезеш в Deathmatch, докато си CMN1!");
DisablePlayerCheckpoint(playerid); DisablePlayerRaceCheckpoint(playerid);
playerInDeathmatch[playerid]=true;
SetPlayerInterior(playerid,0);
SetPlayerHealth(playerid,100);
SetPlayerArmour(playerid,0);
ResetPlayerWeapons(playerid);
GivePlayerWeapon(playerid,deathmatchGun,10000);
SendClientMessage(playerid,COLOR_DEATHMATCH,"Deathmatch: Ти влезе в битката! Не удряй и не стреляй, докато тя не започне!");
SendClientMessage(playerid,COLOR_DEATHMATCH,"Deathmatch: За да излезеш  от нея напиши /leavedm");
GetPlayerLastCoors(playerid);
SetPlayerVirtualWorld(playerid,1);
deathmatchPlayers+=1;
if(deathmatchPlayers==2)
{
deathmatchStartTimer=120;
SendClientMessageToAll(COLOR_DEATHMATCH,"Deathmatch: След 120 секунди ще стартира битката, побързайте, които не са дошли!");
}
if(deathmatchPlayers<2)
{
deathmatchStartTimer=0;
}
if(deathmatchFightArea==1)
{
new randomSpawn=randomex(1,3);
if(randomSpawn==1)
{
SetPlayerPos(playerid,DeathmatchPlace1Spawn1);
}
else if(randomSpawn==2)
{
SetPlayerPos(playerid,DeathmatchPlace1Spawn2);
}
else if(randomSpawn==3)
{
SetPlayerPos(playerid,DeathmatchPlace1Spawn3);
}
}
else if(deathmatchFightArea==2)
{
new randomSpawn=randomex(1,3);
if(randomSpawn==1)
{
SetPlayerPos(playerid,DeathmatchPlace2Spawn1);
}
else if(randomSpawn==2)
{
SetPlayerPos(playerid,DeathmatchPlace2Spawn2);
}
else if(randomSpawn==3)
{
SetPlayerPos(playerid,DeathmatchPlace2Spawn3);
}
}
}
}


if(IsPlayerInRangeOfPoint(playerid, 5.0, MoneyBoxDeliverpoint1) || IsPlayerInRangeOfPoint(playerid, 5.0, MoneyBoxDeliverpoint2)
|| IsPlayerInRangeOfPoint(playerid, 5.0, MoneyBoxDeliverpoint3) || IsPlayerInRangeOfPoint(playerid, 5.0, MoneyBoxDeliverpoint4))
{ //goto
if(GetPlayerVirtualWorld(playerid)==0 && GetPlayerInterior(playerid) == 0)
{
GivePlayerCMN1Status(playerid);
cmn1Mission[playerid]=MISSION_MONEYBOX;
new stringmoneybox[115];
format(stringmoneybox,115,"~w~YOU WON:~n~~g~$%d",cmn1Money);
GameTextForPlayer(playerid, stringmoneybox, 3000, 3);
format(stringmoneybox,115,"Moneybox: %s успешно занесе куфара и спечели $%d",pname[playerid],cmn1Money);
SendClientMessageToAll(0x40BF00FF,stringmoneybox);
format(stringmoneybox,115,"[SUSPECT]{0040FF} Ти си заподозрян в престъпление: Грабеж на пари, ниво на издирване: %d",PlayerInfo[playerid][pWanted]);
SendClientMessage(playerid,0xFF0000FF,stringmoneybox);
format(stringmoneybox,115,"CMN1: %s е заподозрян в грабеж,убий го и ще получиш CMN1 Kill.",pname[playerid]);
SendClientMessageToAll(0xF97804FF,stringmoneybox);
SendClientMessage(playerid,0xF97804FF,"CMN1: Трябва да оцелееш 5 минути за да не си преследван повече.");
playerWithMoneyBox[playerid]=false;
missionActive=MISSION_NONE;
for(new i; i<MAX_PLAYERS; i++)
{
if(onWork[i]==0 && gpsOn[i]==false)
{
DisablePlayerCheckpoint(i);
}
}
isMoneyBoxGet=false;
whoHaveMoneyBox=-1;
}
}


if(PlayerInfo[playerid][pBizO]>-1)
{
gpsOn[playerid]=false;
new playersBiz=PlayerInfo[playerid][pBizO];
new Float: playerBizX=BizInfo[playersBiz][bX];
new Float: playerBizY=BizInfo[playersBiz][bY];
new Float: playerBizZ=BizInfo[playersBiz][bZ];
if (IsPlayerInRangeOfPoint(playerid, 4.0,playerBizX,playerBizY,playerBizZ))
{
SendClientMessage(playerid,0xffff00FF,"Ти пристигна до твоя бизнес!");
DisablePlayerCheckpoint(playerid);
}
}
if(PlayerInfo[playerid][pHouseO]>-1)
{
gpsOn[playerid]=false;
new playersHouse=PlayerInfo[playerid][pHouseO];
new Float: playerHouseX=HouseInfo[playersHouse][hX];
new Float: playerHouseY=HouseInfo[playersHouse][hY];
new Float: playerHouseZ=HouseInfo[playersHouse][hZ];
if (IsPlayerInRangeOfPoint(playerid, 4.0,playerHouseX,playerHouseY,playerHouseZ))
{
SendClientMessage(playerid,0xffff00FF,"Ти пристигна до твоята къща!");
DisablePlayerCheckpoint(playerid);
}
}
if(onWork[playerid]==1)
{
if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 431)
{
if (IsPlayerInRangeOfPoint(playerid, 4.0,BusCheckPoint1))
{
SetPlayerCheckpoint(playerid, BusCheckPoint2, 4.0);
}
if (IsPlayerInRangeOfPoint(playerid, 4.0,BusCheckPoint2))
{
SetPlayerCheckpoint(playerid, BusCheckPoint3, 4.0);
}
if (IsPlayerInRangeOfPoint(playerid, 4.0,BusCheckPoint3))
{
SetPlayerCheckpoint(playerid, BusCheckPoint4, 4.0);
}
if (IsPlayerInRangeOfPoint(playerid, 4.0,BusCheckPoint4))
{
SetPlayerCheckpoint(playerid, BusCheckPoint5, 4.0);
}
if (IsPlayerInRangeOfPoint(playerid, 4.0,BusCheckPoint5))
{
SetPlayerCheckpoint(playerid, BusCheckPoint6, 4.0);
}
if (IsPlayerInRangeOfPoint(playerid, 4.0,BusCheckPoint6))
{
SetPlayerCheckpoint(playerid, BusCheckPoint7, 4.0);
}
if (IsPlayerInRangeOfPoint(playerid, 4.0,BusCheckPoint7))
{
SetPlayerCheckpoint(playerid, BusCheckPoint8, 4.0);
}
if (IsPlayerInRangeOfPoint(playerid, 4.0,BusCheckPoint8))
{
SetPlayerCheckpoint(playerid, BusCheckPoint9, 4.0);
}
if (IsPlayerInRangeOfPoint(playerid, 4.0,BusCheckPoint9))
{
SetPlayerCheckpoint(playerid, BusCheckPoint10, 4.0);
}
if (IsPlayerInRangeOfPoint(playerid, 4.0,BusCheckPoint10))
{
SetPlayerCheckpoint(playerid, BusCheckPoint11, 4.0);
}
if (IsPlayerInRangeOfPoint(playerid, 4.0,BusCheckPoint11))
{
SetPlayerCheckpoint(playerid, BusCheckPoint12, 4.0);
}
if (IsPlayerInRangeOfPoint(playerid, 4.0,BusCheckPoint12))
{
SetPlayerCheckpoint(playerid, BusCheckPoint13, 4.0);
}
if (IsPlayerInRangeOfPoint(playerid, 4.0,BusCheckPoint13))
{
SetPlayerCheckpoint(playerid, BusCheckPoint14, 4.0);
}
if (IsPlayerInRangeOfPoint(playerid, 4.0,BusCheckPoint14))
{
SetPlayerCheckpoint(playerid, BusCheckPoint15, 4.0);
}
if (IsPlayerInRangeOfPoint(playerid, 4.0,BusCheckPoint15))
{
SetPlayerCheckpoint(playerid, BusCheckPoint16, 4.0);
}
if (IsPlayerInRangeOfPoint(playerid, 4.0,BusCheckPoint16))
{
SetPlayerCheckpoint(playerid, BusCheckPoint17, 4.0);
}
if (IsPlayerInRangeOfPoint(playerid, 4.0,BusCheckPoint17))
{
SetPlayerCheckpoint(playerid, BusCheckPoint18, 4.0);
}
if (IsPlayerInRangeOfPoint(playerid, 4.0,BusCheckPoint18))
{
SetPlayerCheckpoint(playerid, BusTakePoint, 4.0);
SendClientMessage(playerid, 0xB35900FF, "Ти премина през всички червени маркери, сега трябва да върнеш буса.");
}
if (IsPlayerInRangeOfPoint(playerid, 4.0,BusTakePoint))
{
PlayerInfo[playerid][pAfterWork]=30*60;
DisablePlayerCheckpoint(playerid);
SendClientMessage(playerid,0xB35900FF,"Ти премина през всички маркери и получаваш 5,000$ и 5 EP.");
GivePlayerMoney(playerid, 5000);
GivePlayerEP(playerid,5);
onWork[playerid]=0;
ToggleEngine(GetPlayerVehicleID(playerid), VEHICLE_PARAMS_OFF);
if(PlayerInfo[playerid][pVip]<3)
{
PlayerInfo[playerid][pBusTimerWorkAgain]=60*60;
}
if(PlayerInfo[playerid][pVip]>=3 && PlayerInfo[playerid][pVip]<6)
{
PlayerInfo[playerid][pBusTimerWorkAgain]=30*60;
SendClientMessage(playerid,0xB35900FF,"Твоето време за чакане до нова работа е 30 минути.");
}
if(PlayerInfo[playerid][pVip]==6 || freevip==1)
{
SendClientMessage(playerid,0xB35900FF,"Твоето време за чакане до нова работа е 20 минути.");
SendClientMessage(playerid,0xB35900FF,"Ти спечели 3 EP, защото си VIP Level 6.");
PlayerInfo[playerid][pBusTimerWorkAgain]=20*60;
GivePlayerEP(playerid,3);
}
RestartPlayerColor(playerid);
GivePlayerMission(playerid);
}
}
}
if(onWork[playerid]==1)
{
if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 406)
{
if (IsPlayerInRangeOfPoint(playerid, 4.0,CoalmineCheckPoint1))
{
SetPlayerCheckpoint(playerid, CoalmineCheckPoint2, 4.0);
}
if (IsPlayerInRangeOfPoint(playerid, 4.0,CoalmineCheckPoint2))
{
SetPlayerCheckpoint(playerid, CoalmineCheckPoint3, 4.0);
}
if (IsPlayerInRangeOfPoint(playerid, 4.0,CoalmineCheckPoint3))
{
SetPlayerCheckpoint(playerid, CoalmineCheckPoint4, 4.0);
}
if (IsPlayerInRangeOfPoint(playerid, 4.0,CoalmineCheckPoint4))
{
SetPlayerCheckpoint(playerid, CoalmineCheckPoint5, 4.0);
}
if (IsPlayerInRangeOfPoint(playerid, 4.0,CoalmineCheckPoint5))
{
SetPlayerCheckpoint(playerid, CoalmineCheckPoint6, 4.0);
}
if (IsPlayerInRangeOfPoint(playerid, 4.0,CoalmineCheckPoint6))
{
SetPlayerCheckpoint(playerid, CoalmineCheckPoint7, 4.0);
}
if (IsPlayerInRangeOfPoint(playerid, 4.0,CoalmineCheckPoint7))
{
SetPlayerCheckpoint(playerid, CoalmineCheckPoint8, 4.0);
}
if (IsPlayerInRangeOfPoint(playerid, 4.0,CoalmineCheckPoint8))
{
SetPlayerCheckpoint(playerid, CoalmineTakePoint, 4.0);
SendClientMessage(playerid, 0xB35900FF, "Ти премина през всички червени маркери, сега трябва да върнеш самосвала.");
}
if (IsPlayerInRangeOfPoint(playerid, 4.0,CoalmineTakePoint))
{
//
DisablePlayerCheckpoint(playerid);PlayerInfo[playerid][pAfterWork]=30*60;
SendClientMessage(playerid,0xB35900FF,"Ти премина през всички маркери и получаваш 5,000$ и 5 EP.");
GivePlayerMoney(playerid, 5000);
GivePlayerEP(playerid,5);
onWork[playerid]=0;
ToggleEngine(GetPlayerVehicleID(playerid), VEHICLE_PARAMS_OFF);
if(PlayerInfo[playerid][pVip]<3)
{
PlayerInfo[playerid][pCoalmineTimerWorkAgain]=60*60;
}
if(PlayerInfo[playerid][pVip]>=3 && PlayerInfo[playerid][pVip]<6)
{
PlayerInfo[playerid][pCoalmineTimerWorkAgain]=30*60;
SendClientMessage(playerid,0xB35900FF,"Твоето време за чакане до нова работа е 30 минути.");
}
if(PlayerInfo[playerid][pVip]==6 || freevip==1)
{
SendClientMessage(playerid,0xB35900FF,"Твоето време за чакане до нова работа е 20 минути.");
SendClientMessage(playerid,0xB35900FF,"Ти спечели 3 EP, защото си VIP Level 6.");
PlayerInfo[playerid][pCoalmineTimerWorkAgain]=20*60;
GivePlayerEP(playerid,3);
}
RestartPlayerColor(playerid);
GivePlayerMission(playerid);
}
}
}
if(onWork[playerid]==1)
{
if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 574)
{
if (IsPlayerInRangeOfPoint(playerid, 4.0,SweepCheckPoint1))
{
SetPlayerCheckpoint(playerid, SweepCheckPoint2, 4.0);
}
if (IsPlayerInRangeOfPoint(playerid, 4.0,SweepCheckPoint2))
{
SetPlayerCheckpoint(playerid, SweepCheckPoint3, 4.0);
}
if (IsPlayerInRangeOfPoint(playerid, 4.0,SweepCheckPoint3))
{
SetPlayerCheckpoint(playerid, SweepCheckPoint4, 4.0);
}
if (IsPlayerInRangeOfPoint(playerid, 4.0,SweepCheckPoint4))
{
SetPlayerCheckpoint(playerid, SweepCheckPoint5, 4.0);
}
if (IsPlayerInRangeOfPoint(playerid, 4.0,SweepCheckPoint5))
{
SetPlayerCheckpoint(playerid, SweepCheckPoint6, 4.0);
}
if (IsPlayerInRangeOfPoint(playerid, 4.0,SweepCheckPoint6))
{
SetPlayerCheckpoint(playerid, SweepTakePoint, 4.0);
SendClientMessage(playerid, 0xB35900FF, "Ти премина през всички червени маркери, сега трябва да върнеш превозното средство.");
}
if (IsPlayerInRangeOfPoint(playerid, 4.0,SweepTakePoint))
{
//
DisablePlayerCheckpoint(playerid);PlayerInfo[playerid][pAfterWork]=30*60;
SendClientMessage(playerid,0xB35900FF,"Ти почисти всички улици и получаваш 5,000$ и 5 EP.");
GivePlayerMoney(playerid, 5000);
GivePlayerEP(playerid,5);
onWork[playerid]=0;
ToggleEngine(GetPlayerVehicleID(playerid), VEHICLE_PARAMS_OFF);
if(PlayerInfo[playerid][pVip]<3)
{
PlayerInfo[playerid][pSweeperTimerWorkAgain]=60*60;
}
if(PlayerInfo[playerid][pVip]>=3 && PlayerInfo[playerid][pVip]<6)
{
PlayerInfo[playerid][pSweeperTimerWorkAgain]=30*60;
SendClientMessage(playerid,0xB35900FF,"Твоето време за чакане до нова работа е 30 минути.");
}
if(PlayerInfo[playerid][pVip]==6 || freevip==1)
{
SendClientMessage(playerid,0xB35900FF,"Твоето време за чакане до нова работа е 20 минути.");
SendClientMessage(playerid,0xB35900FF,"Ти спечели 3 EP, защото си VIP Level 6.");
PlayerInfo[playerid][pSweeperTimerWorkAgain]=20*60;
GivePlayerEP(playerid,3);
}
RestartPlayerColor(playerid);
GivePlayerMission(playerid);
}
}
}
if(onWork[playerid]==1)
{
if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 448)
{
if (IsPlayerInRangeOfPoint(playerid, 4.0,PizzaCheckPoint1))
{
SetPlayerCheckpoint(playerid, PizzaCheckPoint2, 4.0);
}
if (IsPlayerInRangeOfPoint(playerid, 4.0,PizzaCheckPoint2))
{
SetPlayerCheckpoint(playerid, PizzaCheckPoint3, 4.0);
}
if (IsPlayerInRangeOfPoint(playerid, 4.0,PizzaCheckPoint3))
{
SetPlayerCheckpoint(playerid, PizzaCheckPoint4, 4.0);
}
if (IsPlayerInRangeOfPoint(playerid, 4.0,PizzaCheckPoint4))
{
SetPlayerCheckpoint(playerid, PizzaCheckPoint5, 4.0);
}
if (IsPlayerInRangeOfPoint(playerid, 4.0,PizzaCheckPoint5))
{
SetPlayerCheckpoint(playerid, PizzaCheckPoint6, 4.0);
}
if (IsPlayerInRangeOfPoint(playerid, 4.0,PizzaCheckPoint6))
{
SetPlayerCheckpoint(playerid, PizzaCheckPoint7, 4.0);
}
if (IsPlayerInRangeOfPoint(playerid, 4.0,PizzaCheckPoint7))
{
SetPlayerCheckpoint(playerid, PizzaCheckPoint8, 4.0);
}
if (IsPlayerInRangeOfPoint(playerid, 4.0,PizzaCheckPoint8))
{
SetPlayerCheckpoint(playerid, PizzaTakePoint, 4.0);
SendClientMessage(playerid, 0xB35900FF, "Ти премина през всички червени маркери, сега трябва да върнеш мотора.");
}
if (IsPlayerInRangeOfPoint(playerid, 4.0,PizzaTakePoint))
{
//
DisablePlayerCheckpoint(playerid);PlayerInfo[playerid][pAfterWork]=30*60;
SendClientMessage(playerid,0xB35900FF,"Ти достави всички пици и получаваш 5,000$ и 5 EP.");
GivePlayerMoney(playerid, 5000);
GivePlayerEP(playerid,5);
onWork[playerid]=0;
ToggleEngine(GetPlayerVehicleID(playerid), VEHICLE_PARAMS_OFF);
if(PlayerInfo[playerid][pVip]<3)
{
PlayerInfo[playerid][pPizzaTimerWorkAgain]=60*60;
}
if(PlayerInfo[playerid][pVip]>=3 && PlayerInfo[playerid][pVip]<6)
{
PlayerInfo[playerid][pPizzaTimerWorkAgain]=30*60;
SendClientMessage(playerid,0xB35900FF,"Твоето време за чакане до нова работа е 30 минути.");
}
if(PlayerInfo[playerid][pVip]==6 || freevip==1)
{
SendClientMessage(playerid,0xB35900FF,"Твоето време за чакане до нова работа е 20 минути.");
SendClientMessage(playerid,0xB35900FF,"Ти спечели 3 EP, защото си VIP Level 6.");
PlayerInfo[playerid][pPizzaTimerWorkAgain]=20*60;
GivePlayerEP(playerid,3);
}
RestartPlayerColor(playerid);
GivePlayerMission(playerid);
}
}
}
if(onWork[playerid]==1)
{
if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 511)
{
if (IsPlayerInRangeOfPoint(playerid, 5.0,PilotCheckPoint1))
{
DisablePlayerCheckpoint(playerid);
SetPlayerCheckpoint(playerid, PilotCheckPoint2, 5.0);
}
if (IsPlayerInRangeOfPoint(playerid, 5.0,PilotCheckPoint2))
{
DisablePlayerCheckpoint(playerid);
SetPlayerCheckpoint(playerid, PilotCheckPoint3, 5.0);
}
if (IsPlayerInRangeOfPoint(playerid, 5.0,PizzaCheckPoint3))
{
DisablePlayerCheckpoint(playerid);
SetPlayerCheckpoint(playerid, PilotTakePoint, 5.0);
SendClientMessage(playerid, 0xB35900FF, "Ти премина през всички червени маркери, сега трябва да върнеш самолета.");
}
if (IsPlayerInRangeOfPoint(playerid, 10.0,PilotTakePoint))
{
//
DisablePlayerCheckpoint(playerid);PlayerInfo[playerid][pAfterWork]=30*60;
//
SendClientMessage(playerid,0xB35900FF,"Ти достави всички пратки и получаваш 5,000$ и 5 EP.");
GivePlayerMoney(playerid, 5000);
GivePlayerEP(playerid,5);
onWork[playerid]=0;
ToggleEngine(GetPlayerVehicleID(playerid), VEHICLE_PARAMS_OFF);
if(PlayerInfo[playerid][pVip]<3)
{
PlayerInfo[playerid][pPilotTimerWorkAgain]=60*60;
}
if(PlayerInfo[playerid][pVip]>=3 && PlayerInfo[playerid][pVip]<6)
{
PlayerInfo[playerid][pPilotTimerWorkAgain]=30*60;
SendClientMessage(playerid,0xB35900FF,"Твоето време за чакане до нова работа е 30 минути.");
}
if(PlayerInfo[playerid][pVip]==6 || freevip==1)
{
SendClientMessage(playerid,0xB35900FF,"Твоето време за чакане до нова работа е 20 минути.");
SendClientMessage(playerid,0xB35900FF,"Ти спечели 3 EP, защото си VIP Level 6.");
PlayerInfo[playerid][pPilotTimerWorkAgain]=20*60;
GivePlayerEP(playerid,3);
}
RestartPlayerColor(playerid);
GivePlayerMission(playerid);
}
}
}
if(onWork[playerid]==1)
{
if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 609)
{
if (IsPlayerInRangeOfPoint(playerid, 4.0, DeliverCheckPoint1))
{
SetPlayerCheckpoint(playerid, DeliverCheckPoint2, 4.0);
}
if (IsPlayerInRangeOfPoint(playerid, 4.0,DeliverCheckPoint2))
{
SetPlayerCheckpoint(playerid, DeliverCheckPoint3, 4.0);
}
if (IsPlayerInRangeOfPoint(playerid, 4.0,DeliverCheckPoint3))
{
SetPlayerCheckpoint(playerid, DeliverCheckPoint4, 4.0);
}
if (IsPlayerInRangeOfPoint(playerid, 4.0,DeliverCheckPoint4))
{
SetPlayerCheckpoint(playerid, DeliverCheckPoint5, 4.0);
}
if (IsPlayerInRangeOfPoint(playerid, 4.0,DeliverCheckPoint5))
{
SetPlayerCheckpoint(playerid, DeliverCheckPoint6, 4.0);
}
if (IsPlayerInRangeOfPoint(playerid, 4.0,DeliverCheckPoint6))
{
SetPlayerCheckpoint(playerid, DeliverCheckPoint7, 4.0);
}
if (IsPlayerInRangeOfPoint(playerid, 4.0,DeliverCheckPoint7))
{
SetPlayerCheckpoint(playerid, DeliverCheckPoint8, 4.0);
}
if (IsPlayerInRangeOfPoint(playerid, 4.0,DeliverCheckPoint8))
{
SetPlayerCheckpoint(playerid, DeliverCheckPoint9, 4.0);
}
if (IsPlayerInRangeOfPoint(playerid, 4.0,DeliverCheckPoint9))
{
SetPlayerCheckpoint(playerid, DeliverCheckPoint10, 4.0);
}
if (IsPlayerInRangeOfPoint(playerid, 4.0,DeliverCheckPoint10))
{
SetPlayerCheckpoint(playerid, DeliverCheckPoint11, 4.0);
}
if (IsPlayerInRangeOfPoint(playerid, 4.0,DeliverCheckPoint11))
{
SetPlayerCheckpoint(playerid, DeliverCheckPoint12, 4.0);
}
if (IsPlayerInRangeOfPoint(playerid, 4.0,DeliverCheckPoint12))
{
SetPlayerCheckpoint(playerid, DeliverCheckPoint13, 4.0);
}
if (IsPlayerInRangeOfPoint(playerid, 4.0,DeliverCheckPoint13))
{
SetPlayerCheckpoint(playerid, DeliverCheckPoint14, 4.0);
}
if (IsPlayerInRangeOfPoint(playerid, 4.0,DeliverCheckPoint14))
{
SetPlayerCheckpoint(playerid, DeliverCheckPoint15, 4.0);
}
if (IsPlayerInRangeOfPoint(playerid, 4.0,DeliverCheckPoint15))
{
SetPlayerCheckpoint(playerid, DeliverCheckPoint16, 4.0);
}
if (IsPlayerInRangeOfPoint(playerid, 4.0,DeliverCheckPoint16))
{
SetPlayerCheckpoint(playerid, DeliverCheckPoint17, 4.0);
}
if (IsPlayerInRangeOfPoint(playerid, 4.0,DeliverCheckPoint17))
{
SetPlayerCheckpoint(playerid, DeliverCheckPoint18, 4.0);
}
if (IsPlayerInRangeOfPoint(playerid, 4.0,DeliverCheckPoint18))
{
SetPlayerCheckpoint(playerid, DeliverCheckPoint19, 4.0);
}
if (IsPlayerInRangeOfPoint(playerid, 4.0,DeliverCheckPoint19))
{
SetPlayerCheckpoint(playerid, DeliverCheckPoint20, 4.0);
}
if (IsPlayerInRangeOfPoint(playerid, 4.0,DeliverCheckPoint20))
{
SetPlayerCheckpoint(playerid, DeliverCheckPoint21, 4.0);
}
if (IsPlayerInRangeOfPoint(playerid, 4.0,DeliverCheckPoint21))
{
SetPlayerCheckpoint(playerid, DeliverTakePoint, 4.0);
SendClientMessage(playerid, 0xB35900FF, "Ти премина през всички червени маркери, сега трябва да върнеш буса.");
}
if (IsPlayerInRangeOfPoint(playerid, 4.0, DeliverTakePoint))
{
//
DisablePlayerCheckpoint(playerid);PlayerInfo[playerid][pAfterWork]=30*60;
SendClientMessage(playerid,0xB35900FF,"Ти достави всички пратки и получаваш 5,000$ и 5 EP.");
GivePlayerMoney(playerid, 5000);
GivePlayerEP(playerid,5);
onWork[playerid]=0;
ToggleEngine(GetPlayerVehicleID(playerid), VEHICLE_PARAMS_OFF);
if(PlayerInfo[playerid][pVip]<3)
{
PlayerInfo[playerid][pDeliverTimerWorkAgain]=60*60;
}
if(PlayerInfo[playerid][pVip]>=3 && PlayerInfo[playerid][pVip]<6)
{
PlayerInfo[playerid][pDeliverTimerWorkAgain]=30*60;
SendClientMessage(playerid,0xB35900FF,"Твоето време за чакане до нова работа е 30 минути.");
}
if(PlayerInfo[playerid][pVip]==6 || freevip==1)
{
SendClientMessage(playerid,0xB35900FF,"Твоето време за чакане до нова работа е 20 минути.");
SendClientMessage(playerid,0xB35900FF,"Ти спечели 3 EP, защото си VIP Level 6.");
PlayerInfo[playerid][pDeliverTimerWorkAgain]=20*60;
GivePlayerEP(playerid,3);
}
RestartPlayerColor(playerid);
GivePlayerMission(playerid);
}
}
}
//}
return 1;
}

stock GiveSRaceFirstCheckpoint(playerid)
{
if(streetRaceTypeIndex==0) SetPlayerRaceCheckpoint(playerid, 0, StreetRaceSprintCheckPoint1,StreetRaceSprintCheckPoint2, 5.0);
if(streetRaceTypeIndex==1) SetPlayerRaceCheckpoint(playerid, 0, StreetRaceDriftCheckPoint1,StreetRaceDriftCheckPoint2, 5.0);
if(streetRaceTypeIndex==2) SetPlayerRaceCheckpoint(playerid, 0, StreetRaceDragCheckPoint1,StreetRaceDragCheckPoint2, 5.0);
if(streetRaceTypeIndex==3) SetPlayerRaceCheckpoint(playerid, 0, StreetRaceLapsCheckPoint1,StreetRaceLapsCheckPoint2, 5.0);
if(streetRaceTypeIndex==4) SetPlayerRaceCheckpoint(playerid, 0, StreetRaceOffroadCheckPoint1,StreetRaceOffroadCheckPoint2, 5.0);
}

stock IsInStreetRaceStartingPoint(playerid)
{
if(GetPlayerVirtualWorld(playerid)==0 && GetPlayerInterior(playerid) == 0 && playerInStreetRace[playerid]==false)
{
if(streetRaceTypeIndex==0 && IsPlayerInRangeOfPoint(playerid, 5.0, StreetRaceSprintWaitPoint)) return 0;
if(streetRaceTypeIndex==1 && IsPlayerInRangeOfPoint(playerid, 5.0, StreetRaceDriftWaitPoint)) return 1;
if(streetRaceTypeIndex==2 && IsPlayerInRangeOfPoint(playerid, 5.0, StreetRaceDragWaitPoint)) return 2;
if(streetRaceTypeIndex==3 && IsPlayerInRangeOfPoint(playerid, 5.0, StreetRaceLapsWaitPoint)) return 3;
if(streetRaceTypeIndex==4 && IsPlayerInRangeOfPoint(playerid, 5.0, StreetRaceOffroadWaitPoint)) return 4;
}
return -1;
}
public OnPlayerEnterRaceCheckpoint(playerid)
{

if(playerInStreetRace[playerid]==true && streetRaceStarted==true)
{
if(streetRaceTypeIndex==0)
{
if(IsPlayerInRangeOfPoint(playerid, 5.0, StreetRaceSprintCheckPoint1)) SetPlayerRaceCheckpoint(playerid, 0, StreetRaceSprintCheckPoint2,StreetRaceSprintCheckPoint3, 5.0);
if(IsPlayerInRangeOfPoint(playerid, 5.0, StreetRaceSprintCheckPoint2)) SetPlayerRaceCheckpoint(playerid, 0, StreetRaceSprintCheckPoint3,StreetRaceSprintCheckPoint4, 5.0);
if(IsPlayerInRangeOfPoint(playerid, 5.0, StreetRaceSprintCheckPoint3)) SetPlayerRaceCheckpoint(playerid, 0, StreetRaceSprintCheckPoint4,StreetRaceSprintFinalPoint, 5.0);
if(IsPlayerInRangeOfPoint(playerid, 5.0, StreetRaceSprintCheckPoint4)) SetPlayerRaceCheckpoint(playerid, 1, StreetRaceSprintFinalPoint,StreetRaceSprintFinalPoint, 5.0);
if(IsPlayerInRangeOfPoint(playerid, 5.0, StreetRaceSprintFinalPoint))
{

PlayerFinishingRace(playerid);

}
}
else if(streetRaceTypeIndex==1)
{
if(IsPlayerInRangeOfPoint(playerid, 5.0, StreetRaceDriftCheckPoint1)) SetPlayerRaceCheckpoint(playerid, 0, StreetRaceDriftCheckPoint2,StreetRaceDriftCheckPoint3, 5.0);
if(IsPlayerInRangeOfPoint(playerid, 5.0, StreetRaceDriftCheckPoint2)) SetPlayerRaceCheckpoint(playerid, 0, StreetRaceDriftCheckPoint3,StreetRaceDriftCheckPoint4, 5.0);
if(IsPlayerInRangeOfPoint(playerid, 5.0, StreetRaceDriftCheckPoint3)) SetPlayerRaceCheckpoint(playerid, 0, StreetRaceDriftCheckPoint4,StreetRaceDriftFinalPoint, 5.0);
if(IsPlayerInRangeOfPoint(playerid, 5.0, StreetRaceDriftCheckPoint4)) SetPlayerRaceCheckpoint(playerid, 1, StreetRaceDriftFinalPoint,StreetRaceDriftFinalPoint, 5.0);
if(IsPlayerInRangeOfPoint(playerid, 5.0, StreetRaceDriftFinalPoint))
{

PlayerFinishingRace(playerid);

}
}
else if(streetRaceTypeIndex==2)
{
if(IsPlayerInRangeOfPoint(playerid, 5.0, StreetRaceDragCheckPoint1)) SetPlayerRaceCheckpoint(playerid, 0, StreetRaceDragCheckPoint2,StreetRaceDragCheckPoint3, 5.0);
if(IsPlayerInRangeOfPoint(playerid, 5.0, StreetRaceDragCheckPoint2)) SetPlayerRaceCheckpoint(playerid, 0, StreetRaceDragCheckPoint3,StreetRaceDragCheckPoint4, 5.0);
if(IsPlayerInRangeOfPoint(playerid, 5.0, StreetRaceDragCheckPoint3)) SetPlayerRaceCheckpoint(playerid, 0, StreetRaceDragCheckPoint4,StreetRaceDragFinalPoint, 5.0);
if(IsPlayerInRangeOfPoint(playerid, 5.0, StreetRaceDragCheckPoint4)) SetPlayerRaceCheckpoint(playerid, 1, StreetRaceDragFinalPoint,StreetRaceDragFinalPoint, 5.0);
if(IsPlayerInRangeOfPoint(playerid, 5.0, StreetRaceDragFinalPoint))
{

PlayerFinishingRace(playerid);

}
}
else if(streetRaceTypeIndex==3)
{
if(IsPlayerInRangeOfPoint(playerid, 5.0, StreetRaceLapsCheckPoint1)) SetPlayerRaceCheckpoint(playerid, 0, StreetRaceLapsCheckPoint2,StreetRaceLapsCheckPoint3, 5.0);
if(IsPlayerInRangeOfPoint(playerid, 5.0, StreetRaceLapsCheckPoint2)) SetPlayerRaceCheckpoint(playerid, 0, StreetRaceLapsCheckPoint3,StreetRaceLapsCheckPoint4, 5.0);
if(IsPlayerInRangeOfPoint(playerid, 5.0, StreetRaceLapsCheckPoint3)) SetPlayerRaceCheckpoint(playerid, 0, StreetRaceLapsCheckPoint4,StreetRaceLapsFinalPoint, 5.0);
if(IsPlayerInRangeOfPoint(playerid, 5.0, StreetRaceLapsCheckPoint4)) SetPlayerRaceCheckpoint(playerid, 1, StreetRaceLapsFinalPoint,StreetRaceLapsFinalPoint, 5.0);
if(IsPlayerInRangeOfPoint(playerid, 5.0, StreetRaceLapsFinalPoint))
{

PlayerFinishingRace(playerid);

}
}
else if(streetRaceTypeIndex==4)
{
if(IsPlayerInRangeOfPoint(playerid, 5.0, StreetRaceOffroadCheckPoint1)) SetPlayerRaceCheckpoint(playerid, 0, StreetRaceOffroadCheckPoint2,StreetRaceOffroadCheckPoint3, 5.0);
if(IsPlayerInRangeOfPoint(playerid, 5.0, StreetRaceOffroadCheckPoint2)) SetPlayerRaceCheckpoint(playerid, 0, StreetRaceOffroadCheckPoint3,StreetRaceOffroadCheckPoint4, 5.0);
if(IsPlayerInRangeOfPoint(playerid, 5.0, StreetRaceOffroadCheckPoint3)) SetPlayerRaceCheckpoint(playerid, 0, StreetRaceOffroadCheckPoint4,StreetRaceOffroadFinalPoint, 5.0);
if(IsPlayerInRangeOfPoint(playerid, 5.0, StreetRaceOffroadCheckPoint4)) SetPlayerRaceCheckpoint(playerid, 1, StreetRaceOffroadFinalPoint,StreetRaceOffroadFinalPoint, 5.0);
if(IsPlayerInRangeOfPoint(playerid, 5.0, StreetRaceOffroadFinalPoint))
{

PlayerFinishingRace(playerid);

}
}
}

if(IsInStreetRaceStartingPoint(playerid) != -1)
{
if(PlayerInfo[playerid][pADuty]==1) return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да влезеш в състезанието, когато си ADMIN ON Duty!");
if(onWork[playerid]==1) return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да влезеш в състезанието, когато си на работа !");
if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,COLOR_GRAD1,"Трябва да си в превозно средство за да влезеш в състезанието!");
if(driver[playerid]==0) return SendClientMessage(playerid,COLOR_GRAD1,"Трябва да си шофьор за да влезеш в състезанието!");
if(cmn1[playerid]==1) return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да влезеш в състезанието, докато си CMN1!");
DisablePlayerRaceCheckpoint(playerid);
new hisVeh=GetPlayerVehicleID(playerid);
SetPlayerVirtualWorld(playerid,1);
SetVehicleVirtualWorld(hisVeh,1);
PutPlayerInVehicle(playerid, hisVeh, 0);
streetRacePlayers+=1;
playerInStreetRace[playerid]=true;
streetRacePlayerColorChange[playerid]=2;
if(streetRacePlayers==1)
{
format(string256,256,"StreetRace: %s влезе в състезанието. Трябва още един човек, преди то да започне!",pname[playerid]);
SendClientMessageToAll(COLOR_STREETRACE,string256);
if(streetRaceStartTimer>0) streetRaceStartTimer=0;
}
else if(streetRacePlayers==2)
{
format(string256,256,"StreetRace: %s влезе в състезанието, то ще започне след 2 минути!",pname[playerid]);
SendClientMessageToAll(COLOR_STREETRACE,string256);
streetRaceStartTimer=2*60;
}
else if(streetRacePlayers==10)
{
format(string256,256,"StreetRace: %s влезе в състезанието, то ще започне след 10 секунди!",pname[playerid]);
SendClientMessageToAll(COLOR_STREETRACE,string256);
streetRaceStartTimer=10;
}
SendClientMessage(playerid,COLOR_STREETRACE,"StreetRace: За да излезеш от състезанието напиши /leaverace");
}


if(IsPlayerInRangeOfPoint(playerid, 5.0, MoneyBoxCheckpoint1) || IsPlayerInRangeOfPoint(playerid, 5.0, MoneyBoxCheckpoint2)
|| IsPlayerInRangeOfPoint(playerid, 5.0, MoneyBoxCheckpoint3) || IsPlayerInRangeOfPoint(playerid, 5.0, MoneyBoxCheckpoint4))
{ //goto
if(GetPlayerVirtualWorld(playerid)==0 && GetPlayerInterior(playerid) == 0)
{
if(PlayerInfo[playerid][pADuty]==1) return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да вземеш куфара, когато си ADMIN ON Duty!");
if(onWork[playerid]==1) return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да вземеш куфара, когато си на работа !");
if(cmn1[playerid]==1) return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да взмеш куфара, докато си CMN1!");
SendClientMessage(playerid,0x40BF00FF,"Moneybox: Сега занеси куфара до другия червен маркер за да спечелиш пари!");
format(string256,256,"Moneybox: %s взе куфара с пари. Не му позволявайте да достигне до следващия червен маркер!",pname[playerid]);
SendClientMessageToAll(0x40BF00FF,string256);
moneyBoxDPID=random(allMoneyBoxDeliverPoints);
playerWithMoneyBox[playerid]=true;
whoHaveMoneyBox=playerid;
isMoneyBoxGet=true;
GivePlayerWantedLevel(playerid,1);
for(new allPlayers; allPlayers<MAX_PLAYERS; allPlayers++)
{
if(IsPlayerConnected(allPlayers))
{
GivePlayerMBDeliverPoint(allPlayers);
}
}
}
}
return 1;
}
public OnPlayerLeaveCheckpoint(playerid)
{
return 1;
}
//public OnPlayerEnterRaceCheckpoint(playerid)
//{
//	return 1;
//}
public OnPlayerLeaveRaceCheckpoint(playerid)
{
return 1;
}
public OnRconCommand(cmd[])
{
return 1;
}
public OnPlayerRequestSpawn(playerid)
{
return 1;
}
public OnObjectMoved(objectid)
{
return 1;
}
public OnPlayerObjectMoved(playerid, objectid)
{
return 1;
}
public OnPlayerPickUpPickup(playerid, pickupid)
{
new Float:health;
GetPlayerHealth(playerid,health);
new Float:armour;
GetPlayerArmour(playerid,armour);
if(pickupid==rifahealarmour[0] && PlayerInfo[playerid][pTeam] == 8 && health<100.0) SetPlayerHealth(playerid,100);
if(pickupid==rifahealarmour[1] && PlayerInfo[playerid][pTeam] == 8 && armour<100.0) SetPlayerArmour(playerid,100);
if(pickupid==dfhealarmour[0] && PlayerInfo[playerid][pTeam] == 15 && health<100.0) SetPlayerHealth(playerid,100);
if(pickupid==dfhealarmour[1] && PlayerInfo[playerid][pTeam] == 15 && armour<100.0) SetPlayerArmour(playerid,100);
if(pickupid==viphealarmour[0] && PlayerInfo[playerid][pTeam]== 1 && health<100.0) SetPlayerHealth(playerid,100);
if(pickupid==viphealarmour[1] && PlayerInfo[playerid][pTeam]== 1 && armour<100.0) SetPlayerArmour(playerid,100);
if(pickupid==grovehealarmour[0] && PlayerInfo[playerid][pTeam]== 2 && health<100.0) SetPlayerHealth(playerid,100);
if(pickupid==grovehealarmour[1] && PlayerInfo[playerid][pTeam]== 2 && armour<100.0) SetPlayerArmour(playerid,100);
if(pickupid==soldierhealarmour[0] && PlayerInfo[playerid][pTeam]== 16 && health<100.0) SetPlayerHealth(playerid,100);
if(pickupid==soldierhealarmour[1] && PlayerInfo[playerid][pTeam]== 16 && armour<100.0) SetPlayerArmour(playerid,100);
if(pickupid==cripzhealarmour[0] && PlayerInfo[playerid][pTeam]== 6 && health<100.0) SetPlayerHealth(playerid,100);
if(pickupid==cripzhealarmour[1] && PlayerInfo[playerid][pTeam]== 6 && armour<100.0) SetPlayerArmour(playerid,100);
if(pickupid==bgmhealarmour[0] && PlayerInfo[playerid][pTeam]== 21 && health<100.0) SetPlayerHealth(playerid,100);
if(pickupid==bgmhealarmour[1] && PlayerInfo[playerid][pTeam]== 21 && armour<100.0) SetPlayerArmour(playerid,100);
if(pickupid==yakuzahealarmour[0] && PlayerInfo[playerid][pTeam]== 17 && health<100.0) SetPlayerHealth(playerid,100);
if(pickupid==yakuzahealarmour[1] && PlayerInfo[playerid][pTeam]== 17 && armour<100.0) SetPlayerArmour(playerid,100);
if(pickupid==blackstreethealarmour[0] && PlayerInfo[playerid][pTeam]== 22 && health<100.0) SetPlayerHealth(playerid,100);
if(pickupid==blackstreethealarmour[1] && PlayerInfo[playerid][pTeam]== 22 && armour<100.0) SetPlayerArmour(playerid,100);
if(pickupid==syndicatehealarmour[0] && PlayerInfo[playerid][pTeam]== 18 && health<100.0) SetPlayerHealth(playerid,100);
if(pickupid==syndicatehealarmour[1] && PlayerInfo[playerid][pTeam]== 18 && armour<100.0) SetPlayerArmour(playerid,100);
if(pickupid==bloodhealarmour[0] && PlayerInfo[playerid][pTeam]== 19 && health<100.0) SetPlayerHealth(playerid,100);
if(pickupid==bloodhealarmour[1] && PlayerInfo[playerid][pTeam]== 19 && armour<100.0) SetPlayerArmour(playerid,100);
if(pickupid==ms13healarmour[0] && PlayerInfo[playerid][pTeam]== 20 && health<100.0) SetPlayerHealth(playerid,100);
if(pickupid==ms13healarmour[1] && PlayerInfo[playerid][pTeam]== 20 && armour<100.0) SetPlayerArmour(playerid,100);
if(pickupid==vagoshealarmour[0] && PlayerInfo[playerid][pTeam]== 4 && health<100.0) SetPlayerHealth(playerid,100);
if(pickupid==vagoshealarmour[1] && PlayerInfo[playerid][pTeam]== 4 && armour<100.0) SetPlayerArmour(playerid,100);
if(pickupid==triadshealarmour[0] && PlayerInfo[playerid][pTeam]== 4 && health<100.0) SetPlayerHealth(playerid,100);
if(pickupid==triadshealarmour[1] && PlayerInfo[playerid][pTeam]== 4 && armour<100.0) SetPlayerArmour(playerid,100);
if(pickupid==italianhealarmour[0] && PlayerInfo[playerid][pTeam]== 4 && health<100.0) SetPlayerHealth(playerid,100);
if(pickupid==italianhealarmour[1] && PlayerInfo[playerid][pTeam]== 4 && armour<100.0) SetPlayerArmour(playerid,100);
if(pickupid==nanghealarmour[0] && PlayerInfo[playerid][pTeam]== 10 && health<100.0) SetPlayerHealth(playerid,100);
if(pickupid==nanghealarmour[1] && PlayerInfo[playerid][pTeam]== 10 && armour<100.0) SetPlayerArmour(playerid,100);
if(pickupid==bountyhealarmour[0] && PlayerInfo[playerid][pTeam]== 12 && health<100.0) SetPlayerHealth(playerid,100);
if(pickupid==bountyhealarmour[1] && PlayerInfo[playerid][pTeam]== 12 && armour<100.0) SetPlayerArmour(playerid,100);
for(new alh=0; alh<maxhouses+2; alh++)
{
if(pickupid==housepickup[alh])
{
isinhousepickup[playerid]=1;
onhousepick2[playerid]=1;
housetimer[playerid]=SetTimerEx("RemoveHousePick", 500, true, "i", playerid);
}
}
for(new alb=0; alb<maxbiz+2; alb++)
{
if(IsPlayerInRangeOfPoint(playerid,3, BizInfo[alb][bX],BizInfo[alb][bY],BizInfo[alb][bZ]))
{
new bizstring[356];
if(BizInfo[alb][bOwner]==0 && BizInfo[alb][bFee]==0)
{
format(bizstring, 356, "~y~Bussines For Sale~n~~r~%s~n~~w~PRICE:~g~ $%d~n~ ~w~Level: ~b~%d ~n~~w~PAYOUT: ~g~$%d", BizInfo[alb][bName],BizInfo[alb][bPrice],BizInfo[alb][bLevel],BizInfo[alb][bPayOut]);
GameTextForPlayer(playerid,bizstring, 1500, 3);
return 1;
}
if(BizInfo[alb][bOwner]==0 && BizInfo[alb][bFee]>0)
{
format(bizstring, 356, "~y~Bussines For Sale~n~~r~%s~n~~w~PRICE:~g~ $%d~n~ ~w~Level: ~b~%d ~n~~w~ENTER FEE: ~y~$%d ~n~~w~PAYOUT: ~g~$%d", BizInfo[alb][bName],BizInfo[alb][bPrice],BizInfo[alb][bLevel],BizInfo[alb][bFee],BizInfo[alb][bPayOut]);
GameTextForPlayer(playerid,bizstring, 1500, 3);
return 1;
}
if(BizInfo[alb][bOwner]==1 && BizInfo[alb][bFee]==0)
{
format(bizstring, 356, "~r~%s~n~~w~Owner:~g~ %s ~n~~w~Level: ~b~%d ~n~~w~PAYOUT: ~g~$%d",BizInfo[alb][bName], BizInfo[alb][bOwnerName],BizInfo[alb][bLevel],BizInfo[alb][bPayOut]);
GameTextForPlayer(playerid,bizstring, 1500, 3);
return 1;
}
if(BizInfo[alb][bOwner]==1 && BizInfo[alb][bFee]>0)
{
format(bizstring, 356, "~r~%s~n~~w~Owner:~g~ %s ~n~~w~Level: ~b~%d ~w~~n~ENTER FEE: ~y~$%d ~n~~w~PAYOUT: ~g~$%d",BizInfo[alb][bName], BizInfo[alb][bOwnerName],BizInfo[alb][bLevel],BizInfo[alb][bFee],BizInfo[alb][bPayOut]);
GameTextForPlayer(playerid,bizstring, 1500, 3);
return 1;
}
}}
for(new alh=0; alh<maxhouses+2; alh++)
{
if(IsPlayerInRangeOfPoint(playerid,3, HouseInfo[alh][hX],HouseInfo[alh][hY],HouseInfo[alh][hZ]))
{
new housestring[256];
if(HouseInfo[alh][hOwner]==1)
{
format(housestring, 256, "~w~Owner:~g~ %s~n~~w~Level: ~b~ %d~n~", HouseInfo[alh][hOwnerName], HouseInfo[alh][hLevel]);
GameTextForPlayer(playerid,housestring, 1500, 3);
return 1;
}
if(HouseInfo[alh][hOwner]==0)
{
if(HouseInfo[alh][hInterior]==1)
{
format(housestring, 256, "~y~House For Sale~n~~w~Description:~p~ 3 ROOMS~n~~w~Price:~g~ $%d~n~~w~Level: ~b~%d", HouseInfo[alh][hPrice], HouseInfo[alh][hLevel]);
GameTextForPlayer(playerid,housestring, 1500, 3);
}
if(HouseInfo[alh][hInterior]==2)
{
format(housestring, 256, "~y~House For Sale~n~~w~Description:~p~ 1 ROOM~n~~w~Price:~g~ $%d~n~~w~Level: ~b~%d", HouseInfo[alh][hPrice], HouseInfo[alh][hLevel]);
GameTextForPlayer(playerid,housestring, 1500, 3);
}
if(HouseInfo[alh][hInterior]==3)
{
format(housestring, 256, "~y~House For Sale~n~~w~Description:~p~ 1 ROOM~n~~w~Price:~g~ $%d~n~~w~Level: ~b~%d", HouseInfo[alh][hPrice], HouseInfo[alh][hLevel]);
GameTextForPlayer(playerid,housestring, 1500, 3);
}
if(HouseInfo[alh][hInterior]==4)
{
format(housestring, 256, "~y~House For Sale~n~~w~Description:~p~ 5 ROOMS~n~~w~Price:~g~ $%d~n~~w~Level: ~b~%d", HouseInfo[alh][hPrice], HouseInfo[alh][hLevel]);
GameTextForPlayer(playerid,housestring, 1500, 3);
}
if(HouseInfo[alh][hInterior]==5)
{
format(housestring, 256, "~y~House For Sale~n~~w~Description:~p~ 6 ROOMS~n~~w~Price:~g~ $%d~n~~w~Level: ~b~%d", HouseInfo[alh][hPrice], HouseInfo[alh][hLevel]);
GameTextForPlayer(playerid,housestring, 1500, 3);
}
if(HouseInfo[alh][hInterior]==6)
{
format(housestring, 256, "~y~House For Sale~n~~w~Description:~p~ 3 ROOMS~n~~w~Price:~g~ $%d~n~~w~Level: ~b~%d", HouseInfo[alh][hPrice], HouseInfo[alh][hLevel]);
GameTextForPlayer(playerid,housestring, 1500, 3);
}
if(HouseInfo[alh][hInterior]==7)
{
format(housestring, 256, "~y~House For Sale~n~~w~Description:~p~ 3 ROOMS~n~~w~Price:~g~ $%d~n~~w~Level: ~b~%d", HouseInfo[alh][hPrice], HouseInfo[alh][hLevel]);
GameTextForPlayer(playerid,housestring, 1500, 3);
}
if(HouseInfo[alh][hInterior]==8)
{
format(housestring, 256, "~y~House For Sale~n~~w~Description:~p~ 3 ROOMS~n~~w~Price:~g~ $%d~n~~w~Level: ~b~%d", HouseInfo[alh][hPrice], HouseInfo[alh][hLevel]);
GameTextForPlayer(playerid,housestring, 1500, 3);
}
if(HouseInfo[alh][hInterior]==9)
{
format(housestring, 256, "~y~House For Sale~n~~w~Description:~p~ 7 ROOMS~n~~w~Price:~g~ $%d~n~~w~Level: ~b~%d", HouseInfo[alh][hPrice], HouseInfo[alh][hLevel]);
GameTextForPlayer(playerid,housestring, 1500, 3);
}
if(HouseInfo[alh][hInterior]==10)
{
format(housestring, 256, "~y~House For Sale~n~~w~Description:~p~ 3 ROOMS~n~~w~Price:~g~ $%d~n~~w~Level: ~b~%d", HouseInfo[alh][hPrice], HouseInfo[alh][hLevel]);
GameTextForPlayer(playerid,housestring, 1500, 3);
}
if(HouseInfo[alh][hInterior]==11)
{
format(housestring, 256, "~y~House For Sale~n~~w~Description:~p~ 4 ROOMS~n~~w~Price:~g~ $%d~n~~w~Level: ~b~%d", HouseInfo[alh][hPrice], HouseInfo[alh][hLevel]);
GameTextForPlayer(playerid,housestring, 1500, 3);
}
if(HouseInfo[alh][hInterior]==12)
{
format(housestring, 256, "~y~House For Sale~n~~w~Description:~p~ 4 ROOMS~n~~w~Price:~g~ $%d~n~~w~Level: ~b~%d", HouseInfo[alh][hPrice], HouseInfo[alh][hLevel]);
GameTextForPlayer(playerid,housestring, 1500, 3);
}
if(HouseInfo[alh][hInterior]==13)
{
format(housestring, 256, "~y~House For Sale~n~~w~Description:~p~ 7 ROOMS~n~~w~Price:~g~ $%d~n~~w~Level: ~b~%d", HouseInfo[alh][hPrice], HouseInfo[alh][hLevel]);
GameTextForPlayer(playerid,housestring, 1500, 3);
}
if(HouseInfo[alh][hInterior]==14)
{
format(housestring, 256, "~y~House For Sale~n~~w~Description:~p~ 7 ROOMS~n~~w~Price:~g~ $%d~n~~w~Level: ~b~%d", HouseInfo[alh][hPrice], HouseInfo[alh][hLevel]);
GameTextForPlayer(playerid,housestring, 1500, 3);
}
if(HouseInfo[alh][hInterior]==15)
{
format(housestring, 256, "~y~House For Sale~n~~w~Description:~p~ 4 ROOMS~n~~w~Price:~g~ $%d~n~~w~Level: ~b~%d", HouseInfo[alh][hPrice], HouseInfo[alh][hLevel]);
GameTextForPlayer(playerid,housestring, 1500, 3);
}
if(HouseInfo[alh][hInterior]==16)
{
format(housestring, 256, "~y~House For Sale~n~~w~Description:~p~ 9 ROOM~n~~w~Price:~g~ $%d~n~~w~Level: ~b~%d", HouseInfo[alh][hPrice], HouseInfo[alh][hLevel]);
GameTextForPlayer(playerid,housestring, 1500, 3);
}
if(HouseInfo[alh][hInterior]==17)
{
format(housestring, 256, "~y~House For Sale~n~~w~Description:~p~ 9 ROOMS~n~~w~Price:~g~ $%d~n~~w~Level: ~b~%d", HouseInfo[alh][hPrice], HouseInfo[alh][hLevel]);
GameTextForPlayer(playerid,housestring, 1500, 3);
}
if(HouseInfo[alh][hInterior]==18)
{
format(housestring, 256, "~y~House For Sale~n~~w~Description:~p~ 5 ROOMS~n~~w~Price:~g~ $%d~n~~w~Level: ~b~%d", HouseInfo[alh][hPrice], HouseInfo[alh][hLevel]);
GameTextForPlayer(playerid,housestring, 1500, 3);
}
if(HouseInfo[alh][hInterior]==19)
{
format(housestring, 256, "~y~House For Sale~n~~w~Description:~p~ 2 ROOMS~n~~w~Price:~g~ $%d~n~~w~Level: ~b~%d", HouseInfo[alh][hPrice], HouseInfo[alh][hLevel]);
GameTextForPlayer(playerid,housestring, 1500, 3);
}
if(HouseInfo[alh][hInterior]==20)
{
format(housestring, 256, "~y~House For Sale~n~~w~Description:~p~ 5 ROOMS~n~~w~Price:~g~ $%d~n~~w~Level: ~b~%d", HouseInfo[alh][hPrice], HouseInfo[alh][hLevel]);
GameTextForPlayer(playerid,housestring, 1500, 3);
}
if(HouseInfo[alh][hInterior]==21)
{
format(housestring, 256, "~y~House For Sale~n~~w~Description:~p~ 5 ROOMS~n~~w~Price:~g~ $%d~n~~w~Level: ~b~%d", HouseInfo[alh][hPrice], HouseInfo[alh][hLevel]);
GameTextForPlayer(playerid,housestring, 1500, 3);
}
if(HouseInfo[alh][hInterior]==22)
{
format(housestring, 256, "~y~House For Sale~n~~w~Description:~p~ 22 ROOMS~n~~w~Price:~g~ $%d~n~~w~Level: ~b~%d", HouseInfo[alh][hPrice], HouseInfo[alh][hLevel]);
GameTextForPlayer(playerid,housestring, 1500, 3);
}
if(HouseInfo[alh][hInterior]==23)
{
format(housestring, 256, "~y~House For Sale~n~~w~Description:~p~ 4 ROOMS~n~~w~Price:~g~ $%d~n~~w~Level: ~b~%d", HouseInfo[alh][hPrice], HouseInfo[alh][hLevel]);
GameTextForPlayer(playerid,housestring, 1500, 3);
}
if(HouseInfo[alh][hInterior]==24)
{
format(housestring, 256, "~y~House For Sale~n~~w~Description:~p~ 5 ROOMS~n~~w~Price:~g~ $%d~n~~w~Level: ~b~%d", HouseInfo[alh][hPrice], HouseInfo[alh][hLevel]);
GameTextForPlayer(playerid,housestring, 1500, 3);
}
if(HouseInfo[alh][hInterior]==25)
{
format(housestring, 256, "~y~House For Sale~n~~w~Description:~p~ 5 ROOMS~n~~w~Price:~g~ $%d~n~~w~Level: ~b~%d", HouseInfo[alh][hPrice], HouseInfo[alh][hLevel]);
GameTextForPlayer(playerid,housestring, 1500, 3);
}
if(HouseInfo[alh][hInterior]==26)
{
format(housestring, 256, "~y~House For Sale~n~~w~Description:~p~ 4 ROOMS~n~~w~Price:~g~ $%d~n~~w~Level: ~b~%d", HouseInfo[alh][hPrice], HouseInfo[alh][hLevel]);
GameTextForPlayer(playerid,housestring, 1500, 3);
}
return 1;
}
}
}
if(pickupid == BankPickup[5] && GetPlayerVirtualWorld(playerid)==0 && GetPlayerInterior(playerid)==0)
{
SetPlayerPos(playerid,2307.1792,-15.6580,28.3014);
SetPlayerFacingAngle(playerid,267.51);
TogglePlayerControllable(playerid, 0);
SetCameraBehindPlayer(playerid);
PlayerInfo[playerid][pBankSpawn] = 3;
SetPlayerVirtualWorld(playerid,3);
return 1;
}
if(pickupid == BankPickup[0] && GetPlayerVirtualWorld(playerid)==0 && GetPlayerInterior(playerid)==0)
{
SetPlayerPos(playerid,2307.1792,-15.6580,28.3014);
SetPlayerFacingAngle(playerid,267.51);
TogglePlayerControllable(playerid, 0);
SetCameraBehindPlayer(playerid);
PlayerInfo[playerid][pBankSpawn] = 3;
SetPlayerVirtualWorld(playerid,1);
return 1;
}
//other bank pickups - location - open
if(pickupid == BankPickup[6] && GetPlayerVirtualWorld(playerid)==1 && GetPlayerInterior(playerid)==0)
{
SetPlayerInterior(playerid,0);
SetPlayerPos(playerid,322.4386,111.3972,1003.2194);
SetPlayerFacingAngle(playerid,267.51);
TogglePlayerControllable(playerid, 0);
SetCameraBehindPlayer(playerid);
PlayerInfo[playerid][pBankSpawn] = 3;
SetPlayerVirtualWorld(playerid,1);
return 1;
}
if(pickupid == BankPickup[7] && GetPlayerVirtualWorld(playerid)==2 && GetPlayerInterior(playerid)==0)
{
SetPlayerInterior(playerid,0);
SetPlayerPos(playerid,322.4386,111.3972,1003.2194);
SetPlayerFacingAngle(playerid,267.51);
TogglePlayerControllable(playerid, 0);
SetCameraBehindPlayer(playerid);
PlayerInfo[playerid][pBankSpawn] = 3;
SetPlayerVirtualWorld(playerid,1);
return 1;
}
if(pickupid == BankPickup[8] && GetPlayerVirtualWorld(playerid)==3 && GetPlayerInterior(playerid)==0)
{
SetPlayerInterior(playerid,0);
SetPlayerPos(playerid,322.4386,111.3972,1003.2194);
SetPlayerFacingAngle(playerid,267.51);
TogglePlayerControllable(playerid, 0);
SetCameraBehindPlayer(playerid);
PlayerInfo[playerid][pBankSpawn] = 3;
SetPlayerVirtualWorld(playerid,1);
return 1;
}
//other bank pickups - location - close
if(pickupid == BankPickup[1] && GetPlayerVirtualWorld(playerid)==0 && GetPlayerInterior(playerid)==0)
{
SetPlayerPos(playerid,2307.1792,-15.6580,28.3014);
SetPlayerFacingAngle(playerid,267.51);
TogglePlayerControllable(playerid, 0);
SetCameraBehindPlayer(playerid);
PlayerInfo[playerid][pBankSpawn] = 3;
SetPlayerVirtualWorld(playerid,2);
return 1;
}
if(pickupid == BankPickup[2] && GetPlayerVirtualWorld(playerid)==1 && GetPlayerInterior(playerid)==0)
{
SetPlayerPos(playerid,1481.3755,-1769.8796,18.7958);
SetPlayerFacingAngle(playerid,0.3163);
SetCameraBehindPlayer(playerid);
SetPlayerVirtualWorld(playerid,0);
return 1;
}
if(pickupid == BankPickup[3] && GetPlayerVirtualWorld(playerid)==2 && GetPlayerInterior(playerid)==0)
{
SetPlayerPos(playerid,2414.5371,1123.8458,10.8203);
SetPlayerFacingAngle(playerid,272.9833);
SetCameraBehindPlayer(playerid);
SetPlayerVirtualWorld(playerid,0);
return 1;
}
if(pickupid == BankPickup[4] && GetPlayerVirtualWorld(playerid)==3 && GetPlayerInterior(playerid)==0)
{
SetPlayerPos(playerid,-1494.9438,920.4615,7.1875);
SetPlayerFacingAngle(playerid,92.1882);
SetCameraBehindPlayer(playerid);
SetPlayerVirtualWorld(playerid,0);
return 1;
}
if(pickupid == BankCommandPickup[0])
{
GameTextForPlayer(playerid, "~g~LOS SANTOS BANK ~n~~w~/bank /transfer", 2000, 3);
return 1;
}
if(pickupid == BankCommandPickup[1])
{
GameTextForPlayer(playerid, "~g~LAS VENTURAS BANK ~n~~w~/bank /transfer", 2000, 3);
return 1;
}
if(pickupid == BankCommandPickup[2])
{
GameTextForPlayer(playerid, "~g~SAN FIERRO BANK ~n~~w~/bank /transfer", 2000, 3);
return 1;
}
if(pickupid==IFCDUTY)
{
GameTextForPlayer(playerid, "~g~IFC DUTY~n~~w~/ifcduty", 2000, 3);
return 1;
}
if(pickupid==WSPickup)
{
GameTextForPlayer(playerid, "~r~WEAPON SKILL~n~~w~/buyws", 2000, 3);
return 1;
}
if(pickupid==DFDUTY)
{
GameTextForPlayer(playerid, "~y~SPECIAL FORCE DUTY~n~~w~/dfduty", 2000, 3);
return 1;
}
if(pickupid==RifaPickup[0])
{
GameTextForPlayer(playerid, "~b~RIFA HOUSE~n~~w~TYPE ~r~/ENTER", 2000, 3);
return 1;
}
if(pickupid==CripzPickup[0])
{
GameTextForPlayer(playerid, "~b~VCRIPZ HOUSE~n~~w~PRESS ~r~ENTER", 2000, 3);
return 1;
}
if(pickupid==CripzPickup[1])
{
GameTextForPlayer(playerid, "~w~PRESS ~r~ENTER", 2000, 3);
return 1;
}
if(pickupid==BGMPickup[2])
{
GameTextForPlayer(playerid, "~p~BGMAFIA DM BIZ~n~~w~PRESS ~r~ENTER", 2000, 3);
return 1;
}
if(pickupid==BGMPickup[1])
{
GameTextForPlayer(playerid, "~w~PRESS ~r~ENTER", 2000, 3);
return 1;
}
if(pickupid==BGMPickup[0])
{
GameTextForPlayer(playerid, "~p~BGMAFIA HOUSE~n~~w~PRESS ~r~ENTER", 2000, 3);
return 1;
}
if(pickupid==BountyPickup[0])
{
GameTextForPlayer(playerid, "~g~BOUNTY HUNTERS HOUSE~n~~w~PRESS ~r~ENTER", 2000, 3);
return 1;
}
if(pickupid==BountyPickup[1])
{
GameTextForPlayer(playerid, "~w~PRESS ~r~ENTER", 2000, 3);
return 1;
}
if(pickupid==BGMPickup[3])
{
GameTextForPlayer(playerid, "~w~PRESS ~r~ENTER", 2000, 3);
return 1;
}
if(pickupid==SoldierPickup[0])
{
GameTextForPlayer(playerid, "~w~PRESS ~r~ENTER", 2000, 3);
return 1;
}
if(pickupid==SoldierPickup[1])
{
GameTextForPlayer(playerid, "~p~SOLDIER HOUSE~n~~w~PRESS ~r~ENTER", 2000, 3);
return 1;
}
if(pickupid==BallasPickup[0])
{
GameTextForPlayer(playerid, "~p~BALLAS HOUSE~n~~w~PRESS ~r~ENTER", 2000, 3);
return 1;
}
if(pickupid==BallasPickup[1])
{
GameTextForPlayer(playerid, "~w~PRESS ~r~ENTER", 2000, 3);
return 1;
}
if(pickupid==RifaPickup[1])
{
GameTextForPlayer(playerid, "~b~RIFA DM BIZ~n~~w~PRESS ~r~ENTER", 2000, 3);
return 1;
}
if(pickupid==RifaPickup[2])
{
GameTextForPlayer(playerid, "~w~PRESS ~r~ENTER", 2000, 3);
return 1;
}
if(pickupid==BloodPickup[0])
{
GameTextForPlayer(playerid, "~r~BLOOD MAFIA DM BIZ~n~~w~PRESS ~r~ENTER", 2000, 3);
return 1;
}
if(pickupid==BloodPickup[1])
{
GameTextForPlayer(playerid, "~w~PRESS ~r~ENTER", 2000, 3);
return 1;
}
if(pickupid==YakuzaPickup[0])
{
GameTextForPlayer(playerid, "~y~YAKUZA DM BIZ~n~~w~PRESS ~r~ENTER", 2000, 3);
return 1;
}
if(pickupid==YakuzaPickup[1])
{
GameTextForPlayer(playerid, "~w~PRESS ~r~ENTER", 2000, 3);
return 1;
}
if(pickupid==SyndicatePickup[0])
{
GameTextForPlayer(playerid, "~b~SYNDICATE TEXAS HOUSE~n~~w~PRESS ~r~ENTER", 2000, 3);
return 1;
}
if(pickupid==SyndicatePickup[1])
{
GameTextForPlayer(playerid, "~w~PRESS ~r~ENTER", 2000, 3);
return 1;
}
if(pickupid==LSPDPickup[0])
{
GameTextForPlayer(playerid, "~b~LSPD~n~~w~TYPE ~r~/ENTER", 2000, 3);
return 1;
}
if(pickupid==LSPDPickup[1])
{
GameTextForPlayer(playerid, "~b~LSPD~n~~w~TYPE ~r~/exit", 2000, 3);
return 1;
}
if(pickupid==TowerPickup[1])
{
GameTextForPlayer(playerid, "~w~PRESS ~r~ENTER", 2000, 3);
return 1;
}
if(pickupid==TowerPickup[0])
{
GameTextForPlayer(playerid, "~g~LOS SANTOS TOWER~n~~n~~w~PRESS ~r~ENTER", 2000, 3);
return 1;
}
if(pickupid==ROBPICKUP[0])
{
GameTextForPlayer(playerid, "~r~robbery start point~n~~w~/robbery", 2000, 3);
return 1;
}
if(pickupid==ROBPICKUP[1])
{
GameTextForPlayer(playerid, "~r~robbery start point~n~~w~/robbery", 2000, 3);
return 1;
}
if(pickupid==ROBPICKUP2[0])
{
GameTextForPlayer(playerid, "~g~TO START STEALING MONEY~w~~n~TYPE /rob", 2000, 3);
return 1;
}
if(pickupid==ROBPICKUP2[1])
{
GameTextForPlayer(playerid, "~g~TO START STEALING MONEY~w~~n~TYPE /rob", 2000, 3);
return 1;
}
if(pickupid==ROBPICKUP2[2])
{
GameTextForPlayer(playerid, "~g~TO START STEALING MONEY~w~~n~TYPE /rob", 2000, 3);
return 1;
}
if(pickupid==ElevatorPickup[1])
{
GameTextForPlayer(playerid, "~w~PRESS ~r~enter", 2000, 3);
return 1;
}
if(pickupid==ElevatorPickup[0])
{
GivePlayerWeapon(playerid, WEAPON_PARACHUTE, 1);
SetPlayerPos(playerid,1803.9323,-1300.1918,131.7344);
return 1;
}
if(pickupid==CarShopPickup[0])
{
GameTextForPlayer(playerid, "~b~INTENSE SHOWROOM ~n~~w~TYPE: ~r~/enter", 2000, 3);
return 1;
}
if(pickupid==CarShopPickup[1])
{
GameTextForPlayer(playerid, "~w~TYPE: ~r~/EXIT", 2000, 3);
return 1;
}
if(pickupid==CarShopPickup2[0])
{
GameTextForPlayer(playerid, "~b~INTENSE SHOWROOM ~n~~w~TYPE: ~r~/enter", 2000, 3);
return 1;
}
if(pickupid==CarShopPickup2[1])
{
GameTextForPlayer(playerid, "~w~TYPE: ~r~/EXIT", 2000, 3);
return 1;
}
if(pickupid==BIZPICKUP[0])
{
GameTextForPlayer(playerid, "~b~BAR~n~~w~/DRINK", 2000, 3);
return 1;
}
if(pickupid==BIZPICKUP[1])
{
GameTextForPlayer(playerid, "~g~Ammu-nation~n~~w~/buy~n~/HEAL~r~ FOR ARMOUR ONLY $100", 2000, 3);
return 1;
}
if(pickupid==BIZPICKUP[2])
{
GameTextForPlayer(playerid, "~b~DRIVING SCHOOL~n~~w~/DMV", 2000, 3);
return 1;
}
if(pickupid==BIZPICKUP[3])
{
GameTextForPlayer(playerid, "~g~GENERAL STORE~n~~w~/BUY", 2000, 3);
return 1;
}
if(pickupid==BIZPICKUP[4])
{
GameTextForPlayer(playerid, "~r~CLOTHES SHOP~n~~w~/buy", 2000, 3);
return 1;
}
if(pickupid==BIZPICKUP[5])
{
GameTextForPlayer(playerid, "~y~BURGER SHOT~n~~w~/BUY", 2000, 3);
return 1;
}
if(pickupid==BIZPICKUP[6])
{
GameTextForPlayer(playerid, "~b~BETTING~n~~w~/BET", 2000, 3);
return 1;
}
if(pickupid==BIZPICKUP[7])
{
GameTextForPlayer(playerid, "~r~CLOTHES SHOP~n~~w~/buy", 2000, 3);
return 1;
}
if(pickupid==BIZPICKUP[8])
{
GameTextForPlayer(playerid, "~g~DISCO~n~~w~/DRINK", 2000, 3);
return 1;
}
if(pickupid==BIZPICKUP[9])
{
GameTextForPlayer(playerid, "~p~SEX SHOP~n~~w~/BUY", 2000, 3);
return 1;
}
if(pickupid==BIZPICKUP[10])
{
GameTextForPlayer(playerid, "~w~LEARN NEW WAYS TO ~g~FIGHT!~n~~n~~b~/train", 2000, 3);
return 1;
}
if(pickupid==BIZPICKUP[16])
{
GameTextForPlayer(playerid, "~w~LEARN NEW WAYS TO ~g~FIGHT!~n~~n~~b~/train" ,2000, 3);
return 1;
}
if(pickupid==BIZPICKUP[17])
{
GameTextForPlayer(playerid, "~r~HOUSE ARMOUR~n~~b~10 PACKAGES~w~ - ~g~$20000~n~~w~/buyarmour" ,2000, 3);
return 1;
}
if(pickupid==BIZPICKUP[18])
{
GameTextForPlayer(playerid, "~r~DRUG STORE~n~~w~/buy" ,2000, 3);
return 1;
}
if(pickupid==BIZPICKUP[19])
{
GameTextForPlayer(playerid, "~b~BAR~n~~w~/DRINK", 2000, 3);
return 1;
}
if(pickupid==BIZPICKUP[20])
{
GameTextForPlayer(playerid, "~b~DRUGS/GUNS/HEAL~n~~w~/BUYDRUG ~g~/BUY ~r~/HEAL", 2000, 3);
return 1;
}
if(pickupid==BIZPICKUP[11])
{
GameTextForPlayer(playerid, "~g~STRIP CLUB~n~~w~/DRINK", 2000, 3);
return 1;
}
if(pickupid==BIZPICKUP[12])
{
GameTextForPlayer(playerid, "~y~CLUCKIN' BELL~n~~w~/BUY", 2000, 3);
return 1;
}
if(pickupid==BIZPICKUP[13])
{
GameTextForPlayer(playerid, "~r~Restaurant~n~~w~/BUY", 2000, 3);
return 1;
}
if(pickupid==BIZPICKUP[14])
{
GameTextForPlayer(playerid, "~g~ADVERTISIMENT~n~~w~/ADVERT", 2000, 3);
return 1;
}
if(pickupid==BIZPICKUP[15])
{
GameTextForPlayer(playerid, "~g~GENERAL STORE~n~~w~/BUY", 2000, 3);
return 1;
}
if(pickupid==VILNAPICKUP)
{
GameTextForPlayer(playerid, "~y~village zone~n~~r~PRESS ~w~ENTER", 2000, 3);
return 1;
}
for(new i2=0; i2 <14; i2++)
{
if(pickupid==ATMPICKUP[i2])
{
GameTextForPlayer(playerid, "~w~USE ~g~/ATM", 2000, 3);
return 1;
}
}
return 1;
}
public OnVehicleMod(playerid, vehicleid, componentid)
{
return 1;
}
public OnVehiclePaintjob(playerid, vehicleid, paintjobid)
{
return 1;
}
public OnVehicleRespray(playerid, vehicleid, color1, color2)
{
return 1;
}
public OnPlayerSelectedMenuRow(playerid, row)
{
new Menu:Current = GetPlayerMenu(playerid);
if(Current == TuningMenu)
{
switch(row)
{
case 0:
if(IsPlayerConnected(playerid))
{
ShowMenuForPlayer(Paintjobs, playerid);
}
case 1:
if(IsPlayerConnected(playerid))
{
ShowMenuForPlayer(Colors, playerid);
}
case 2:
if(IsPlayerConnected(playerid))
{
ShowMenuForPlayer(Exhausts, playerid);
}
case 3:
if(IsPlayerConnected(playerid))
{
ShowMenuForPlayer(Frontbumper, playerid);
}
case 4:
if(IsPlayerConnected(playerid))
{
ShowMenuForPlayer(Rearbumper, playerid);
}
case 5:
if(IsPlayerConnected(playerid))
{
ShowMenuForPlayer(Roof, playerid);
}
case 6:
if(IsPlayerConnected(playerid))
{
ShowMenuForPlayer(Spoilers, playerid);
}
case 7:
if(IsPlayerConnected(playerid))
{
ShowMenuForPlayer(Sideskirts, playerid);
}
case 8:
if(IsPlayerConnected(playerid))
{
ShowMenuForPlayer(Wheels, playerid);
}
case 9:
if(IsPlayerConnected(playerid))
{
ShowMenuForPlayer(Others, playerid);
}
}
}
if(Current == Paintjobs)
{
switch(row)
{
case 0:
if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 565 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 559 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 561 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 560 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 575 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 534 || // Broadway
GetVehicleModel(GetPlayerVehicleID(playerid)) == 567 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 536 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 535 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 576 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 558)
{
new car = GetPlayerVehicleID(playerid);
ChangeVehiclePaintjob(car,0);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added paintjob to car");
ShowMenuForPlayer(TuningMenu, playerid);
}
else
{
SendClientMessage(playerid,COLOR_YELLOW,"[WARNING] Paintjob is only for Wheel Arch Angrls and Loco Low Co types of cars");
ShowMenuForPlayer(TuningMenu, playerid);
}
case 1:
if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 565 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 559 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 561 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 560 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 575 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 534 || // Broadway
GetVehicleModel(GetPlayerVehicleID(playerid)) == 567 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 536 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 535 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 576 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 558)
{
new car = GetPlayerVehicleID(playerid);
ChangeVehiclePaintjob(car,1);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added paintjob to car");
ShowMenuForPlayer(TuningMenu, playerid);
}
else
{
SendClientMessage(playerid,COLOR_YELLOW,"[WARNING] Paintjob is only for Wheel Arch Angrls and Loco Low Co types of cars");
ShowMenuForPlayer(TuningMenu, playerid);
}
case 2:
if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 565 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 559 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 561 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 560 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 575 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 534 || // Broadway
GetVehicleModel(GetPlayerVehicleID(playerid)) == 567 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 536 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 535 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 576 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 558)
{
new car = GetPlayerVehicleID(playerid);
ChangeVehiclePaintjob(car,2);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added paintjob to car");
ShowMenuForPlayer(TuningMenu, playerid);
}
else
{
SendClientMessage(playerid,COLOR_YELLOW,"[WARNING] Paintjob is only for Wheel Arch Angrls and Loco Low Co types of cars");
ShowMenuForPlayer(TuningMenu, playerid);
}
case 3:
if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 565 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 559 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 561 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 560 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 575 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 534 || // Broadway
GetVehicleModel(GetPlayerVehicleID(playerid)) == 567 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 536 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 535 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 576 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 558)
{
new car = GetPlayerVehicleID(playerid);
ChangeVehiclePaintjob(car,3);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added paintjob to car");
ShowMenuForPlayer(TuningMenu, playerid);
}
else
{
SendClientMessage(playerid,COLOR_YELLOW,"[WARNING] Paintjob is only for Wheel Arch Angrls and Loco Low Co types of cars");
ShowMenuForPlayer(TuningMenu, playerid);
}
case 4:
if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 565 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 559 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 561 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 560 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 575 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 534 || // Broadway
GetVehicleModel(GetPlayerVehicleID(playerid)) == 567 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 536 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 535 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 576 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 558)
{
new car = GetPlayerVehicleID(playerid);
ChangeVehiclePaintjob(car,4);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added paintjob to car");
ShowMenuForPlayer(TuningMenu, playerid);
}
else
{
SendClientMessage(playerid,COLOR_YELLOW,"[WARNING] Paintjob is only for Wheel Arch Angrls and Loco Low Co types of cars");
ShowMenuForPlayer(TuningMenu, playerid);
}
case 5:
{
ShowMenuForPlayer(TuningMenu, playerid);
}
}
}
if(Current == Colors)
{
switch(row)
{
case 0:
if(GetPlayerMoney(playerid) >= -100000000000000)
{
new car = GetPlayerVehicleID(playerid);
ChangeVehicleColor(car,0,0);
ShowMenuForPlayer(Colors, playerid);
}
else
{
ShowMenuForPlayer(TuningMenu, playerid);
}
case 1:
if(GetPlayerMoney(playerid) >= -100000000000000)
{
new car = GetPlayerVehicleID(playerid);
ChangeVehicleColor(car,1,1);
ShowMenuForPlayer(Colors, playerid);
}
else
{
ShowMenuForPlayer(TuningMenu, playerid);
}
case 2:
if(GetPlayerMoney(playerid) >= -100000000000000)
{
new car = GetPlayerVehicleID(playerid);
ChangeVehicleColor(car,3,3);
ShowMenuForPlayer(Colors, playerid);
}
else
{
ShowMenuForPlayer(TuningMenu, playerid);
}
case 3:
if(GetPlayerMoney(playerid) >= -100000000000000)
{
new car = GetPlayerVehicleID(playerid);
ChangeVehicleColor(car,79,79);
ShowMenuForPlayer(Colors, playerid);
}
else
{
ShowMenuForPlayer(TuningMenu, playerid);
}
case 4:
if(GetPlayerMoney(playerid) >= -100000000000000)
{
new car = GetPlayerVehicleID(playerid);
ChangeVehicleColor(car,86,86);
ShowMenuForPlayer(Colors, playerid);
}
else
{
ShowMenuForPlayer(TuningMenu, playerid);
}
case 5:
if(GetPlayerMoney(playerid) >= -100000000000000)
{
new car = GetPlayerVehicleID(playerid);
ChangeVehicleColor(car,6,6);
ShowMenuForPlayer(Colors, playerid);
}
else
{
ShowMenuForPlayer(TuningMenu, playerid);
}
case 6:
if(GetPlayerMoney(playerid) >= -100000000000000)
{
new car = GetPlayerVehicleID(playerid);
ChangeVehicleColor(car,126,126);
ShowMenuForPlayer(Colors, playerid);
}
else
{
ShowMenuForPlayer(TuningMenu, playerid);
}
case 7:
if(GetPlayerMoney(playerid) >= -100000000000000)
{
new car = GetPlayerVehicleID(playerid);
ChangeVehicleColor(car,66,66);
ShowMenuForPlayer(Colors, playerid);
}
case 8:ShowMenuForPlayer(Colors1, playerid);
}
}
if(Current == Colors1)
{
switch(row){
case 0:
if(GetPlayerMoney(playerid) >= -100000000000000)
{
new car = GetPlayerVehicleID(playerid);
ChangeVehicleColor(car,24,24);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully repainted to car");
ShowMenuForPlayer(Colors1, playerid);
}
else
{
SendClientMessage(playerid,COLOR_RED,"Not enough money!");
ShowMenuForPlayer(TuningMenu, playerid);
}
case 1:
if(GetPlayerMoney(playerid) >= -100000000000000)
{
new car = GetPlayerVehicleID(playerid);
ChangeVehicleColor(car,123,123);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully repainted to car");
ShowMenuForPlayer(Colors1, playerid);
}
else
{
SendClientMessage(playerid,COLOR_RED,"Not enough money!");
ShowMenuForPlayer(TuningMenu, playerid);
}
case 2:
if(GetPlayerMoney(playerid) >= -100000000000000)
{
new car = GetPlayerVehicleID(playerid);
ChangeVehicleColor(car,53,53);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully repainted to car");
ShowMenuForPlayer(Colors1, playerid);
}
else
{
SendClientMessage(playerid,COLOR_RED,"Not enough money!");
ShowMenuForPlayer(TuningMenu, playerid);
}
case 3:
if(GetPlayerMoney(playerid) >= -100000000000000)
{
new car = GetPlayerVehicleID(playerid);
ChangeVehicleColor(car,93,93);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully repainted to car");
ShowMenuForPlayer(Colors1, playerid);
}
else
{
SendClientMessage(playerid,COLOR_RED,"Not enough money!");
ShowMenuForPlayer(TuningMenu, playerid);
}
case 4:
if(GetPlayerMoney(playerid) >= -100000000000000)
{
new car = GetPlayerVehicleID(playerid);
ChangeVehicleColor(car,83,83);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully repainted to car");
ShowMenuForPlayer(Colors1, playerid);
}
else
{
SendClientMessage(playerid,COLOR_RED,"Not enough money!");
ShowMenuForPlayer(TuningMenu, playerid);
}
case 5:
if(GetPlayerMoney(playerid) >= -100000000000000)
{
new car = GetPlayerVehicleID(playerid);
ChangeVehicleColor(car,60,60);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully repainted to car");
ShowMenuForPlayer(Colors1, playerid);
}
else
{
SendClientMessage(playerid,COLOR_RED,"Not enough money!");
ShowMenuForPlayer(TuningMenu, playerid);
}
case 6:
if(GetPlayerMoney(playerid) >= -100000000000000)
{
new car = GetPlayerVehicleID(playerid);
ChangeVehicleColor(car,126,126);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully repainted to car");
ShowMenuForPlayer(Colors1, playerid);
}
else
{
SendClientMessage(playerid,COLOR_RED,"Not enough money!");
ShowMenuForPlayer(TuningMenu, playerid);
}
case 7:
if(GetPlayerMoney(playerid) >= -100000000000000)
{
new car = GetPlayerVehicleID(playerid);
ChangeVehicleColor(car,110,110);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully repainted to car");
ShowMenuForPlayer(Colors1, playerid);
}
else
{
SendClientMessage(playerid,COLOR_RED,"Not enough money!");
ShowMenuForPlayer(TuningMenu, playerid);
}
case 8:ShowMenuForPlayer(TuningMenu, playerid);
}
}
if(Current == Exhausts)
{
switch(row)
{
case 0:
{
if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 565 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 559 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 561 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 560)
{
new car = GetPlayerVehicleID(playerid);
if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562)
{
AddVehicleComponent(car,1034);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch Alien Exhaust component on Elegy");
ShowMenuForPlayer(Exhausts, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 565)
{
AddVehicleComponent(car,1046);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch Alien Exhaust component on Flash");
ShowMenuForPlayer(Exhausts, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 559)
{
AddVehicleComponent(car,1065);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch Alien Exhaust component on Jetser");
ShowMenuForPlayer(Exhausts, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 561)
{
AddVehicleComponent(car,1064);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch Alien Exhaust component on Stratum");
ShowMenuForPlayer(Exhausts, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 560)
{
AddVehicleComponent(car,1028);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch Alien Exhaust component on Sultan");
ShowMenuForPlayer(Exhausts, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 558)
{
AddVehicleComponent(car,1089);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch Alien Exhaust component on Uranus");
ShowMenuForPlayer(Exhausts, playerid);
}
}
else
{
SendClientMessage(playerid,COLOR_YELLOW,"[WARNING] You can only add this component to Wheel Arch Angels Car types");
ShowMenuForPlayer(TuningMenu, playerid);
}
}
case 1:
if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 565 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 559 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 561 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 560)
{
new car = GetPlayerVehicleID(playerid);
if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562)
{
AddVehicleComponent(car,1037);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch X-Flow Exhaust component on Elegy");
ShowMenuForPlayer(Exhausts, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 565)
{
AddVehicleComponent(car,1045);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch X-Flow Exhaust component on Flash");
ShowMenuForPlayer(Exhausts, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 559)
{
AddVehicleComponent(car,1066);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch X-Flow exaust component on Jester");
ShowMenuForPlayer(Exhausts, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 561)
{
AddVehicleComponent(car,1059);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch X-Flow Exhaust component on Stratum");
ShowMenuForPlayer(Exhausts, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 560)
{
AddVehicleComponent(car,1029);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch X-Flow Exhaust component on Sultan");
ShowMenuForPlayer(Exhausts, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 558)
{
AddVehicleComponent(car,1092);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch X-Flow Exhaust component on Uranus");
ShowMenuForPlayer(Exhausts, playerid);
}
}
else
{
SendClientMessage(playerid,COLOR_YELLOW,"[WARNING] You can only add this component to Wheel Arch Angels Car types");
ShowMenuForPlayer(TuningMenu, playerid);
}
case 2:
if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 575 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 534 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 567 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 536 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 576 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 535)
{
new car = GetPlayerVehicleID(playerid);
if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 575) // Brodway
{
AddVehicleComponent(car,1044);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Loco Low-Co Chromer Exhaust component on Brodway");
ShowMenuForPlayer(Exhausts, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 534)// Remington
{
AddVehicleComponent(car,1126);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Loco Low-Co Chromer Exhaust component on Remington");
ShowMenuForPlayer(Exhausts, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 567)// Savanna
{
AddVehicleComponent(car,1129);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Loco Low-Co Chromer Exhaust component on Savana");
ShowMenuForPlayer(Exhausts, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 536) // Blade
{
AddVehicleComponent(car,1104);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Loco Low-Co Chromer Exhaust component on Blade");
ShowMenuForPlayer(Exhausts, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 535) // Slamvan
{
AddVehicleComponent(car,1113);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Loco Low-Co Chromer Exhaust component on Slamvan");
ShowMenuForPlayer(Exhausts, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 576) // Tornado
{
AddVehicleComponent(car,1136);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Loco Low-Co Chromer Exhaust component on Tornado");
ShowMenuForPlayer(Exhausts, playerid);
}
}
else
{
SendClientMessage(playerid,COLOR_YELLOW,"[WARNING] You can only add this component to Loco Low-Co Car types");
ShowMenuForPlayer(TuningMenu, playerid);
}
case 3:
if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 575 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 534 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 567 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 536 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 576 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 535)
{
new car = GetPlayerVehicleID(playerid);
if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 575) // Brodway
{
AddVehicleComponent(car,1043);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Loco Low-Co Slamin Exhaust component on Brodway");
ShowMenuForPlayer(Exhausts, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 534)// Remington
{
AddVehicleComponent(car,1127);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Loco Low-Co Slamin Exhaust component on Remingon");
ShowMenuForPlayer(Exhausts, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 567)// Savanna
{
AddVehicleComponent(car,1132);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Loco Low-Co Slamin Exhaust component on Savana");
ShowMenuForPlayer(Exhausts, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 536) // Blade
{
AddVehicleComponent(car,1105);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Loco Low-Co Slamin Exhaust component on Blade");
ShowMenuForPlayer(Exhausts, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 535) // Slamvan
{
AddVehicleComponent(car,1114);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Loco Low-Co Slamin Exhaust component on Slamvan");
ShowMenuForPlayer(Exhausts, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 576) // Tornado
{
AddVehicleComponent(car,1135);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Loco Low-Co Slamin Exhaust component on Tornado");
ShowMenuForPlayer(Exhausts, playerid);
}
}
else
{
SendClientMessage(playerid,COLOR_YELLOW,"[WARNING] You can only add this component to Loco Low-Co Car types");
ShowMenuForPlayer(TuningMenu, playerid);
}
case 4:ShowMenuForPlayer(TuningMenu, playerid);
}
}
if(Current == Frontbumper)
{
switch(row)
{
case 0:
if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 565 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 559 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 561 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 560)
{
new car = GetPlayerVehicleID(playerid);
if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562) // Elegy
{
AddVehicleComponent(car,1171);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch Alien front bumper component on Elegy");
ShowMenuForPlayer(Frontbumper, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 565) // Flash
{
AddVehicleComponent(car,1153);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch Alien front bumper component on Flash");
ShowMenuForPlayer(Frontbumper, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 559) // Jester
{
AddVehicleComponent(car,1160);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch Alien front bumper component on Jester");
ShowMenuForPlayer(Frontbumper, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 561) // Stratum
{
AddVehicleComponent(car,1155);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch Alien front bumper component on Stratum");
ShowMenuForPlayer(Frontbumper, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 560) // Sultan
{
AddVehicleComponent(car,1169);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch Alien front bumper component on Sultan");
ShowMenuForPlayer(Frontbumper, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 558) // Uranus
{
AddVehicleComponent(car,1166);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch Alien front bumper component on Uraus");
ShowMenuForPlayer(Frontbumper, playerid);
}
}
else
{
SendClientMessage(playerid,COLOR_YELLOW,"[WARNING] You can only add this component to Wheel Arch Angels Car types");
ShowMenuForPlayer(TuningMenu, playerid);
}
case 1:
if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 565 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 559 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 561 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 560)
{
new car = GetPlayerVehicleID(playerid);
if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562) // Elegy
{
AddVehicleComponent(car,1172);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch X-Flow front bumper component on Elegy");
ShowMenuForPlayer(Frontbumper, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 565) // Flash
{
AddVehicleComponent(car,1152);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch  X-Flow front bumper component on Flash");
ShowMenuForPlayer(Frontbumper, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 559) // Jetser
{
AddVehicleComponent(car,1173);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch  X-Flow front bumper component on Jester");
ShowMenuForPlayer(Frontbumper, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 561) // Stratum
{
AddVehicleComponent(car,1157);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch  X-Flow front bumper component on Stratum");
ShowMenuForPlayer(Frontbumper, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 560) // Sultan
{
AddVehicleComponent(car,1170);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch  X-Flow front bumper component on Sultan");
ShowMenuForPlayer(Frontbumper, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 558)  // Uranus
{
AddVehicleComponent(car,1165);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch  X-Flow front bumper component on Uranus");
ShowMenuForPlayer(Frontbumper, playerid);
}
}
else
{
SendClientMessage(playerid,COLOR_YELLOW,"[WARNING] You can only add this component to Wheel Arch Angels Car types");
ShowMenuForPlayer(TuningMenu, playerid);
}
case 2:
if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 575 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 534 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 567 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 536 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 576 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 535)
{
new car = GetPlayerVehicleID(playerid);
if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 575) // Brodway
{
AddVehicleComponent(car,1174);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Loco Low-Co Chromer front bumper component on Brodway");
ShowMenuForPlayer(Frontbumper, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 534)// Remington
{
AddVehicleComponent(car,1179);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Loco Low-Co Chromer front bumper component on Remington");
ShowMenuForPlayer(Frontbumper, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 567)// Savanna
{
AddVehicleComponent(car,1189);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Loco Low-Co Chromer front bumper component on Savana");
ShowMenuForPlayer(Frontbumper, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 536) // Blade
{
AddVehicleComponent(car,1182);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Loco Low-Co Chromer front bumper component on Blade");
ShowMenuForPlayer(Frontbumper, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 535) // Slamvan
{
AddVehicleComponent(car,1115);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Loco Low-Co Chromer front bumper component on Slamvan");
ShowMenuForPlayer(Frontbumper, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 576) // Tornado
{
AddVehicleComponent(car,1191);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Loco Low-Co Chromer front bumper component on Tornado");
ShowMenuForPlayer(Frontbumper, playerid);
}
}
else
{
SendClientMessage(playerid,COLOR_YELLOW,"[WARNING] You can only add this component to Loco Low-Co Car types");
ShowMenuForPlayer(TuningMenu, playerid);
}
case 3:
if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 575 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 534 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 567 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 536 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 576 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 576)
{
new car = GetPlayerVehicleID(playerid);
if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 575) // Brodway
{
AddVehicleComponent(car,1175);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Loco Low-Co Slamin front bumper component on Brodway");
ShowMenuForPlayer(Frontbumper, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 534)// Remington
{
AddVehicleComponent(car,1185);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Loco Low-Co Slamin front bumper component on Remington");
ShowMenuForPlayer(Frontbumper, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 567)// Savanna
{
AddVehicleComponent(car,1188);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Loco Low-Co Slamin front bumper component on Savana");
ShowMenuForPlayer(Frontbumper, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 536) // Blade
{
AddVehicleComponent(car,1181);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Loco Low-Co Slamin front bumper component on Blade");
ShowMenuForPlayer(Frontbumper, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 535) // Slamvan
{
AddVehicleComponent(car,1116);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Loco Low-Co Slamin front bumper component on Slamvan");
ShowMenuForPlayer(Frontbumper, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 576) // Tornado
{
AddVehicleComponent(car,1190);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Loco Low-Co Slamin front bumper component on Tornado");
ShowMenuForPlayer(Frontbumper, playerid);
}
}
else
{
SendClientMessage(playerid,COLOR_YELLOW,"[WARNING] You can only add this component to Loco Low-Co Car types");
ShowMenuForPlayer(TuningMenu, playerid);
}
case 4:ShowMenuForPlayer(TuningMenu, playerid);
}
}
if(Current == Rearbumper)
{
switch(row)
{
case 0:
if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 565 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 559 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 561 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 560)
{
new car = GetPlayerVehicleID(playerid);
if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562) // Elegy
{
AddVehicleComponent(car,1149);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch Alien rear bumper component on Elegy");
ShowMenuForPlayer(Rearbumper, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 565) // Flash
{
AddVehicleComponent(car,1150);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch Alien rear bumper component on Flash");
ShowMenuForPlayer(Rearbumper, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 559) // Jester
{
AddVehicleComponent(car,1159);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch Alien rear bumper component on Jester");
ShowMenuForPlayer(Rearbumper, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 561) // Stratum
{
AddVehicleComponent(car,1154);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch Alien rear bumper component on Stratum");
ShowMenuForPlayer(Rearbumper, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 560) // Sultan
{
AddVehicleComponent(car,1141);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch Alien rear bumper component on Sultan");
ShowMenuForPlayer(Rearbumper, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 558) // Uranus
{
AddVehicleComponent(car,1168);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch Alien rear bumper component on Uranus");
ShowMenuForPlayer(Rearbumper, playerid);
}
}
else
{
SendClientMessage(playerid,COLOR_YELLOW,"[WARNING] You can only add this component to Wheel Arch Angels Car types");
ShowMenuForPlayer(TuningMenu, playerid);
}
case 1:
if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 565 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 559 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 561 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 560)
{
new car = GetPlayerVehicleID(playerid);
if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562) // Elegy
{
AddVehicleComponent(car,1148);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch  X-Flow rear bumper component on Elegy");
ShowMenuForPlayer(Rearbumper, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 565) // Flash
{
AddVehicleComponent(car,1151);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch  X-Flow rear bumper component on Flash");
ShowMenuForPlayer(Rearbumper, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 559) // Jetser
{
AddVehicleComponent(car,1161);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch  X-Flow rear bumper component on Jester");
ShowMenuForPlayer(Rearbumper, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 561) // Stratum
{
AddVehicleComponent(car,1156);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch  X-Flow rear bumper component on Stratum");
ShowMenuForPlayer(Rearbumper, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 560) // Sultan
{
AddVehicleComponent(car,1140);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch  X-Flow rear bumper component on Sultan");
ShowMenuForPlayer(Rearbumper, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 558)  // Uranus
{
AddVehicleComponent(car,1167);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch  X-Flow rear bumper component on Uranus");
ShowMenuForPlayer(Rearbumper, playerid);
}
}
else
{
SendClientMessage(playerid,COLOR_YELLOW,"[WARNING] You can only add this component to Wheel Arch Angels Car types");
ShowMenuForPlayer(TuningMenu, playerid);
}
case 2:
if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 575 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 534 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 567 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 536 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 576 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 535)
{
new car = GetPlayerVehicleID(playerid);
if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 575) // Brodway
{
AddVehicleComponent(car,1176);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Loco Low-Co Chromer rear bumper component on Brodway");
ShowMenuForPlayer(Rearbumper, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 534)// Remington
{
AddVehicleComponent(car,1180);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Loco Low-Co Chromer rear bumper component on Remington");
ShowMenuForPlayer(Rearbumper, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 567)// Savanna
{
AddVehicleComponent(car,1187);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Loco Low-Co Chromer rear bumper component on Savana");
ShowMenuForPlayer(Rearbumper, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 536) // Blade
{
AddVehicleComponent(car,1184);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Loco Low-Co Chromer rear bumper component on Blade");
ShowMenuForPlayer(Rearbumper, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 535) // Slamvan
{
AddVehicleComponent(car,1109);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Loco Low-Co Chromer rear bumper component on Slamvan");
ShowMenuForPlayer(Rearbumper, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 576) // Tornado
{
AddVehicleComponent(car,1192);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Loco Low-Co Chromer rear bumper component on Tornado");
ShowMenuForPlayer(Rearbumper, playerid);
}
}
else
{
SendClientMessage(playerid,COLOR_YELLOW,"[WARNING] You can only add this component to Loco Low-Co Car types");
ShowMenuForPlayer(TuningMenu, playerid);
}
case 3:
if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 575 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 534 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 567 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 536 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 576 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 535)
{
new car = GetPlayerVehicleID(playerid);
if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 575) // Brodway
{
AddVehicleComponent(car,1177);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Loco Low-Co Slamin rear bumper component on Brodway");
ShowMenuForPlayer(Rearbumper, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 534)// Remington
{
AddVehicleComponent(car,1178);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Loco Low-Co Slamin rear bumper component on Remington");
ShowMenuForPlayer(Rearbumper, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 567)// Savanna
{
AddVehicleComponent(car,1186);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Loco Low-Co Slamin rear bumper component on Savana");
ShowMenuForPlayer(Rearbumper, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 536) // Blade
{
AddVehicleComponent(car,1183);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Loco Low-Co Slamin rear bumper component on Blade");
ShowMenuForPlayer(Rearbumper, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 535) // Slamvan
{
AddVehicleComponent(car,1110);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Loco Low-Co Slamin rear bumper component on Slamvan");
ShowMenuForPlayer(Rearbumper, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 576) // Tornado
{
AddVehicleComponent(car,1193);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Loco Low-Co Slamin rear bumper component on Tornado");
ShowMenuForPlayer(Rearbumper, playerid);
}
}
else
{
SendClientMessage(playerid,COLOR_YELLOW,"[WARNING] You can only add this component to Loco Low-Co Car types");
ShowMenuForPlayer(TuningMenu, playerid);
}
case 4:ShowMenuForPlayer(TuningMenu, playerid);
}
}
//==============================================================================
//==============================================================================
if(Current == Roof)
{
switch(row)
{
case 0:
if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 565 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 559 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 561 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 560)
{
new car = GetPlayerVehicleID(playerid);
if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562) // Elegy
{
AddVehicleComponent(car,1035);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch Alien roof vent component on Elegy");
ShowMenuForPlayer(Roof, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 565) // Flash
{
AddVehicleComponent(car,1054);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch Alien roof vent component on Flash");
ShowMenuForPlayer(Roof, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 559) // Jester
{
AddVehicleComponent(car,1067);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch Alien roof vent component on Jester");
ShowMenuForPlayer(Roof, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 561) // Stratum
{
AddVehicleComponent(car,1055);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch Alien roof vent component on Stratum");
ShowMenuForPlayer(Roof, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 560) // Sultan
{
AddVehicleComponent(car,1032);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch Alien roof vent component on Sultan");
ShowMenuForPlayer(Roof, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 558) // Uranus
{
AddVehicleComponent(car,1088);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch Alien roof vent component on Uranus");
ShowMenuForPlayer(Roof, playerid);
}
}
else
{
SendClientMessage(playerid,COLOR_YELLOW,"[WARNING] You can only add this component to Wheel Arch Angels Car types");
ShowMenuForPlayer(TuningMenu, playerid);
}
case 1:
if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 565 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 559 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 561 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 560)
{
new car = GetPlayerVehicleID(playerid);
if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562) // Elegy
{
AddVehicleComponent(car,1035);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch X-Flow roof vent component on Elegy");
ShowMenuForPlayer(Roof, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 565) // Flash
{
AddVehicleComponent(car,1053);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch X-Flow roof vent component on Flash");
ShowMenuForPlayer(Roof, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 559) // Jetser
{
AddVehicleComponent(car,1068);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch X-Flow roof vent component on Jester");
ShowMenuForPlayer(Roof, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 561) // Stratum
{
AddVehicleComponent(car,1061);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch X-Flow roof vent component on Stratum");
ShowMenuForPlayer(Roof, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 560) // Sultan
{
AddVehicleComponent(car,1033);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch X-Flow roof vent component on Sultan");
ShowMenuForPlayer(Roof, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 558)  // Uranus
{
AddVehicleComponent(car,1091);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch X-Flow roof vent component on Uranus");
ShowMenuForPlayer(Roof, playerid);
}
}
else
{
SendClientMessage(playerid,COLOR_YELLOW,"[WARNING] You can only add this component to Wheel Arch Angels Car types");
ShowMenuForPlayer(TuningMenu, playerid);
}
case 2:
if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 567 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 536)
{
new car = GetPlayerVehicleID(playerid);
if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 567) // Savana
{
AddVehicleComponent(car,1130);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Loco Low-Co Hardtop Roof component on Brodway");
ShowMenuForPlayer(Roof, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 536) // Blade
{
AddVehicleComponent(car,1128);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Loco Low-Co Hardtop Roof component on Blade");
ShowMenuForPlayer(Roof, playerid);
}
}
else
{
SendClientMessage(playerid,COLOR_YELLOW,"[WARNING] You can only add this component to Loco Low-Co Car types Savana and Blade");
ShowMenuForPlayer(Roof, playerid);
}
case 3:
if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 567 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 536)
{
new car = GetPlayerVehicleID(playerid);
if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 567) // Savana
{
AddVehicleComponent(car,1131);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Loco Low-Co Softtop Roof component on Brodway");
ShowMenuForPlayer(Roof, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 536) // Blade
{
AddVehicleComponent(car,1103);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Loco Low-Co Softtop Roof component on Blade");
ShowMenuForPlayer(Roof, playerid);
}
}
else
{
SendClientMessage(playerid,COLOR_YELLOW,"[WARNING] You can only add this component to Loco Low-Co Car types Savana and Blade");
ShowMenuForPlayer(Roof, playerid);
}
case 4:
{
ShowMenuForPlayer(TuningMenu, playerid);
}
}
}
if(Current == Spoilers)
{
switch(row)
{
case 0:
if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 565 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 559 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 561 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 560)
{
new car = GetPlayerVehicleID(playerid);
if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562) // Elegy
{
AddVehicleComponent(car,1147);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch Alien Spoilers component on Elegy");
ShowMenuForPlayer(Spoilers, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 565) // Flash
{
AddVehicleComponent(car,1049);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch Alien Spoilers component on Flash");
ShowMenuForPlayer(Spoilers, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 559) // Jester
{
AddVehicleComponent(car,1162);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch Alien Spoilers component on Jester");
ShowMenuForPlayer(Spoilers, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 561) // Stratum
{
AddVehicleComponent(car,1158);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch Alien Spoilers component on Stratum");
ShowMenuForPlayer(Spoilers, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 560) // Sultan
{
AddVehicleComponent(car,1138);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch Alien Spoilers component on Sultan");
ShowMenuForPlayer(Spoilers, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 558) // Uranus
{
AddVehicleComponent(car,1164);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch Alien Spoilers component on Uranus");
ShowMenuForPlayer(Spoilers, playerid);
}
}
else
{
SendClientMessage(playerid,COLOR_YELLOW,"[WARNING] You can only add this component to Wheel Arch Angels Car types");
ShowMenuForPlayer(TuningMenu, playerid);
}
case 1:
if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 565 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 559 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 561 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 560)
{
new car = GetPlayerVehicleID(playerid);
if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562) // Elegy
{
AddVehicleComponent(car,1146);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch X-Flow Spoilers component on Elegy");
ShowMenuForPlayer(Spoilers, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 565) // Flash
{
AddVehicleComponent(car,1150);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch X-Flow Spoilers component on Flash");
ShowMenuForPlayer(Spoilers, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 559) // Jetser
{
AddVehicleComponent(car,1158);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch X-Flow Spoilers component on Jester");
ShowMenuForPlayer(Spoilers, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 561) // Stratum
{
AddVehicleComponent(car,1060);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch X-Flow Spoilers component on Stratum");
ShowMenuForPlayer(Spoilers, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 560) // Sultan
{
AddVehicleComponent(car,1139);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch X-Flow Spoilers component on Sultan");
ShowMenuForPlayer(Spoilers, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 558)  // Uranus
{
AddVehicleComponent(car,1163);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch X-Flow Spoilers component on Uranus");
ShowMenuForPlayer(Spoilers, playerid);
}
}
else
{
SendClientMessage(playerid,COLOR_YELLOW,"[WARNING] You can only add this component to X-Flow Arch Angels Car types");
ShowMenuForPlayer(TuningMenu, playerid);
}
case 2:
{
ShowMenuForPlayer(TuningMenu, playerid);
}
}
}
if(Current == Sideskirts)
{
switch(row)
{
case 0:
if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 565 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 559 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 561 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 560)
{
new car = GetPlayerVehicleID(playerid);
if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562) // Elegy
{
AddVehicleComponent(car,1036);
AddVehicleComponent(car,1040);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch Alien Side Skirts component on Elegy");
ShowMenuForPlayer(Sideskirts, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 565) // Flash
{
AddVehicleComponent(car,1047);
AddVehicleComponent(car,1051);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch Alien Sideskirts vent component on Flash");
ShowMenuForPlayer(Sideskirts, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 559) // Jester
{
AddVehicleComponent(car,1069);
AddVehicleComponent(car,1071);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch Alien Side Skirts component on Jester");
ShowMenuForPlayer(Sideskirts, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 561) // Stratum
{
AddVehicleComponent(car,1056);
AddVehicleComponent(car,1062);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch Alien Side Skirts component on Stratum");
ShowMenuForPlayer(Sideskirts, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 560) // Sultan
{
AddVehicleComponent(car,1026);
AddVehicleComponent(car,1027);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch Alien Side Skirts bumper component on Sultan");
ShowMenuForPlayer(Sideskirts, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 558) // Uranus
{
AddVehicleComponent(car,1090);
AddVehicleComponent(car,1094);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch Alien Side Skirts component on Uranus");
ShowMenuForPlayer(Sideskirts, playerid);
}
}
else
{
SendClientMessage(playerid,COLOR_YELLOW,"[WARNING] You can only add this component to Wheel Arch Angels Car types");
ShowMenuForPlayer(TuningMenu, playerid);
}
case 1:
if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 565 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 559 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 561 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 560)
{
new car = GetPlayerVehicleID(playerid);
if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562) // Elegy
{
AddVehicleComponent(car,1039);
AddVehicleComponent(car,1041);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch X-Flow Side Skirts component on Elegy");
ShowMenuForPlayer(Sideskirts, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 565) // Flash
{
AddVehicleComponent(car,1048);
AddVehicleComponent(car,1052);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch X-Flow Side Skirts component on Flash");
ShowMenuForPlayer(Sideskirts, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 559) // Jetser
{
AddVehicleComponent(car,1070);
AddVehicleComponent(car,1072);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch X-Flow Side Skirts component on Jester");
ShowMenuForPlayer(Sideskirts, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 561) // Stratum
{
AddVehicleComponent(car,1057);
AddVehicleComponent(car,1063);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch X-Flow Side Skirts component on Stratum");
ShowMenuForPlayer(Sideskirts, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 560) // Sultan
{
AddVehicleComponent(car,1031);
AddVehicleComponent(car,1030);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch X-Flow Side Skirts component on Sultan");
ShowMenuForPlayer(Sideskirts, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 558)  // Uranus
{
AddVehicleComponent(car,1093);
AddVehicleComponent(car,1095);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch X-Flow Side Skirts component on Uranus");
ShowMenuForPlayer(Sideskirts, playerid);
}
}
else
{
SendClientMessage(playerid,COLOR_YELLOW,"[WARNING] You can only add this component to Wheel Arch Angels Car types");
ShowMenuForPlayer(TuningMenu, playerid);
}
case 2:
if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 575 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 536 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 576 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 567)
{
new car = GetPlayerVehicleID(playerid);
if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 575) // Brodway
{
AddVehicleComponent(car,1042);
AddVehicleComponent(car,1099);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Loco Low-Co Chrome Strip Side Skirts component on Brodway");
ShowMenuForPlayer(Sideskirts, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 567) // Savana
{
AddVehicleComponent(car,1102);
AddVehicleComponent(car,1133);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Loco Low-Co Chrome Strip Side Skirts component on Savana");
ShowMenuForPlayer(Sideskirts, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 576) // Tornado
{
AddVehicleComponent(car,1134);
AddVehicleComponent(car,1137);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Loco Low-Co Chrome Strip Side Skirts component on Tornado");
ShowMenuForPlayer(Sideskirts, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 536) // Blade
{
AddVehicleComponent(car,1108);
AddVehicleComponent(car,1107);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Loco Low-Co Chrome Strip Side Skirts component on Blade");
ShowMenuForPlayer(Sideskirts, playerid);
}
}
else
{
SendClientMessage(playerid,COLOR_YELLOW,"[WARNING] You can only add this component to Loco Low-Co Car types Brodway, Savana Tornado and Blade");
ShowMenuForPlayer(TuningMenu, playerid);
}
case 3:
if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 534 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 534)
{
new car = GetPlayerVehicleID(playerid);
if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 534) // Remington
{
AddVehicleComponent(car,1122);
AddVehicleComponent(car,1101);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Loco Low-Co Chrome Flames Side Skirts component on Remington");
ShowMenuForPlayer(Sideskirts, playerid);
}
}
else
{
SendClientMessage(playerid,COLOR_YELLOW,"[WARNING] You can only add this component to Loco Low-Co Car type Remington ");
ShowMenuForPlayer(TuningMenu, playerid);
}
case 4:
if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 534 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 534)
{
new car = GetPlayerVehicleID(playerid);
if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 534) // Remington
{
AddVehicleComponent(car,1106);
AddVehicleComponent(car,1124);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Loco Low-Co Chrome Arches Side Skirts component on Remington");
ShowMenuForPlayer(Sideskirts, playerid);
}
}
else
{
SendClientMessage(playerid,COLOR_YELLOW,"[WARNING] You can only add this component to Loco Low-Co Car type Remington ");
ShowMenuForPlayer(TuningMenu, playerid);
}
case 5:
if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 535)
{
new car = GetPlayerVehicleID(playerid);
if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 535) // Slamvan
{
AddVehicleComponent(car,1118);
AddVehicleComponent(car,1120);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Loco Low-Co Chrome Trim Side Skirts component on Slamvan");
ShowMenuForPlayer(Sideskirts, playerid);
}
}
else
{
SendClientMessage(playerid,COLOR_YELLOW,"[WARNING] You can only add this component to Loco Low-Co Car type Slamvan ");
ShowMenuForPlayer(TuningMenu, playerid);
}
case 6:
if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 535)
{
new car = GetPlayerVehicleID(playerid);
if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 535) // Slamvan
{
AddVehicleComponent(car,1119);
AddVehicleComponent(car,1121);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Loco Low-Co Chrome Wheelcovers component on Slamvan");
ShowMenuForPlayer(Sideskirts, playerid);
}
}
else
{
SendClientMessage(playerid,COLOR_YELLOW,"[WARNING] You can only add this component to Loco Low-Co Car type Slamvan ");
ShowMenuForPlayer(TuningMenu, playerid);
}
case 7:ShowMenuForPlayer(TuningMenu, playerid);
}
}
if(Current == Wheels) {
switch(row){
case 0:
if(GetPlayerMoney(playerid) >= -100000000000000)
{
new car = GetPlayerVehicleID(playerid);
AddVehicleComponent(car,1025);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Offroad Wheels ");
ShowMenuForPlayer(Wheels, playerid);
}
else
{
SendClientMessage(playerid,COLOR_RED,"Not enough money!");
ShowMenuForPlayer(TuningMenu, playerid);
}
case 1:
if(GetPlayerMoney(playerid) >= -100000000000000)
{
new car = GetPlayerVehicleID(playerid);
AddVehicleComponent(car,1074);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Mega Wheels");
ShowMenuForPlayer(Wheels, playerid);
}
else
{
SendClientMessage(playerid,COLOR_RED,"Not enough money!");
ShowMenuForPlayer(TuningMenu, playerid);
}
case 2:
if(GetPlayerMoney(playerid) >= -100000000000000)
{
new car = GetPlayerVehicleID(playerid);
AddVehicleComponent(car,1076);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wires Wheels");
ShowMenuForPlayer(Wheels, playerid);
}
else
{
SendClientMessage(playerid,COLOR_RED,"Not enough money!");
ShowMenuForPlayer(TuningMenu, playerid);
}
case 3:
if(GetPlayerMoney(playerid) >= -100000000000000)
{
new car = GetPlayerVehicleID(playerid);
AddVehicleComponent(car,1078);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Twist Wheels");
ShowMenuForPlayer(Wheels, playerid);
}
else
{
SendClientMessage(playerid,COLOR_RED,"Not enough money!");
ShowMenuForPlayer(Wheels, playerid);
}
case 4:
if(GetPlayerMoney(playerid) >= -100000000000000)
{
new car = GetPlayerVehicleID(playerid);
AddVehicleComponent(car,1081);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Grove Wheels");
ShowMenuForPlayer(Wheels, playerid);
}
else
{
SendClientMessage(playerid,COLOR_RED,"Not enough money!");
ShowMenuForPlayer(TuningMenu, playerid);
}
case 5:
{
if(GetPlayerMoney(playerid) >= -100000000000000)
{
new car = GetPlayerVehicleID(playerid);
AddVehicleComponent(car,1082);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Import Wheels");
ShowMenuForPlayer(Wheels, playerid);
}
else
{
SendClientMessage(playerid,COLOR_RED,"Not enough money!");
ShowMenuForPlayer(TuningMenu, playerid);
}
}
case 6:
{
new car = GetPlayerVehicleID(playerid);
AddVehicleComponent(car,1085);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Atomic Wheels");
ShowMenuForPlayer(Wheels, playerid);
}
case 7:
{
new car = GetPlayerVehicleID(playerid);
AddVehicleComponent(car,1096);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Ahab Wheels");
ShowMenuForPlayer(Wheels, playerid);
}
case 8:
{
if(GetPlayerMoney(playerid) >= -100000000000000)
{
new car = GetPlayerVehicleID(playerid);
AddVehicleComponent(car,1097);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Virtual Wheels");
ShowMenuForPlayer(Wheels, playerid);
}
else
{
SendClientMessage(playerid,COLOR_RED,"Not enough money!");
ShowMenuForPlayer(TuningMenu, playerid);
}
}
case 9:
{
new car = GetPlayerVehicleID(playerid);
AddVehicleComponent(car,1098);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Access Wheels");
ShowMenuForPlayer(Wheels, playerid);
}
case 10:
{
ShowMenuForPlayer(Wheels1, playerid);
}
case 11:
{
ShowMenuForPlayer(TuningMenu, playerid);
}
}
}
if(Current == Wheels1)
{
switch(row)
{
case 0:
{
if(GetPlayerMoney(playerid) >= -100000000000000)
{
new car = GetPlayerVehicleID(playerid);
AddVehicleComponent(car,1084);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Trance Wheels ");
ShowMenuForPlayer(Wheels1, playerid);
}
else
{
SendClientMessage(playerid,COLOR_RED,"Not enough money!");
ShowMenuForPlayer(TuningMenu, playerid);
}
}
case 1:
{
if(GetPlayerMoney(playerid) >= -100000000000000)
{
new car = GetPlayerVehicleID(playerid);
AddVehicleComponent(car,1073);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Shadow Wheels");
ShowMenuForPlayer(Wheels1, playerid);
}
else
{
SendClientMessage(playerid,COLOR_RED,"Not enough money!");
ShowMenuForPlayer(TuningMenu, playerid);
}
}
case 2:
{
if(GetPlayerMoney(playerid) >= -100000000000000)
{
new car = GetPlayerVehicleID(playerid);
AddVehicleComponent(car,1075);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Rimshine Wheels");
ShowMenuForPlayer(Wheels1, playerid);
}
else
{
SendClientMessage(playerid,COLOR_RED,"Not enough money!");
ShowMenuForPlayer(TuningMenu, playerid);
}
}
case 3:
{
if(GetPlayerMoney(playerid) >= -100000000000000)
{
new car = GetPlayerVehicleID(playerid);
AddVehicleComponent(car,1077);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Classic Wheels");
ShowMenuForPlayer(Wheels1, playerid);
}
else
{
SendClientMessage(playerid,COLOR_RED,"Not enough money!");
ShowMenuForPlayer(Wheels, playerid);
}
}
case 4:
{
if(GetPlayerMoney(playerid) >= -100000000000000)
{
new car = GetPlayerVehicleID(playerid);
AddVehicleComponent(car,1079);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Cutter Wheels");
ShowMenuForPlayer(Wheels1, playerid);
}
else
{
SendClientMessage(playerid,COLOR_RED,"Not enough money!");
ShowMenuForPlayer(TuningMenu, playerid);
}
}
case 5:
{
if(GetPlayerMoney(playerid) >= -100000000000000)
{
new car = GetPlayerVehicleID(playerid);
AddVehicleComponent(car,1080);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Switch Wheels");
ShowMenuForPlayer(Wheels1, playerid);
}
else
{
SendClientMessage(playerid,COLOR_RED,"Not enough money!");
ShowMenuForPlayer(TuningMenu, playerid);
}
}
case 6:
{
if(GetPlayerMoney(playerid) >= -100000000000000)
{
new car = GetPlayerVehicleID(playerid);
AddVehicleComponent(car,1083);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Dollar Wheels");
ShowMenuForPlayer(Wheels1, playerid);
}
else
{
SendClientMessage(playerid,COLOR_RED,"Not enough money!");
ShowMenuForPlayer(TuningMenu, playerid);
}
}
case 7:
{
{
ShowMenuForPlayer(TuningMenu, playerid);
}
}
}
}
if(Current == Nitro)
{
switch(row)
{
case 0:
if(GetPlayerMoney(playerid) >= -100000000000000)
{
new car = GetPlayerVehicleID(playerid);
AddVehicleComponent(car,1008);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added 2x Nitro to car ");
ShowMenuForPlayer(Others, playerid);
}
else
{
SendClientMessage(playerid,COLOR_RED,"Not enough money!");
ShowMenuForPlayer(TuningMenu, playerid);
}
case 1:
if(GetPlayerMoney(playerid) >= -100000000000000)
{
new car = GetPlayerVehicleID(playerid);
AddVehicleComponent(car,1009);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added 5x Nitro to car");
ShowMenuForPlayer(Others, playerid);
}
else
{
SendClientMessage(playerid,COLOR_RED,"Not enough money!");
ShowMenuForPlayer(Others, playerid);
}
case 2:
{
new car = GetPlayerVehicleID(playerid);
AddVehicleComponent(car,1010);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added 10x Nitro to car");
ShowMenuForPlayer(Others, playerid);
}
case 3:
{
ShowMenuForPlayer(Others, playerid);
}
}
}
if(Current == Others)
{
switch(row)
{
case 0:
{
new car = GetPlayerVehicleID(playerid);
AddVehicleComponent(car,1087);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Hydraulics to car ");
ShowMenuForPlayer(TuningMenu, playerid);
}
case 1:
{
new car = GetPlayerVehicleID(playerid);
AddVehicleComponent(car,1086);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Stereo Bass bost system ");
ShowMenuForPlayer(TuningMenu, playerid);
}
case 2:
{
ShowMenuForPlayer(Nitro, playerid);
}
case 3:
{
ShowMenuForPlayer(TuningMenu, playerid);
}
}
}
return 0;
}
public OnPlayerExitedMenu(playerid)
{
return 1;
}
public OnPlayerInteriorChange(playerid, newinteriorid, oldinteriorid)
{
return 1;
}
public OnPlayerKeyStateChange(playerid, newkeys, oldkeys)
{
lastkey[playerid]=newkeys;
oldkey[playerid]=oldkeys;
if(newkeys & KEY_FIRE)
{
if(playerInDeathmatch[playerid]==true)
{
if(deathmatchStarted==false)//goto
{
SetPlayerHealth(playerid,0);
SendClientMessage(playerid, COLOR_DEATHMATCH,"Deathmatch: Не удряй, преди да започне битката!");
}
}
}
if(Jump[playerid] == 1)
{
if(IsValidVehicle(GetPlayerVehicleID(playerid))==1)
{
if(newkeys & 2)
{
new Float:SuperJump[3];
GetVehicleVelocity(GetPlayerVehicleID(playerid), SuperJump[0], SuperJump[1], SuperJump[2]);
SetVehicleVelocity(GetPlayerVehicleID(playerid), SuperJump[0], SuperJump[1], SuperJump[2]+1);
}
}
}
if(newkeys & 16)
{
if(InTuneGarage[playerid]==true)
{
TogglePlayerControllable(playerid, true);
}
}
if(newkeys & 4)
{
if(enabledramp[playerid]==1)
{
if(GetPlayerVehicleID(playerid)>0)
{
new Float:XX; new Float: YY; new Float: ZZ; new Float:AA;
GetVehicleZAngle(GetPlayerVehicleID(playerid), AA);
GetVehiclePos(GetPlayerVehicleID(playerid),XX,YY,ZZ);
GetPosInFrontOfPoint(XX, YY, AA, 15.0);
DestroyDynamicObject(rampobject[playerid]);
rampobject[playerid] = CreateDynamicObject(1655, XX,YY,ZZ-0.2, 0.0, 0.0 ,AA, GetPlayerVirtualWorld(playerid), GetPlayerInterior(playerid), playerid);
}
}
if(enabledramp[playerid]==2)
{
if(GetPlayerVehicleID(playerid)>0)
{
new Float:XX; new Float: YY; new Float: ZZ; new Float:AA;
GetVehicleZAngle(GetPlayerVehicleID(playerid), AA);
GetVehiclePos(GetPlayerVehicleID(playerid),XX,YY,ZZ);
GetPosInFrontOfPoint(XX, YY, AA, 15.0);
DestroyDynamicObject(rampobject[playerid]);
rampobject[playerid] = CreateDynamicObject(1634, XX,YY,ZZ-0.2, 0.0, 0.0 ,AA, GetPlayerVirtualWorld(playerid), GetPlayerInterior(playerid), playerid);
}
}
if(enabledramp[playerid]==3)
{
if(GetPlayerVehicleID(playerid)>0)
{
new Float:XX; new Float: YY; new Float: ZZ; new Float:AA;
GetVehicleZAngle(GetPlayerVehicleID(playerid), AA);
GetVehiclePos(GetPlayerVehicleID(playerid),XX,YY,ZZ);
GetPosInFrontOfPoint(XX, YY, AA, 15.0);
DestroyDynamicObject(rampobject[playerid]);
rampobject[playerid] = CreateDynamicObject(1631, XX,YY,ZZ-0.2, 0.0, 0.0 ,AA, GetPlayerVirtualWorld(playerid), GetPlayerInterior(playerid), playerid);
}
}
if(enabledramp[playerid]==4)
{
if(GetPlayerVehicleID(playerid)>0)
{
new Float:XX; new Float: YY; new Float: ZZ; new Float:AA;
GetVehicleZAngle(GetPlayerVehicleID(playerid), AA);
GetVehiclePos(GetPlayerVehicleID(playerid),XX,YY,ZZ);
GetPosInFrontOfPoint(XX, YY, AA, 15.0);
DestroyDynamicObject(rampobject[playerid]);
rampobject[playerid] = CreateDynamicObject(8302, XX,YY,ZZ-0.2, 0.0, 0.0 ,AA, GetPlayerVirtualWorld(playerid), GetPlayerInterior(playerid), playerid);
}
}
if(enabledramp[playerid]==5)
{
if(GetPlayerVehicleID(playerid)>0)
{
new Float:XX; new Float: YY; new Float: ZZ; new Float:AA;
GetVehicleZAngle(GetPlayerVehicleID(playerid), AA);
GetVehiclePos(GetPlayerVehicleID(playerid),XX,YY,ZZ);
GetPosInFrontOfPoint(XX, YY, AA, 15.0);
DestroyDynamicObject(rampobject[playerid]);
rampobject[playerid] = CreateDynamicObject(1503, XX,YY,ZZ-0.2, 0.0, 0.0 ,AA, GetPlayerVirtualWorld(playerid), GetPlayerInterior(playerid), playerid);
}
}
//CreateDynamicObject(modelid, Float:x, Float:y, Float:z, Float:rx, Float:ry, Float:rz, worldid = -1, interiorid = -1, playerid = -1, Float:streamdistance = 300.0);
}
if(newkeys & 16)
{
if(IsPlayerInRangeOfPoint(playerid, 3.0,691.5796,-1275.8766,13.5607) && GetPlayerVirtualWorld(playerid) == 0 && GetPlayerInterior(playerid) == 0)
{
if(PlayerInfo[playerid][pTeam]!=12) return SendClientMessage(playerid, 0xB4B5B7FF, "Трябва да си член на Bounty Hunters!");
SetPlayerInterior(playerid,5);
SetPlayerVirtualWorld(playerid,2);
SetPlayerPos(playerid,1261.3009,-785.4238,1091.9063);
SetCameraBehindPlayer(playerid);
}
if(IsPlayerInRangeOfPoint(playerid, 3.0,1261.3009,-785.4238,1091.9063) && GetPlayerVirtualWorld(playerid) == 2 && GetPlayerInterior(playerid) == 5)
{
if(PlayerInfo[playerid][pTeam]!=12) return SendClientMessage(playerid, 0xB4B5B7FF, "Трябва да си член на Bounty Hunters!");
SetPlayerInterior(playerid,0);
SetPlayerPos(playerid,691.5796,-1275.8766,13.5607);
SetPlayerVirtualWorld(playerid,0);
SetCameraBehindPlayer(playerid);
}
if(IsPlayerInRangeOfPoint(playerid, 3.0,1259.6387,-785.5069,92.0313) && GetPlayerVirtualWorld(playerid) == 0 && GetPlayerInterior(playerid) == 0)
{
if(PlayerInfo[playerid][pTeam]!=21) return SendClientMessage(playerid, 0xB4B5B7FF, "Трябва да си член на Bulgarian Mafia!");
SetPlayerInterior(playerid,5);
SetPlayerVirtualWorld(playerid,1);
SetPlayerPos(playerid,1261.3009,-785.4238,1091.9063);
SetCameraBehindPlayer(playerid);
}
if(IsPlayerInRangeOfPoint(playerid, 3.0,1261.3009,-785.4238,1091.9063) && GetPlayerVirtualWorld(playerid) == 1 && GetPlayerInterior(playerid) == 5)
{
if(PlayerInfo[playerid][pTeam]!=21) return SendClientMessage(playerid, 0xB4B5B7FF, "Трябва да си член на Bulgarian Mafia!");
SetPlayerInterior(playerid,0);
SetPlayerPos(playerid,1259.6387,-785.5069,92.0313);
SetPlayerVirtualWorld(playerid,0);
SetCameraBehindPlayer(playerid);
}
//Cripz - location - open
if(IsPlayerInRangeOfPoint(playerid, 3.0,140.2198,1365.9974,1083.8594) && GetPlayerVirtualWorld(playerid) == 1 && GetPlayerInterior(playerid) == 5) // vij tuka iska interior 0 i world 0 koet sh reche ot vunka da vliza v house
{
if(PlayerInfo[playerid][pTeam]!=6) return SendClientMessage(playerid, 0xB4B5B7FF, "Трябва да си член на Vinewood Cripz!");
SetPlayerInterior(playerid,0);
SetPlayerVirtualWorld(playerid,0);
SetPlayerPos(playerid,300.2113,-1154.4961,81.3665);
SetCameraBehindPlayer(playerid);
}
if(IsPlayerInRangeOfPoint(playerid, 3.0,300.2113,-1154.4961,81.3665) && GetPlayerVirtualWorld(playerid) == 0 && GetPlayerInterior(playerid) == 0) // tuk iska ot virtual world 1 i interior id t.e. da izlizash ot house
{
if(PlayerInfo[playerid][pTeam]!=6) return SendClientMessage(playerid, 0xB4B5B7FF, "Трябва да си член на Vinewood Cripz!");
SetPlayerInterior(playerid,5);
SetPlayerPos(playerid,140.1744,1366.1003,1083.8594);
SetPlayerVirtualWorld(playerid,1);
SetCameraBehindPlayer(playerid);
}
//Cripz - location - close
if(IsPlayerInRangeOfPoint(playerid, 3.0,2146.7976,-1470.4761,26.0426) && GetPlayerVirtualWorld(playerid) == 0 && GetPlayerInterior(playerid) == 0)
{
if(PlayerInfo[playerid][pTeam]!=3) return SendClientMessage(playerid, 0xB4B5B7FF, "Трябва да си член на Rolling Heights Ballas!");
SetPlayerInterior(playerid,5);
SetPlayerVirtualWorld(playerid,1);
SetPlayerPos(playerid,318.5974,1115.6239,1083.8828);
SetCameraBehindPlayer(playerid);
}
if(IsPlayerInRangeOfPoint(playerid, 3.0,318.5974,1115.6239,1083.8828) && GetPlayerVirtualWorld(playerid) == 1 && GetPlayerInterior(playerid) == 5)
{
if(PlayerInfo[playerid][pTeam]!=3) return SendClientMessage(playerid, 0xB4B5B7FF, "Трябва да си член на Rolling Heights Ballas!");
SetPlayerInterior(playerid,0);
SetPlayerPos(playerid,2146.7976,-1470.4761,26.0426);
SetPlayerVirtualWorld(playerid,0);
SetCameraBehindPlayer(playerid);
}
if(IsPlayerInRangeOfPoint(playerid, 3.0,-1754.2659,964.0753,24.8906) && GetPlayerVirtualWorld(playerid) == 0 && GetPlayerInterior(playerid) == 0)
{
if(PlayerInfo[playerid][pTeam]!=16) return SendClientMessage(playerid, 0xB4B5B7FF, "Трябва да си член на Soldier Boys!");
SetPlayerInterior(playerid,12);
SetPlayerVirtualWorld(playerid,1);
SetPlayerPos(playerid,2324.4341,-1149.4835,1050.7101);
SetCameraBehindPlayer(playerid);
}
if(IsPlayerInRangeOfPoint(playerid, 3.0,2324.4341,-1149.4835,1050.7101) && GetPlayerVirtualWorld(playerid) == 1 && GetPlayerInterior(playerid) == 12)
{
if(PlayerInfo[playerid][pTeam]!=16) return SendClientMessage(playerid, 0xB4B5B7FF, "Трябва да си член на Soldier Boys!");
SetPlayerInterior(playerid,0);
SetPlayerPos(playerid,-1754.2659,964.0753,24.8906);
SetPlayerVirtualWorld(playerid,0);
SetCameraBehindPlayer(playerid);
}
if(IsPlayerInRangeOfPoint(playerid, 3.0,1083.0112,-1226.7196,15.8203) && GetPlayerVirtualWorld(playerid) == 0 && GetPlayerInterior(playerid) == 0)
{
if(PlayerInfo[playerid][pTeam]!=19) return SendClientMessage(playerid, 0xB4B5B7FF, "Трябва да си член на Blood Mafia!");
SetPlayerInterior(playerid,1);
SetPlayerVirtualWorld(playerid,3);
SetPlayerPos(playerid,1416.6842,3.6414,1000.9269);
SetPlayerFacingAngle(playerid,90.9424);
SetCameraBehindPlayer(playerid);
}
if(IsPlayerInRangeOfPoint(playerid, 3.0,1416.6842,3.6414,1000.9269) && GetPlayerVirtualWorld(playerid) == 3 && GetPlayerInterior(playerid) == 1)
{
if(PlayerInfo[playerid][pTeam]!=19) return SendClientMessage(playerid, 0xB4B5B7FF, "Трябва да си член на Blood Mafia!");
SetPlayerInterior(playerid,0);
SetPlayerPos(playerid,1083.0112,-1226.7196,15.8203);
SetPlayerFacingAngle(playerid,270.7975);
SetPlayerVirtualWorld(playerid,0);
SetCameraBehindPlayer(playerid);
}
if(IsPlayerInRangeOfPoint(playerid, 3.0,2595.7300,2790.6204,10.8203) && GetPlayerVirtualWorld(playerid) == 0 && GetPlayerInterior(playerid) == 0)
{
if(PlayerInfo[playerid][pTeam]!=17) return SendClientMessage(playerid, 0xB4B5B7FF, "Трябва да си член на Yakuza!");
SetPlayerInterior(playerid,1);
SetPlayerVirtualWorld(playerid,2);
SetPlayerPos(playerid,1416.6842,3.6414,1000.9269);
SetPlayerFacingAngle(playerid,90.9424);
SetCameraBehindPlayer(playerid);
}
if(IsPlayerInRangeOfPoint(playerid, 3.0,1416.6842,3.6414,1000.9269) && GetPlayerVirtualWorld(playerid) == 2 && GetPlayerInterior(playerid) == 1)
{
if(PlayerInfo[playerid][pTeam]!=17) return SendClientMessage(playerid, 0xB4B5B7FF, "Трябва да си член на Yakuza!");
SetPlayerInterior(playerid,0);
SetPlayerPos(playerid,2595.7300,2790.6204,10.8203);
SetPlayerFacingAngle(playerid,270.7975);
SetPlayerVirtualWorld(playerid,0);
SetCameraBehindPlayer(playerid);
}
if(IsPlayerInRangeOfPoint(playerid, 3.0,-2173.5759,974.2741,80.0000) && GetPlayerVirtualWorld(playerid) == 0 && GetPlayerInterior(playerid) == 0)
{
if(PlayerInfo[playerid][pTeam]!=8) return SendClientMessage(playerid, 0xB4B5B7FF, "Трябва да си член на San Fierro Rifa!");
SetPlayerInterior(playerid,1);
SetPlayerVirtualWorld(playerid,1);
SetPlayerPos(playerid,1416.6842,3.6414,1000.9269);
SetPlayerFacingAngle(playerid,90.9424);
SetCameraBehindPlayer(playerid);
}
if(IsPlayerInRangeOfPoint(playerid, 3.0,1416.6842,3.6414,1000.9269) && GetPlayerVirtualWorld(playerid) == 1 && GetPlayerInterior(playerid) == 1)
{
if(PlayerInfo[playerid][pTeam]!=8) return SendClientMessage(playerid, 0xB4B5B7FF, "Трябва да си член на San Fierro Rifa!");
SetPlayerInterior(playerid,0);
SetPlayerPos(playerid,-2173.5759,974.2741,80.0000);
SetPlayerFacingAngle(playerid,270.7975);
SetPlayerVirtualWorld(playerid,0);
SetCameraBehindPlayer(playerid);
}
//
if(IsPlayerInRangeOfPoint(playerid, 3.0,1260.7024,-781.2197,1091.9063) && GetPlayerVirtualWorld(playerid) == 1 && GetPlayerInterior(playerid) == 5)
{
if(PlayerInfo[playerid][pTeam]!=21) return SendClientMessage(playerid, 0xB4B5B7FF, "Трябва да си член на Bulgarian Mafia!");
SetPlayerInterior(playerid,1);
SetPlayerVirtualWorld(playerid,4);
SetPlayerPos(playerid,1416.6842,3.6414,1000.9269);
SetPlayerFacingAngle(playerid,90.9424);
SetCameraBehindPlayer(playerid);
}
if(IsPlayerInRangeOfPoint(playerid, 3.0,1416.6842,3.6414,1000.9269) && GetPlayerVirtualWorld(playerid) == 4 && GetPlayerInterior(playerid) == 1)
{
if(PlayerInfo[playerid][pTeam]!=21) return SendClientMessage(playerid, 0xB4B5B7FF, "Трябва да си член на Bulgarian Mafia!");
SetPlayerInterior(playerid,5);
SetPlayerPos(playerid,1260.7024,-781.2197,1091.9063);
SetPlayerFacingAngle(playerid,270.7975);
SetPlayerVirtualWorld(playerid,1);
SetCameraBehindPlayer(playerid);
}
//
//
if(IsPlayerInRangeOfPoint(playerid, 3.0,2496.049804,-1695.238159,1014.742187) && GetPlayerVirtualWorld(playerid)==2 && GetPlayerInterior(playerid)==3)
{
if(PlayerInfo[playerid][pTeam] != 18)
{
SendClientMessage(playerid,0xB4B5B7FF,"Трябва да си член на Syndicate Texas!");
return 1;
}
SetPlayerVirtualWorld(playerid,0);
SetPlayerInterior(playerid,0);
SetPlayerPos(playerid,1733.4287,2814.9548,14.2735);
SetPlayerFacingAngle(playerid,0);
SetCameraBehindPlayer(playerid);
}
if(IsPlayerInRangeOfPoint(playerid, 3.0,1733.4287,2814.9548,14.2735) && GetPlayerVirtualWorld(playerid)==0 && GetPlayerInterior(playerid)==0)
{
if(PlayerInfo[playerid][pTeam] != 18)
{
SendClientMessage(playerid,0xB4B5B7FF,"Трябва да си член на Syndicate Texas!");
return 1;
}
SetPlayerVirtualWorld(playerid,2);
SetPlayerInterior(playerid,3);
SetPlayerPos(playerid,2496.049804,-1695.238159,1014.742187);
SetCameraBehindPlayer(playerid);
}
//
if(IsPlayerInRangeOfPoint(playerid, 3.0,2496.049804,-1695.238159,1014.742187) && GetPlayerVirtualWorld(playerid)==1 && GetPlayerInterior(playerid)==3)
{
if(PlayerInfo[playerid][pTeam] != 2)
{
SendClientMessage(playerid,0xB4B5B7FF,"Трябва да си член на Grove Street Families!");
return 1;
}
SetPlayerVirtualWorld(playerid,0);
SetPlayerInterior(playerid,0);
SetPlayerPos(playerid,2495.3496,-1690.8401,14.7656);
SetPlayerFacingAngle(playerid,0);
SetCameraBehindPlayer(playerid);
}
if(IsPlayerInRangeOfPoint(playerid, 3.0,2495.3496,-1690.8401,14.7656) && GetPlayerVirtualWorld(playerid)==0 && GetPlayerInterior(playerid)==0)
{
if(PlayerInfo[playerid][pTeam] != 2)
{
SendClientMessage(playerid,0xB4B5B7FF,"Трябва да си член на Grove Street Families!");
return 1;
}
SetPlayerVirtualWorld(playerid,1);
SetPlayerInterior(playerid,3);
SetPlayerPos(playerid,2496.049804,-1695.238159,1014.742187);
SetCameraBehindPlayer(playerid);
}
}
if(inevent[playerid]==1 && eenter==0)
{
if(newkeys & 16)
{
if(PlayerInfo[playerid][pEvent]==0)
{
SetPlayerHealth(playerid,0);
}
}
}
if(inevent[playerid]==1 && efight==0)
{
if(newkeys & 4)
{
if(PlayerInfo[playerid][pEvent]==0)
{
SetPlayerHealth(playerid,0);
}
}
}
if(Jump[playerid] == 1)
{
if(newkeys & KEY_JUMP)
{
new Float:SuperJump[3];
GetPlayerVelocity(playerid, SuperJump[0], SuperJump[1], SuperJump[2]);
SetPlayerVelocity(playerid, SuperJump[0], SuperJump[1], SuperJump[2]+6);
}
}
new Car, State, Float:x, Float:y, Float:z;
Car = GetPlayerVehicleID(playerid);
State = GetPlayerState(playerid);
if(RELEASED(KEY_FIRE))
{
if(State == PLAYER_STATE_DRIVER)
{
if(Speed[playerid] == 1)
{
GetVehicleVelocity(Car, x, y, z);
SetVehicleVelocity(Car, x*2, y*2, z*2);
}
}
}
if(IsPlayerInRangeOfPoint(playerid,1.0,279.1491,1833.1394,18.0874))
{
if(PlayerInfo[playerid][pTeam]!=15)
{
return SendClientMessage(playerid, 0xB4B5B7FF, "Трябва да си член на Delta Force!");
}
SetPlayerPos(playerid,-2250.2004,2344.7747,4.9807);
}
/*if(newkeys & DIK_G)
{
for(new i; i<MAX_VEHICLES; i++)
{
if(GetVehicleModel(i)==519)
{
new Float:vehx,Float:vehy,Float:vehz;
GetVehiclePos(i,vehx,vehy,vehz);
if(IsPlayerInRangeOfPoint(playerid, 7, vehx,vehy,vehz))
{
SetPlayerInterior(playerid,1);
SetPlayerVirtualWorld(playerid,GetPlayerVehicleID(playerid));
SetPlayerPos(playerid,1.808619,32.384357,1199.593750);
SetPlayerFacingAngle(playerid,180.7037);
SetCameraBehindPlayer(playerid);
}
}
}
}*/
if(GetVehicleModel(GetPlayerVirtualWorld(playerid))==431
|| GetVehicleModel(GetPlayerVirtualWorld(playerid))==437
|| GetVehicleModel(GetPlayerVirtualWorld(playerid))==508
|| GetVehicleModel(GetPlayerVirtualWorld(playerid))==431
|| GetVehicleModel(GetPlayerVirtualWorld(playerid))==573)
{
if(newkeys & 16)
{
new Float:vehx,Float:vehy,Float:vehz;
GetVehiclePos(GetPlayerVirtualWorld(playerid),vehx,vehy,vehz);
SetPlayerVirtualWorld(playerid,GetVehicleVirtualWorld(GetPlayerVirtualWorld(playerid)));
//SetPlayerInterior(playerid,GetVehicleInterior(GetPlayerVirtualWorld(playerid)));
SetPlayerInterior(playerid,0);
SetPlayerPos(playerid,vehx-2,vehy,vehz);
}
}
if(newkeys & 16)
{
if(IsPlayerInRangeOfPoint(playerid,1.0,1213.1766,-2004.3656,68.9331))
{
if(PlayerInfo[playerid][pTeam]!=1)
{
return SendClientMessage(playerid, 0xB4B5B7FF, "Трябва да си член на VIP!");
}
SetPlayerPos(playerid,2178.2373,1990.8092,10.8203);
SetPlayerInterior(playerid,0);
SetPlayerVirtualWorld(playerid,0);
}
}
if(newkeys & 16)
{
if(IsPlayerInRangeOfPoint(playerid, 2.5,267.1508,82.2370,1001.0391))
{
if(PlayerInfo[playerid][pTeam]!=13)
{
return SendClientMessage(playerid, 0xB4B5B7FF, "Трябва да си член на Los Santos Police Department!");
}
if(lspdCell1open == false)
{
MoveObject(lspdCell1, 266.352783, 83.219932, 1001.280395, 3);
lspdCell1open = true;
}
else
{
MoveObject(lspdCell1, 266.282501, 80.981002, 1001.280395, 3);
lspdCell1open = false;
}
}
}
if(newkeys & 16)
{
if(IsPlayerInRangeOfPoint(playerid, 2.5,267.0193,86.9113,1001.0391))
{
if(PlayerInfo[playerid][pTeam]!=13)
{
return SendClientMessage(playerid, 0xB4B5B7FF, "Трябва да си член на Los Santos Police Department!");
}
if(lspdCell2open==false)
{
MoveObject(lspdCell2, 266.486785, 87.487892, 1001.280395, 3);
lspdCell2open = true;
}
else
{
MoveObject(lspdCell2, 266.434112, 85.750198, 1001.271728, 3);
lspdCell2open = false;
}
}
}
if(IsPlayerInRangeOfPoint(playerid, 15.0, 2237.7688,2453.5955,10.7848))
{
if(newkeys & KEY_SUBMISSION)
{
if(PlayerInfo[playerid][pTeam]!=14)
{
return SendClientMessage(playerid, 0xB4B5B7FF, "Трябва да си член на Las Venturas Police Department!");
}
lvpdB1Timer=10;
MoveObject(lvpd1,2238.197509, 2450.464599, 10.341962,5.00, -4.799997, -1.600025, -89.499954); //-1.600025, -89.499954
SendClientMessage(playerid,0x0040FFFF,"LVPD Barrier: Бариерата ще се затвори след 10 секунди!");
}
}
if(IsPlayerInRangeOfPoint(playerid, 15.0, 837.2773,-2030.8582,12.8672))
{
if(newkeys & KEY_SUBMISSION)
{
if(PlayerInfo[playerid][pTeam]!=15)
{
return SendClientMessage(playerid, 0xB4B5B7FF, "Трябва да си член на Delta Force!");
}
deltaForceP2Timer=10;
MoveDynamicObject(dfPort2,836.365417, -2027.369750, 6.646684,5.00, 0, 0, 0);
SendClientMessage(playerid,0xA4A400FF,"Delta Force Gate: Портата ще се затвори след 10 секунди!");
}
}
if(IsPlayerInRangeOfPoint(playerid, 15.0, 837.3369,-2074.3181,12.8527))
{
if(newkeys & KEY_SUBMISSION)
{
if(PlayerInfo[playerid][pTeam]!=15)
{
return SendClientMessage(playerid, 0xB4B5B7FF, "Трябва да си член на Delta Force!");
}
deltaForceP1Timer=10;
MoveDynamicObject(dfPort1,836.487792, -2069.757812, 6.618954,5.00, 0, 0, 0);
SendClientMessage(playerid,0xA4A400FF,"Delta Force Gate: Портата ще се затвори след 10 секунди!");
}
}
if(IsPlayerInRangeOfPoint(playerid, 15.0, 2336.8582,2443.3186,6.1081))
{
if(newkeys & KEY_SUBMISSION)
{
if(PlayerInfo[playerid][pTeam]!=14)
{
return SendClientMessage(playerid, 0xB4B5B7FF, "Трябва да си член на Las Venturas Police Department!");
}
lvpdB2Timer=10;
MoveObject(lvpd2,2335.417236, 2444.029785, 0.557772,2.00, 0.000000, 0.000000, 59.200016);
SendClientMessage(playerid,0x0040FFFF,"LVPD Gate: Портата ще се затвори след 10 секунди!");
}
}
if(newkeys & 512)
{
if(IsPlayerInRangeOfPoint(playerid, 3.0, 1230.4954,-2005.5513,60.8984) && GetPlayerVirtualWorld(playerid)==0)
{
if(PlayerInfo[playerid][pTeam] != 1) return SendClientMessage(playerid, 0xB4B5B7FF, "Трябва да си член на VIP!");
ShowPlayerDialog(playerid, 10, DIALOG_STYLE_LIST, "{FF0000}VIP's Gunmachine:", "Knife\nBaseball Bat\n9mm\nSilenced 9mm\nDesert Eagle\nShotgun\nSawnoff\nCombat Shotgun\nUzi\nMP5\nTec9\nAK47\nM4\nCountry Rifle\nSniper Rifle", "Избери", "Излез");
}
}
if(newkeys & 512)
{
if(IsPlayerInRangeOfPoint(playerid, 3.0, -691.5956,935.6432,13.6328) && GetPlayerVirtualWorld(playerid)==0)
{
if(PlayerInfo[playerid][pTeam] != 11) return SendClientMessage(playerid, 0xB4B5B7FF, "Трябва да си член на Italian Mafia!");
ShowPlayerDialog(playerid, 10, DIALOG_STYLE_LIST, "{A9F5E1}Italian Mafia's Gunmachine:", "Knife\nBaseball Bat\n9mm\nSilenced 9mm\nDesert Eagle\nShotgun\nSawnoff\nCombat Shotgun\nUzi\nMP5\nTec9\nAK47\nM4\nCountry Rifle\nSniper Rifle", "Избери", "Излез");
}
}
if(newkeys & 512)
{
if(IsPlayerInRangeOfPoint(playerid, 3.0, 1969.2216,953.4484,10.8203) && GetPlayerVirtualWorld(playerid)==0)
{
if(PlayerInfo[playerid][pTeam] != 7) return SendClientMessage(playerid, 0xB4B5B7FF, "Трябва да си член на San Fierro Triads!");
ShowPlayerDialog(playerid, 10, DIALOG_STYLE_LIST, "{F97804}Triads's Gunmachine:", "Knife\nBaseball Bat\n9mm\nSilenced 9mm\nDesert Eagle\nShotgun\nSawnoff\nCombat Shotgun\nUzi\nMP5\nTec9\nAK47\nM4\nCountry Rifle\nSniper Rifle", "Избери", "Излез");
}
}
if(newkeys & 512)
{
if(IsPlayerInRangeOfPoint(playerid, 3.0, 213.2412,1806.7898,17.6406) && GetPlayerVirtualWorld(playerid)==0)
{
if(PlayerInfo[playerid][pTeam] != 15) return SendClientMessage(playerid, 0xB4B5B7FF, "Трябва да си член на Delta Force!");
ShowPlayerDialog(playerid, 52, DIALOG_STYLE_LIST, "{A4A400}Delta Force's Gunmachine:", "Knife\nBaseball Bat\n9mm\nSilenced 9mm\nDesert Eagle\nShotgun\nSawnoff\nCombat Shotgun\nUzi\nMP5\nTec9\nAK47\nM4\nCountry Rifle\nSniper Rifle\nRPG\nHeatseeker\nBomb", "Избери", "Излез");
}
}
if(newkeys & 512)
{
if(IsPlayerInRangeOfPoint(playerid, 3.0, 2497.0251,-1703.2537,1014.7422)&& GetPlayerVirtualWorld(playerid)==1)
{
if(PlayerInfo[playerid][pTeam] != 2) return SendClientMessage(playerid, 0xB4B5B7FF, "Трябва да си член на Grove Street Families!");
ShowPlayerDialog(playerid, 10, DIALOG_STYLE_LIST, "{33AA33}Grove's Gunmachine:", "Knife\nBaseball Bat\n9mm\nSilenced 9mm\nDesert Eagle\nShotgun\nSawnoff\nCombat Shotgun\nUzi\nMP5\nTec9\nAK47\nM4\nCountry Rifle\nSniper Rifle", "Избери", "Излез");
}
}
if(newkeys & 512)
{
if(IsPlayerInRangeOfPoint(playerid, 3.0, 2497.0251,-1703.2537,1014.7422)&& GetPlayerVirtualWorld(playerid)==2)
{
if(PlayerInfo[playerid][pTeam] != 18) return SendClientMessage(playerid, 0xB4B5B7FF, "Трябва да си член на Syndicate Texas!");
ShowPlayerDialog(playerid, 10, DIALOG_STYLE_LIST, "{276BA9}Syndicate Texas's Gunmachine:", "Knife\nBaseball Bat\n9mm\nSilenced 9mm\nDesert Eagle\nShotgun\nSawnoff\nCombat Shotgun\nUzi\nMP5\nTec9\nAK47\nM4\nCountry Rifle\nSniper Rifle", "Избери", "Излез");
}
}
if(newkeys & 512)
{
if(IsPlayerInRangeOfPoint(playerid, 3.0, 2449.6282,-1696.3843,1013.5078)&& GetPlayerVirtualWorld(playerid)==1)
{
if(PlayerInfo[playerid][pTeam] != 8) return SendClientMessage(playerid, 0xB4B5B7FF, "Трябва да си член на San Fierro Rifa!");
ShowPlayerDialog(playerid, 10, DIALOG_STYLE_LIST, "{0080FF}Rifa's Gunmachine:", "Knife\nBaseball Bat\n9mm\nSilenced 9mm\nDesert Eagle\nShotgun\nSawnoff\nCombat Shotgun\nUzi\nMP5\nTec9\nAK47\nM4\nCountry Rifle\nSniper Rifle", "Избери", "Излез");
}
}
if(newkeys & 512)
{
if(IsPlayerInRangeOfPoint(playerid, 3.0, 1267.0983,-784.8137,1091.9063)&& GetPlayerVirtualWorld(playerid)==1)
{
if(PlayerInfo[playerid][pTeam] != 21) return SendClientMessage(playerid, 0xB4B5B7FF, "Трябва да си член на Bulgarian Mafia!");
ShowPlayerDialog(playerid, 10, DIALOG_STYLE_LIST, "{FF40FF}Bulgarian Mafia's Gunmachine:", "Knife\nBaseball Bat\n9mm\nSilenced 9mm\nDesert Eagle\nShotgun\nSawnoff\nCombat Shotgun\nUzi\nMP5\nTec9\nAK47\nM4\nCountry Rifle\nSniper Rifle", "Избери", "Излез");
}
}
if(newkeys & 512)
{
if(IsPlayerInRangeOfPoint(playerid, 3.0, -38.7398,1078.9197,20.2060)&& GetPlayerVirtualWorld(playerid)==0)
{
if(PlayerInfo[playerid][pTeam] != 20) return SendClientMessage(playerid, 0xB4B5B7FF, "Трябва да си член на Mara Salvatrucha 13!");
ShowPlayerDialog(playerid, 10, DIALOG_STYLE_LIST, "{B7E1FF}Mara Salvatrucha 13's Gunmachine:", "Knife\nBaseball Bat\n9mm\nSilenced 9mm\nDesert Eagle\nShotgun\nSawnoff\nCombat Shotgun\nUzi\nMP5\nTec9\nAK47\nM4\nCountry Rifle\nSniper Rifle", "Избери", "Излез");
}
}
if(newkeys & 16)
{
if(IsPlayerInRangeOfPoint(playerid, 3.0, 1801.0879,-1303.3047,131.7344))
{
SetPlayerFacingAngle(playerid,269.5069);
SetPlayerPos(playerid,1791.7509,-1303.8427,125.7266);
}
}
if(newkeys & 16)
{
if(IsPlayerInRangeOfPoint(playerid, 3.0, 1570.4105,-1337.3629,16.4844) && GetPlayerVirtualWorld(playerid)==0)
{
GivePlayerWeapon(playerid, WEAPON_PARACHUTE, 1);
SetPlayerFacingAngle(playerid,172.0359);
SetPlayerPos(playerid,1548.6501,-1363.8597,326.2183);
}
}
if(newkeys & 16)
{
if(IsPlayerInRangeOfPoint(playerid, 3.0, 1548.6501,-1363.8597,326.2183) && GetPlayerVirtualWorld(playerid)==0)
{
SetPlayerPos(playerid,1570.4105,-1337.3629,16.4844);
}
}
if(PlayerInfo[playerid][pVip]==6 || freevip==1)
{
if(newkeys & KEY_YES)
{
if(driver[playerid]==1)
{
GetPlayerPos(playerid,X[playerid],Y[playerid],Z[playerid]);
new Float:currentVehAngle; GetVehicleZAngle(GetPlayerVehicleID(playerid), currentVehAngle);
SetVehiclePos(GetPlayerVehicleID(playerid),X[playerid],Y[playerid],Z[playerid]);
SetVehicleZAngle(GetPlayerVehicleID(playerid),currentVehAngle);
}
}
}
return 1;
}
public OnRconLoginAttempt(ip[], password[], success)
{
if(!success)
{
new pip[30];
for(new i=0; i<MAX_PLAYERS; i++)
{
GetPlayerIp(i, pip, 30);
if(!strcmp(ip, pip, true))
{
SendClientMessage(i,0xE60000FF,"SERVER: Ти се опита да влезеш с RCON паролата на сървъра и сега си KICKED!");
PlayerInfo[i][pKick] = 1;
}
}
}
return 1;
}
public OnPlayerUpdate(playerid)
{
// MOJE BI TRQBWA DA SE MAHNE
//SetTimerEx("OnPlayerUpdate", 62, true, "i", playerid);
// MOJE BI TRQBWA DA SE MAHNE
//if - location - open
//if(loadedtext[playerid]==1)
//{
new Float:x, Float:y, Float:z, Float:angle;
new keys, updown, leftright;
if(fly[playerid]==1)
{
GetPlayerKeys(playerid,keys,updown,leftright);
if(updown == KEY_UP) {
if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) {
GetPlayerPos(playerid, x, y, z);
GetXYInFrontOfPlayer(playerid, x, y, 5.0);
SetPlayerPos(playerid, x, y, z);
SetCameraBehindPlayer(playerid);
}
else if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER) {
new playercar = GetPlayerVehicleID(playerid);
GetVehiclePos(playercar, x, y, z);
GetXYInFrontOfPlayer(playerid, x, y, 5.0);
SetVehiclePos(playercar, x, y, z);
}
}
else if(updown == KEY_DOWN) {
if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) {
GetPlayerPos(playerid, x, y, z);
GetXYBehindPlayer(playerid, x, y, 5.0);
SetPlayerPos(playerid, x, y, z);
SetCameraBehindPlayer(playerid);
}
else if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER) {
new playercar = GetPlayerVehicleID(playerid);
GetVehiclePos(playercar, x, y, z);
GetXYBehindPlayer(playerid, x, y, 5.0);
SetVehiclePos(playercar, x, y, z);
}
}
if(leftright == KEY_LEFT) {
if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) {
GetPlayerFacingAngle(playerid, angle);
SetPlayerFacingAngle(playerid, angle+10);
SetCameraBehindPlayer(playerid);
}
else if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER) {
new playercar = GetPlayerVehicleID(playerid);
GetVehicleZAngle(playercar, angle);
SetVehicleZAngle(playercar, angle+10);
}
}
else if(leftright == KEY_RIGHT) {
if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) {
GetPlayerFacingAngle(playerid, angle);
SetPlayerFacingAngle(playerid, angle-10);
SetCameraBehindPlayer(playerid);
}
else if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER) {
new playercar = GetPlayerVehicleID(playerid);
GetVehicleZAngle(playercar, angle);
SetVehicleZAngle(playercar, angle-10);
}
}
if(keys == KEY_JUMP) {
if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) {
GetPlayerPos(playerid, x, y, z);
SetPlayerPos(playerid, x, y, z+5);
SetCameraBehindPlayer(playerid);
}
else if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER) {
new playercar = GetPlayerVehicleID(playerid);
GetVehiclePos(playercar, x, y, z);
SetVehiclePos(playercar, x, y, z+5);
}
}
else if(keys == KEY_SPRINT) {
if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) {
GetPlayerPos(playerid, x, y, z);
SetPlayerPos(playerid, x, y, z-5);
SetCameraBehindPlayer(playerid);
}
else if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER) {
new playercar = GetPlayerVehicleID(playerid);
GetVehiclePos(playercar, x, y, z);
SetVehiclePos(playercar, x, y, z-5);
}
}
}
new drunknew;
drunknew = GetPlayerDrunkLevel(playerid);
if (drunknew < 100) { // go back up, keep cycling.
SetPlayerDrunkLevel(playerid, 2000);
} else {
if (pDrunkLevelLast[playerid] != drunknew) {
new wfps = pDrunkLevelLast[playerid] - drunknew;
if ((wfps > 0) && (wfps < 200))
pFPS[playerid] = wfps;
pDrunkLevelLast[playerid] = drunknew;
}
}
if(GetPlayerVehicleID(playerid)>-1)
{
if(objectright[playerid]==1)
{
objectright[playerid]=0;
RemovePlayerAttachedObject(playerid,0);
}
GetVehicleHealth(GetPlayerVehicleID(playerid),vehhealth[playerid]);
if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 481
&& GetVehicleModel(GetPlayerVehicleID(playerid)) != 509
&& GetVehicleModel(GetPlayerVehicleID(playerid)) != 510
&& GetVehicleModel(GetPlayerVehicleID(playerid)) != 481)
{
if(speedo[playerid]==0)
{
if(kmh[playerid]==0)
{
format(stringvehicle[playerid],115,"~p~Speed: %dkm/h~n~~g~Health: %.0f~n~~b~Fuel: %dL",GetVehicleKmh(GetPlayerVehicleID(playerid)),vehhealth[playerid],vehfuel[GetPlayerVehicleID(playerid)]);
TextDrawSetString(vehstatus[playerid],stringvehicle[playerid]);
}
else
{
new vehicleid,Float:speed_x,Float:speed_y,Float:speed_z,final_speed_int;
vehicleid = GetPlayerVehicleID(playerid);
GetVehicleVelocity(vehicleid,speed_x,speed_y,speed_z);
final_speed_int = GetVehicleKmh(vehicleid);
format(stringvehicle[playerid],115,"~p~Speed: %dm/s~n~~g~Health: %.0f~n~~b~Fuel: %dL",final_speed_int,vehhealth[playerid],vehfuel[GetPlayerVehicleID(playerid)]);
TextDrawSetString(vehstatus[playerid],stringvehicle[playerid]);
}
}
}
else
{
if(speedo[playerid]==0)
{
if(kmh[playerid]==0)
{
format(stringvehicle[playerid],115,"~p~Speed: %dkm/h~n~~g~Health: %.0f",GetVehicleKmh(GetPlayerVehicleID(playerid)),vehhealth[playerid]);
TextDrawSetString(vehstatus[playerid],stringvehicle[playerid]);
}
else
{
new vehicleid,Float:speed_x,Float:speed_y,Float:speed_z,final_speed_int;
vehicleid = GetPlayerVehicleID(playerid);
GetVehicleVelocity(vehicleid,speed_x,speed_y,speed_z);
final_speed_int = GetVehicleKmh(vehicleid);
format(stringvehicle[playerid],115,"~p~Speed: %dm/s~n~~g~Health: %.0f",final_speed_int,vehhealth[playerid]);
TextDrawSetString(vehstatus[playerid],stringvehicle[playerid]);
}
}
}
//}
}
if(!IsPlayerInAnyVehicle(playerid))
{
if(PlayerInfo[playerid][pLaser]==1)
{
if(PlayerInfo[playerid][pVip]>3 || freevip==1)
{
if(objectright[playerid]==0)
{
objectright[playerid]=1;
}
RemovePlayerAttachedObject(playerid, 0);
if ((IsPlayerInAnyVehicle(playerid))||(IsPlayerInWater(playerid))) return 1;
switch (GetPlayerWeapon(playerid))
{
case 31:
{
if (IsPlayerAiming(playerid))
{
if (GetPlayerSpecialAction(playerid) != SPECIAL_ACTION_DUCK)
{
SetPlayerAttachedObject(playerid, 0, GetPVarInt(playerid, "color"), 6, // M4 standing aiming
0.528249, -0.020266, 0.068052, -6.621746, 352.552642, 355.084289);
}
else
{
SetPlayerAttachedObject(playerid, 0, GetPVarInt(playerid, "color"), 6, // M4 crouched aiming
0.528249, -0.020266, 0.068052, -1.621746, 356.202667, 355.084289);
}
}
else
{
if (GetPlayerSpecialAction(playerid) != SPECIAL_ACTION_DUCK)
{
SetPlayerAttachedObject(playerid, 0, GetPVarInt(playerid, "color"), 6, // M4 standing not aiming
0.503249, -0.02376, 0.065051, -11.131746, 357.302734, 354.484222);
}
else
{
SetPlayerAttachedObject(playerid, 0, GetPVarInt(playerid, "color"), 6, // M4 crouched not aiming
0.503249, -0.02376, 0.065051, -11.131746, 357.302734, 354.484222);
}
}
}
case 29:
{
if (IsPlayerAiming(playerid))
{
if (GetPlayerSpecialAction(playerid) != SPECIAL_ACTION_DUCK)
{
SetPlayerAttachedObject(playerid, 0, GetPVarInt(playerid, "color"), 6, // MP5 standing aiming
0.298249, -0.02776, 0.158052, -11.631746, 359.302673, 357.584259);
}
else
{
SetPlayerAttachedObject(playerid, 0, GetPVarInt(playerid, "color"), 6, // MP5 crouched aiming
0.298249, -0.02776, 0.158052, 8.368253, 358.302673, 352.584259);
}
}
else
{
if (GetPlayerSpecialAction(playerid) != SPECIAL_ACTION_DUCK)
{
SetPlayerAttachedObject(playerid, 0, GetPVarInt(playerid, "color"), 6, // MP5 standing not aiming
0.293249, -0.027759, 0.195051, -12.131746, 354.302734, 352.484222);
}
else
{
SetPlayerAttachedObject(playerid, 0, GetPVarInt(playerid, "color"), 6, // MP5 crouched not aiming
0.293249, -0.027759, 0.195051, -12.131746, 354.302734, 352.484222);
}
}
}
}
}
}
}
//if - location - close
return 1;
}
public OnPlayerStreamIn(playerid, forplayerid)
{
return 1;
}
public OnPlayerStreamOut(playerid, forplayerid)
{
return 1;
}
public OnVehicleStreamIn(vehicleid, forplayerid)
{
return 1;
}
public OnVehicleStreamOut(vehicleid, forplayerid)
{
return 1;
}
public OnDialogResponse(playerid, dialogid, response, listitem, inputtext[])
{
new noerrorstring4[115];
if(dialogid<=-1)
{
if(!response)
{
}
if(response)
{
}
}
if(dialogid==0)
{
if(!response)
{
PlayerInfo[playerid][pKick]=2;
}
if(!response)
{
}
if(response)
{
if(strlen(inputtext)>=4 && strlen(inputtext)<=20)
{
new accountfiles[115];
format(accountfiles, 115, "%s.ini", pname[playerid]);
dini_Create(accountfiles);
dini_Set(accountfiles, "pPassword", inputtext);
new ip[35]; new akafiles[115]; new akafiles2[2230];
GetPlayerIp(playerid,ip,35);
format(akafiles, 115, "/Aka/%s.ini", ip);
if(!dini_Exists(akafiles))
{
dini_Create(akafiles);
format(akafiles2,2230,"%s==",pname[playerid]);
dini_Set(akafiles,"Nicknames",akafiles2);
}
else
{
format(akafiles2,2230,"%s%s==",dini_Get(akafiles,"Nicknames"),pname[playerid]);
dini_Set(akafiles,"Nicknames",akafiles2);
}
PlayerInfo[playerid][pRegistred]=1;
PlayerInfo[playerid][pWeaponS]=1;
PlayerInfo[playerid][pSpawnO]=2;
PlayerInfo[playerid][pTeam]=1;
PlayerInfo[playerid][pRank]=1;
PlayerInfo[playerid][pLevel]=1;
SetPlayerScore(playerid, 1);
TextDrawShowForPlayer(playerid, levelms[playerid]), TextDrawShowForPlayer(playerid, epeps[playerid]);
GetPlayerCurrentIP(playerid);
format(string256, 256, "SERVER: Ти успешно регистрира {40BF00}%s{FFFFFF} с парола {FFFF00}%s {FFFF00}{FFFFFF},ти автоматично влезе в акаунта си.",pname[playerid], inputtext);
SendClientMessage(playerid, 0xFFFFFFFF, string256);
PlayerInfo[playerid][pActiveCheck]=60;
format(string115, 115, "");
SendClientMessage(playerid, 0x00E600FF,string115);
format(string115, 115, "SERVER: Ти влезе успешно в акаунта!");
SendClientMessage(playerid, 0x00E600FF,string115);
logged[playerid]=1;
format(string115,115,"Nickname: %s | Admin Level: 0 | VIP Level: 0 | Player Level: 1 | EP: 0 | Faction: VIP(1)",pname[playerid]);
SendClientMessage(playerid, 0x33CCFFFF,string115);
dini_IntSet(accountfiles, "pYear",year);
dini_IntSet(accountfiles, "pMonth",month);
dini_IntSet(accountfiles, "pDay",day);
dini_IntSet(accountfiles, "pHours",hours);
dini_IntSet(accountfiles, "pMinutes",minutes);
dini_IntSet(accountfiles, "pSeconds",seconds);
new nameofmounth[15];
if(month==1) { nameofmounth="Януари"; }
else if(month==2) { nameofmounth="февруари"; }
else if(month==3) { nameofmounth="Март"; }
else if(month==4) { nameofmounth="Април"; }
else if(month==5) { nameofmounth="Май"; }
else if(month==6) { nameofmounth="Юни"; }
else if(month==7) { nameofmounth="Юли"; }
else if(month==8) { nameofmounth="Август"; }
else if(month==9) { nameofmounth="Септември"; }
else if(month==10) { nameofmounth="Октомври"; }
else if(month==11) { nameofmounth="Ноември"; }
else if(month==12) { nameofmounth="Декември"; }
format(string115,115,"Последното ти влизане в този акаунт е било на %d %d %s в %d:%d:%d часа.",year, day,nameofmounth, hours, minutes ,seconds);
SendClientMessage(playerid, 0xFFFFFFFF,string115);
SetPlayerColor(playerid,0xFF3737FF);
SendClientMessage(playerid, -1,"");
TogglePlayerSpectating(playerid, false);
GivePlayerCash(playerid, 500);
OnLoginShowTexts(playerid);
OnPlayerEnterGiveMission(playerid);
}
else
{
SendClientMessage(playerid,0x00FF00FF,"SERVER: Паролата трябва да е от 4 до 20 символа !");
new stringnewnew2[256];
format(stringnewnew2,256,"{FFFFFF}Добре дошъл {40BF00}%s\n{FFFFFF}Моля регистрирай акаунта като въведеш паролата отдолу:",pname[playerid]);
ShowPlayerDialog(playerid,0,DIALOG_STYLE_PASSWORD,"Регистрация:",stringnewnew2,"Регистрирай","Излез");
}
}
}
if(dialogid==1)
{
if(!response)
{
PlayerInfo[playerid][pKick]=2;
}
if(response)
{
if(strlen(inputtext))
{
new password[25];
new accountfiles[115];
format(accountfiles, 115, "%s.ini", pname[playerid]);
format(password, 25, "%s", dini_Get(accountfiles, "pPassword"));
if(strcmp(inputtext, password)==0)
{
if(strlen(inputtext)<1)
{
SendClientMessage(playerid,0xFF1400FF,"SERVER: Въведи парола !");
return 1;
}
PlayerInfo[playerid][pAdmin]= dini_Int(accountfiles,"pAdmin");
PlayerInfo[playerid][pManage]= dini_Int(accountfiles,"pManage");
PlayerInfo[playerid][pEvent]= dini_Int(accountfiles,"pEvent");
PlayerInfo[playerid][pIFC]= dini_Int(accountfiles,"pIFC");
PlayerInfo[playerid][pSpecialForce]= dini_Int(accountfiles,"pSpecialForce");
PlayerInfo[playerid][pSamolet]= dini_Int(accountfiles,"pSamolet");
PlayerInfo[playerid][pHelikopter]= dini_Int(accountfiles,"pHelikopter");
PlayerInfo[playerid][pLodka]= dini_Int(accountfiles,"pLodka");
PlayerInfo[playerid][pDMONKills]= dini_Int(accountfiles,"pDMONKills");
PlayerInfo[playerid][pHook]= dini_Int(accountfiles,"pHook");
PlayerInfo[playerid][pStyle]= dini_Int(accountfiles,"pStyle");
PlayerInfo[playerid][pArmour2]= dini_Int(accountfiles,"pArmour2");
PlayerInfo[playerid][pHealth2]= dini_Int(accountfiles,"pHealth2");
PlayerInfo[playerid][pMoonshine1]= dini_Int(accountfiles,"pMoonshine1");
PlayerInfo[playerid][pHeroin1]= dini_Int(accountfiles,"pHeroin1");
PlayerInfo[playerid][pCocaine1]= dini_Int(accountfiles,"pCocaine1");
PlayerInfo[playerid][pWeed1]= dini_Int(accountfiles,"pWeed1");
PlayerInfo[playerid][pVlak]= dini_Int(accountfiles,"pVlak");
PlayerInfo[playerid][pPlayerRefuelTimer]= dini_Int(accountfiles,"pPlayerRefuelTimer");
PlayerInfo[playerid][pWarns]= dini_Int(accountfiles,"pWarns");
PlayerInfo[playerid][pTSpec]= dini_Int(accountfiles,"pTSpec");
PlayerInfo[playerid][pTGoto]= dini_Int(accountfiles,"pTGoto");
PlayerInfo[playerid][pTimeJail]= dini_Int(accountfiles,"pTimeJail");
PlayerInfo[playerid][pTimeMute]= dini_Int(accountfiles,"pTimeMute");
PlayerInfo[playerid][pADMINMute]= dini_Int(accountfiles,"pADMINMute");
PlayerInfo[playerid][pGSM]= dini_Int(accountfiles,"pGSM");
PlayerInfo[playerid][pPJail]= dini_Int(accountfiles,"pPJail");
PlayerInfo[playerid][pBlock]= dini_Int(accountfiles,"pBlock");
PlayerInfo[playerid][pVGuns]= dini_Int(accountfiles,"pVGuns");
PlayerInfo[playerid][pFixT]= dini_Int(accountfiles,"pFixT");
PlayerInfo[playerid][pHealT]= dini_Int(accountfiles,"pHealT");
PlayerInfo[playerid][pVip]= dini_Int(accountfiles,"pVip");
PlayerInfo[playerid][pTeam]= dini_Int(accountfiles,"pTeam");
PlayerInfo[playerid][pRank]= dini_Int(accountfiles,"pRank");
PlayerInfo[playerid][pAccount]= dini_Int(accountfiles,"pAccount");
PlayerInfo[playerid][pLevel]= dini_Int(accountfiles,"pLevel");
PlayerInfo[playerid][pBSpec]= dini_Int(accountfiles,"pBSpec");
PlayerInfo[playerid][pEP]= dini_Int(accountfiles,"pEP");
PlayerInfo[playerid][pEPS]= dini_Int(accountfiles,"pEPS");
PlayerInfo[playerid][pCash]= dini_Int(accountfiles,"pCash");
PlayerInfo[playerid][pYear]= dini_Int(accountfiles,"pYear");
PlayerInfo[playerid][pMonth]= dini_Int(accountfiles,"pMonth");
PlayerInfo[playerid][pDay]= dini_Int(accountfiles,"pDay");
PlayerInfo[playerid][pHours]= dini_Int(accountfiles,"pHours");
PlayerInfo[playerid][pMinutes]= dini_Int(accountfiles,"pMinutes");
PlayerInfo[playerid][pSeconds]= dini_Int(accountfiles,"pSeconds");
PlayerInfo[playerid][pAFK]= dini_Int(accountfiles, "pAFK");
PlayerInfo[playerid][pLaser]= dini_Int(accountfiles, "pLaser");
PlayerInfo[playerid][pWanted]= dini_Int(accountfiles, "pWanted");
PlayerInfo[playerid][pIgnorePM]= dini_Int(accountfiles, "pIgnorePM");
PlayerInfo[playerid][pTogPM]= dini_Int(accountfiles, "pTogPM");
PlayerInfo[playerid][pJail]= dini_Int(accountfiles, "pJail");
PlayerInfo[playerid][pKills]= dini_Int(accountfiles, "pKills");
PlayerInfo[playerid][pDeaths]= dini_Int(accountfiles, "pDeaths");
PlayerInfo[playerid][pJailReason]= dini_Int(accountfiles, "pJailReason");
PlayerInfo[playerid][pMuted]= dini_Int(accountfiles, "pMuted");
PlayerInfo[playerid][pBizEP]= dini_Int(accountfiles, "pBizEP");
PlayerInfo[playerid][pReadTA]= dini_Int(accountfiles, "pReadTA");
PlayerInfo[playerid][pBriefcase]= dini_Int(accountfiles, "pBriefcase");
new stringClothes[70];
for(new i=1; i<9; i++)
{
format(stringClothes,70,"pClothes[%d]",i);
PlayerInfo[playerid][pClothes][i]= dini_Int(accountfiles, stringClothes);
}
PlayerInfo[playerid][pChantichki]= dini_Int(accountfiles, "pChantichki");
PlayerInfo[playerid][pFuelcase]= dini_Int(accountfiles, "pFuelcase");
PlayerInfo[playerid][pRadio]= dini_Int(accountfiles, "pRadio");
PlayerInfo[playerid][pDice]= dini_Int(accountfiles, "pDice");
PlayerInfo[playerid][pReactionTestsWon]= dini_Int(accountfiles, "pReactionTestsWon");
PlayerInfo[playerid][pCigarettes]= dini_Int(accountfiles, "pCigarettes");
PlayerInfo[playerid][pBizCash]= dini_Int(accountfiles, "pBizCash");
PlayerInfo[playerid][pMuteReason]= dini_Int(accountfiles, "pMuteReason");
PlayerInfo[playerid][pLMuted]= dini_Int(accountfiles, "pLMuted");
PlayerInfo[playerid][pAMuted]= dini_Int(accountfiles, "pAMuted");
PlayerInfo[playerid][pFMuted]= dini_Int(accountfiles, "pFMuted");
PlayerInfo[playerid][pFWarns]= dini_Int(accountfiles, "pFWarns");
PlayerInfo[playerid][pAHide]= dini_Int(accountfiles, "pAHide");
PlayerInfo[playerid][pLastPayday]= dini_Int(accountfiles, "pLastPayday");
PlayerInfo[playerid][pComingBan]= dini_Int(accountfiles, "pComingBan");
PlayerInfo[playerid][pTest]= dini_Int(accountfiles, "pTest");
PlayerInfo[playerid][pADuty]= dini_Int(accountfiles, "pADuty");
PlayerInfo[playerid][pASkin]= dini_Int(accountfiles, "pASkin");
PlayerInfo[playerid][pHouseO]= dini_Int(accountfiles, "pHouseO");
PlayerInfo[playerid][pWeaponS]= dini_Int(accountfiles, "pWeaponS");
PlayerInfo[playerid][pSpawnO]= dini_Int(accountfiles, "pSpawnO");
PlayerInfo[playerid][pBizO]= dini_Int(accountfiles, "pBizO");
PlayerInfo[playerid][pCash]= dini_Int(accountfiles, "pCash");
GivePlayerCash(playerid,PlayerInfo[playerid][pCash]);
SetPlayerScore(playerid, PlayerInfo[playerid][pLevel]);
if(PlayerInfo[playerid][pLaser]>0)
{
if(PlayerInfo[playerid][pTeam]==FACTION_VIP)
{
SetPVarInt(playerid, "color", 18643);
}
if(PlayerInfo[playerid][pTeam]==FACTION_GROVE)
{
SetPVarInt(playerid, "color", 19083);
}
if(PlayerInfo[playerid][pTeam]==13 || PlayerInfo[playerid][pTeam]==FACTION_LVPD)
{
SetPVarInt(playerid, "color", 19080);
}
if(PlayerInfo[playerid][pTeam]==FACTION_RIFA)
{
SetPVarInt(playerid, "color", 19080);
}
if(PlayerInfo[playerid][pTeam]==FACTION_DELTAFORCE)
{
SetPVarInt(playerid, "color", 19084);
}
}
if(PlayerInfo[playerid][pCash]>999999999)
{
PlayerInfo[playerid][pCash]=999999999;
GivePlayerCash(playerid,0);
}
if(PlayerInfo[playerid][pTest]==1) { adminprefix[playerid]="Test Admin"; }
else if(PlayerInfo[playerid][pAdmin]==1) { adminprefix[playerid]="Helper"; }
else if(PlayerInfo[playerid][pAdmin]==2) { adminprefix[playerid]="Administrator"; }
else if(PlayerInfo[playerid][pAdmin]==3) { adminprefix[playerid]="Moderator"; }
else if(PlayerInfo[playerid][pAdmin]==4) { adminprefix[playerid]="Grand Admin"; }
else if(PlayerInfo[playerid][pAdmin]==5) { adminprefix[playerid]="Owner";}
else if(PlayerInfo[playerid][pAdmin]==6) { adminprefix[playerid]="Scripter";}
PlayerInfo[playerid][pRegistred]=1;
PlayerInfo[playerid][pActiveCheck]=60;
format(string115, 115, "SERVER: Ти влезе успешно в акаунта!");
SendClientMessage(playerid, 0x00E600FF,string115);
//TogglePlayerSpectating(playerid, false);
logged[playerid]=1;
OnLoginShowTexts(playerid);
if(PlayerInfo[playerid][pTest] == 1)
{
format(string256, 256, "Nickname: %s | Admin Level: Test | VIP Level: %d | Player Level: %d | EP: %d | Faction: %s(%d)",pname[playerid], PlayerInfo[playerid][pVip], PlayerInfo[playerid][pLevel], PlayerInfo[playerid][pEP],TeamInfo[PlayerInfo[playerid][pTeam]][tName],PlayerInfo[playerid][pRank]);
SendClientMessage(playerid, 0x33CCFFFF,string256);
}
if(PlayerInfo[playerid][pAdmin]<6)
{
format(string256, 256, "Nickname: %s | Admin Level: %d | VIP Level: %d | Player Level: %d | EP: %d | Faction: %s(%d)",pname[playerid],PlayerInfo[playerid][pAdmin], PlayerInfo[playerid][pVip], PlayerInfo[playerid][pLevel], PlayerInfo[playerid][pEP],TeamInfo[PlayerInfo[playerid][pTeam]][tName],PlayerInfo[playerid][pRank]);
SendClientMessage(playerid, 0x33CCFFFF,string256);
}
if(PlayerInfo[playerid][pAdmin]==6)
{
format(string256, 256, "Nickname: %s | Admin Level: 5 | VIP Level: %d | Player Level: %d | EP: %d | Faction: %s(%d)",pname[playerid], PlayerInfo[playerid][pVip], PlayerInfo[playerid][pLevel], PlayerInfo[playerid][pEP],TeamInfo[PlayerInfo[playerid][pTeam]][tName],PlayerInfo[playerid][pRank]);
SendClientMessage(playerid, 0x33CCFFFF,string256);
}
format(accountfiles, 115, "%s.ini", pname[playerid]);
dini_IntSet(accountfiles, "pYear",year);
dini_IntSet(accountfiles, "pMonth",month);
dini_IntSet(accountfiles, "pDay",day);
dini_IntSet(accountfiles, "pHours",hours);
dini_IntSet(accountfiles, "pMinutes",minutes);
dini_IntSet(accountfiles, "pSeconds",seconds);
new nameofmounth[15];
if(PlayerInfo[playerid][pMonth]==1) { nameofmounth="Януари"; }
else if(PlayerInfo[playerid][pMonth]==2) { nameofmounth="февруари"; }
else if(PlayerInfo[playerid][pMonth]==3) { nameofmounth="Март"; }
else if(PlayerInfo[playerid][pMonth]==4) { nameofmounth="Април"; }
else if(PlayerInfo[playerid][pMonth]==5) { nameofmounth="Май"; }
else if(PlayerInfo[playerid][pMonth]==6) { nameofmounth="Юни"; }
else if(PlayerInfo[playerid][pMonth]==7) { nameofmounth="Юли"; }
else if(PlayerInfo[playerid][pMonth]==8) { nameofmounth="Август"; }
else if(PlayerInfo[playerid][pMonth]==9) { nameofmounth="Септември"; }
else if(PlayerInfo[playerid][pMonth]==10) { nameofmounth="Октомври"; }
else if(PlayerInfo[playerid][pMonth]==11) { nameofmounth="Ноември"; }
else if(PlayerInfo[playerid][pMonth]==12) { nameofmounth="Декември"; }
format(string115,115,"Последното ти влизане в този акаунт е било на %d %d %s в %d:%d:%d часа.",PlayerInfo[playerid][pYear] ,PlayerInfo[playerid][pDay],nameofmounth ,PlayerInfo[playerid][pHours] ,PlayerInfo[playerid][pMinutes] ,PlayerInfo[playerid][pSeconds]);
SendClientMessage(playerid, 0xFFFFFFFF,string115);
SendClientMessage(playerid, -1,"");
OnPlayerEnterGiveMission(playerid);
if(PlayerInfo[playerid][pADuty]==1)
{
SetPlayerColor(playerid, 0x7BFFFFFF);
}
if(PlayerInfo[playerid][pTeam]==FACTION_CIVILIAN)
{
SetPlayerColor(playerid, 0xFFFFFFFF);
}
if(PlayerInfo[playerid][pTeam]==FACTION_VIP)
{
SetPlayerColor(playerid,0xFF3737FF);
}
if(PlayerInfo[playerid][pTeam]==FACTION_GROVE)
{
SetPlayerColor(playerid,0x33AA33FF);
}
if(PlayerInfo[playerid][pJail]>0)
{
SendClientMessage(playerid, 0xE60000FF,"SERVER: Ти все-още си в админ затвора!");
}
if(PlayerInfo[playerid][pAFK]>0)
{
SendClientMessage(playerid, 0xD6F34AFF,"AFK: Ти все-още си в режим AFK!");
SetPlayerColor(playerid, 0xD6F34AFF);
}
TogglePlayerSpectating(playerid, false);
}
else
{
format(string256,256,"{FFFFFF}Добре дошъл {40BF00}%s\n{FFFFFF}Моля влез в акаунта като въведеш паролата отдолу:",pname[playerid]);
ShowPlayerDialog(playerid,1,DIALOG_STYLE_PASSWORD,"Влизане:",string256,"Влез","Излез");
SendClientMessage(playerid, 0xFF1400FF, "SERVER: Грешна парола");
wrongpassword[playerid]+=1;
if(wrongpassword[playerid]==3)
{
format(string115,115,"SERVER: %s was kicked by THE SERVER [Reason: Wrong Password]",pname[playerid]);
SendClientMessageToAll(0xB4B5B7FF,string115);
PlayerInfo[playerid][pKick]=1;
}
}}}}
if(dialogid==2)
{
if(!response)
{
SendClientMessage(playerid,0xE60000FF,"За да играете в този сървър трябва да се съгласи с правилата и условията му!");
PlayerInfo[playerid][pKick]=2;
}
if(!response)
{
}
if(response)
{
ShowPlayerDialog(playerid,8,DIALOG_STYLE_INPUT,"GSM номер:","Преди да се регистрирате за по-голяма сигурност на вашия акаунт може да въведете вашия GSM номер!\nАко ви бъде откраднат акаунта, чрез пращане на SMS от номера, който сте въвели, вие, че акаунта е ваш!\nЗа това трябва да въведете GSM номера, от който ще пращате SMS за потвърждение, ако случайно ви бъде откраднат!\n\nАко искате да пропуснете тази стъпка натиснете бутона 'Пропусни'","Въведи","{FFFFFF}Пропусни");
}
}
if(dialogid==4)
{
if(response)
{
new string2230[590]; new string2230result[2070];
format(string2230,512,"{00FF00}--= Vip Level 1 =--\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/listguns - можете да погледнете оръжията на другите играчи\n");
strcat(string2230result, string2230);
format(string2230,512,"{008000}/flip - преобръща вашето превозно средство\n");
strcat(string2230result, string2230);
format(string2230,512,"{FF0000}/hyd - добавя хидравлика\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/nos - добавя нитро\n");
strcat(string2230result, string2230);
format(string2230,512,"{008000}/vtimers - за да видите колко време ви остава до VIP unmute и т.н.\n");
strcat(string2230result, string2230);
format(string2230,512,"{FF0000}/isafk - проверява от колко време е AFK даден играч\n\n");
strcat(string2230result, string2230);
format(string2230,512,"{00FF00}--= Vip Level 2 =--\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/fix - поправя вашето превозно средство\n");
strcat(string2230result, string2230);
format(string2230,512,"{008000}/cnos - променя вашия режим на пускане на нитрото\n");
strcat(string2230result, string2230);
format(string2230,512,"{FF0000}/r - директно отговаряне на лично съобщение (PM)\n");
strcat(string2230result, string2230);
format(string2230,512,"{008000}/pj - пребоядисва вашата кола\n");
strcat(string2230result, string2230);
format(string2230,512,"{008000}/jetpack - дава летяща раница\n");
strcat(string2230result, string2230);
format(string2230,512,"{FF0000}/cc - променя цвета на вашето превозно средство\n");
strcat(string2230result, string2230);
format(string2230,512,"{008000}/advert - пускане на рекламация за бизнес, къща и т.н.\n");
strcat(string2230result, string2230);
format(string2230,512,"{FF0000}/kill - за да се самоубиете\n\n");
strcat(string2230result, string2230);
format(string2230,512,"{00FF00}--= Vip Level 3 =--\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/invisible - ставаш невидим на картата\n");
strcat(string2230result, string2230);
format(string2230,512,"{FF0000}/para - дава парашут\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/lock - заключва вашето превозно средство\n");
strcat(string2230result, string2230);
format(string2230,512,"{008000}/unlock - отключва вашето превозно средство\n");
strcat(string2230result, string2230);
format(string2230,512,"{008000}/healme - за да си заредиш кръвта и жилетката\n");
strcat(string2230result, string2230);
format(string2230,512,"{FF0000}/vrefuel - добавя 20 литра на вашето превозно средство\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/ramphelp - информация за ползване на рампите\n");
strcat(string2230result, string2230);
format(string2230,512,"{008000}/vguns - дава оръжия, при цивилен - Sawnoff и M4, при банда - Knife и Sniper Rifle\n");
strcat(string2230result, string2230);
format(string2230,512,"{FF0000}/tune - за да тунинговате вашата кола където и да сте\n\n");
strcat(string2230result, string2230);
format(string2230,512,"{00FF00}--= Vip Level 4 =--\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/laser - пуска/спира твоят лазер на оръжията ak-47 и m4\n");
strcat(string2230result, string2230);
format(string2230,512,"{008000}/viplabel - закача/откача 3D текста 'VIP' от главата ти\n");
strcat(string2230result, string2230);
format(string2230,512,"{FF0000}/parrot - закача/маха папагал от твоето рамо\n\n");
strcat(string2230result, string2230);
format(string2230,512,"{00FF00}--= Vip Level 5 =--\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/edit - местите закачен обжект от вашия скин\n");
strcat(string2230result, string2230);
format(string2230,512,"{008000}/clothes - за да си слагаш кърпи/очила/маски и т.н.\n");
strcat(string2230result, string2230);
format(string2230,512,"{FF0000}/sgchange - за да си смениш дали да получаваш чантички или гранати\n\n");
strcat(string2230result, string2230);
format(string2230,512,"{00FF00}--= Vip Level 6 =--\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/eject - за да изгониш някой от колата, която караш\n");
strcat(string2230result, string2230);
format(string2230,512,"{008000}/viptext - за да смениш 3D текста на главата ти, струва $5000\n");
strcat(string2230result, string2230);
format(string2230,512,"{FF0000}/tires - за да поправите гумите на вашето превозно средство\n");
strcat(string2230result, string2230);
new closeddialog=3500;
ShowPlayerDialog(playerid,closeddialog,DIALOG_STYLE_MSGBOX,"{FFFFFF}VIP{008000} MOD{FF0000} COMMANDS:",string2230result,"Затвори","");
}
}
if(dialogid==12)
{
if(response)
{
new string2230[512]; new string2230result[1500];
format(string2230,512,"{00FF00}---Основни команди---\n");
strcat(string2230result, string2230);
format(string2230,512,"{008000}/myfps - за да видиш твоето FPS\n");
strcat(string2230result, string2230);
format(string2230,512,"{008000}/intro - за да пуснеш песен от интрото\n");
strcat(string2230result, string2230);
format(string2230,512,"{008000}/introff - за да спреш песен от интрото\n");
strcat(string2230result, string2230);
format(string2230,512,"{008000}/leavedm - за да напуснете, ако сте в Deathmatch мисия\n");
strcat(string2230result, string2230);
format(string2230,512,"{FF0000}/leaverace - за да напуснете, ако се съзтезавате в Street Race мисия\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/dice - за да метнете зарче\n");
strcat(string2230result, string2230);
format(string2230,512,"{008000}/refuel - за да заредите вашето превозно средство с бензин\n");
strcat(string2230result, string2230);
format(string2230,512,"{FF0000}/mduty - за да си смените скина на механик\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/briefcase(/bcase) - всички опции за ползване на куфара\n");
strcat(string2230result, string2230);
format(string2230,512,"{008000}/drop - за да изхвърлиш неща, които имаш в себе си\n");
strcat(string2230result, string2230);
format(string2230,512,"{FF0000}/afk - за да преминете в режим AFK\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/back - за да се махнете от режим AFK\n");
strcat(string2230result, string2230);
format(string2230,512,"{008000}/vote - за да гласувате, когато е пуснато гласуване за RESPAWN на превозните средства\n");
strcat(string2230result, string2230);
format(string2230,512,"{008000}/poll - за да гласувате, когато е стартиран въпрос от админ\n");
strcat(string2230result, string2230);
format(string2230,512,"{008000}/joinvip - за да влезеш в бандата VIP\n");
strcat(string2230result, string2230);
format(string2230,512,"{008000}/togchat - забраняваш/махаш забраната за себе си да виждаш какво пишат другите в чата\n");
strcat(string2230result, string2230);
format(string2230,512,"{008000}/hitman - за да заложиш цена на главата на даден играч\n");
strcat(string2230result, string2230);
format(string2230,512,"{008000}/bounties - за да видиш онлайн играчите със заложени цени на главите им\n");
strcat(string2230result, string2230);
format(string2230,512,"{008000}/transfer - внасяш пари в сумата на някой играч\n");
strcat(string2230result, string2230);
ShowPlayerDialog(playerid,13,DIALOG_STYLE_MSGBOX,"{FFFFFF}КО{008000}МАН{FF0000}ДИ",string2230result,"Други","Затвори");
}
}
if(dialogid==13)
{
if(!response)
{
}
if(response)
{
new string2230[512]; new string2230result[1500];
format(string2230,512,"{00FF00}---Команди за къща---\n");
strcat(string2230result, string2230);
format(string2230,512,"{FF0000}От /househelp можете да видите всички команди за къща\n\n");
strcat(string2230result, string2230);
format(string2230,512,"{00FF00}---Команди за бизнес---\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}От /bizhelp можете да видите всички команди за притежателя на бизнес\n");
strcat(string2230result, string2230);
format(string2230,512,"{008000}/drink - за да поръчате нещо за пиене от бар\n");
strcat(string2230result, string2230);
format(string2230,512,"{FF0000}/train - за да научите боен стил от фитнес\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/buy - за да купите нещо от бизнес/магазин\n");
strcat(string2230result, string2230);
format(string2230,512,"{008000}/heal - за да купите живот или жилетка от бизнес\n");
strcat(string2230result, string2230);
format(string2230,512,"{FF0000}/buyhealth - за да купите health пакети за вашата къща от бизнес\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/buyarmour - за да купите armour пакети за вашата къща от бизнес\n");
strcat(string2230result, string2230);
format(string2230,512,"{008000}/bet - за да заложите на конно надбягване в бизнес\n");
strcat(string2230result, string2230);
format(string2230,512,"{FF0000}/dmv - за да си вземете шофьорска книжка\n");
strcat(string2230result, string2230);
format(string2230,512,"{FF0000}/plate - за да си смените номера на колата\n\n");
strcat(string2230result, string2230);
format(string2230,512,"{00FF00}---Команди за банда/мафия---\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}От /factionhelp(/fhelp) можете да видите всички команди за банда/мафия\n\n");
strcat(string2230result, string2230);
format(string2230,512,"{00FF00}---VIP команди---\n");
strcat(string2230result, string2230);
format(string2230,512,"{FF0000}От /viphelp можете да видите всички VIP команди\n\n");
strcat(string2230result, string2230);
format(string2230,512,"{00FF00}---Админ команди---\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}От /ahelp(/ah) можете да видите всички админ команди, ако сте админ!\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}От /mhelp(/mh) можете да видите всички Manage Admin команди!\n");
strcat(string2230result, string2230);
ShowPlayerDialog(playerid,15,DIALOG_STYLE_MSGBOX,"{FFFFFF}КО{008000}МАН{FF0000}ДИ",string2230result,"Други","Затвори");
}
}
if(dialogid==15)
{
if(!response)
{
}
if(response)
{
new string2230[512]; new string2230result[1888];
format(string2230,512,"{00FF00}---Команди за превозно средство---\n");strcat(string2230result, string2230);
format(string2230,512,"{008000}/detach - за да откачите ремаркето от вашия камион\n");strcat(string2230result, string2230);
format(string2230,512,"{FF0000}/tow - за да качите кола с вашия Tow Truck\n");strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}От /vehelp можете да видите останалите команди за превозното средство!\n\n");strcat(string2230result, string2230);
format(string2230,512,"{00FF00}---Команди за туба бензин---\n");strcat(string2230result, string2230);
format(string2230,512,"{008000}/refillfc - за да заредите вашата туба с бензин\n");strcat(string2230result, string2230);
format(string2230,512,"{FF0000}/fuelcan - за да заредите бензин от вашата туба\n");strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/fc - за да проверите колко бензин имате във вашата туба\n\n");strcat(string2230result, string2230);
format(string2230,512,"{00FF00}---Команди за километража---\n");strcat(string2230result, string2230);
format(string2230,512,"{FF0000}/speedo - за да сложите или премахнете километража\n");strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/kph - за да настроите скоростта да ви я показва в km/h\n");strcat(string2230result, string2230);
format(string2230,512,"{008000}/mph - за да настроите скоростта да ви я показва в m/s\n\n");strcat(string2230result, string2230);
format(string2230,512,"{00FF00}---Команди за анимации---\n");strcat(string2230result, string2230);
format(string2230,512,"{FF0000}От /animlist може да видите всички команди за анимациите\n\n");strcat(string2230result, string2230);
format(string2230,512,"{00FF00}---Команди за обир---\n");strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/robbery - всички опции за обир\n");strcat(string2230result, string2230);
format(string2230,512,"{008000}/rob - за да почнеш да крадеш\n");strcat(string2230result, string2230);
format(string2230,512,"{00FF00}---Команди за дрога---\n");strcat(string2230result, string2230);
format(string2230,512,"{FF0000}/usedrug - за да изполваш дрога\n");strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/drugs - за да видиш твоята дрога\n");strcat(string2230result, string2230);
format(string2230,512,"{008000}/selldrug - за да продадеш дрога\n");strcat(string2230result, string2230);
format(string2230,512,"{FF0000}/drugaccept(/da) - за да приемеш, ако някой ти продава дрога\n");strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/drugcancel(/dc) - за да да откажеш, ако някой ти продава дрога\n\n");strcat(string2230result, string2230);
format(string2230,512,"{00FF00}---Команди за тунинг гаража---\n");strcat(string2230result, string2230);
format(string2230,512,"{008000}/tune - за да отворите менюто за тунинг\n");strcat(string2230result, string2230);
format(string2230,512,"{FF0000}/dm, /dm2 - за да се телепортирате на арената за битка - DM\n");strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/tunehelp - повече информация за тунинг гаража\n\n");strcat(string2230result, string2230);
format(string2230,512,"{00FF00}---Команди за евент---\n");strcat(string2230result, string2230);
format(string2230,512,"{008000}/joinevent - за да се присъедините към евент\n");strcat(string2230result, string2230);
format(string2230,512,"{FF0000}/leftevent - за да излезете от евент\n");strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/erefuel - за да добавите 100 литра на вашето превозно средство\n");strcat(string2230result, string2230);
format(string2230,512,"{008000}/nameon - за да ви се вижда никнейма над главата\n");strcat(string2230result, string2230);
format(string2230,512,"{FF0000}/nameoff - за да не ви се вижда никнейма над главата\n");strcat(string2230result, string2230);
ShowPlayerDialog(playerid,16,DIALOG_STYLE_MSGBOX,"{FFFFFF}КО{008000}МАН{FF0000}ДИ",string2230result,"Други","Затвори");
}
}
if(dialogid==16)
{
if(!response)
{
}
if(response)
{
new string2230[512]; new string2230result[1750];
format(string2230,512,"{00FF00}---Команди за радио---\n");strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/radio - за да пуснете вашето радио\n");strcat(string2230result, string2230);
format(string2230,512,"{008000}/radioff - за да изкючите вашето радио\n\n");strcat(string2230result, string2230);
format(string2230,512,"{00FF00}---Команди за работа---\n");strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/coalmine - за да започнеш работа като миньор\n");strcat(string2230result, string2230);
format(string2230,512,"{008000}/sweep - за да започнеш работа като чистач на улици\n");strcat(string2230result, string2230);
format(string2230,512,"{FF0000}/pizza - за да започнеш работа като доставчик на пици\n");strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/bus - за да започнеш работа като автобусен шофьор\n");strcat(string2230result, string2230);
format(string2230,512,"{008000}/deliver - за да започнеш работа като доставчик\n");strcat(string2230result, string2230);
format(string2230,512,"{008000}/truck - за да започнеш работа като тираджия\n");strcat(string2230result, string2230);
format(string2230,512,"{008000}/boat - за да започнеш работа като лодкаджия\n");strcat(string2230result, string2230);
format(string2230,512,"{008000}/pilot - за да започнеш работа като пилот\n");strcat(string2230result, string2230);
format(string2230,512,"{FF0000}/leavejob - за да напуснеш твоята работа\n");strcat(string2230result, string2230);
format(string2230,512,"{FF0000}/jobs - за да видите колко време ви остава за да започнете отново работа\n\n");strcat(string2230result, string2230);
format(string2230,512,"{00FF00}---Команди за членове на Intense Fuel Company---\n");strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}От /ifchelp можете да видите всички команди за Intense Fuel Company\n\n");strcat(string2230result, string2230);
format(string2230,512,"{00FF00}---Команди за DM арената---\n");strcat(string2230result, string2230);
format(string2230,512,"{008000}/dmon - за да влезете в DM арената\n");strcat(string2230result, string2230);
format(string2230,512,"{FF0000}/dmoff - за да излезете от DM арената\n");strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/top - за да видите играчът, направил най-много убийства без умиране в DM зоната\n\n");strcat(string2230result, string2230);
format(string2230,512,"{00FF00}---Команди за CB Chanel---\n");strcat(string2230result, string2230);
format(string2230,512,"{008000}/cb - за да влезете в определен CB Chanel\n");strcat(string2230result, string2230);
format(string2230,512,"{FF0000}/cbp - за да видиш онлайн играчите, които са в твоя CB Chanel\n");strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/cboff - за да излезеш от твоя CB Chanel\n\n");strcat(string2230result, string2230);
format(string2230,512,"{00FF00}---Команди за Duel---\n");strcat(string2230result, string2230);
format(string2230,512,"{008000}/duel - за да изпратиш покана за дуел на някого\n");strcat(string2230result, string2230);
format(string2230,512,"{FF0000}/cduel - за да отмениш поканата за дуел, която си изпратил на някого\n");strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/yes - за да приемеш покана за дуел\n");strcat(string2230result, string2230);
format(string2230,512,"{008000}/no - за да откажеш покана за дуел\n");strcat(string2230result, string2230);
ShowPlayerDialog(playerid,17,DIALOG_STYLE_MSGBOX,"{FFFFFF}КО{008000}МАН{FF0000}ДИ",string2230result,"Други","Затвори");
}
}
if(dialogid==17)
{
if(!response)
{
}
if(response)
{
new string2230[512]; new string2230result[1850];
format(string2230,512,"{00FF00}---Команди за лично превозно средство---\n");strcat(string2230result, string2230);
format(string2230,512,"{008000}/vehsave - за да сейфате SPAWN позиция на вашето превозно средство\n");strcat(string2230result, string2230);
format(string2230,512,"{FF0000}/vehcolor - за да смените цвета на вашето превозно средство\n");strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/vehrespawn - за да сложите определено време за RESPAWN на вашето превозно средство\n");strcat(string2230result, string2230);
format(string2230,512,"{008000}/vehnorespawn - за да премахнете RESPAWN на вашето превозно средство\n");
strcat(string2230result, string2230);
format(string2230,512,"{FF0000}/vehres - за да RESPAWN-ете всички ваши превозни средства\n");
strcat(string2230result, string2230);
new closeddialog=3500;
ShowPlayerDialog(playerid,closeddialog,DIALOG_STYLE_MSGBOX,"{FFFFFF}КО{008000}МАН{FF0000}ДИ",string2230result,"Затвори","");
}
}
if(dialogid==19)
{
if(!response)
{
}
if(response) // If they clicked 'Select' or double-clicked a weapon
{
// Give them the weapon
switch(listitem)
{
//            new noerrorstring4[115];
case 0:
{
format(noerrorstring4,115,"{FFFFFF}Вашата обща сума е {40BF00}$%d\n", PlayerInfo[playerid][pAccount]);
new closeddialog=3500;
ShowPlayerDialog(playerid,closeddialog,DIALOG_STYLE_MSGBOX,"Обща сума:",noerrorstring4,"Затвори","");
}
case 1:
{
format(noerrorstring4,115,"{FFFFFF}Вие имате {40BF00}$%d\n{FFFFFF}Моля въведете отдолу колко долара искате да изтеглите от вашата сума:", PlayerInfo[playerid][pAccount]);
ShowPlayerDialog(playerid,6,DIALOG_STYLE_INPUT,"Изтегли пари:",noerrorstring4,"Изтегли","Назад");
}
case 2:
{
format(string175,175,"{FFFFFF}Вие имате {40BF00}$%d{FFFFFF} в себе си.\nМоля въведете отдоло колко долара искате да внесете във вашата сума:", PlayerInfo[playerid][pCash]);
ShowPlayerDialog(playerid,20,DIALOG_STYLE_INPUT,"Плати нарушение:",string175,"Плати","Назад");
}
}
}
}
if(dialogid==20)
{
if(!response)
{
}
if(response) //Continue
{
if(PlayerInfo[playerid][pCash]<strval(inputtext)) return SendClientMessage(playerid,0xB4B5B7FF,"Ти нямаш толкова пари в себе си!");
new string[256];
GivePlayerCash(playerid,-strval(inputtext));
PlayerInfo[playerid][pAccount]+=strval(inputtext);
//ApplyAnimation(playerid, "PED", "ATM", 3.0,1,1,0,0,0);
format(string, sizeof(string), "Вие успешно внесохте {40BF00}$%d {FFFFFF}във вашата обща сума", strval(inputtext));
SendClientMessage(playerid, 0xFFFFFFFF, string);
}
else ShowPlayerDialog(playerid, 19, DIALOG_STYLE_LIST, "Банка", "Обща сума\nИзтегли пари\nВнеси пари", "Избери", "Затвори");
}
//
if(dialogid==39)
{
if(strval(inputtext)<1)
{
format(string256,256,"Не можете да заредите 0 литра във вашето превозно средство.");
SendClientMessage(playerid,0xB4B5B7FF,string256);
return 0;
}
if(vehfuel[GetPlayerVehicleID(playerid)]==100)
{
SendClientMessage(playerid,0xB4B5B7FF,"Вашето превозно средство има 100 литра бензин.");
return 0;
}
if(strval(inputtext)>100-vehfuel[GetPlayerVehicleID(playerid)])
{
format(string256,256,"Можете да заредите до %d литра във вашето превозно средство.",100-vehfuel[GetPlayerVehicleID(playerid)]);
SendClientMessage(playerid,0xB4B5B7FF,string256);
return 0;
}
refuelcan[playerid]=strval(inputtext);
PlayerInfo[playerid][pRefuelCan]=8;
TogglePlayerControllable(playerid, 0);
GameTextForPlayer(playerid, "~g~PLEASE WAIT", 8000, 3);
SendClientMessage(playerid,0xA4FFA4FF,"Моля, изчакайте, докато се зареди вашето превозно средство!");
}
if(dialogid==38)
{
new refuelstring[500];
if(strval(inputtext)<1)
{
format(string256,256,"Не можете да заредите 0 литра във вашата туба за бензин.",strval(inputtext));
SendClientMessage(playerid,0xB4B5B7FF,string256);
return 0;
}
if(PlayerInfo[playerid][pFuelcase]==100)
{
SendClientMessage(playerid,0xB4B5B7FF,"Вашата туба за бензин е пълна.");
return 0;
}
if(strval(inputtext)>100-PlayerInfo[playerid][pFuelcase])
{
format(string256,256,"Можете да заредите до %d литра във вашата туба за бензин.",100-PlayerInfo[playerid][pFuelcase]);
SendClientMessage(playerid,0xB4B5B7FF,string256);
return 0;
}
if(IsPlayerInRangeOfPoint(playerid, 10, 1004.0327,-937.5370,42.3281) && fuelStationsFuel[0]<strval(inputtext)) return SendClientMessage(playerid,0xB4B5B7FF,"В бензиностанцията няма толкова бензин.");
if(IsPlayerInRangeOfPoint(playerid, 10, 1942.3719,-1772.8666,13.6406) && fuelStationsFuel[1]<strval(inputtext)) return SendClientMessage(playerid,0xB4B5B7FF,"В бензиностанцията няма толкова бензин.");
if(IsPlayerInRangeOfPoint(playerid, 10, -1606.7223,-2713.3562,48.5335) && fuelStationsFuel[2]<strval(inputtext)) return SendClientMessage(playerid,0xB4B5B7FF,"В бензиностанцията няма толкова бензин.");
if(IsPlayerInRangeOfPoint(playerid, 10, -2026.7813,156.5509,29.0391) && fuelStationsFuel[3]<strval(inputtext)) return SendClientMessage(playerid,0xB4B5B7FF,"В бензиностанцията няма толкова бензин.");
if(IsPlayerInRangeOfPoint(playerid, 10, -2243.8149,-2559.8899,31.9219) && fuelStationsFuel[4]<strval(inputtext)) return SendClientMessage(playerid,0xB4B5B7FF,"В бензиностанцията няма толкова бензин.");
if(IsPlayerInRangeOfPoint(playerid, 10, -1676.2601,413.5443,7.1797) && fuelStationsFuel[5]<strval(inputtext)) return SendClientMessage(playerid,0xB4B5B7FF,"В бензиностанцията няма толкова бензин.");
if(IsPlayerInRangeOfPoint(playerid, 10, 2201.8296,2475.1350,10.8203) && fuelStationsFuel[6]<strval(inputtext)) return SendClientMessage(playerid,0xB4B5B7FF,"В бензиностанцията няма толкова бензин.");
if(IsPlayerInRangeOfPoint(playerid, 10, 615.3391,1690.0454,6.9922) && fuelStationsFuel[7]<strval(inputtext)) return SendClientMessage(playerid,0xB4B5B7FF,"В бензиностанцията няма толкова бензин.");
if(IsPlayerInRangeOfPoint(playerid, 10, -1328.2731,2677.5278,50.0625) && fuelStationsFuel[8]<strval(inputtext)) return SendClientMessage(playerid,0xB4B5B7FF,"В бензиностанцията няма толкова бензин.");
if(IsPlayerInRangeOfPoint(playerid, 10, 70.3842,1219.0177,18.8116) && fuelStationsFuel[9]<strval(inputtext)) return SendClientMessage(playerid,0xB4B5B7FF,"В бензиностанцията няма толкова бензин.");
if(IsPlayerInRangeOfPoint(playerid, 10, 2113.3835,919.5655,10.8203) && fuelStationsFuel[10]<strval(inputtext)) return SendClientMessage(playerid,0xB4B5B7FF,"В бензиностанцията няма толкова бензин.");
if(IsPlayerInRangeOfPoint(playerid, 10, 2641.0115,1106.6252,10.8203) && fuelStationsFuel[11]<strval(inputtext)) return SendClientMessage(playerid,0xB4B5B7FF,"В бензиностанцията няма толкова бензин.");
if(IsPlayerInRangeOfPoint(playerid, 10, 2146.7964,2747.8115,10.8203) && fuelStationsFuel[12]<strval(inputtext)) return SendClientMessage(playerid,0xB4B5B7FF,"В бензиностанцията няма толкова бензин.");
if(IsPlayerInRangeOfPoint(playerid, 10, 1595.7935,2199.5996,10.8203) && fuelStationsFuel[13]<strval(inputtext)) return SendClientMessage(playerid,0xB4B5B7FF,"В бензиностанцията няма толкова бензин.");
if(IsPlayerInRangeOfPoint(playerid, 10, -1471.1836,1863.7598,32.6328) && fuelStationsFuel[14]<strval(inputtext)) return SendClientMessage(playerid,0xB4B5B7FF,"В бензиностанцията няма толкова бензин.");
if(IsPlayerInRangeOfPoint(playerid, 10, 655.7673,-565.0798,16.3359) && fuelStationsFuel[15]<strval(inputtext)) return SendClientMessage(playerid,0xB4B5B7FF,"В бензиностанцията няма толкова бензин.");
if(IsPlayerInRangeOfPoint(playerid, 10, 1381.8230,459.1453,20.3452) && fuelStationsFuel[16]<strval(inputtext)) return SendClientMessage(playerid,0xB4B5B7FF,"В бензиностанцията няма толкова бензин.");
if(strval(inputtext)<=100-PlayerInfo[playerid][pFuelcase])
{
//tuk
refuelcan[playerid]=strval(inputtext);
PlayerInfo[playerid][pRefuelTube]=4;
TogglePlayerControllable(playerid, 0);
GivePlayerCash(playerid,-strval(inputtext));
GameTextForPlayer(playerid, "~g~PLEASE WAIT", 2000, 3);
SendClientMessage(playerid,0xA4FFA4FF,"Gas Station: Моля, изчакайте, докато заредим вашата туба!");
if(IsPlayerInRangeOfPoint(playerid, 10, 1004.0327,-937.5370,42.3281))
{
fuelStationsFuel[0]-=strval(inputtext);
}
if(IsPlayerInRangeOfPoint(playerid, 10, 1942.3719,-1772.8666,13.6406))
{
fuelStationsFuel[1]-=strval(inputtext);
}
if(IsPlayerInRangeOfPoint(playerid, 10, -1606.7223,-2713.3562,48.5335))
{
fuelStationsFuel[2]-=strval(inputtext);
}
if(IsPlayerInRangeOfPoint(playerid, 10, -2026.7813,156.5509,29.0391))
{
fuelStationsFuel[3]-=strval(inputtext);
}
if(IsPlayerInRangeOfPoint(playerid, 10, -2243.8149,-2559.8899,31.9219))
{
fuelStationsFuel[4]-=strval(inputtext);
}
if(IsPlayerInRangeOfPoint(playerid, 10, -1676.2601,413.5443,7.1797))
{
fuelStationsFuel[5]-=strval(inputtext);
}
if(IsPlayerInRangeOfPoint(playerid, 10, 2201.8296,2475.1350,10.8203))
{
fuelStationsFuel[6]-=strval(inputtext);
}
if(IsPlayerInRangeOfPoint(playerid, 10, 615.3391,1690.0454,6.9922))
{
fuelStationsFuel[7]-=strval(inputtext);
}
if(IsPlayerInRangeOfPoint(playerid, 10, -1328.2731,2677.5278,50.0625))
{
fuelStationsFuel[8]-=strval(inputtext);
}
if(IsPlayerInRangeOfPoint(playerid, 10, 70.3842,1219.0177,18.8116))
{
fuelStationsFuel[9]-=strval(inputtext);
}
if(IsPlayerInRangeOfPoint(playerid, 10, 2113.3835,919.5655,10.8203))
{
fuelStationsFuel[10]-=strval(inputtext);
}
if(IsPlayerInRangeOfPoint(playerid, 10, 2641.0115,1106.6252,10.8203))
{
fuelStationsFuel[11]-=strval(inputtext);
}
if(IsPlayerInRangeOfPoint(playerid, 10, 2146.7964,2747.8115,10.8203))
{
fuelStationsFuel[12]-=strval(inputtext);
}
if(IsPlayerInRangeOfPoint(playerid, 10, 1595.7935,2199.5996,10.8203))
{
fuelStationsFuel[13]-=strval(inputtext);
}
if(IsPlayerInRangeOfPoint(playerid, 10, -1471.1836,1863.7598,32.6328))
{
fuelStationsFuel[14]-=strval(inputtext);
}
if(IsPlayerInRangeOfPoint(playerid, 10, 655.7673,-565.0798,16.3359))
{
fuelStationsFuel[15]-=strval(inputtext);
}
if(IsPlayerInRangeOfPoint(playerid, 10, 1381.8230,459.1453,20.3452))
{
fuelStationsFuel[16]-=strval(inputtext);
}
if(IsPlayerInRangeOfPoint(playerid, 10, 1004.0327,-937.5370,42.3281))
{
Delete3DTextLabel(fuelStationText[0]);
format(refuelstring,500,"{0040FF}[ Бензиностанция ]\n{FF0000}%d/5000 литра\n{C14124}1 литър {FFFFFF}= {00BF00}1 долар\n{F97804}Напиши {FFFF00}/refuel {F97804}за да заредиш",fuelStationsFuel[0]);
fuelStationText[0]=Create3DTextLabel(refuelstring,0xFFFFFFFF,1004.0327,-937.5370,42.3281,40,0,0);
}
if(IsPlayerInRangeOfPoint(playerid, 10, 1942.3719,-1772.8666,13.6406))
{
Delete3DTextLabel(fuelStationText[1]);
format(refuelstring,500,"{0040FF}[ Бензиностанция ]\n{FF0000}%d/5000 литра\n{C14124}1 литър {FFFFFF}= {00BF00}1 долар\n{F97804}Напиши {FFFF00}/refuel {F97804}за да заредиш",fuelStationsFuel[1]);
fuelStationText[1]=Create3DTextLabel(refuelstring,0xFFFFFFFF,1942.3719,-1772.8666,13.6406,40,0,0);
}
if(IsPlayerInRangeOfPoint(playerid, 10, -1606.7223,-2713.3562,48.5335))
{
Delete3DTextLabel(fuelStationText[2]);
format(refuelstring,500,"{0040FF}[ Бензиностанция ]\n{FF0000}%d/5000 литра\n{C14124}1 литър {FFFFFF}= {00BF00}1 долар\n{F97804}Напиши {FFFF00}/refuel {F97804}за да заредиш",fuelStationsFuel[2]);
fuelStationText[2]=Create3DTextLabel(refuelstring,0xFFFFFFFF,-1606.7223,-2713.3562,48.5335,40,0,0);
}
if(IsPlayerInRangeOfPoint(playerid, 10, -2026.7813,156.5509,29.0391))
{
Delete3DTextLabel(fuelStationText[3]);
format(refuelstring,500,"{0040FF}[ Бензиностанция ]\n{FF0000}%d/5000 литра\n{C14124}1 литър {FFFFFF}= {00BF00}1 долар\n{F97804}Напиши {FFFF00}/refuel {F97804}за да заредиш",fuelStationsFuel[3]);
fuelStationText[3]=Create3DTextLabel(refuelstring,0xFFFFFFFF,-2026.7813,156.5509,29.0391,40,0,0);
}
if(IsPlayerInRangeOfPoint(playerid, 10, -2243.8149,-2559.8899,31.9219))
{
Delete3DTextLabel(fuelStationText[4]);
format(refuelstring,500,"{0040FF}[ Бензиностанция ]\n{FF0000}%d/5000 литра\n{C14124}1 литър {FFFFFF}= {00BF00}1 долар\n{F97804}Напиши {FFFF00}/refuel {F97804}за да заредиш",fuelStationsFuel[4]);
fuelStationText[4]=Create3DTextLabel(refuelstring,0xFFFFFFFF,-2243.8149,-2559.8899,31.9219,40,0,0);
}
if(IsPlayerInRangeOfPoint(playerid, 10, -1676.2601,413.5443,7.1797))
{
Delete3DTextLabel(fuelStationText[5]);
format(refuelstring,500,"{0040FF}[ Бензиностанция ]\n{FF0000}%d/5000 литра\n{C14124}1 литър {FFFFFF}= {00BF00}1 долар\n{F97804}Напиши {FFFF00}/refuel {F97804}за да заредиш",fuelStationsFuel[5]);
fuelStationText[5]=Create3DTextLabel(refuelstring,0xFFFFFFFF,-1676.2601,413.5443,7.1797,40,0,0);
}
if(IsPlayerInRangeOfPoint(playerid, 10, 2201.8296,2475.1350,10.8203))
{
Delete3DTextLabel(fuelStationText[6]);
format(refuelstring,500,"{0040FF}[ Бензиностанция ]\n{FF0000}%d/5000 литра\n{C14124}1 литър {FFFFFF}= {00BF00}1 долар\n{F97804}Напиши {FFFF00}/refuel {F97804}за да заредиш",fuelStationsFuel[6]);
fuelStationText[6]=Create3DTextLabel(refuelstring,0xFFFFFFFF,2201.8296,2475.1350,10.8203,40,0,0);
}
if(IsPlayerInRangeOfPoint(playerid, 10, 615.3391,1690.0454,6.9922))
{
Delete3DTextLabel(fuelStationText[7]);
format(refuelstring,500,"{0040FF}[ Бензиностанция ]\n{FF0000}%d/5000 литра\n{C14124}1 литър {FFFFFF}= {00BF00}1 долар\n{F97804}Напиши {FFFF00}/refuel {F97804}за да заредиш",fuelStationsFuel[7]);
fuelStationText[7]=Create3DTextLabel(refuelstring,0xFFFFFFFF,615.3391,1690.0454,6.9922,40,0,0);
}
if(IsPlayerInRangeOfPoint(playerid, 10, -1328.2731,2677.5278,50.0625))
{
Delete3DTextLabel(fuelStationText[8]);
format(refuelstring,500,"{0040FF}[ Бензиностанция ]\n{FF0000}%d/5000 литра\n{C14124}1 литър {FFFFFF}= {00BF00}1 долар\n{F97804}Напиши {FFFF00}/refuel {F97804}за да заредиш",fuelStationsFuel[8]);
fuelStationText[8]=Create3DTextLabel(refuelstring,0xFFFFFFFF,-1328.2731,2677.5278,50.0625,40,0,0);
}
if(IsPlayerInRangeOfPoint(playerid, 10, 70.3842,1219.0177,18.8116))
{
Delete3DTextLabel(fuelStationText[9]);
format(refuelstring,500,"{0040FF}[ Бензиностанция ]\n{FF0000}%d/5000 литра\n{C14124}1 литър {FFFFFF}= {00BF00}1 долар\n{F97804}Напиши {FFFF00}/refuel {F97804}за да заредиш",fuelStationsFuel[9]);
fuelStationText[9]=Create3DTextLabel(refuelstring,0xFFFFFFFF,70.3842,1219.0177,18.8116,40,0,0);
}
if(IsPlayerInRangeOfPoint(playerid, 10, 2113.3835,919.5655,10.8203))
{
Delete3DTextLabel(fuelStationText[10]);
format(refuelstring,500,"{0040FF}[ Бензиностанция ]\n{FF0000}%d/5000 литра\n{C14124}1 литър {FFFFFF}= {00BF00}1 долар\n{F97804}Напиши {FFFF00}/refuel {F97804}за да заредиш",fuelStationsFuel[10]);
fuelStationText[10]=Create3DTextLabel(refuelstring,0xFFFFFFFF,2113.3835,919.5655,10.8203,40,0,0);
}
if(IsPlayerInRangeOfPoint(playerid, 10, 2641.0115,1106.6252,10.8203))
{
Delete3DTextLabel(fuelStationText[11]);
format(refuelstring,500,"{0040FF}[ Бензиностанция ]\n{FF0000}%d/5000 литра\n{C14124}1 литър {FFFFFF}= {00BF00}1 долар\n{F97804}Напиши {FFFF00}/refuel {F97804}за да заредиш",fuelStationsFuel[11]);
fuelStationText[11]=Create3DTextLabel(refuelstring,0xFFFFFFFF,2641.0115,1106.6252,10.8203,40,0,0);
}
if(IsPlayerInRangeOfPoint(playerid, 10, 2146.7964,2747.8115,10.8203))
{
Delete3DTextLabel(fuelStationText[12]);
format(refuelstring,500,"{0040FF}[ Бензиностанция ]\n{FF0000}%d/5000 литра\n{C14124}1 литър {FFFFFF}= {00BF00}1 долар\n{F97804}Напиши {FFFF00}/refuel {F97804}за да заредиш",fuelStationsFuel[12]);
fuelStationText[12]=Create3DTextLabel(refuelstring,0xFFFFFFFF,2146.7964,2747.8115,10.8203,40,0,0);
}
if(IsPlayerInRangeOfPoint(playerid, 10, 1595.7935,2199.5996,10.8203))
{
Delete3DTextLabel(fuelStationText[13]);
format(refuelstring,500,"{0040FF}[ Бензиностанция ]\n{FF0000}%d/5000 литра\n{C14124}1 литър {FFFFFF}= {00BF00}1 долар\n{F97804}Напиши {FFFF00}/refuel {F97804}за да заредиш",fuelStationsFuel[13]);
fuelStationText[13]=Create3DTextLabel(refuelstring,0xFFFFFFFF,1595.7935,2199.5996,10.8203,40,0,0);
}
if(IsPlayerInRangeOfPoint(playerid, 10, -1471.1836,1863.7598,32.6328))
{
Delete3DTextLabel(fuelStationText[14]);
format(refuelstring,500,"{0040FF}[ Бензиностанция ]\n{FF0000}%d/5000 литра\n{C14124}1 литър {FFFFFF}= {00BF00}1 долар\n{F97804}Напиши {FFFF00}/refuel {F97804}за да заредиш",fuelStationsFuel[14]);
fuelStationText[14]=Create3DTextLabel(refuelstring,0xFFFFFFFF,-1471.1836,1863.7598,32.6328,40,0,0);
}
if(IsPlayerInRangeOfPoint(playerid, 10, 655.7673,-565.0798,16.3359))
{
Delete3DTextLabel(fuelStationText[15]);
format(refuelstring,500,"{0040FF}[ Бензиностанция ]\n{FF0000}%d/5000 литра\n{C14124}1 литър {FFFFFF}= {00BF00}1 долар\n{F97804}Напиши {FFFF00}/refuel {F97804}за да заредиш",fuelStationsFuel[15]);
fuelStationText[15]=Create3DTextLabel(refuelstring,0xFFFFFFFF,655.7673,-565.0798,16.3359,40,0,0);
}
if(IsPlayerInRangeOfPoint(playerid, 10, 1381.8230,459.1453,20.3452))
{
Delete3DTextLabel(fuelStationText[16]);
format(refuelstring,500,"{0040FF}[ Бензиностанция ]\n{FF0000}%d/5000 литра\n{C14124}1 литър {FFFFFF}= {00BF00}1 долар\n{F97804}Напиши {FFFF00}/refuel {F97804}за да заредиш",fuelStationsFuel[16]);
fuelStationText[16]=Create3DTextLabel(refuelstring,0xFFFFFFFF,1381.8230,459.1453,20.3452,40,0,0);
}
}
}
if(dialogid==18)
{
new refuelstring[500];
if(strval(inputtext)<1)
{
format(string256,256,"Не можете да заредите 0 литра във вашето превозно средство.",strval(inputtext));
SendClientMessage(playerid,0xB4B5B7FF,string256);
return 0;
}
if(vehfuel[GetPlayerVehicleID(playerid)]==100)
{
SendClientMessage(playerid,0xB4B5B7FF,"Вашето превозно средство има 100 литра бензин.");
return 0;
}
if(strval(inputtext)>100-vehfuel[GetPlayerVehicleID(playerid)])
{
format(string256,256,"Можете да заредите до %d литра във вашето превозно средство.",100-vehfuel[GetPlayerVehicleID(playerid)]);
SendClientMessage(playerid,0xB4B5B7FF,string256);
return 0;
}
if(IsPlayerInRangeOfPoint(playerid, 10, 1004.0327,-937.5370,42.3281) && fuelStationsFuel[0]<strval(inputtext)) return SendClientMessage(playerid,0xB4B5B7FF,"В бензиностанцията няма толкова бензин.");
if(IsPlayerInRangeOfPoint(playerid, 10, 1942.3719,-1772.8666,13.6406) && fuelStationsFuel[1]<strval(inputtext)) return SendClientMessage(playerid,0xB4B5B7FF,"В бензиностанцията няма толкова бензин.");
if(IsPlayerInRangeOfPoint(playerid, 10, -1606.7223,-2713.3562,48.5335) && fuelStationsFuel[2]<strval(inputtext)) return SendClientMessage(playerid,0xB4B5B7FF,"В бензиностанцията няма толкова бензин.");
if(IsPlayerInRangeOfPoint(playerid, 10, -2026.7813,156.5509,29.0391) && fuelStationsFuel[3]<strval(inputtext)) return SendClientMessage(playerid,0xB4B5B7FF,"В бензиностанцията няма толкова бензин.");
if(IsPlayerInRangeOfPoint(playerid, 10, -2243.8149,-2559.8899,31.9219) && fuelStationsFuel[4]<strval(inputtext)) return SendClientMessage(playerid,0xB4B5B7FF,"В бензиностанцията няма толкова бензин.");
if(IsPlayerInRangeOfPoint(playerid, 10, -1676.2601,413.5443,7.1797) && fuelStationsFuel[5]<strval(inputtext)) return SendClientMessage(playerid,0xB4B5B7FF,"В бензиностанцията няма толкова бензин.");
if(IsPlayerInRangeOfPoint(playerid, 10, 2201.8296,2475.1350,10.8203) && fuelStationsFuel[6]<strval(inputtext)) return SendClientMessage(playerid,0xB4B5B7FF,"В бензиностанцията няма толкова бензин.");
if(IsPlayerInRangeOfPoint(playerid, 10, 615.3391,1690.0454,6.9922) && fuelStationsFuel[7]<strval(inputtext)) return SendClientMessage(playerid,0xB4B5B7FF,"В бензиностанцията няма толкова бензин.");
if(IsPlayerInRangeOfPoint(playerid, 10, -1328.2731,2677.5278,50.0625) && fuelStationsFuel[8]<strval(inputtext)) return SendClientMessage(playerid,0xB4B5B7FF,"В бензиностанцията няма толкова бензин.");
if(IsPlayerInRangeOfPoint(playerid, 10, 70.3842,1219.0177,18.8116) && fuelStationsFuel[9]<strval(inputtext)) return SendClientMessage(playerid,0xB4B5B7FF,"В бензиностанцията няма толкова бензин.");
if(IsPlayerInRangeOfPoint(playerid, 10, 2113.3835,919.5655,10.8203) && fuelStationsFuel[10]<strval(inputtext)) return SendClientMessage(playerid,0xB4B5B7FF,"В бензиностанцията няма толкова бензин.");
if(IsPlayerInRangeOfPoint(playerid, 10, 2641.0115,1106.6252,10.8203) && fuelStationsFuel[11]<strval(inputtext)) return SendClientMessage(playerid,0xB4B5B7FF,"В бензиностанцията няма толкова бензин.");
if(IsPlayerInRangeOfPoint(playerid, 10, 2146.7964,2747.8115,10.8203) && fuelStationsFuel[12]<strval(inputtext)) return SendClientMessage(playerid,0xB4B5B7FF,"В бензиностанцията няма толкова бензин.");
if(IsPlayerInRangeOfPoint(playerid, 10, 1595.7935,2199.5996,10.8203) && fuelStationsFuel[13]<strval(inputtext)) return SendClientMessage(playerid,0xB4B5B7FF,"В бензиностанцията няма толкова бензин.");
if(IsPlayerInRangeOfPoint(playerid, 10, -1471.1836,1863.7598,32.6328) && fuelStationsFuel[14]<strval(inputtext)) return SendClientMessage(playerid,0xB4B5B7FF,"В бензиностанцията няма толкова бензин.");
if(IsPlayerInRangeOfPoint(playerid, 10, 655.7673,-565.0798,16.3359) && fuelStationsFuel[15]<strval(inputtext)) return SendClientMessage(playerid,0xB4B5B7FF,"В бензиностанцията няма толкова бензин.");
if(IsPlayerInRangeOfPoint(playerid, 10, 1381.8230,459.1453,20.3452) && fuelStationsFuel[16]<strval(inputtext)) return SendClientMessage(playerid,0xB4B5B7FF,"В бензиностанцията няма толкова бензин.");
if(strval(inputtext)<=100-vehfuel[GetPlayerVehicleID(playerid)])
{
format(string256,256,"Вие заредихте успешно {FFFF00}%d{FFFFFF} литра във вашето превозно средство.",strval(inputtext));
SendClientMessage(playerid,0xFFFFFFFFF,string256);
vehfuel[GetPlayerVehicleID(playerid)]+=strval(inputtext);
GivePlayerCash(playerid,-strval(inputtext));
fuelStationsFuel[FuelStationClose(playerid)]-=strval(inputtext);
format(refuelstring,500,"{0040FF}[ Бензиностанция ]\n{FF0000}%d/5000 литра\n{C14124}1 литър {FFFFFF}= {00BF00}1 долар\n{F97804}Напиши {FFFF00}/refuel {F97804}за да заредиш",fuelStationsFuel[FuelStationClose(playerid)]);
Update3DTextLabelText(fuelStationText[FuelStationClose(playerid)], 0xFFFFFFFF, refuelstring);
}
}
if(dialogid == 11)
{
//if(respawnVehsVoteTimer==0)
//{
if(response)
{
PlayerInfo[playerid][pYes]=1;
voteResultsYes+=1;
}
if(!response)
{
PlayerInfo[playerid][pNo]=1;
voteResultsNo+=1;
}
//}
{
if(response)
{
PlayerInfo[playerid][pYes]=1;
respawnVehsYes+=1;
if(respawnVehsTimer>0)
{
SendClientMessage(playerid,0xFFFFFFFF,"VOTE RESPAWN CARS: Ти гласува с ДА за да бъдат RESPAWN-нати превозните средства!");
}
}
if(!response)
{
PlayerInfo[playerid][pNo]=1;
respawnVehsNo+=1;
if(respawnVehsTimer>0)
{
SendClientMessage(playerid,0xFFFFFFFF,"VOTE RESPAWN CARS: Ти гласува с НЕ за да бъдат НЕ RESPAWN-нати превозните средства!");
}
}
}
}
if(dialogid==44)
{
//        new refuelstring[500];
if(strval(inputtext)<1)
{
format(string256,256,"Не можете да заредите 0 литра във вашата цистерна.",strval(inputtext));
SendClientMessage(playerid,0xB4B5B7FF,string256);
return 0;
}
if(vehfuel2[GetVehicleTrailer(GetPlayerVehicleID(playerid))]==10000)
{
SendClientMessage(playerid,0xB4B5B7FF,"Вашата цистерна е пълна.");
return 0;
}
if(strval(inputtext)>10000-vehfuel2[GetVehicleTrailer(GetPlayerVehicleID(playerid))])
{
format(string256,256,"Можете да заредите до %d литра във вашата цистерна.",10000-vehfuel2[GetVehicleTrailer(GetPlayerVehicleID(playerid))]);
SendClientMessage(playerid,0xB4B5B7FF,string256);
return 0;
}
if(strval(inputtext)<=10000-vehfuel2[GetVehicleTrailer(GetPlayerVehicleID(playerid))])
{
//tuk
refuelcisterna[playerid]=strval(inputtext);
PlayerInfo[playerid][pRefuelTankIFC]=4;
TogglePlayerControllable(playerid, 0);
GameTextForPlayer(playerid, "~g~PLEASE WAIT", 2000, 3);
SendClientMessage(playerid,0xA4FFA4FF,"Intense Fuel Company: Моля, изчакайте, докато заредим цистерната!");
}
}
if(dialogid==DIALOG_CLOTHES_2)
{
if(response)
{
new string2230[512];
new string2230result[1500];
format(string2230,512,"{FFFFFF}\n");
strcat(string2230result, string2230);
ShowPlayerDialog(playerid,DIALOG_CLOTHES_3,DIALOG_STYLE_MSGBOX,"Clothes:",string2230result,"Избери","Излез");
}
}
if(dialogid==DIALOG_CLOTHES)
{
if(response)
{
if(PlayerInfo[playerid][pClothes][listitem]==0)
{
//ShowPlayerDialog(playerid,closeddialog,DIALOG_STYLE_MSGBOX,"{FF0000}АДМИН КОМАНДИ:",string2230result,"Изход","");
ShowPlayerDialog(playerid, DIALOG_CLOTHES_2, DIALOG_STYLE_MSGBOX, "Clothes:" ,"Този слот е свободен", "Напред", "Излез");
selectedTmpClothID[playerid]=listitem;
}
}
}
if(dialogid==42)
{
if(!response)
{
ShowPlayerDialog(playerid, 41, DIALOG_STYLE_LIST, "House Vehicles:","От Level 5 нагоре - {00BF00}$30,000\nОт Level 7 нагоре - {00BF00}$60,000\nОт Level 10 нагоре - {00BF00}$100,000\nОт Level 15 нагоре - {00BF00}$160, 000\nОт Level 17 нагоре - {00BF00}$200,000\nОт Level 20 нагоре - {00BF00}$250,000", "Избери", "Излез");
}
if(response)
{
switch(listitem)
{
case 0:
{if(PlayerInfo[playerid][pCash]<30000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<5) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-30000);
HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!");
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=481;
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
dini_IntSet(house, "hcV",HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]);
dini_FloatSet(house, "hcZ",HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
case 1:
{if(PlayerInfo[playerid][pCash]<30000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<5) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-30000);
HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!");
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=462;
}
case 2:
{if(PlayerInfo[playerid][pCash]<30000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<5) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-30000);HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!");
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=464;
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
dini_IntSet(house, "hcV",HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]);
dini_FloatSet(house, "hcZ",HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
case 3:
{if(PlayerInfo[playerid][pCash]<30000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<5) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-30000);HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!");
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=543;
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
dini_IntSet(house, "hcV",HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]);
dini_FloatSet(house, "hcZ",HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
case 4:
{if(PlayerInfo[playerid][pCash]<30000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<5) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-30000);HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!");
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=478;
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
dini_IntSet(house, "hcV",HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]);
dini_FloatSet(house, "hcZ",HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
case 5:
{if(PlayerInfo[playerid][pCash]<30000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<5) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-30000);HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!");
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=566;
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
dini_IntSet(house, "hcV",HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]);
dini_FloatSet(house, "hcZ",HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
case 6:
{if(PlayerInfo[playerid][pCash]<30000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<5) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-30000);HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!");
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=500;
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
dini_IntSet(house, "hcV",HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]);
dini_FloatSet(house, "hcZ",HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
case 7:
{if(PlayerInfo[playerid][pCash]<30000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<5) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-30000);HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!");
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=401;
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
dini_IntSet(house, "hcV",HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]);
dini_FloatSet(house, "hcZ",HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
case 8:
{if(PlayerInfo[playerid][pCash]<30000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<5) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-30000);HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!");
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=526;
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
dini_IntSet(house, "hcV",HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]);
dini_FloatSet(house, "hcZ",HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
case 9:
{if(PlayerInfo[playerid][pCash]<30000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<5) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-30000);HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!");
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=546;
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
dini_IntSet(house, "hcV",HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]);
dini_FloatSet(house, "hcZ",HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
case 10:
{if(PlayerInfo[playerid][pCash]<30000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<5) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-30000);HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!");
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=436;
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
dini_IntSet(house, "hcV",HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]);
dini_FloatSet(house, "hcZ",HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
case 11:
{if(PlayerInfo[playerid][pCash]<30000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<5) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-30000);HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!");
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=549;
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
dini_IntSet(house, "hcV",HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]);
dini_FloatSet(house, "hcZ",HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
case 12:
{if(PlayerInfo[playerid][pCash]<30000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<5) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-30000);HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!");
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=418;
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
dini_IntSet(house, "hcV",HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]);
dini_FloatSet(house, "hcZ",HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
}
}
}
//
if(dialogid==45)
{
if(!response)
{
ShowPlayerDialog(playerid, 41, DIALOG_STYLE_LIST, "House Vehicles:","От Level 5 нагоре - {00BF00}$30,000\nОт Level 7 нагоре - {00BF00}$60,000\nОт Level 10 нагоре - {00BF00}$100,000\nОт Level 15 нагоре - {00BF00}$160, 000\nОт Level 17 нагоре - {00BF00}$200,000\nОт Level 20 нагоре - {00BF00}$250,000", "Избери", "Излез");
}
if(response)
{
switch(listitem)
{
case 0:
{if(PlayerInfo[playerid][pCash]<60000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<7) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-60000);
HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!");
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=471;
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
dini_IntSet(house, "hcV",HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]);
dini_FloatSet(house, "hcZ",HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
case 1:
{if(PlayerInfo[playerid][pCash]<60000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<7) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-60000);
HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!");
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=600;
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
dini_IntSet(house, "hcV",HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]);
dini_FloatSet(house, "hcZ",HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
case 2:
{if(PlayerInfo[playerid][pCash]<60000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<7) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-60000);HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!"); //
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=422;
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
dini_IntSet(house, "hcV",HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]);
dini_FloatSet(house, "hcZ",HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
case 3:
{if(PlayerInfo[playerid][pCash]<60000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<7) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-60000);HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!"); // HouseInfo[PlayerInfo[playerid][pHouseO]][hcY]=HouseInfo[PlayerInfo[playerid][pHouseO]][hY]; HouseInfo[PlayerInfo[playerid][pHouseO]][hcZ]=HouseInfo[PlayerInfo[playerid][pHouseO]][hZ];  HouseInfo[PlayerInfo[playerid][pHouseO]][hcX]+=5;
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=413;
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
dini_IntSet(house, "hcV",HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]);
dini_FloatSet(house, "hcZ",HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
case 4:
{if(PlayerInfo[playerid][pCash]<60000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<7) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-60000);HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!"); // HouseInfo[PlayerInfo[playerid][pHouseO]][hcY]=HouseInfo[PlayerInfo[playerid][pHouseO]][hY]; HouseInfo[PlayerInfo[playerid][pHouseO]][hcZ]=HouseInfo[PlayerInfo[playerid][pHouseO]][hZ];  HouseInfo[PlayerInfo[playerid][pHouseO]][hcX]+=5;
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=576;
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
dini_IntSet(house, "hcV",HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]);
dini_FloatSet(house, "hcZ",HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
case 5:
{if(PlayerInfo[playerid][pCash]<60000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<7) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-60000);HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!"); // HouseInfo[PlayerInfo[playerid][pHouseO]][hcY]=HouseInfo[PlayerInfo[playerid][pHouseO]][hY]; HouseInfo[PlayerInfo[playerid][pHouseO]][hcZ]=HouseInfo[PlayerInfo[playerid][pHouseO]][hZ];  HouseInfo[PlayerInfo[playerid][pHouseO]][hcX]+=5;
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=400;
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
dini_IntSet(house, "hcV",HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]);
dini_FloatSet(house, "hcZ",HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
case 6:
{if(PlayerInfo[playerid][pCash]<60000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<7) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-60000);HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!"); // HouseInfo[PlayerInfo[playerid][pHouseO]][hcY]=HouseInfo[PlayerInfo[playerid][pHouseO]][hY]; HouseInfo[PlayerInfo[playerid][pHouseO]][hcZ]=HouseInfo[PlayerInfo[playerid][pHouseO]][hZ];  HouseInfo[PlayerInfo[playerid][pHouseO]][hcX]+=5;
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=445;
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
dini_IntSet(house, "hcV",HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]);
dini_FloatSet(house, "hcZ",HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
case 7:
{if(PlayerInfo[playerid][pCash]<60000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<7) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-60000);HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!"); // HouseInfo[PlayerInfo[playerid][pHouseO]][hcY]=HouseInfo[PlayerInfo[playerid][pHouseO]][hY]; HouseInfo[PlayerInfo[playerid][pHouseO]][hcZ]=HouseInfo[PlayerInfo[playerid][pHouseO]][hZ];  HouseInfo[PlayerInfo[playerid][pHouseO]][hcX]+=5;
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=455;
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
dini_IntSet(house, "hcV",HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]);
dini_FloatSet(house, "hcZ",HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
case 8:
{if(PlayerInfo[playerid][pCash]<60000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<7) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-60000);HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!"); // HouseInfo[PlayerInfo[playerid][pHouseO]][hcY]=HouseInfo[PlayerInfo[playerid][pHouseO]][hY]; HouseInfo[PlayerInfo[playerid][pHouseO]][hcZ]=HouseInfo[PlayerInfo[playerid][pHouseO]][hZ];  HouseInfo[PlayerInfo[playerid][pHouseO]][hcX]+=5;
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=518;
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
dini_IntSet(house, "hcV",HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]);
dini_FloatSet(house, "hcZ",HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
case 9:
{if(PlayerInfo[playerid][pCash]<60000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<7) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-60000);HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!"); // HouseInfo[PlayerInfo[playerid][pHouseO]][hcY]=HouseInfo[PlayerInfo[playerid][pHouseO]][hY]; HouseInfo[PlayerInfo[playerid][pHouseO]][hcZ]=HouseInfo[PlayerInfo[playerid][pHouseO]][hZ];  HouseInfo[PlayerInfo[playerid][pHouseO]][hcX]+=5;
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=527;
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
dini_IntSet(house, "hcV",HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]);
dini_FloatSet(house, "hcZ",HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
case 10:
{if(PlayerInfo[playerid][pCash]<60000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<7) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-60000);HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!"); // HouseInfo[PlayerInfo[playerid][pHouseO]][hcY]=HouseInfo[PlayerInfo[playerid][pHouseO]][hY]; HouseInfo[PlayerInfo[playerid][pHouseO]][hcZ]=HouseInfo[PlayerInfo[playerid][pHouseO]][hZ];  HouseInfo[PlayerInfo[playerid][pHouseO]][hcX]+=5;
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=585;
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
dini_IntSet(house, "hcV",HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]);
dini_FloatSet(house, "hcZ",HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
case 11:
{if(PlayerInfo[playerid][pCash]<60000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<7) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-60000);HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!"); // HouseInfo[PlayerInfo[playerid][pHouseO]][hcY]=HouseInfo[PlayerInfo[playerid][pHouseO]][hY]; HouseInfo[PlayerInfo[playerid][pHouseO]][hcZ]=HouseInfo[PlayerInfo[playerid][pHouseO]][hZ];  HouseInfo[PlayerInfo[playerid][pHouseO]][hcX]+=5;
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=419;
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
dini_IntSet(house, "hcV",HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]);
dini_FloatSet(house, "hcZ",HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
case 12:
{if(PlayerInfo[playerid][pCash]<60000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<7) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-60000);HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!"); // HouseInfo[PlayerInfo[playerid][pHouseO]][hcY]=HouseInfo[PlayerInfo[playerid][pHouseO]][hY]; HouseInfo[PlayerInfo[playerid][pHouseO]][hcZ]=HouseInfo[PlayerInfo[playerid][pHouseO]][hZ];  HouseInfo[PlayerInfo[playerid][pHouseO]][hcX]+=5;
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=466;
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
dini_IntSet(house, "hcV",HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]);
dini_FloatSet(house, "hcZ",HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
case 13:
{if(PlayerInfo[playerid][pCash]<60000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<7) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-60000);HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!"); // HouseInfo[PlayerInfo[playerid][pHouseO]][hcY]=HouseInfo[PlayerInfo[playerid][pHouseO]][hY]; HouseInfo[PlayerInfo[playerid][pHouseO]][hcZ]=HouseInfo[PlayerInfo[playerid][pHouseO]][hZ];  HouseInfo[PlayerInfo[playerid][pHouseO]][hcX]+=5;
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=410;
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
dini_IntSet(house, "hcV",HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]);
dini_FloatSet(house, "hcZ",HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
case 14:
{if(PlayerInfo[playerid][pCash]<60000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<7) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-60000);HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!"); // HouseInfo[PlayerInfo[playerid][pHouseO]][hcY]=HouseInfo[PlayerInfo[playerid][pHouseO]][hY]; HouseInfo[PlayerInfo[playerid][pHouseO]][hcZ]=HouseInfo[PlayerInfo[playerid][pHouseO]][hZ];  HouseInfo[PlayerInfo[playerid][pHouseO]][hcX]+=5;
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=516;
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
dini_IntSet(house, "hcV",HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]);
dini_FloatSet(house, "hcY",HouseInfo[PlayerInfo[playerid][pHouseO]][hY]+5);
dini_FloatSet(house, "hcZ",HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
case 15:
{if(PlayerInfo[playerid][pCash]<60000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<7) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-60000);HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!"); // HouseInfo[PlayerInfo[playerid][pHouseO]][hcY]=HouseInfo[PlayerInfo[playerid][pHouseO]][hY]; HouseInfo[PlayerInfo[playerid][pHouseO]][hcZ]=HouseInfo[PlayerInfo[playerid][pHouseO]][hZ];  HouseInfo[PlayerInfo[playerid][pHouseO]][hcX]+=5;
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=547;
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
dini_IntSet(house, "hcV",HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]);
dini_FloatSet(house, "hcY",HouseInfo[PlayerInfo[playerid][pHouseO]][hY]+5);
dini_FloatSet(house, "hcZ",HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
case 16:
{if(PlayerInfo[playerid][pCash]<60000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<7) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-60000);HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!"); /// HouseInfo[PlayerInfo[playerid][pHouseO]][hcY]=HouseInfo[PlayerInfo[playerid][pHouseO]][hY]; HouseInfo[PlayerInfo[playerid][pHouseO]][hcZ]=HouseInfo[PlayerInfo[playerid][pHouseO]][hZ];  HouseInfo[PlayerInfo[playerid][pHouseO]][hcX]+=5;
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=529;
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
dini_IntSet(house, "hcV",HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]);
dini_FloatSet(house, "hcY",HouseInfo[PlayerInfo[playerid][pHouseO]][hY]+5);
dini_FloatSet(house, "hcZ",HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
case 17:
{if(PlayerInfo[playerid][pCash]<60000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<7) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-60000);HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!"); // HouseInfo[PlayerInfo[playerid][pHouseO]][hcY]=HouseInfo[PlayerInfo[playerid][pHouseO]][hY]; HouseInfo[PlayerInfo[playerid][pHouseO]][hcZ]=HouseInfo[PlayerInfo[playerid][pHouseO]][hZ];  HouseInfo[PlayerInfo[playerid][pHouseO]][hcX]+=5;
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=404;
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
dini_IntSet(house, "hcV",HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]);
dini_FloatSet(house, "hcY",HouseInfo[PlayerInfo[playerid][pHouseO]][hY]+5);
dini_FloatSet(house, "hcZ",HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
case 18:
{if(PlayerInfo[playerid][pCash]<60000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<7) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-60000);HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!"); // HouseInfo[PlayerInfo[playerid][pHouseO]][hcY]=HouseInfo[PlayerInfo[playerid][pHouseO]][hY]; HouseInfo[PlayerInfo[playerid][pHouseO]][hcZ]=HouseInfo[PlayerInfo[playerid][pHouseO]][hZ];  HouseInfo[PlayerInfo[playerid][pHouseO]][hcX]+=5;
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=479;
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
dini_IntSet(house, "hcV",HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]);
dini_FloatSet(house, "hcY",HouseInfo[PlayerInfo[playerid][pHouseO]][hY]+5);
dini_FloatSet(house, "hcZ",HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
}
}
}
//
//
if(dialogid==46)
{
if(!response)
{
ShowPlayerDialog(playerid, 41, DIALOG_STYLE_LIST, "House Vehicles:","От Level 5 нагоре - {00BF00}$30,000\nОт Level 7 нагоре - {00BF00}$60,000\nОт Level 10 нагоре - {00BF00}$100,000\nОт Level 15 нагоре - {00BF00}$160, 000\nОт Level 17 нагоре - {00BF00}$200,000\nОт Level 20 нагоре - {00BF00}$250,000", "Избери", "Излез");
}
if(response)
{
switch(listitem)
{
case 0:
{if(PlayerInfo[playerid][pCash]<100000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<10) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-100000);
HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!"); // HouseInfo[PlayerInfo[playerid][pHouseO]][hcY]=HouseInfo[PlayerInfo[playerid][pHouseO]][hY]; HouseInfo[PlayerInfo[playerid][pHouseO]][hcZ]=HouseInfo[PlayerInfo[playerid][pHouseO]][hZ];  HouseInfo[PlayerInfo[playerid][pHouseO]][hcX]+=5;
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=510;
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
dini_IntSet(house, "hcV",HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]);
dini_FloatSet(house, "hcY",HouseInfo[PlayerInfo[playerid][pHouseO]][hY]+5);
dini_FloatSet(house, "hcZ",HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
case 1:
{if(PlayerInfo[playerid][pCash]<100000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<10) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-100000);
HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!"); // HouseInfo[PlayerInfo[playerid][pHouseO]][hcY]=HouseInfo[PlayerInfo[playerid][pHouseO]][hY]; HouseInfo[PlayerInfo[playerid][pHouseO]][hcZ]=HouseInfo[PlayerInfo[playerid][pHouseO]][hZ];  HouseInfo[PlayerInfo[playerid][pHouseO]][hcX]+=5;
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=463;
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
dini_IntSet(house, "hcV",HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]);
dini_FloatSet(house, "hcY",HouseInfo[PlayerInfo[playerid][pHouseO]][hY]+5);
dini_FloatSet(house, "hcZ",HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
case 2:
{if(PlayerInfo[playerid][pCash]<100000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<10) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-100000);HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!"); // HouseInfo[PlayerInfo[playerid][pHouseO]][hcY]=HouseInfo[PlayerInfo[playerid][pHouseO]][hY]; HouseInfo[PlayerInfo[playerid][pHouseO]][hcZ]=HouseInfo[PlayerInfo[playerid][pHouseO]][hZ];  HouseInfo[PlayerInfo[playerid][pHouseO]][hcX]+=5;
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=439;
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
dini_IntSet(house, "hcV",HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]);
dini_FloatSet(house, "hcY",HouseInfo[PlayerInfo[playerid][pHouseO]][hY]+5);
dini_FloatSet(house, "hcZ",HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
case 3:
{if(PlayerInfo[playerid][pCash]<100000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<10) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-100000);HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!"); // HouseInfo[PlayerInfo[playerid][pHouseO]][hcY]=HouseInfo[PlayerInfo[playerid][pHouseO]][hY]; HouseInfo[PlayerInfo[playerid][pHouseO]][hcZ]=HouseInfo[PlayerInfo[playerid][pHouseO]][hZ];  HouseInfo[PlayerInfo[playerid][pHouseO]][hcX]+=5;
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=482;
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
dini_IntSet(house, "hcV",HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]);
dini_FloatSet(house, "hcY",HouseInfo[PlayerInfo[playerid][pHouseO]][hY]+5);
dini_FloatSet(house, "hcZ",HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
case 4:
{if(PlayerInfo[playerid][pCash]<100000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<10) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-100000);HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!"); // HouseInfo[PlayerInfo[playerid][pHouseO]][hcY]=HouseInfo[PlayerInfo[playerid][pHouseO]][hY]; HouseInfo[PlayerInfo[playerid][pHouseO]][hcZ]=HouseInfo[PlayerInfo[playerid][pHouseO]][hZ];  HouseInfo[PlayerInfo[playerid][pHouseO]][hcX]+=5;
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=554;
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
dini_IntSet(house, "hcV",HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]);
dini_FloatSet(house, "hcY",HouseInfo[PlayerInfo[playerid][pHouseO]][hY]+5);
dini_FloatSet(house, "hcZ",HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
case 5:
{if(PlayerInfo[playerid][pCash]<100000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<10) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-100000);HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!"); // HouseInfo[PlayerInfo[playerid][pHouseO]][hcY]=HouseInfo[PlayerInfo[playerid][pHouseO]][hY]; HouseInfo[PlayerInfo[playerid][pHouseO]][hcZ]=HouseInfo[PlayerInfo[playerid][pHouseO]][hZ];  HouseInfo[PlayerInfo[playerid][pHouseO]][hcX]+=5;
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=536;
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
dini_IntSet(house, "hcV",HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]);
dini_FloatSet(house, "hcY",HouseInfo[PlayerInfo[playerid][pHouseO]][hY]+5);
dini_FloatSet(house, "hcZ",HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
case 6:
{if(PlayerInfo[playerid][pCash]<100000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<10) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-100000);HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!"); // HouseInfo[PlayerInfo[playerid][pHouseO]][hcY]=HouseInfo[PlayerInfo[playerid][pHouseO]][hY]; HouseInfo[PlayerInfo[playerid][pHouseO]][hcZ]=HouseInfo[PlayerInfo[playerid][pHouseO]][hZ];  HouseInfo[PlayerInfo[playerid][pHouseO]][hcX]+=5;
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=412;
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
dini_IntSet(house, "hcV",HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]);
dini_FloatSet(house, "hcY",HouseInfo[PlayerInfo[playerid][pHouseO]][hY]+5);
dini_FloatSet(house, "hcZ",HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
case 7:
{if(PlayerInfo[playerid][pCash]<100000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<10) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-100000);HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!"); // HouseInfo[PlayerInfo[playerid][pHouseO]][hcY]=HouseInfo[PlayerInfo[playerid][pHouseO]][hY]; HouseInfo[PlayerInfo[playerid][pHouseO]][hcZ]=HouseInfo[PlayerInfo[playerid][pHouseO]][hZ];  HouseInfo[PlayerInfo[playerid][pHouseO]][hcX]+=5;
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=424;
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
dini_IntSet(house, "hcV",HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]);
dini_FloatSet(house, "hcY",HouseInfo[PlayerInfo[playerid][pHouseO]][hY]+5);
dini_FloatSet(house, "hcZ",HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
case 8:
{if(PlayerInfo[playerid][pCash]<100000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<10) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-100000);HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!"); // HouseInfo[PlayerInfo[playerid][pHouseO]][hcY]=HouseInfo[PlayerInfo[playerid][pHouseO]][hY]; HouseInfo[PlayerInfo[playerid][pHouseO]][hcZ]=HouseInfo[PlayerInfo[playerid][pHouseO]][hZ];  HouseInfo[PlayerInfo[playerid][pHouseO]][hcX]+=5;
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=489;
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
dini_IntSet(house, "hcV",HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]);
dini_FloatSet(house, "hcY",HouseInfo[PlayerInfo[playerid][pHouseO]][hY]+5);
dini_FloatSet(house, "hcZ",HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
case 9:
{if(PlayerInfo[playerid][pCash]<100000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<10) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-100000);HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!"); // HouseInfo[PlayerInfo[playerid][pHouseO]][hcY]=HouseInfo[PlayerInfo[playerid][pHouseO]][hY]; HouseInfo[PlayerInfo[playerid][pHouseO]][hcZ]=HouseInfo[PlayerInfo[playerid][pHouseO]][hZ];  HouseInfo[PlayerInfo[playerid][pHouseO]][hcX]+=5;
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=504;
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
dini_IntSet(house, "hcV",HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]);
dini_FloatSet(house, "hcY",HouseInfo[PlayerInfo[playerid][pHouseO]][hY]+5);
dini_FloatSet(house, "hcZ",HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
case 10:
{if(PlayerInfo[playerid][pCash]<100000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<10) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-100000);HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!"); // HouseInfo[PlayerInfo[playerid][pHouseO]][hcY]=HouseInfo[PlayerInfo[playerid][pHouseO]][hY]; HouseInfo[PlayerInfo[playerid][pHouseO]][hcZ]=HouseInfo[PlayerInfo[playerid][pHouseO]][hZ];  HouseInfo[PlayerInfo[playerid][pHouseO]][hcX]+=5;
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=480;
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
dini_IntSet(house, "hcV",HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]);
dini_FloatSet(house, "hcY",HouseInfo[PlayerInfo[playerid][pHouseO]][hY]+5);
dini_FloatSet(house, "hcZ",HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
case 11:
{if(PlayerInfo[playerid][pCash]<100000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<10) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-100000);HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!"); // HouseInfo[PlayerInfo[playerid][pHouseO]][hcY]=HouseInfo[PlayerInfo[playerid][pHouseO]][hY]; HouseInfo[PlayerInfo[playerid][pHouseO]][hcZ]=HouseInfo[PlayerInfo[playerid][pHouseO]][hZ];  HouseInfo[PlayerInfo[playerid][pHouseO]][hcX]+=5;
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=492;
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
dini_IntSet(house, "hcV",HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]);
dini_FloatSet(house, "hcY",HouseInfo[PlayerInfo[playerid][pHouseO]][hY]+5);
dini_FloatSet(house, "hcZ",HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
case 12:
{if(PlayerInfo[playerid][pCash]<100000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<10) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-100000);HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!"); // HouseInfo[PlayerInfo[playerid][pHouseO]][hcY]=HouseInfo[PlayerInfo[playerid][pHouseO]][hY]; HouseInfo[PlayerInfo[playerid][pHouseO]][hcZ]=HouseInfo[PlayerInfo[playerid][pHouseO]][hZ];  HouseInfo[PlayerInfo[playerid][pHouseO]][hcX]+=5;
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=471;
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
dini_IntSet(house, "hcV",HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]);
dini_FloatSet(house, "hcY",HouseInfo[PlayerInfo[playerid][pHouseO]][hY]+5);
dini_FloatSet(house, "hcZ",HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
case 13:
{if(PlayerInfo[playerid][pCash]<100000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<10) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-100000);HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!"); // HouseInfo[PlayerInfo[playerid][pHouseO]][hcY]=HouseInfo[PlayerInfo[playerid][pHouseO]][hY]; HouseInfo[PlayerInfo[playerid][pHouseO]][hcZ]=HouseInfo[PlayerInfo[playerid][pHouseO]][hZ];  HouseInfo[PlayerInfo[playerid][pHouseO]][hcX]+=5;
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=517;
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
dini_IntSet(house, "hcV",HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]);
dini_FloatSet(house, "hcY",HouseInfo[PlayerInfo[playerid][pHouseO]][hY]+5);
dini_FloatSet(house, "hcZ",HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
case 14:
{if(PlayerInfo[playerid][pCash]<100000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<10) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-100000);HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!"); // HouseInfo[PlayerInfo[playerid][pHouseO]][hcY]=HouseInfo[PlayerInfo[playerid][pHouseO]][hY]; HouseInfo[PlayerInfo[playerid][pHouseO]][hcZ]=HouseInfo[PlayerInfo[playerid][pHouseO]][hZ];  HouseInfo[PlayerInfo[playerid][pHouseO]][hcX]+=5;
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=551;
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
dini_IntSet(house, "hcV",HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]);
dini_FloatSet(house, "hcY",HouseInfo[PlayerInfo[playerid][pHouseO]][hY]+5);
dini_FloatSet(house, "hcZ",HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
case 15:
{if(PlayerInfo[playerid][pCash]<100000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<10) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-100000);HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!"); // HouseInfo[PlayerInfo[playerid][pHouseO]][hcY]=HouseInfo[PlayerInfo[playerid][pHouseO]][hY]; HouseInfo[PlayerInfo[playerid][pHouseO]][hcZ]=HouseInfo[PlayerInfo[playerid][pHouseO]][hZ];  HouseInfo[PlayerInfo[playerid][pHouseO]][hcX]+=5;
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=467;
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
dini_IntSet(house, "hcV",HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]);
dini_FloatSet(house, "hcY",HouseInfo[PlayerInfo[playerid][pHouseO]][hY]+5);
dini_FloatSet(house, "hcZ",HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
case 16:
{if(PlayerInfo[playerid][pCash]<100000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<10) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-100000);HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!"); // HouseInfo[PlayerInfo[playerid][pHouseO]][hcY]=HouseInfo[PlayerInfo[playerid][pHouseO]][hY]; HouseInfo[PlayerInfo[playerid][pHouseO]][hcZ]=HouseInfo[PlayerInfo[playerid][pHouseO]][hZ];  HouseInfo[PlayerInfo[playerid][pHouseO]][hcX]+=5;
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=405;
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
dini_IntSet(house, "hcV",HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]);
dini_FloatSet(house, "hcY",HouseInfo[PlayerInfo[playerid][pHouseO]][hY]+5);
dini_FloatSet(house, "hcZ",HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
case 17:
{if(PlayerInfo[playerid][pCash]<100000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<10) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-100000);HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!"); // HouseInfo[PlayerInfo[playerid][pHouseO]][hcY]=HouseInfo[PlayerInfo[playerid][pHouseO]][hY]; HouseInfo[PlayerInfo[playerid][pHouseO]][hcZ]=HouseInfo[PlayerInfo[playerid][pHouseO]][hZ];  HouseInfo[PlayerInfo[playerid][pHouseO]][hcX]+=5;
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=550;
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
dini_IntSet(house, "hcV",HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]);
dini_FloatSet(house, "hcY",HouseInfo[PlayerInfo[playerid][pHouseO]][hY]+5);
dini_FloatSet(house, "hcZ",HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
case 18:
{if(PlayerInfo[playerid][pCash]<100000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<10) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-100000);HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!"); // HouseInfo[PlayerInfo[playerid][pHouseO]][hcY]=HouseInfo[PlayerInfo[playerid][pHouseO]][hY]; HouseInfo[PlayerInfo[playerid][pHouseO]][hcZ]=HouseInfo[PlayerInfo[playerid][pHouseO]][hZ];  HouseInfo[PlayerInfo[playerid][pHouseO]][hcX]+=5;
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=540;
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
dini_IntSet(house, "hcV",HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]);
dini_FloatSet(house, "hcY",HouseInfo[PlayerInfo[playerid][pHouseO]][hY]+5);
dini_FloatSet(house, "hcZ",HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
case 19:
{if(PlayerInfo[playerid][pCash]<100000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<10) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-100000);HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!"); // HouseInfo[PlayerInfo[playerid][pHouseO]][hcY]=HouseInfo[PlayerInfo[playerid][pHouseO]][hY]; HouseInfo[PlayerInfo[playerid][pHouseO]][hcZ]=HouseInfo[PlayerInfo[playerid][pHouseO]][hZ];  HouseInfo[PlayerInfo[playerid][pHouseO]][hcX]+=5;
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=491;
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
dini_IntSet(house, "hcV",HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]);
dini_FloatSet(house, "hcY",HouseInfo[PlayerInfo[playerid][pHouseO]][hY]+5);
dini_FloatSet(house, "hcZ",HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
case 20:
{if(PlayerInfo[playerid][pCash]<100000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<10) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-100000);HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!"); // HouseInfo[PlayerInfo[playerid][pHouseO]][hcY]=HouseInfo[PlayerInfo[playerid][pHouseO]][hY]; HouseInfo[PlayerInfo[playerid][pHouseO]][hcZ]=HouseInfo[PlayerInfo[playerid][pHouseO]][hZ];  HouseInfo[PlayerInfo[playerid][pHouseO]][hcX]+=5;
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=602;
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
dini_IntSet(house, "hcV",HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]);
dini_FloatSet(house, "hcY",HouseInfo[PlayerInfo[playerid][pHouseO]][hY]+5);
dini_FloatSet(house, "hcZ",HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
}
}
}
//
//
if(dialogid==47)
{
if(!response)
{
ShowPlayerDialog(playerid, 41, DIALOG_STYLE_LIST, "House Vehicles:","От Level 5 нагоре - {00BF00}$30,000\nОт Level 7 нагоре - {00BF00}$60,000\nОт Level 10 нагоре - {00BF00}$100,000\nОт Level 15 нагоре - {00BF00}$160, 000\nОт Level 17 нагоре - {00BF00}$200,000\nОт Level 20 нагоре - {00BF00}$250,000", "Избери", "Излез");
}
if(response)
{
switch(listitem)
{
case 0:
{if(PlayerInfo[playerid][pCash]<160000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<15) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-160000);
HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!"); // HouseInfo[PlayerInfo[playerid][pHouseO]][hcY]=HouseInfo[PlayerInfo[playerid][pHouseO]][hY]; HouseInfo[PlayerInfo[playerid][pHouseO]][hcZ]=HouseInfo[PlayerInfo[playerid][pHouseO]][hZ];  HouseInfo[PlayerInfo[playerid][pHouseO]][hcX]+=5;
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=533;
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
dini_IntSet(house, "hcV",HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]);
dini_FloatSet(house, "hcY",HouseInfo[PlayerInfo[playerid][pHouseO]][hY]+5);
dini_FloatSet(house, "hcZ",HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
case 1:
{if(PlayerInfo[playerid][pCash]<160000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<15) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-160000);
HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!"); // HouseInfo[PlayerInfo[playerid][pHouseO]][hcY]=HouseInfo[PlayerInfo[playerid][pHouseO]][hY]; HouseInfo[PlayerInfo[playerid][pHouseO]][hcZ]=HouseInfo[PlayerInfo[playerid][pHouseO]][hZ];  HouseInfo[PlayerInfo[playerid][pHouseO]][hcX]+=5;
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=575;
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
dini_IntSet(house, "hcV",HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]);
dini_FloatSet(house, "hcY",HouseInfo[PlayerInfo[playerid][pHouseO]][hY]+5);
dini_FloatSet(house, "hcZ",HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
case 2:
{if(PlayerInfo[playerid][pCash]<160000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<15) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-160000);HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!"); // HouseInfo[PlayerInfo[playerid][pHouseO]][hcY]=HouseInfo[PlayerInfo[playerid][pHouseO]][hY]; HouseInfo[PlayerInfo[playerid][pHouseO]][hcZ]=HouseInfo[PlayerInfo[playerid][pHouseO]][hZ];  HouseInfo[PlayerInfo[playerid][pHouseO]][hcX]+=5;
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=568;
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
dini_IntSet(house, "hcV",HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]);
dini_FloatSet(house, "hcY",HouseInfo[PlayerInfo[playerid][pHouseO]][hY]+5);
dini_FloatSet(house, "hcZ",HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
case 3:
{if(PlayerInfo[playerid][pCash]<160000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<15) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-160000);HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!"); // HouseInfo[PlayerInfo[playerid][pHouseO]][hcY]=HouseInfo[PlayerInfo[playerid][pHouseO]][hY]; HouseInfo[PlayerInfo[playerid][pHouseO]][hcZ]=HouseInfo[PlayerInfo[playerid][pHouseO]][hZ];  HouseInfo[PlayerInfo[playerid][pHouseO]][hcX]+=5;
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=562;
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
dini_IntSet(house, "hcV",HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]);
dini_FloatSet(house, "hcY",HouseInfo[PlayerInfo[playerid][pHouseO]][hY]+5);
dini_FloatSet(house, "hcZ",HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
case 4:
{if(PlayerInfo[playerid][pCash]<160000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<15) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-160000);HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!"); // HouseInfo[PlayerInfo[playerid][pHouseO]][hcY]=HouseInfo[PlayerInfo[playerid][pHouseO]][hY]; HouseInfo[PlayerInfo[playerid][pHouseO]][hcZ]=HouseInfo[PlayerInfo[playerid][pHouseO]][hZ];  HouseInfo[PlayerInfo[playerid][pHouseO]][hcX]+=5;
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=559;
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
dini_IntSet(house, "hcV",HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]);
dini_FloatSet(house, "hcY",HouseInfo[PlayerInfo[playerid][pHouseO]][hY]+5);
dini_FloatSet(house, "hcZ",HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
case 5:
{if(PlayerInfo[playerid][pCash]<160000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<15) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-160000);HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!"); // HouseInfo[PlayerInfo[playerid][pHouseO]][hcY]=HouseInfo[PlayerInfo[playerid][pHouseO]][hY]; HouseInfo[PlayerInfo[playerid][pHouseO]][hcZ]=HouseInfo[PlayerInfo[playerid][pHouseO]][hZ];  HouseInfo[PlayerInfo[playerid][pHouseO]][hcX]+=5;
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=494;
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
dini_IntSet(house, "hcV",HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]);
dini_FloatSet(house, "hcY",HouseInfo[PlayerInfo[playerid][pHouseO]][hY]+5);
dini_FloatSet(house, "hcZ",HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
case 6:
{if(PlayerInfo[playerid][pCash]<160000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<15) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-160000);HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!"); // HouseInfo[PlayerInfo[playerid][pHouseO]][hcY]=HouseInfo[PlayerInfo[playerid][pHouseO]][hY]; HouseInfo[PlayerInfo[playerid][pHouseO]][hcZ]=HouseInfo[PlayerInfo[playerid][pHouseO]][hZ];  HouseInfo[PlayerInfo[playerid][pHouseO]][hcX]+=5;
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=502;
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
dini_IntSet(house, "hcV",HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]);
dini_FloatSet(house, "hcY",HouseInfo[PlayerInfo[playerid][pHouseO]][hY]+5);
dini_FloatSet(house, "hcZ",HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
case 7:
{if(PlayerInfo[playerid][pCash]<160000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<15) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-160000);HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!"); // HouseInfo[PlayerInfo[playerid][pHouseO]][hcY]=HouseInfo[PlayerInfo[playerid][pHouseO]][hY]; HouseInfo[PlayerInfo[playerid][pHouseO]][hcZ]=HouseInfo[PlayerInfo[playerid][pHouseO]][hZ];  HouseInfo[PlayerInfo[playerid][pHouseO]][hcX]+=5;
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=503;
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
dini_IntSet(house, "hcV",HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]);
dini_FloatSet(house, "hcY",HouseInfo[PlayerInfo[playerid][pHouseO]][hY]+5);
dini_FloatSet(house, "hcZ",HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
case 8:
{if(PlayerInfo[playerid][pCash]<160000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<15) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-160000);HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!"); // HouseInfo[PlayerInfo[playerid][pHouseO]][hcY]=HouseInfo[PlayerInfo[playerid][pHouseO]][hY]; HouseInfo[PlayerInfo[playerid][pHouseO]][hcZ]=HouseInfo[PlayerInfo[playerid][pHouseO]][hZ];  HouseInfo[PlayerInfo[playerid][pHouseO]][hcX]+=5;
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=558;
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
dini_IntSet(house, "hcV",HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]);
dini_FloatSet(house, "hcY",HouseInfo[PlayerInfo[playerid][pHouseO]][hY]+5);
dini_FloatSet(house, "hcZ",HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
case 9:
{if(PlayerInfo[playerid][pCash]<160000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<15) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-160000);HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!"); // HouseInfo[PlayerInfo[playerid][pHouseO]][hcY]=HouseInfo[PlayerInfo[playerid][pHouseO]][hY]; HouseInfo[PlayerInfo[playerid][pHouseO]][hcZ]=HouseInfo[PlayerInfo[playerid][pHouseO]][hZ];  HouseInfo[PlayerInfo[playerid][pHouseO]][hcX]+=5;
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=477;
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
dini_IntSet(house, "hcV",HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]);
dini_FloatSet(house, "hcY",HouseInfo[PlayerInfo[playerid][pHouseO]][hY]+5);
dini_FloatSet(house, "hcZ",HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
case 10:
{if(PlayerInfo[playerid][pCash]<160000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<15) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-160000);HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!"); // HouseInfo[PlayerInfo[playerid][pHouseO]][hcY]=HouseInfo[PlayerInfo[playerid][pHouseO]][hY]; HouseInfo[PlayerInfo[playerid][pHouseO]][hcZ]=HouseInfo[PlayerInfo[playerid][pHouseO]][hZ];  HouseInfo[PlayerInfo[playerid][pHouseO]][hcX]+=5;
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=434;
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
dini_IntSet(house, "hcV",HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]);
dini_FloatSet(house, "hcY",HouseInfo[PlayerInfo[playerid][pHouseO]][hY]+5);
dini_FloatSet(house, "hcZ",HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
case 11:
{if(PlayerInfo[playerid][pCash]<160000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<15) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-160000);HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!"); // HouseInfo[PlayerInfo[playerid][pHouseO]][hcY]=HouseInfo[PlayerInfo[playerid][pHouseO]][hY]; HouseInfo[PlayerInfo[playerid][pHouseO]][hcZ]=HouseInfo[PlayerInfo[playerid][pHouseO]][hZ];  HouseInfo[PlayerInfo[playerid][pHouseO]][hcX]+=5;
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=571;
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
dini_IntSet(house, "hcV",HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]);
dini_FloatSet(house, "hcY",HouseInfo[PlayerInfo[playerid][pHouseO]][hY]+5);
dini_FloatSet(house, "hcZ",HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
}
}
}
//
//
if(dialogid==48)
{
if(!response)
{
ShowPlayerDialog(playerid, 41, DIALOG_STYLE_LIST, "House Vehicles:","От Level 5 нагоре - {00BF00}$30,000\nОт Level 7 нагоре - {00BF00}$60,000\nОт Level 10 нагоре - {00BF00}$100,000\nОт Level 15 нагоре - {00BF00}$160, 000\nОт Level 17 нагоре - {00BF00}$200,000\nОт Level 20 нагоре - {00BF00}$250,000", "Избери", "Излез");
}
if(response)
{
switch(listitem)
{
case 0:
{if(PlayerInfo[playerid][pCash]<200000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<17) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-200000);
HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!"); // HouseInfo[PlayerInfo[playerid][pHouseO]][hcY]=HouseInfo[PlayerInfo[playerid][pHouseO]][hY]; HouseInfo[PlayerInfo[playerid][pHouseO]][hcZ]=HouseInfo[PlayerInfo[playerid][pHouseO]][hZ];  HouseInfo[PlayerInfo[playerid][pHouseO]][hcX]+=5;
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=521;
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
dini_IntSet(house, "hcV",HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]);
dini_FloatSet(house, "hcY",HouseInfo[PlayerInfo[playerid][pHouseO]][hY]+5);
dini_FloatSet(house, "hcZ",HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
case 1:
{if(PlayerInfo[playerid][pCash]<200000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<17) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-200000);
HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!"); // HouseInfo[PlayerInfo[playerid][pHouseO]][hcY]=HouseInfo[PlayerInfo[playerid][pHouseO]][hY]; HouseInfo[PlayerInfo[playerid][pHouseO]][hcZ]=HouseInfo[PlayerInfo[playerid][pHouseO]][hZ];  HouseInfo[PlayerInfo[playerid][pHouseO]][hcX]+=5;
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=555;
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
dini_IntSet(house, "hcV",HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]);
dini_FloatSet(house, "hcY",HouseInfo[PlayerInfo[playerid][pHouseO]][hY]+5);
dini_FloatSet(house, "hcZ",HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
case 2:
{if(PlayerInfo[playerid][pCash]<200000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<17) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-200000);HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!"); // HouseInfo[PlayerInfo[playerid][pHouseO]][hcY]=HouseInfo[PlayerInfo[playerid][pHouseO]][hY]; HouseInfo[PlayerInfo[playerid][pHouseO]][hcZ]=HouseInfo[PlayerInfo[playerid][pHouseO]][hZ];  HouseInfo[PlayerInfo[playerid][pHouseO]][hcX]+=5;
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=535;
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
dini_IntSet(house, "hcV",HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]);
dini_FloatSet(house, "hcY",HouseInfo[PlayerInfo[playerid][pHouseO]][hY]+5);
dini_FloatSet(house, "hcZ",HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
case 3:
{if(PlayerInfo[playerid][pCash]<200000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<17) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-200000);HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!"); // HouseInfo[PlayerInfo[playerid][pHouseO]][hcY]=HouseInfo[PlayerInfo[playerid][pHouseO]][hY]; HouseInfo[PlayerInfo[playerid][pHouseO]][hcZ]=HouseInfo[PlayerInfo[playerid][pHouseO]][hZ];  HouseInfo[PlayerInfo[playerid][pHouseO]][hcX]+=5;
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=495;
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
dini_IntSet(house, "hcV",HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]);
dini_FloatSet(house, "hcY",HouseInfo[PlayerInfo[playerid][pHouseO]][hY]+5);
dini_FloatSet(house, "hcZ",HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
case 4:
{if(PlayerInfo[playerid][pCash]<200000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<17) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-200000);HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!"); // HouseInfo[PlayerInfo[playerid][pHouseO]][hcY]=HouseInfo[PlayerInfo[playerid][pHouseO]][hY]; HouseInfo[PlayerInfo[playerid][pHouseO]][hcZ]=HouseInfo[PlayerInfo[playerid][pHouseO]][hZ];  HouseInfo[PlayerInfo[playerid][pHouseO]][hcX]+=5;
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=560;
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
dini_IntSet(house, "hcV",HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]);
dini_FloatSet(house, "hcY",HouseInfo[PlayerInfo[playerid][pHouseO]][hY]+5);
dini_FloatSet(house, "hcZ",HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
case 5:
{if(PlayerInfo[playerid][pCash]<200000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<17) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-200000);HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!"); // HouseInfo[PlayerInfo[playerid][pHouseO]][hcY]=HouseInfo[PlayerInfo[playerid][pHouseO]][hY]; HouseInfo[PlayerInfo[playerid][pHouseO]][hcZ]=HouseInfo[PlayerInfo[playerid][pHouseO]][hZ];  HouseInfo[PlayerInfo[playerid][pHouseO]][hcX]+=5;
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=429;
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
dini_IntSet(house, "hcV",HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]);
dini_FloatSet(house, "hcY",HouseInfo[PlayerInfo[playerid][pHouseO]][hY]+5);
dini_FloatSet(house, "hcZ",HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
case 6:
{if(PlayerInfo[playerid][pCash]<200000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<17) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-200000);HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!"); // HouseInfo[PlayerInfo[playerid][pHouseO]][hcY]=HouseInfo[PlayerInfo[playerid][pHouseO]][hY]; HouseInfo[PlayerInfo[playerid][pHouseO]][hcZ]=HouseInfo[PlayerInfo[playerid][pHouseO]][hZ];  HouseInfo[PlayerInfo[playerid][pHouseO]][hcX]+=5;
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=402;
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
dini_IntSet(house, "hcV",HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]);
dini_FloatSet(house, "hcY",HouseInfo[PlayerInfo[playerid][pHouseO]][hY]+5);
dini_FloatSet(house, "hcZ",HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
case 7:
{if(PlayerInfo[playerid][pCash]<200000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<17) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-200000);HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!"); // HouseInfo[PlayerInfo[playerid][pHouseO]][hcY]=HouseInfo[PlayerInfo[playerid][pHouseO]][hY]; HouseInfo[PlayerInfo[playerid][pHouseO]][hcZ]=HouseInfo[PlayerInfo[playerid][pHouseO]][hZ];  HouseInfo[PlayerInfo[playerid][pHouseO]][hcX]+=5;
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=603;
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
dini_IntSet(house, "hcV",HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]);
dini_FloatSet(house, "hcY",HouseInfo[PlayerInfo[playerid][pHouseO]][hY]+5);
dini_FloatSet(house, "hcZ",HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
case 8:
{if(PlayerInfo[playerid][pCash]<200000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<17) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-200000);HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!"); // HouseInfo[PlayerInfo[playerid][pHouseO]][hcY]=HouseInfo[PlayerInfo[playerid][pHouseO]][hY]; HouseInfo[PlayerInfo[playerid][pHouseO]][hcZ]=HouseInfo[PlayerInfo[playerid][pHouseO]][hZ];  HouseInfo[PlayerInfo[playerid][pHouseO]][hcX]+=5;
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=506;
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
dini_IntSet(house, "hcV",HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]);
dini_FloatSet(house, "hcY",HouseInfo[PlayerInfo[playerid][pHouseO]][hY]+5);
dini_FloatSet(house, "hcZ",HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
case 9:
{if(PlayerInfo[playerid][pCash]<200000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<17) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-200000);HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!"); // //HouseInfo[PlayerInfo[playerid][pHouseO]][hcY]=HouseInfo[PlayerInfo[playerid][pHouseO]][hY]; HouseInfo[PlayerInfo[playerid][pHouseO]][hcZ]=HouseInfo[PlayerInfo[playerid][pHouseO]][hZ];  HouseInfo[PlayerInfo[playerid][pHouseO]][hcX]+=5;
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=415;
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
dini_IntSet(house, "hcV",HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]);
dini_FloatSet(house, "hcY",HouseInfo[PlayerInfo[playerid][pHouseO]][hY]+5);
dini_FloatSet(house, "hcZ",HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
case 10:
{if(PlayerInfo[playerid][pCash]<200000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<17) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-200000);HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!"); // HouseInfo[PlayerInfo[playerid][pHouseO]][hcY]=HouseInfo[PlayerInfo[playerid][pHouseO]][hY]; HouseInfo[PlayerInfo[playerid][pHouseO]][hcZ]=HouseInfo[PlayerInfo[playerid][pHouseO]][hZ];  HouseInfo[PlayerInfo[playerid][pHouseO]][hcX]+=5;
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=409;
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
dini_IntSet(house, "hcV",HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]);
dini_FloatSet(house, "hcY",HouseInfo[PlayerInfo[playerid][pHouseO]][hY]+5);
dini_FloatSet(house, "hcZ",HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
case 11:
{if(PlayerInfo[playerid][pCash]<200000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<17) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-200000);HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!"); // HouseInfo[PlayerInfo[playerid][pHouseO]][hcY]=HouseInfo[PlayerInfo[playerid][pHouseO]][hY]; HouseInfo[PlayerInfo[playerid][pHouseO]][hcZ]=HouseInfo[PlayerInfo[playerid][pHouseO]][hZ];  HouseInfo[PlayerInfo[playerid][pHouseO]][hcX]+=5;
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=447;
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
dini_IntSet(house, "hcV",HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]);
dini_FloatSet(house, "hcY",HouseInfo[PlayerInfo[playerid][pHouseO]][hY]+5);
dini_FloatSet(house, "hcZ",HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
}
}
}
//
//
//
if(dialogid==52)
{
if(!response)
{
}
if(response)
{
switch(listitem)
{
case 0: GivePlayerWeapon(playerid, WEAPON_KNIFE, 1);
case 1: GivePlayerWeapon(playerid, WEAPON_BAT, 1);
case 2: GivePlayerWeapon(playerid, WEAPON_COLT45, 100);
case 3: GivePlayerWeapon(playerid, WEAPON_SILENCED, 100);
case 4: GivePlayerWeapon(playerid, WEAPON_DEAGLE, 100);
case 5: GivePlayerWeapon(playerid, WEAPON_SHOTGUN, 125);
case 6: GivePlayerWeapon(playerid, WEAPON_SAWEDOFF, 125);
case 7: GivePlayerWeapon(playerid, WEAPON_SHOTGSPA, 125);
case 8: GivePlayerWeapon(playerid, WEAPON_UZI, 1150);
case 9: GivePlayerWeapon(playerid, WEAPON_MP5, 500);
case 10: GivePlayerWeapon(playerid, WEAPON_TEC9, 500);
case 11: GivePlayerWeapon(playerid, WEAPON_AK47, 500);
case 12: GivePlayerWeapon(playerid, WEAPON_M4, 500);
case 13: GivePlayerWeapon(playerid, WEAPON_RIFLE, 300);
case 14: GivePlayerWeapon(playerid, WEAPON_SNIPER, 20);
case 15:
{
if(PlayerInfo[playerid][pSpecialForce]==0) return SendClientMessage(playerid,COLOR_GRAD1,"Трябва да бъдеш Special Force за да си вземеш това оръжие!");
if(PlayerInfo[playerid][pDFDuty]==0) return SendClientMessage(playerid,COLOR_GRAD1,"Трябва да бъдеш на смяна за да си вземеш това оръжие!");
GivePlayerWeapon(playerid, WEAPON_ROCKETLAUNCHER, 5);
}
case 16:
{
if(PlayerInfo[playerid][pSpecialForce]==0) return SendClientMessage(playerid,COLOR_GRAD1,"Трябва да бъдеш Special Force за да си вземеш това оръжие!");
if(PlayerInfo[playerid][pDFDuty]==0) return SendClientMessage(playerid,COLOR_GRAD1,"Трябва да бъдеш на смяна за да си вземеш това оръжие!");
GivePlayerWeapon(playerid, WEAPON_HEATSEEKER, 5);
}
case 17:
{
if(PlayerInfo[playerid][pSpecialForce]==0) return SendClientMessage(playerid,COLOR_GRAD1,"Трябва да бъдеш Special Force за да си вземеш това оръжие!");
if(PlayerInfo[playerid][pDFDuty]==0) return SendClientMessage(playerid,COLOR_GRAD1,"Трябва да бъдеш на смяна за да си вземеш това оръжие!");
GivePlayerWeapon(playerid, WEAPON_SATCHEL, 5);
}
}
}
}
if(dialogid==49)
{
if(!response)
{
ShowPlayerDialog(playerid, 41, DIALOG_STYLE_LIST, "House Vehicles:","От Level 5 нагоре - {00BF00}$30,000\nОт Level 7 нагоре - {00BF00}$60,000\nОт Level 10 нагоре - {00BF00}$100,000\nОт Level 15 нагоре - {00BF00}$160, 000\nОт Level 17 нагоре - {00BF00}$200,000\nОт Level 20 нагоре - {00BF00}$250,000", "Избери", "Излез");
}
if(response)
{
switch(listitem)
{
case 0:
{if(PlayerInfo[playerid][pCash]<250000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<20) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-250000);
HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!"); // HouseInfo[PlayerInfo[playerid][pHouseO]][hcY]=HouseInfo[PlayerInfo[playerid][pHouseO]][hY]; HouseInfo[PlayerInfo[playerid][pHouseO]][hcZ]=HouseInfo[PlayerInfo[playerid][pHouseO]][hZ];  HouseInfo[PlayerInfo[playerid][pHouseO]][hcX]+=5;
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=522;
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
dini_IntSet(house, "hcV",HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]);
dini_FloatSet(house, "hcY",HouseInfo[PlayerInfo[playerid][pHouseO]][hY]+5);
dini_FloatSet(house, "hcZ",HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
case 1:
{if(PlayerInfo[playerid][pCash]<250000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<20) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-250000);
HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!"); // HouseInfo[PlayerInfo[playerid][pHouseO]][hcY]=HouseInfo[PlayerInfo[playerid][pHouseO]][hY]; HouseInfo[PlayerInfo[playerid][pHouseO]][hcZ]=HouseInfo[PlayerInfo[playerid][pHouseO]][hZ];  HouseInfo[PlayerInfo[playerid][pHouseO]][hcX]+=5;
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=567;
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
dini_IntSet(house, "hcV",HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]);
dini_FloatSet(house, "hcY",HouseInfo[PlayerInfo[playerid][pHouseO]][hY]+5);
dini_FloatSet(house, "hcZ",HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
case 2:
{if(PlayerInfo[playerid][pCash]<250000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<20) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-250000);HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!"); // HouseInfo[PlayerInfo[playerid][pHouseO]][hcY]=HouseInfo[PlayerInfo[playerid][pHouseO]][hY]; HouseInfo[PlayerInfo[playerid][pHouseO]][hcZ]=HouseInfo[PlayerInfo[playerid][pHouseO]][hZ];  HouseInfo[PlayerInfo[playerid][pHouseO]][hcX]+=5;
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=556;
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
dini_IntSet(house, "hcV",HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]);
dini_FloatSet(house, "hcY",HouseInfo[PlayerInfo[playerid][pHouseO]][hY]+5);
dini_FloatSet(house, "hcZ",HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
case 3:
{if(PlayerInfo[playerid][pCash]<250000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<20) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-250000);HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!"); // HouseInfo[PlayerInfo[playerid][pHouseO]][hcY]=HouseInfo[PlayerInfo[playerid][pHouseO]][hY]; HouseInfo[PlayerInfo[playerid][pHouseO]][hcZ]=HouseInfo[PlayerInfo[playerid][pHouseO]][hZ];  HouseInfo[PlayerInfo[playerid][pHouseO]][hcX]+=5;
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=557;
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
dini_IntSet(house, "hcV",HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]);
dini_FloatSet(house, "hcY",HouseInfo[PlayerInfo[playerid][pHouseO]][hY]+5);
dini_FloatSet(house, "hcZ",HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
case 4:
{if(PlayerInfo[playerid][pCash]<250000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<20) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-250000);HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!"); // HouseInfo[PlayerInfo[playerid][pHouseO]][hcY]=HouseInfo[PlayerInfo[playerid][pHouseO]][hY]; HouseInfo[PlayerInfo[playerid][pHouseO]][hcZ]=HouseInfo[PlayerInfo[playerid][pHouseO]][hZ];  HouseInfo[PlayerInfo[playerid][pHouseO]][hcX]+=5;
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=541;
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
dini_IntSet(house, "hcV",HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]);
dini_FloatSet(house, "hcY",HouseInfo[PlayerInfo[playerid][pHouseO]][hY]+5);
dini_FloatSet(house, "hcZ",HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
case 5:
{if(PlayerInfo[playerid][pCash]<250000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<20) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-250000);HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!"); // HouseInfo[PlayerInfo[playerid][pHouseO]][hcY]=HouseInfo[PlayerInfo[playerid][pHouseO]][hY]; HouseInfo[PlayerInfo[playerid][pHouseO]][hcZ]=HouseInfo[PlayerInfo[playerid][pHouseO]][hZ];  HouseInfo[PlayerInfo[playerid][pHouseO]][hcX]+=5;
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=411;
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
dini_IntSet(house, "hcV",HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]);
dini_FloatSet(house, "hcY",HouseInfo[PlayerInfo[playerid][pHouseO]][hY]+5);
dini_FloatSet(house, "hcZ",HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
case 6:
{if(PlayerInfo[playerid][pCash]<250000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<20) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-250000);HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!"); // HouseInfo[PlayerInfo[playerid][pHouseO]][hcY]=HouseInfo[PlayerInfo[playerid][pHouseO]][hY]; HouseInfo[PlayerInfo[playerid][pHouseO]][hcZ]=HouseInfo[PlayerInfo[playerid][pHouseO]][hZ];  HouseInfo[PlayerInfo[playerid][pHouseO]][hcX]+=5;
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=451;
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
dini_IntSet(house, "hcV",HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]);
dini_FloatSet(house, "hcY",HouseInfo[PlayerInfo[playerid][pHouseO]][hY]+5);
dini_FloatSet(house, "hcZ",HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
case 7:
{if(PlayerInfo[playerid][pCash]<250000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<20) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-250000);HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!"); // HouseInfo[PlayerInfo[playerid][pHouseO]][hcY]=HouseInfo[PlayerInfo[playerid][pHouseO]][hY]; HouseInfo[PlayerInfo[playerid][pHouseO]][hcZ]=HouseInfo[PlayerInfo[playerid][pHouseO]][hZ];  HouseInfo[PlayerInfo[playerid][pHouseO]][hcX]+=5;
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=480;
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
dini_IntSet(house, "hcV",HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]);
dini_FloatSet(house, "hcY",HouseInfo[PlayerInfo[playerid][pHouseO]][hY]+5);
dini_FloatSet(house, "hcZ",HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
case 8:
{if(PlayerInfo[playerid][pCash]<250000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<20) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-250000);HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!"); // HouseInfo[PlayerInfo[playerid][pHouseO]][hcY]=HouseInfo[PlayerInfo[playerid][pHouseO]][hY]; HouseInfo[PlayerInfo[playerid][pHouseO]][hcZ]=HouseInfo[PlayerInfo[playerid][pHouseO]][hZ];  HouseInfo[PlayerInfo[playerid][pHouseO]][hcX]+=5;
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=487;
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
dini_IntSet(house, "hcV",HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]);
dini_FloatSet(house, "hcY",HouseInfo[PlayerInfo[playerid][pHouseO]][hY]+5);
dini_FloatSet(house, "hcZ",HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
}
}
}
//
if(dialogid==41)
{
if(response)
{
switch(listitem)
{
case 0:
{
ShowPlayerDialog(playerid, 42, DIALOG_STYLE_LIST, "Level 5:","BMX\nFaggio\nWayfarer\nSadler\nWalton\nTahoma\nMessa\nBravura\nFortune\nIntruder\nPrevion\nTampa\nMoonbeam", "Избери", "Назад");
}
case 1:
{
ShowPlayerDialog(playerid, 45, DIALOG_STYLE_LIST, "Level 7:","Quad\nPicador\nBobcat\nPony\nTornado\nLandstalker\nAdmiral\nBuccaneer\nCadrona\nEmperor\nEspertano\nGlendale\nManana\nNebula\nPrimo\nWillard\nPerenniel\nRegina", "Избери", "Назад");
}
case 2:
{
ShowPlayerDialog(playerid, 46, DIALOG_STYLE_LIST, "Level 10:","Mountain Bike\nFreeway\nStallion\nBurrito\nYosemite\nBlade\nVoodo\nBF Injection\nRancher\nBloodring Banger\nCover\nGreenwood\nHermes\nMajestic\nMerit\nOceanic\nSentinel\nSunrise\nVincent\nVirgo\nAlpha", "Избери", "Назад");
}
case 3:
{
ShowPlayerDialog(playerid, 47, DIALOG_STYLE_LIST, "Level 15:","PCJ-500\nFeltzer\nBroadway\nBandito\nElegy\nJester\nHotring Racer\nHotring Racer 2\nHotring Racer 3\nUranus\nZR-350\nHotknife\nKart", "Избери", "Назад");
}
case 4:
{
ShowPlayerDialog(playerid, 48, DIALOG_STYLE_LIST, "Level 17:","FCR-900\nWindsor\nSlamvan\nSandking\nSultan\nBanshee\nBuffalo\nPhoenix\nSuper GT\nCheetah\nStretch\nSparrow", "Избери", "Назад");
}
case 5:
{
ShowPlayerDialog(playerid, 49, DIALOG_STYLE_LIST, "Level 20:","NRG-500\nSavanna\nMonster\nMonster A\nMonster B\nBullet\nInfernus\nTursimo\nComet\nMaverick", "Избери", "Назад");
}
}
}
}
if(dialogid==24)
{
if(response)
{
switch(listitem)
{
case 0:
{
new string500[500];
format(string500,500,"{FFFFFF}Патронът на оръжието 9mm струва {00BF00}$2\n{FFFFFF}Колко патрона искаш да купиш?");
ShowPlayerDialog(playerid,25,DIALOG_STYLE_INPUT,"Патрони",string500,"Купи","Затвори");
}
case 1:
{
new string500[500];
format(string500,500,"{FFFFFF}Патронът на оръжието Silenced 9mm струва {00BF00}$3\n{FFFFFF}Колко патрона искаш да купиш?");
ShowPlayerDialog(playerid,26,DIALOG_STYLE_INPUT,"Патрони",string500,"Купи","Затвори");
}
case 2:
{
new string500[500];
format(string500,500,"{FFFFFF}Патронът на оръжието Desert Eagle струва {00BF00}$5\n{FFFFFF}Колко патрона искаш да купиш?");
ShowPlayerDialog(playerid,27,DIALOG_STYLE_INPUT,"Патрони",string500,"Купи","Затвори");
}
case 3:
{
new string500[500];
format(string500,500,"{FFFFFF}Патронът на оръжието Shotgun струва {00BF00}$8\n{FFFFFF}Колко патрона искаш да купиш?");
ShowPlayerDialog(playerid,28,DIALOG_STYLE_INPUT,"Патрони",string500,"Купи","Затвори");
}
case 4:
{
new string500[500];
format(string500,500,"{FFFFFF}Патронът на оръжието Sawnoff струва {00BF00}$12\n{FFFFFF}Колко патрона искаш да купиш?");
ShowPlayerDialog(playerid,29,DIALOG_STYLE_INPUT,"Патрони",string500,"Купи","Затвори");
}
case 5:
{
new string500[500];
format(string500,500,"{FFFFFF}Патронът на оръжието Combat Shotgun струва {00BF00}$14\n{FFFFFF}Колко патрона искаш да купиш?");
ShowPlayerDialog(playerid,30,DIALOG_STYLE_INPUT,"Патрони",string500,"Купи","Затвори");
}
case 6:
{
new string500[500];
format(string500,500,"{FFFFFF}Патронът на оръжието MP5 струва {00BF00}$2\n{FFFFFF}Колко патрона искаш да купиш?");
ShowPlayerDialog(playerid,31,DIALOG_STYLE_INPUT,"Патрони",string500,"Купи","Затвори");
}
case 7:
{
new string500[500];
format(string500,500,"{FFFFFF}Патронът на оръжието Uzi струва {00BF00}$2\n{FFFFFF}Колко патрона искаш да купиш?");
ShowPlayerDialog(playerid,32,DIALOG_STYLE_INPUT,"Патрони",string500,"Купи","Затвори");
}
case 8:
{
new string500[500];
format(string500,500,"{FFFFFF}Патронът на оръжието Tec9 струва {00BF00}$3\n{FFFFFF}Колко патрона искаш да купиш?");
ShowPlayerDialog(playerid,33,DIALOG_STYLE_INPUT,"Патрони",string500,"Купи","Затвори");
}
case 9:
{
new string500[500];
format(string500,500,"{FFFFFF}Патронът на оръжието AK-47 струва {00BF00}$5\n{FFFFFF}Колко патрона искаш да купиш?");
ShowPlayerDialog(playerid,34,DIALOG_STYLE_INPUT,"Патрони",string500,"Купи","Затвори");
}
case 10:
{
new string500[500];
format(string500,500,"{FFFFFF}Патронът на оръжието M4 струва {00BF00}$6\n{FFFFFF}Колко патрона искаш да купиш?");
ShowPlayerDialog(playerid,35,DIALOG_STYLE_INPUT,"Патрони",string500,"Купи","Затвори");
}
case 11:
{
new string500[500];
format(string500,500,"{FFFFFF}Патронът на оръжието Country Rifle струва {00BF00}$67\n{FFFFFF}Колко патрона искаш да купиш?");
ShowPlayerDialog(playerid,36,DIALOG_STYLE_INPUT,"Патрони",string500,"Купи","Затвори");
}
case 12:
{
new string500[500];
format(string500,500,"{FFFFFF}Патронът на оръжието Sniper Rifle струва {00BF00}$400\n{FFFFFF}Колко патрона искаш да купиш?");
ShowPlayerDialog(playerid,37,DIALOG_STYLE_INPUT,"Патрони",string500,"Купи","Затвори");
}
}
}
}
if(dialogid==25)
{
if(response)
{
if(strval(inputtext)<1 || strval(inputtext)>10000)  return SendClientMessage(playerid, 0xB4B5B7FF, "Можеш да вкараш от 1 до 10000 патроа!");
GivePlayerCash(playerid,-strval(inputtext)*2);
GivePlayerWeapon(playerid,22,strval(inputtext)*2); BizInfo[enteredbiz[playerid]][bEarnings]+=2*strval(inputtext);
}
}
if(dialogid==26)
{
if(response)
{
if(strval(inputtext)<1 || strval(inputtext)>10000)  return SendClientMessage(playerid, 0xB4B5B7FF, "Можеш да вкараш от 1 до 10000 патроа!");
GivePlayerCash(playerid,-strval(inputtext)*3);
GivePlayerWeapon(playerid,22,strval(inputtext)*3); BizInfo[enteredbiz[playerid]][bEarnings]+=3*strval(inputtext);
}
}
if(dialogid==27)
{
if(response)
{
if(strval(inputtext)<1 || strval(inputtext)>10000)  return SendClientMessage(playerid, 0xB4B5B7FF, "Можеш да вкараш от 1 до 10000 патроа!");
GivePlayerCash(playerid,-strval(inputtext)*5);
GivePlayerWeapon(playerid,22,strval(inputtext)*5); BizInfo[enteredbiz[playerid]][bEarnings]+=5*strval(inputtext);
}
}
if(dialogid==28)
{
if(response)
{
if(strval(inputtext)<1 || strval(inputtext)>10000)  return SendClientMessage(playerid, 0xB4B5B7FF, "Можеш да вкараш от 1 до 10000 патроа!");
GivePlayerCash(playerid,-strval(inputtext)*8);
GivePlayerWeapon(playerid,22,strval(inputtext)*8); BizInfo[enteredbiz[playerid]][bEarnings]+=8*strval(inputtext);
}
}
if(dialogid==29)
{
if(response)
{
if(strval(inputtext)<1 || strval(inputtext)>10000)  return SendClientMessage(playerid, 0xB4B5B7FF, "Можеш да вкараш от 1 до 10000 патроа!");
GivePlayerCash(playerid,-strval(inputtext)*12);
GivePlayerWeapon(playerid,22,strval(inputtext)*12); BizInfo[enteredbiz[playerid]][bEarnings]+=12*strval(inputtext);
}
}
if(dialogid==30)
{
if(response)
{
if(strval(inputtext)<1 || strval(inputtext)>10000)  return SendClientMessage(playerid, 0xB4B5B7FF, "Можеш да вкараш от 1 до 10000 патроа!");
GivePlayerCash(playerid,-strval(inputtext)*14);
GivePlayerWeapon(playerid,22,strval(inputtext)*14); BizInfo[enteredbiz[playerid]][bEarnings]+=14*strval(inputtext);
}
}
if(dialogid==31)
{
if(response)
{
if(strval(inputtext)<1 || strval(inputtext)>10000)  return SendClientMessage(playerid, 0xB4B5B7FF, "Можеш да вкараш от 1 до 10000 патроа!");
GivePlayerCash(playerid,-strval(inputtext)*2);
GivePlayerWeapon(playerid,22,strval(inputtext)*2); BizInfo[enteredbiz[playerid]][bEarnings]+=2*strval(inputtext);
}
}
if(dialogid==32)
{
if(response)
{
if(strval(inputtext)<1 || strval(inputtext)>10000)  return SendClientMessage(playerid, 0xB4B5B7FF, "Можеш да вкараш от 1 до 10000 патроа!");
GivePlayerCash(playerid,-strval(inputtext)*2);
GivePlayerWeapon(playerid,22,strval(inputtext)*2); BizInfo[enteredbiz[playerid]][bEarnings]+=2*strval(inputtext);
}
}
if(dialogid==33)
{
if(response)
{
if(strval(inputtext)<1 || strval(inputtext)>10000)  return SendClientMessage(playerid, 0xB4B5B7FF, "Можеш да вкараш от 1 до 10000 патроа!");
GivePlayerCash(playerid,-strval(inputtext)*3);
GivePlayerWeapon(playerid,22,strval(inputtext)*3); BizInfo[enteredbiz[playerid]][bEarnings]+=3*strval(inputtext);
}
}
if(dialogid==34)
{
if(response)
{
if(strval(inputtext)<1 || strval(inputtext)>10000)  return SendClientMessage(playerid, 0xB4B5B7FF, "Можеш да вкараш от 1 до 10000 патроа!");
GivePlayerCash(playerid,-strval(inputtext)*5);
GivePlayerWeapon(playerid,22,strval(inputtext)*5); BizInfo[enteredbiz[playerid]][bEarnings]+=5*strval(inputtext);
}
}
if(dialogid==35)
{
if(response)
{
if(strval(inputtext)<1 || strval(inputtext)>10000)  return SendClientMessage(playerid, 0xB4B5B7FF, "Можеш да вкараш от 1 до 10000 патроа!");
GivePlayerCash(playerid,-strval(inputtext)*6);
GivePlayerWeapon(playerid,22,strval(inputtext)*6); BizInfo[enteredbiz[playerid]][bEarnings]+=6*strval(inputtext);
}
}
if(dialogid==36)
{
if(response)
{
if(strval(inputtext)<1 || strval(inputtext)>10000)  return SendClientMessage(playerid, 0xB4B5B7FF, "Можеш да вкараш от 1 до 10000 патроа!");
GivePlayerCash(playerid,-strval(inputtext)*67);
GivePlayerWeapon(playerid,22,strval(inputtext)*67); BizInfo[enteredbiz[playerid]][bEarnings]+=67*strval(inputtext);
}
}
if(dialogid==37)
{
if(response)
{
if(strval(inputtext)<1 || strval(inputtext)>10000)  return SendClientMessage(playerid, 0xB4B5B7FF, "Можеш да вкараш от 1 до 10000 патроа!");
GivePlayerCash(playerid,-strval(inputtext)*400);
GivePlayerWeapon(playerid,22,strval(inputtext)*400); BizInfo[enteredbiz[playerid]][bEarnings]+=400*strval(inputtext);
}
}
if(dialogid==23)
{
if(response)
{
switch(listitem)
{
case 0:
{
if(PlayerInfo[playerid][pCash]<50) return SendClientMessage(playerid, 0xB4B5B7FF, "Трябва да имаш поне $50!");
SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_BEER);
GivePlayerCash(playerid,-50); BizInfo[enteredbiz[playerid]][bEarnings]+=50;
}
case 1:
{
if(PlayerInfo[playerid][pCash]<60) return SendClientMessage(playerid, 0xB4B5B7FF, "Трябва да имаш поне $60!");
SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_WINE);
GivePlayerCash(playerid,-60); BizInfo[enteredbiz[playerid]][bEarnings]+=60;
new bizz[64]; format(bizz, 64, "/Bizz/%d.ini", enteredbiz[playerid]);
}
case 2:
{
if(PlayerInfo[playerid][pCash]<100) return SendClientMessage(playerid, 0xB4B5B7FF, "Трябва да имаш поне $100!");
SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_WINE);
GivePlayerCash(playerid,-100); BizInfo[enteredbiz[playerid]][bEarnings]+=100;
}
}
}
}
if(dialogid == 10)
{
if(!response)
{
}
if(response)
{
switch(listitem)
{
case 0: GivePlayerWeapon(playerid, WEAPON_KNIFE, 1);
case 1: GivePlayerWeapon(playerid, WEAPON_BAT, 1);
case 2: GivePlayerWeapon(playerid, WEAPON_COLT45, 100);
case 3: GivePlayerWeapon(playerid, WEAPON_SILENCED, 100);
case 4: GivePlayerWeapon(playerid, WEAPON_DEAGLE, 100);
case 5: GivePlayerWeapon(playerid, WEAPON_SHOTGUN, 125);
case 6: GivePlayerWeapon(playerid, WEAPON_SAWEDOFF, 125);
case 7: GivePlayerWeapon(playerid, WEAPON_SHOTGSPA, 125);
case 8: GivePlayerWeapon(playerid, WEAPON_UZI, 1150);
case 9: GivePlayerWeapon(playerid, WEAPON_MP5, 500);
case 10: GivePlayerWeapon(playerid, WEAPON_TEC9, 500);
case 11: GivePlayerWeapon(playerid, WEAPON_AK47, 500);
case 12: GivePlayerWeapon(playerid, WEAPON_M4, 500);
case 13: GivePlayerWeapon(playerid, WEAPON_RIFLE, 300);
case 14: GivePlayerWeapon(playerid, WEAPON_SNIPER, 20);
}
}
}
if(dialogid==9)
{
if(!response)
{
}
if(response)
{
new string2230[512]; new string2230result[2200];
format(string2230,512,"{00FF00}---Команди за лидер на банда/мафия---\n\n");
strcat(string2230result, string2230);
format(string2230,512,"{008000}/invite - дава покана за банда/мафия до играч\n");
strcat(string2230result, string2230);
format(string2230,512,"{008000}/cinvite - отменя покана на играч за банда/мафия\n");
strcat(string2230result, string2230);
format(string2230,512,"{FF0000}/uninvite - гони играча от бандата/мафията\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/nuninvite - гони играча от бандата/мафията чрез въвеждане на никнейм\n");
strcat(string2230result, string2230);
format(string2230,512,"{008000}/setrank - дава ранк на играч\n");
strcat(string2230result, string2230);
format(string2230,512,"{FF0000}/setrankname - променя името на даден ранк\n");
strcat(string2230result, string2230);
format(string2230,512,"{008000}/lc - за да пишеш в лидерския чат\n");
strcat(string2230result, string2230);
format(string2230,512,"{FF0000}/checktogf - за да провериш дали даден играч вижда или не вижда FACTION чата\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/factionmute(/fmute) - слагате MUTE в FACTION CHAT-а на играч\n");
strcat(string2230result, string2230);
format(string2230,512,"{008000}/factiotimenmute(/ftmute) - слагате TIMEMUTE в FACTION CHAT-а на играч\n");
strcat(string2230result, string2230);
format(string2230,512,"{FF0000}/fmuted - проверявате кой е MUTE в FACTION CHAT-а\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/factionmuteall(/fmuteall) - заглушавате всички играчи от твоята банда/мафия в FACTION CHAT-а\n");
strcat(string2230result, string2230);
format(string2230,512,"{008000}/factionunmuteall(/funmuteall) - отглушавате всички играчи от твоята банда/мафия в FACTION CHAT-а\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/nfmute - слагате MUTE в FACTION чата на играч по никнейм\n");
strcat(string2230result, string2230);
format(string2230,512,"{008000}/nftmute - слагате TIME MUTE в FACTION чата на играч по никнейм\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/fwarn - слага FACTION предупреждение на даден играч\n");
strcat(string2230result, string2230);
format(string2230,512,"{008000}/unfwarn - маха FACTION предупреждение на даден играч\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/nfwarn - слага FACTION предупреждение на даден акаунт\n");
strcat(string2230result, string2230);
format(string2230,512,"{008000}/nunfwarn - маха FACTION предупреждение на даден акаунт\n");
strcat(string2230result, string2230);
format(string2230,512,"{FF0000}/checkfwarn - да провериш колко FACTION предупреждения има даден играч\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/ismember - за да провериш даден играч дали е от твоята банда/мафия\n");
strcat(string2230result, string2230);
new closeddialog=3500;
ShowPlayerDialog(playerid,closeddialog,DIALOG_STYLE_MSGBOX,"{33CCFF}FACTION HELP",string2230result,"Затвори","");
}
}
if(dialogid==8)
{
if(!response)
{
format(string256,256,"{FFFFFF}Добре дошъл {40BF00}%s\n{FFFFFF}Моля регистрирай акаунта като въведеш паролата отдолу:",pname[playerid]);
ShowPlayerDialog(playerid,0,DIALOG_STYLE_PASSWORD,"Регистрация:",string256,"Регистрирай","Излез");
}
if(response)
{
if(!IsNumeric(inputtext)){
ShowPlayerDialog(playerid,8,DIALOG_STYLE_INPUT,"GSM номер:","{FF0000}GSM номерът трябва да съдържа само цифри!","Въведи","Пропусни");
return 1;
}
if(strlen(inputtext)!= 10)
{
ShowPlayerDialog(playerid,8,DIALOG_STYLE_INPUT,"GSM номер:","{FF0000}GSM номерът трябва да съдържа точно 10 цифри!","Въведи","Пропусни");
}
else
{
PlayerInfo[playerid][pGSM] = strval(inputtext);
format(string256,256,"{FFFFFF}Добре дошъл {40BF00}%s\n{FFFFFF}Моля регистрирай акаунта като въведеш паролата отдолу:",pname[playerid]);
ShowPlayerDialog(playerid,0,DIALOG_STYLE_PASSWORD,"Регистрация:",string256,"Регистрирай","Излез");
}
}
}
if(dialogid==5)
{
if(!response)
{
}
if(response) // If they clicked 'Select' or double-clicked a weapon
{
// Give them the weapon
switch(listitem)
{
//          new noerrorstring4[115];
case 0:
{
format(noerrorstring4,115,"{FFFFFF}Вашата обща сума е {40BF00}$%d\n", PlayerInfo[playerid][pAccount]);
new closeddialog=3500;
ShowPlayerDialog(playerid,closeddialog,DIALOG_STYLE_MSGBOX,"Обща сума:",noerrorstring4,"Затвори","");
}
case 1:
{
format(noerrorstring4,115,"{FFFFFF}Вие имате {40BF00}$%d\n{FFFFFF}Моля въведете отдолу колко долара искате да изтеглите от вашата сума:", PlayerInfo[playerid][pAccount]);
ShowPlayerDialog(playerid,6,DIALOG_STYLE_INPUT,"Изтегли пари:",noerrorstring4,"Изтегли","Назад");
}
case 2:
{
format(string175,175,"{FFFFFF}Вие имате {FF0000}%d{FFFFFF} нарушения. За да платите едно това ще ви струва {40BF00}$1000\n{FFFFFF}Моля въведете отдолу колко броя нарушения искате да платите:", PlayerInfo[playerid][pWanted]);
ShowPlayerDialog(playerid,7,DIALOG_STYLE_INPUT,"Плати нарушение:",string175,"Плати","Назад");
}
}
}
}
if(dialogid==6)
{
if(!response)
{
}
if(response)
{
if(!IsNumeric(inputtext))
{
SendClientMessage(playerid,0xB4B5B7FF,"Въведи само цифри !");
return 1;
}
if(strval(inputtext) == 0)
{
SendClientMessage(playerid,0xB4B5B7FF,"Въведи число различно от 0 !");
return 1;
}
if(PlayerInfo[playerid][pAccount]<strval(inputtext))
{
SendClientMessage(playerid,0xB4B5B7FF,"Ти нямаш толкова пари !");
return 1;
}
//new noerrorstring4[115];
GivePlayerCash(playerid,strval(inputtext));
PlayerInfo[playerid][pAccount]-=strval(inputtext);
//ApplyAnimation(playerid, "PED", "ATM", 3.0,1,1,0,0,0);
format(noerrorstring4, 115, "Вие успешно изтеглихте {40BF00}$%d {FFFFFF}от вашата обща сума.", strval(inputtext));
SendClientMessage(playerid, 0xFFFFFFFF, noerrorstring4);
}
else
{
ShowPlayerDialog(playerid, 5, DIALOG_STYLE_LIST, "Банкомат", "Обща сума\nИзтегли пари\nВнеси пари", "Избери", "Затвори");
}
}
if(dialogid==7)
{
if(!response)
{
}
if(response) //Continue
{
if(!IsNumeric(inputtext))
{
SendClientMessage(playerid,0xB4B5B7FF,"Въведи само цифри !");
return 1;
}
if(strval(inputtext) == 0)
{
SendClientMessage(playerid,0xB4B5B7FF,"Въведи число различно от 0 !");
return 1;
}
if(strval(inputtext)>PlayerInfo[playerid][pWanted])
{
SendClientMessage(playerid, 0xB4B5B7FF, "Ти нямаш толкова звезди !");
return 1;
}
if(PlayerInfo[playerid][pCash]<strval(inputtext)*1000)
{
SendClientMessage(playerid,0xB4B5B7FF,"Ти нямаш толкова пари !");
return 1;
}
//new noerrorstring4[115];
GivePlayerCash(playerid,-strval(inputtext)*1000);
format(noerrorstring4, 115, "Вие успешно платихте {40BF00}%d {FFFFFF}нарушение/я ", strval(inputtext),PlayerInfo[playerid][pAccount]);
SendClientMessage(playerid, 0xFFFFFFFF, noerrorstring4);
PlayerInfo[playerid][pWanted]-=strval(inputtext);
}
else
{
ShowPlayerDialog(playerid, 5, DIALOG_STYLE_LIST, "Банкомат", "Обща сума\nИзтегли пари\nПлати нарушение", "Избери", "Затвори");
}
}
return 1;
}
public OnPlayerEditAttachedObject( playerid, response, index, modelid, boneid,
Float:fOffsetX, Float:fOffsetY, Float:fOffsetZ,
Float:fRotX, Float:fRotY, Float:fRotZ,
Float:fScaleX, Float:fScaleY, Float:fScaleZ )
{
SetPlayerAttachedObject(playerid,index,modelid,boneid,fOffsetX,fOffsetY,fOffsetZ,fRotX,fRotY,fRotZ,fScaleX,fScaleY,fScaleZ);
if(index == 9)
{
SendClientMessage(playerid,0x33AA33FF,"SERVER: Ти успешно запази координатите на обжекта!");
}
return 1;
}
public OnPlayerEditObject(playerid, playerobject, objectid, response, Float:fX, Float:fY, Float:fZ, Float:fRotX, Float:fRotY, Float:fRotZ)
{
new Float:oldX, Float:oldY, Float:oldZ, Float:oldRotX, Float:oldRotY, Float:oldRotZ;
GetObjectPos(objectid, oldX, oldY, oldZ);
GetObjectRot(objectid, oldRotX, oldRotY, oldRotZ);
if(!playerobject) // If this is a global object, sync the position for other players
{
if(!IsValidObject(objectid)) return 1;
SetObjectPos(objectid, fX, fY, fZ);
SetObjectRot(objectid, fRotX, fRotY, fRotZ);
}
if(response == EDIT_RESPONSE_FINAL)
{
//if(attachedPlayerObject[objectid]==true)
//{
SetObjectPos(objectid, fX, fY, fZ);
SetObjectRot(objectid, fRotX, fRotY, fRotZ);
//}
}
if(response == EDIT_RESPONSE_FINAL)
{
//	if(objectid==objectut[playerid])
//	{
//		AttachObjectToVehicle(objectut[playerid], GetPlayerVehicleID(playerid), fX, fY, fZ, fRotX, fRotY, fRotZ);
//	}
}
if(response == EDIT_RESPONSE_CANCEL)
{
//The player cancelled, so put the object back to it's old position
if(!playerobject) //Object is not a playerobject
{
SetObjectPos(objectid, oldX, oldY, oldZ);
SetObjectRot(objectid, oldRotX, oldRotY, oldRotZ);
}
else
{
SetPlayerObjectPos(playerid, objectid, oldX, oldY, oldZ);
SetPlayerObjectRot(playerid, objectid, oldRotX, oldRotY, oldRotZ);
}
}
return 1;
}
public CorDetector(Float:radi, playerid, targetid)
{
if(IsPlayerConnected(playerid)&&IsPlayerConnected(targetid))
{
new Float:posx, Float:posy, Float:posz;
new Float:oldposx, Float:oldposy, Float:oldposz;
new Float:tempposx, Float:tempposy, Float:tempposz;
GetPlayerPos(playerid, oldposx, oldposy, oldposz);
//radi = 2.0; //Trigger Radius
GetPlayerPos(targetid, posx, posy, posz);
tempposx = (oldposx -posx);
tempposy = (oldposy -posy);
tempposz = (oldposz -posz);
printf("DEBUG: X:%f Y:%f Z:%f",posx,posy,posz);
if (((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi)))
{
return 1;
}
}
return 0;
}
public OnPlayerClickPlayer(playerid, clickedplayerid, source)
{
return 1;
}
public OnPlayerTakeDamage(playerid, issuerid, Float:amount, weaponid, bodypart)
{
return 0;
}
public RemoveHousePick(playerid)
{
onhousepick2[playerid]=0;
if(onhousepick2[playerid]==0)
{
KillTimer(housetimer[playerid]);
isinhousepickup[playerid]=0;
}}
public ProxDetector(Float:radi, playerid, string[],col1,col2,col3,col4,col5)
{
if(IsPlayerConnected(playerid))
{
new Float:posx, Float:posy, Float:posz;
new Float:oldposx, Float:oldposy, Float:oldposz;
new Float:tempposx, Float:tempposy, Float:tempposz;
GetPlayerPos(playerid, oldposx, oldposy, oldposz);
//radi = 2.0; //Trigger Radius
for(new i = 0; i < MAX_PLAYERS; i++)
{
if(IsPlayerConnected(i))
{
if(!BigEar[i])
{
GetPlayerPos(i, posx, posy, posz);
tempposx = (oldposx -posx);
tempposy = (oldposy -posy);
tempposz = (oldposz -posz);
//printf("DEBUG: X:%f Y:%f Z:%f",posx,posy,posz);
if (((tempposx < radi/16) && (tempposx > -radi/16)) && ((tempposy < radi/16) && (tempposy > -radi/16)) && ((tempposz < radi/16) && (tempposz > -radi/16)))
{
SendClientMessage(i, col1, string);
}
else if (((tempposx < radi/8) && (tempposx > -radi/8)) && ((tempposy < radi/8) && (tempposy > -radi/8)) && ((tempposz < radi/8) && (tempposz > -radi/8)))
{
SendClientMessage(i, col2, string);
}
else if (((tempposx < radi/4) && (tempposx > -radi/4)) && ((tempposy < radi/4) && (tempposy > -radi/4)) && ((tempposz < radi/4) && (tempposz > -radi/4)))
{
SendClientMessage(i, col3, string);
}
else if (((tempposx < radi/2) && (tempposx > -radi/2)) && ((tempposy < radi/2) && (tempposy > -radi/2)) && ((tempposz < radi/2) && (tempposz > -radi/2)))
{
SendClientMessage(i, col4, string);
}
else if (((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi)))
{
SendClientMessage(i, col5, string);
}
}
else
{
SendClientMessage(i, col1, string);
}
}
}
}//not connected
return 1;
}
Float:GetXYInFrontOfPlayer(playerid, &Float:q, &Float:w, Float:distance)
{
new Float:a;
GetPlayerPos(playerid, q, w, a);
if (GetPlayerState(playerid) == PLAYER_STATE_DRIVER) GetVehicleZAngle(GetPlayerVehicleID(playerid), a);
else GetPlayerFacingAngle(playerid, a);
q += (distance * floatsin(-a, degrees));
w += (distance * floatcos(-a, degrees));
return a;
}
Float:GetXYBehindPlayer(playerid, &Float:q, &Float:w, Float:distance)
{
new Float:a;
GetPlayerPos(playerid, q, w, a);
if (GetPlayerState(playerid) == PLAYER_STATE_DRIVER) GetVehicleZAngle(GetPlayerVehicleID(playerid), a);
else GetPlayerFacingAngle(playerid, a);
q += (distance * -floatsin(-a, degrees));
w += (distance * -floatcos(-a, degrees));
return a;
}
SaveAllBizz()
{
for(new alb=0; alb<MAX_BIZZ; alb++)
{
new bizz[64]; format(bizz, 64, "/Bizz/%d.ini", alb);
if(dini_Exists(bizz))
{
dini_IntSet(bizz,"bEarnings",BizInfo[alb][bEarnings]);
dini_IntSet(bizz,"bFee",BizInfo[alb][bFee]);
dini_Set(bizz,"bName",BizInfo[alb][bName]);
}
}
}
SavePlayerStats(playerid)
{
if(PlayerInfo[playerid][pRegistred]==1)
{
new accountfiles[115];
format(accountfiles, 115, "%s.ini", pname[playerid]);
dini_IntSet(accountfiles, "pRegistred", PlayerInfo[playerid][pRegistred]);
dini_IntSet(accountfiles, "pAdmin", PlayerInfo[playerid][pAdmin]);
dini_IntSet(accountfiles, "pADMINMute", PlayerInfo[playerid][pADMINMute]);
dini_IntSet(accountfiles, "pTimeMute", PlayerInfo[playerid][pTimeMute]);
dini_IntSet(accountfiles, "pTimeJail", PlayerInfo[playerid][pTimeJail]);
dini_IntSet(accountfiles, "pTGoto", PlayerInfo[playerid][pTGoto]);
dini_IntSet(accountfiles, "pTSpec", PlayerInfo[playerid][pTSpec]);
dini_IntSet(accountfiles, "pWarns", PlayerInfo[playerid][pWarns]);
dini_IntSet(accountfiles, "pPlayerRefuelTimer", PlayerInfo[playerid][pPlayerRefuelTimer]);
dini_IntSet(accountfiles, "pPizzaTimerWorkAgain", PlayerInfo[playerid][pPizzaTimerWorkAgain]);
dini_IntSet(accountfiles, "pBoatTimerWorkAgain", PlayerInfo[playerid][pBoatTimerWorkAgain]);
dini_IntSet(accountfiles, "pCoalmineTimerWorkAgain", PlayerInfo[playerid][pCoalmineTimerWorkAgain]);
dini_IntSet(accountfiles, "pSweeperTimerWorkAgain", PlayerInfo[playerid][pSweeperTimerWorkAgain]);
dini_IntSet(accountfiles, "pPilotTimerWorkAgain", PlayerInfo[playerid][pPilotTimerWorkAgain]);
dini_IntSet(accountfiles, "pDeliverTimerWorkAgain", PlayerInfo[playerid][pDeliverTimerWorkAgain]);
dini_IntSet(accountfiles, "pBusTimerWorkAgain", PlayerInfo[playerid][pBusTimerWorkAgain]);
dini_IntSet(accountfiles, "pTruckTimerWorkAgain", PlayerInfo[playerid][pTruckTimerWorkAgain]);
dini_IntSet(accountfiles, "pOffice", PlayerInfo[playerid][pOffice]);
dini_IntSet(accountfiles, "pCMN1", PlayerInfo[playerid][pCMN1]);
dini_IntSet(accountfiles, "pStreetRaceSuccess", PlayerInfo[playerid][pStreetRaceSuccess]);
dini_IntSet(accountfiles, "pMoneyboxSuccess", PlayerInfo[playerid][pMoneyboxSuccess]);
dini_IntSet(accountfiles, "pRNMute", PlayerInfo[playerid][pRNMute]);
dini_IntSet(accountfiles, "pAdvertTime", PlayerInfo[playerid][pAdvertTime]);
dini_IntSet(accountfiles, "pLodka", PlayerInfo[playerid][pLodka]);
dini_IntSet(accountfiles, "pDMONKills", PlayerInfo[playerid][pDMONKills]);
dini_IntSet(accountfiles, "pHook", PlayerInfo[playerid][pHook]);
dini_IntSet(accountfiles, "pStyle", PlayerInfo[playerid][pStyle]);
dini_IntSet(accountfiles, "pArmour2", PlayerInfo[playerid][pArmour2]);
dini_IntSet(accountfiles, "pMoonshine1", PlayerInfo[playerid][pMoonshine1]);
dini_IntSet(accountfiles, "pWeed1", PlayerInfo[playerid][pWeed1]);
dini_IntSet(accountfiles, "pCocaine1", PlayerInfo[playerid][pCocaine1]);
dini_IntSet(accountfiles, "pHeroin1", PlayerInfo[playerid][pHeroin1]);
dini_IntSet(accountfiles, "pVlak", PlayerInfo[playerid][pVlak]);
dini_IntSet(accountfiles, "pGLeader", PlayerInfo[playerid][pGLeader]);
dini_IntSet(accountfiles, "pHelikopter", PlayerInfo[playerid][pHelikopter]);
dini_IntSet(accountfiles, "pSamolet", PlayerInfo[playerid][pSamolet]);
dini_IntSet(accountfiles, "pManage", PlayerInfo[playerid][pManage]);
dini_IntSet(accountfiles, "pEvent", PlayerInfo[playerid][pEvent]);
dini_IntSet(accountfiles, "pIFC", PlayerInfo[playerid][pIFC]);
dini_IntSet(accountfiles, "pSpecialForce", PlayerInfo[playerid][pSpecialForce]);
dini_IntSet(accountfiles, "pAWarns", PlayerInfo[playerid][pAWarns]);
dini_IntSet(accountfiles, "pDeathmatchSuccess", PlayerInfo[playerid][pDeathmatchSuccess]);
dini_IntSet(accountfiles, "pWeaponS", PlayerInfo[playerid][pWeaponS]);
dini_IntSet(accountfiles, "pHouseO", PlayerInfo[playerid][pHouseO]);
dini_IntSet(accountfiles, "pSpawnO", PlayerInfo[playerid][pSpawnO]);
dini_IntSet(accountfiles, "pBizO", PlayerInfo[playerid][pBizO]);
dini_IntSet(accountfiles, "pVip", PlayerInfo[playerid][pVip]);
dini_IntSet(accountfiles, "pTeam", PlayerInfo[playerid][pTeam]);
dini_IntSet(accountfiles, "pRank", PlayerInfo[playerid][pRank]);
dini_IntSet(accountfiles, "pLevel", PlayerInfo[playerid][pLevel]);
dini_IntSet(accountfiles, "pBSpec", PlayerInfo[playerid][pBSpec]);
dini_IntSet(accountfiles, "pEP", PlayerInfo[playerid][pEP]);
dini_IntSet(accountfiles, "pEPS", PlayerInfo[playerid][pEPS]);
dini_IntSet(accountfiles, "pCash", PlayerInfo[playerid][pCash]);
dini_IntSet(accountfiles, "pAccount", PlayerInfo[playerid][pAccount]);
dini_IntSet(accountfiles, "pAFK", PlayerInfo[playerid][pAFK]);
dini_IntSet(accountfiles, "pLaser", PlayerInfo[playerid][pLaser]);
dini_IntSet(accountfiles, "pWanted", PlayerInfo[playerid][pWanted]);
dini_IntSet(accountfiles, "pTogPM", PlayerInfo[playerid][pTogPM]);
dini_IntSet(accountfiles, "pIgnorePM", PlayerInfo[playerid][pIgnorePM]);
dini_IntSet(accountfiles, "pJail", PlayerInfo[playerid][pJail]);
dini_IntSet(accountfiles, "pMuted", PlayerInfo[playerid][pMuted]);
dini_IntSet(accountfiles, "pBizEP", PlayerInfo[playerid][pBizEP]);
dini_IntSet(accountfiles, "pReadTA", PlayerInfo[playerid][pReadTA]);
dini_IntSet(accountfiles, "pRadio", PlayerInfo[playerid][pRadio]);
dini_IntSet(accountfiles, "pCigarettes", PlayerInfo[playerid][pCigarettes]);
dini_IntSet(accountfiles, "pBriefcase", PlayerInfo[playerid][pBriefcase]);
new stringClothes[70];
for(new i=1; i<9; i++)
{
format(stringClothes,70,"pClothes[%d]",i);
dini_IntSet(accountfiles, stringClothes, PlayerInfo[playerid][pClothes][i]);
}
dini_IntSet(accountfiles, "pChantichki", PlayerInfo[playerid][pChantichki]);
dini_IntSet(accountfiles, "pFuelcase", PlayerInfo[playerid][pFuelcase]);
dini_IntSet(accountfiles, "pDice", PlayerInfo[playerid][pDice]);
dini_IntSet(accountfiles, "pReactionTestsWon", PlayerInfo[playerid][pReactionTestsWon]);
dini_IntSet(accountfiles, "pBizCash", PlayerInfo[playerid][pBizCash]);
dini_IntSet(accountfiles, "pKills", PlayerInfo[playerid][pKills]);
dini_IntSet(accountfiles, "pDeaths", PlayerInfo[playerid][pDeaths]);
dini_IntSet(accountfiles, "pJailReason", PlayerInfo[playerid][pJailReason]);
dini_IntSet(accountfiles, "pMuteReason", PlayerInfo[playerid][pMuteReason]);
dini_IntSet(accountfiles, "pLMuted", PlayerInfo[playerid][pLMuted]);
dini_IntSet(accountfiles, "pAMuted", PlayerInfo[playerid][pAMuted]);
dini_IntSet(accountfiles, "pFMuted", PlayerInfo[playerid][pFMuted]);
dini_IntSet(accountfiles, "pFWarns", PlayerInfo[playerid][pFWarns]);
dini_IntSet(accountfiles, "pGSM", PlayerInfo[playerid][pGSM]);
dini_IntSet(accountfiles, "pPJail", PlayerInfo[playerid][pPJail]);
dini_IntSet(accountfiles, "pBlock", PlayerInfo[playerid][pBlock]);
dini_IntSet(accountfiles, "pVGuns", PlayerInfo[playerid][pVGuns]);
dini_IntSet(accountfiles, "pHealT", PlayerInfo[playerid][pHealT]);
dini_IntSet(accountfiles, "pFixT", PlayerInfo[playerid][pFixT]);
dini_IntSet(accountfiles, "pAHide", PlayerInfo[playerid][pAHide]);
dini_IntSet(accountfiles, "pTest", PlayerInfo[playerid][pTest]);
dini_IntSet(accountfiles, "pADuty", PlayerInfo[playerid][pADuty]);
dini_IntSet(accountfiles, "pASkin", PlayerInfo[playerid][pASkin]);
dini_IntSet(accountfiles, "pLastPayday", PlayerInfo[playerid][pLastPayday]);
dini_IntSet(accountfiles, "pComingBan", PlayerInfo[playerid][pComingBan]);
dini_Set(accountfiles, "pReasonMute", PlayerInfo[playerid][pReasonMute]);
}
}
ShowPlayerStats(playerReceive, playerStats)
{
new gangname[100];
new isbizzowner[5];
new bizznumber=-1;
new ishouseowner[5];
new housenumber=-1;
new isofficeowner[5];
new isinjob[5];
if(PlayerInfo[playerStats][pJob]==1) format(isinjob,5,"Yes"); if(PlayerInfo[playerStats][pJob]==0) format(isinjob,5,"No");
format(gangname,100,"%s",TeamInfo[PlayerInfo[playerStats][pTeam]][tName]);
new ranktext[256];
switch(PlayerInfo[playerStats][pRank])
{
case 1: format(ranktext, 256, "%s", TeamInfo[PlayerInfo[playerStats][pTeam]][tRank1]);
case 2: format(ranktext, 256, "%s", TeamInfo[PlayerInfo[playerStats][pTeam]][tRank2]);
case 3: format(ranktext, 256, "%s", TeamInfo[PlayerInfo[playerStats][pTeam]][tRank3]);
case 4: format(ranktext, 256, "%s", TeamInfo[PlayerInfo[playerStats][pTeam]][tRank4]);
case 5: format(ranktext, 256, "%s", TeamInfo[PlayerInfo[playerStats][pTeam]][tRank5]);
case 6: format(ranktext, 256, "%s", TeamInfo[PlayerInfo[playerStats][pTeam]][tRank6]);
}
if(PlayerInfo[playerStats][pOffice]==0)format(isofficeowner,5,"No");
if(PlayerInfo[playerStats][pOffice]==1)format(isofficeowner,5,"Yes");
if(PlayerInfo[playerStats][pBizO]>-1)
{
bizznumber=PlayerInfo[playerStats][pBizO];
format(isbizzowner,5,"Yes");
}
if(PlayerInfo[playerStats][pBizO]==-1)
{
format(isbizzowner,5,"No");
//if(maxhouses==1)
//{
bizznumber=0;
//}
//else
//{
// bizznumber=maxhouses;
}//}
if(PlayerInfo[playerStats][pHouseO]>-1)
{
housenumber=PlayerInfo[playerStats][pHouseO];
format(ishouseowner,5,"Yes");
}
if(PlayerInfo[playerStats][pHouseO]==-1)
{
format(ishouseowner,5,"No");
if(maxhouses==1)
{
housenumber=0;
}
else
{
housenumber=maxhouses;
}}
format(string256,256,"Статистиката на %s",pname[playerStats]);
SendClientMessage(playerReceive,0xFFFF00FF,string256);
format(string256,256,"Level: %d | Admin Level: %d | VIP Level: %d | EP Skill: %d | Weapon Skill: %d",PlayerInfo[playerStats][pLevel]
,PlayerInfo[playerStats][pAdmin],PlayerInfo[playerStats][pVip],PlayerInfo[playerStats][pEPS],PlayerInfo[playerStats][pWeaponS]);
SendClientMessage(playerReceive,0xB4B5B7FF,string256);
format(string256,256,"Cash: $%d | Kills: %d | Deaths: %d | House: %s(%d) | Bizz: %s(%d) | Office: %s(%d) | Job: %s | EP: %d/%d",PlayerInfo[playerStats][pCash]
,PlayerInfo[playerStats][pKills],PlayerInfo[playerStats][pDeaths],ishouseowner,housenumber,isbizzowner,bizznumber,isofficeowner,PlayerInfo[playerStats][pOffice],isinjob,PlayerInfo[playerStats][pEP],PlayerInfo[playerStats][pLevel]+6);
SendClientMessage(playerReceive,0xB4B5B7FF,string256);
format(string256,256,"Moneybox: %d/4 | Streetrace: %d/4 | Deathmatch: %d/4 | CMN1 Kills: %d/4"
,PlayerInfo[playerStats][pMoneyboxSuccess],PlayerInfo[playerStats][pStreetRaceSuccess],PlayerInfo[playerStats][pDeathmatchSuccess],PlayerInfo[playerStats][pCMN1]);
SendClientMessage(playerReceive,0xB4B5B7FF,string256);
format(string256,256,"Wanted Level: %d | Police Jail Time: %d минути"
,PlayerInfo[playerStats][pWanted],PlayerInfo[playerStats][pPJail]);
SendClientMessage(playerReceive,0xB4B5B7FF,string256);
format(string256,256,"Faction: %s | Faction Rank: %s(%d) | Faction Mute Time: %d минути | Faction Warns: %d/3"
,gangname ,ranktext,PlayerInfo[playerStats][pRank],PlayerInfo[playerStats][pFMuted],PlayerInfo[playerStats][pFWarns]);
SendClientMessage(playerReceive,0xB4B5B7FF,string256);
format(string256,256,"Mute Time: %d минути | Jail Time: %d минути | R&N Mute Time: %d минути | Warns: %d/5 | Admin Warns: %d/4"
,(PlayerInfo[playerStats][pMuted]/60),PlayerInfo[playerStats][pJail]/60,PlayerInfo[playerStats][pRNMute],PlayerInfo[playerStats][pWarns],PlayerInfo[playerStats][pAWarns]);
SendClientMessage(playerReceive,0xB4B5B7FF,string256);
format(string256,256,"Играно време след получаването на последния Payday: %d минути",PlayerInfo[playerStats][pLastPayday]);
SendClientMessage(playerReceive,0x40BF00FF,string256);
}
LeaveGangPlayerAffect(playerid)
{
if(IsPlayerInAnyVehicle(playerid) == 1 && PlayerInfo[playerid][pADuty]==0)
{
SendClientMessage(playerid,0xFFFFFFFF, "* Твоят скин не се смени, защото не си пешеходец *");
}
else
{
if(adutyskinchanged[playerid]==0)
{
SetPlayerSkin(playerid,spawnselectedskin[playerid]);
}
}
PlayerInfo[playerid][pSpawnO]=1; SendClientMessage(playerid, 0xFFFFFFFF, "SERVER: Твоят spawn беше променен на Civil spawn!");
if(PlayerInfo[playerid][pADuty]==0){SetPlayerColor(playerid,0xFFFFFFFF);}
PlayerInfo[playerid][pRank]=1;
PlayerInfo[playerid][pTeam]=0;
PlayerInfo[playerid][pFWarns]=0;
if(PlayerInfo[playerid][pVip]>3 || freevip==1) SetPVarInt(playerid, "color", 0);
}
LockAllJobVehicles()
{
ToggleEngine(carpizza[1], VEHICLE_PARAMS_OFF);
ToggleEngine(carpizza[2], VEHICLE_PARAMS_OFF);
ToggleEngine(carpizza[3], VEHICLE_PARAMS_OFF);
ToggleEngine(carpizza[4], VEHICLE_PARAMS_OFF);
ToggleEngine(carpizza[5], VEHICLE_PARAMS_OFF);
ToggleEngine(carpilot[1], VEHICLE_PARAMS_OFF);
ToggleEngine(carpilot[2], VEHICLE_PARAMS_OFF);
ToggleEngine(carpilot[3], VEHICLE_PARAMS_OFF);
ToggleEngine(carpilot[4], VEHICLE_PARAMS_OFF);
ToggleEngine(carpilot[5], VEHICLE_PARAMS_OFF);
ToggleEngine(carsweeper[1], VEHICLE_PARAMS_OFF);
ToggleEngine(carsweeper[2], VEHICLE_PARAMS_OFF);
ToggleEngine(carsweeper[3], VEHICLE_PARAMS_OFF);
ToggleEngine(carsweeper[4], VEHICLE_PARAMS_OFF);
ToggleEngine(carcoalmine[1], VEHICLE_PARAMS_OFF);
ToggleEngine(carcoalmine[2], VEHICLE_PARAMS_OFF);
ToggleEngine(carcoalmine[3], VEHICLE_PARAMS_OFF);
ToggleEngine(carcoalmine[4], VEHICLE_PARAMS_OFF);
ToggleEngine(cardeliver[1], VEHICLE_PARAMS_OFF);
ToggleEngine(cardeliver[2], VEHICLE_PARAMS_OFF);
ToggleEngine(cardeliver[3], VEHICLE_PARAMS_OFF);
ToggleEngine(cardeliver[4], VEHICLE_PARAMS_OFF);
ToggleEngine(cardeliver[5], VEHICLE_PARAMS_OFF);
ToggleEngine(cartruck[1], VEHICLE_PARAMS_OFF);
ToggleEngine(cartruck[2], VEHICLE_PARAMS_OFF);
ToggleEngine(cartruck[3], VEHICLE_PARAMS_OFF);
ToggleEngine(cartruck[4], VEHICLE_PARAMS_OFF);
ToggleEngine(cartruck[5], VEHICLE_PARAMS_OFF);
ToggleEngine(carbus[1], VEHICLE_PARAMS_OFF);
ToggleEngine(carbus[2], VEHICLE_PARAMS_OFF);
ToggleEngine(carbus[3], VEHICLE_PARAMS_OFF);
ToggleEngine(carbus[4], VEHICLE_PARAMS_OFF);
ToggleEngine(carbus[5], VEHICLE_PARAMS_OFF);
}
BoughtHouse(playerid, houseid)
{
new house[64]; format(house, 64, "/Houses/%d.ini", houseid);
format(HouseInfo[houseid][hOwnerName],256,"%s",pname[playerid]);
HouseInfo[houseid][hOwner]=1;
dini_IntSet(house, "hOwner",HouseInfo[houseid][hOwner]);
dini_Set(house, "hOwnerName", HouseInfo[houseid][hOwnerName]);
}
SaveAllTeams()
{
new teams[64];
for(new i; i<MAX_TEAMS; i++)
{
format(teams, 64, "/Teams/%d.ini", i);
}
}
CreateDMONText(playerid)
{
DMON[playerid]=TextDrawCreate(528.000000,385.000000," ~r~Kills: ~w~0/~g~20");
TextDrawAlignment(DMON[playerid],0);
TextDrawBackgroundColor(DMON[playerid],0x000000ff);
TextDrawFont(DMON[playerid],1);
TextDrawLetterSize(DMON[playerid], 0.2800,1.8000);
TextDrawSetProportional(DMON[playerid],1);
TextDrawSetShadow(DMON[playerid],1);
}
IfPlayerInDmonChangePos(playerid)
{
if(playerInDMON[playerid]==1)
{
new randomSpawnPos=randomex(1,5);
if(dmonArena==1)
{
if(randomSpawnPos<3)
{
SetPlayerPos(playerid, 1411.2889,1.3799,1000.9237);
}
if(randomSpawnPos>2)
{
SetPlayerPos(playerid, 1360.4244,-39.4643,1007.8828);
}
SetPlayerInterior(playerid,1);
}
if(dmonArena==2)
{
if(randomSpawnPos<3)
{
SetPlayerPos(playerid, -1426.4996,1054.9972,1038.4913);
}
if(randomSpawnPos>2)
{
SetPlayerPos(playerid, -1473.7843,948.4413,1036.7908);
}
SetPlayerInterior(playerid,15);
}
SetPlayerVirtualWorld(playerid,3233);
SetCameraBehindPlayer(playerid);
}
}
SetPlayerPosInDMON(playerid)
{
new randomSpawnPos=randomex(1,5);
if(dmonArena==1)
{
if(randomSpawnPos<3)
{
SetPlayerPos(playerid, 1411.2889,1.3799,1000.9237);
}
if(randomSpawnPos>2)
{
SetPlayerPos(playerid, 1360.4244,-39.4643,1007.8828);
}
SetPlayerInterior(playerid,1);
}
if(dmonArena==2)
{
if(randomSpawnPos<3)
{
SetPlayerPos(playerid, -1426.4996,1054.9972,1038.4913);
}
if(randomSpawnPos>2)
{
SetPlayerPos(playerid, -1473.7843,948.4413,1036.7908);
}
SetPlayerInterior(playerid,15);
}
SetPlayerVirtualWorld(playerid,3233);
SetCameraBehindPlayer(playerid);
}
GivePlayerGunInDMON(playerid)
{
new r = random(sizeof(DmonRandomWeapons));
GivePlayerWeapon(playerid, DmonRandomWeapons[r][0], DmonRandomWeapons[r][1]);
}
GetPlayerCurrentIP(playerid)
{
new playerAccountFile[115];
format(playerAccountFile, 115, "%s.ini", pname[playerid]);
new playerIP[35]; GetPlayerIp(playerid,playerIP,35);
if(dini_Exists(playerAccountFile))
{
dini_Set(playerAccountFile, "pIP", playerIP);
}
}
DefineGangRankSkins()
{
new i=1;
gangrankskin[i][2]=126; gangrankskin[i][3]=101; gangrankskin[i][4]=100; gangrankskin[i][5]=19; gangrankskin[i][6]=186; i++; // VIP GANG
gangrankskin[i][1]=105; gangrankskin[i][2]=149; gangrankskin[i][3]=86; gangrankskin[i][4]=106; gangrankskin[i][5]=107; gangrankskin[i][6]=107; i++; // GSF GANG
gangrankskin[i][1]=103; gangrankskin[i][2]=103; gangrankskin[i][3]=102; gangrankskin[i][4]=102; gangrankskin[i][5]=104; gangrankskin[i][6]=104; i++; // BALLAS GANG
gangrankskin[i][1]=109; gangrankskin[i][2]=109; gangrankskin[i][3]=110; gangrankskin[i][4]=110; gangrankskin[i][5]=108; gangrankskin[i][6]=108; i++; // VAGOS GANG
gangrankskin[i][1]=114; gangrankskin[i][2]=116; gangrankskin[i][3]=114; gangrankskin[i][4]=116; gangrankskin[i][5]=116; gangrankskin[i][6]=115; i++; // AZTECAS GANG
gangrankskin[i][1]=177; gangrankskin[i][2]=176; gangrankskin[i][3]=156; gangrankskin[i][4]=176; gangrankskin[i][5]=21; gangrankskin[i][6]=21; i++; // CRIPZ GANG
gangrankskin[i][1]=117; gangrankskin[i][2]=117; gangrankskin[i][3]=118; gangrankskin[i][4]=117; gangrankskin[i][5]=120; gangrankskin[i][6]=120; i++; // TRIADS GANG
gangrankskin[i][1]=173; gangrankskin[i][2]=174; gangrankskin[i][3]=174; gangrankskin[i][4]=175; gangrankskin[i][5]=173; gangrankskin[i][6]=174; i++; // RIFA GANG
gangrankskin[i][1]=73; gangrankskin[i][2]=291; gangrankskin[i][3]=247; gangrankskin[i][4]=100; gangrankskin[i][5]=248; gangrankskin[i][6]=248; i++; // SOA GANG
gangrankskin[i][1]=124; gangrankskin[i][2]=121; gangrankskin[i][3]=121; gangrankskin[i][4]=122; gangrankskin[i][5]=123; gangrankskin[i][6]=123; i++; // NANG GANG
gangrankskin[i][1]=111; gangrankskin[i][2]=112; gangrankskin[i][3]=112; gangrankskin[i][4]=125; gangrankskin[i][5]=124; gangrankskin[i][6]=126; i++; // ITALIAN GANG
gangrankskin[i][1]=112; gangrankskin[i][2]=112; gangrankskin[i][3]=124; gangrankskin[i][4]=101; gangrankskin[i][5]=293; gangrankskin[i][6]=293; i++; // BOUNTY GANG
gangrankskin[i][1]=280; gangrankskin[i][2]=284; gangrankskin[i][3]=281; gangrankskin[i][4]=281; gangrankskin[i][5]=281; gangrankskin[i][6]=280; i++; // LSPD GANG
gangrankskin[i][1]=282; gangrankskin[i][2]=282; gangrankskin[i][3]=284; gangrankskin[i][4]=285; gangrankskin[i][5]=286; gangrankskin[i][6]=283; i++; // LVPD GANG
gangrankskin[i][1]=287; gangrankskin[i][2]=287; gangrankskin[i][3]=287; gangrankskin[i][4]=287; gangrankskin[i][5]=287; gangrankskin[i][6]=287; i++; // DF GANG
gangrankskin[i][1]=3; gangrankskin[i][2]=3; gangrankskin[i][3]=185; gangrankskin[i][4]=185; gangrankskin[i][5]=296; gangrankskin[i][6]=296; i++; // SOLDIER GANG
gangrankskin[i][1]=59; gangrankskin[i][2]=60; gangrankskin[i][3]=186; gangrankskin[i][4]=294; gangrankskin[i][5]=123; gangrankskin[i][6]=123; i++; // AZTECAS GANG
gangrankskin[i][1]=217; gangrankskin[i][2]=250; gangrankskin[i][3]=217; gangrankskin[i][4]=250; gangrankskin[i][5]=249; gangrankskin[i][6]=249; i++; // SYNDICATE GANG
gangrankskin[i][1]=22; gangrankskin[i][2]=20; gangrankskin[i][3]=22; gangrankskin[i][4]=29; gangrankskin[i][5]=19; gangrankskin[i][6]=19; i++; // BLOOD GANG
gangrankskin[i][1]=49; gangrankskin[i][2]=47; gangrankskin[i][3]=49; gangrankskin[i][4]=47; gangrankskin[i][5]=292; gangrankskin[i][6]=292; i++; // MS13 GANG
gangrankskin[i][1]=223; gangrankskin[i][2]=217; gangrankskin[i][3]=299; gangrankskin[i][4]=185; gangrankskin[i][5]=126; gangrankskin[i][6]=126; i++; // BGM GANG - RDY
gangrankskin[i][1]=7; gangrankskin[i][2]=7; gangrankskin[i][3]=48; gangrankskin[i][4]=48; gangrankskin[i][5]=47; gangrankskin[i][6]=47; i++; // 343 GANG
}
GivePlayerMBDeliverPoint(playerid)
{
if(onWork[playerid]==0 && gpsOn[playerid]==false)
{
DisablePlayerRaceCheckpoint(playerid);
DisablePlayerCheckpoint(playerid);
if(moneyBoxDPID==0) SetPlayerCheckpoint(playerid, MoneyBoxDeliverpoint1, 3.0);
else if(moneyBoxDPID==1) SetPlayerCheckpoint(playerid, MoneyBoxDeliverpoint2, 3.0);
else if(moneyBoxDPID==2) SetPlayerCheckpoint(playerid, MoneyBoxDeliverpoint3, 3.0);
else if(moneyBoxDPID==3) SetPlayerCheckpoint(playerid, MoneyBoxDeliverpoint4, 3.0);
}
}
GivePlayerMBCheckPoint(playerid)
{
if(onWork[playerid]==0 && gpsOn[playerid]==false)
{
DisablePlayerRaceCheckpoint(playerid);
DisablePlayerCheckpoint(playerid);
if(moneyBoxCPID==0) SetPlayerRaceCheckpoint(playerid,2, MoneyBoxCheckpoint1, MoneyBoxCheckpoint1, 3.0);
else if(moneyBoxCPID==1) SetPlayerRaceCheckpoint(playerid,2, MoneyBoxCheckpoint2, MoneyBoxCheckpoint2, 3.0);
else if(moneyBoxCPID==2) SetPlayerRaceCheckpoint(playerid,2, MoneyBoxCheckpoint3, MoneyBoxCheckpoint3, 3.0);
else if(moneyBoxCPID==3) SetPlayerRaceCheckpoint(playerid,2, MoneyBoxCheckpoint4, MoneyBoxCheckpoint4, 3.0);
}
}
stock GivePlayerDeathmatchPoint(playerid)
{
deathmatchFightArea=randomex(1,3);
new missionCheckpointIndex=randomex(1,3);
if(missionCheckpointIndex==1)
{
if(onWork[playerid]==0 && gpsOn[playerid]==false)
{
SetPlayerCheckpoint(playerid, DeathmatchCheckpoint1, 5.0);
}
}
else if(missionCheckpointIndex==2)
{
if(onWork[playerid]==0 && gpsOn[playerid]==false)
{
SetPlayerCheckpoint(playerid, DeathmatchCheckpoint2, 5.0);
}
}
}

stock GivePlayerStreetRacePoint(playerid)
{
if(streetRaceStarted==false)
{
if(onWork[playerid]==0 && gpsOn[playerid]==false)
{

switch(streetRaceTypeIndex)
{
case 0:
{
SetPlayerRaceCheckpoint(playerid, 2, StreetRaceSprintWaitPoint,StreetRaceSprintWaitPoint, 5.0); //goto
}
case 1:
{
SetPlayerRaceCheckpoint(playerid, 2, StreetRaceDriftWaitPoint,StreetRaceDriftWaitPoint, 5.0); //goto
}
case 2:
{
SetPlayerRaceCheckpoint(playerid, 2, StreetRaceDragWaitPoint,StreetRaceDragWaitPoint, 5.0); //goto
}
case 3:
{
SetPlayerRaceCheckpoint(playerid, 2, StreetRaceLapsWaitPoint,StreetRaceLapsWaitPoint, 5.0); //goto
}
case 4:
{
SetPlayerRaceCheckpoint(playerid, 2, StreetRaceOffroadWaitPoint,StreetRaceOffroadWaitPoint, 5.0); //goto
}
}

}
}
}

stock GivePlayerMoneyBoxPoint(playerid)
{
if(isMoneyBoxGet==false)
{
GivePlayerMBCheckPoint(playerid);
}
else
{
GivePlayerMBDeliverPoint(playerid);
}
}

/*
stock GivePlayerStreetRacePoint(playerid)
{
if(streetRaceStarted==false)
{
GiveSRaceFirstCheckpoint(playerid);
}
}
*/

GivePlayerMission(playerid)
{
if(missionActive==MISSION_DEATHMATCH)
{
GivePlayerDeathmatchPoint(playerid);
}
if(missionActive==MISSION_MONEYBOX)
{
GivePlayerMoneyBoxPoint(playerid);
}
if(missionActive==MISSION_STREETRACE)
{
GivePlayerStreetRacePoint(playerid);
}
}

OnPlayerEnterGiveMission(playerid)
{
if(missionActive==MISSION_DEATHMATCH && deathmatchStarted==false)
{
SendClientMessage(playerid,COLOR_DEATHMATCH,"Deathmatch: Все още не е започнала битката и имаш шанс да се включиш в нея!");
GameTextForPlayer(playerid, "~w~Mission~n~~r~Deathmatch", 1000, 1);
GivePlayerDeathmatchPoint(playerid);
}
if(missionActive==MISSION_STREETRACE && streetRaceStarted==false)
{
new stringRace[256];
format(stringRace,256,"Streetrace: Все още не е започнало %s състезанието и имаш шанс да се включиш!",StreetRaceInfo[streetRaceTypeIndex][stTypeName]);
SendClientMessage(playerid,COLOR_STREETRACE,stringRace);
if(StreetRaceInfo[streetRaceTypeIndex][stWinTime]!=0)
{
format(stringRace,256,"Streetrace: Най-доброто време на това състезание е %d секунди, отбелязано от %s",StreetRaceInfo[streetRaceTypeIndex][stWinTime],StreetRaceInfo[streetRaceTypeIndex][stWinner]);
SendClientMessage(playerid,COLOR_STREETRACE,stringRace);
}
else if(StreetRaceInfo[streetRaceTypeIndex][stWinTime]==0)
{
SendClientMessage(playerid,COLOR_STREETRACE,"Streetrace: Това състезание все още няма поставен рекорд!");
}
GameTextForPlayer(playerid, "~w~Mission~n~~b~Streetrace", 1000, 1);
GivePlayerStreetRacePoint(playerid);
}
if(missionActive==MISSION_MONEYBOX)
{
SendClientMessage(playerid,0x40BF00FF,"Moneybox: В момента има MoneyBox и имаш шанса да спечелиш пари!");
GameTextForPlayer(playerid, "~w~Mission~n~~g~Moneybox", 1000, 1);
GivePlayerMoneyBoxPoint(playerid);
}
}
GivePlayerWantedLevel(playerid, level)
{
PlayerInfo[playerid][pWanted]+=level;
if(PlayerInfo[playerid][pWanted]>6)
{
PlayerInfo[playerid][pWanted]=6;
}
}
DisableAllCheckPoints(playerid)
{
DisablePlayerRaceCheckpoint(playerid);
DisablePlayerCheckpoint(playerid);
}
DisableAllCheckPointsWithCon(playerid)
{
if(onWork[playerid] == 0 && gpsOn[playerid] == false)
{
DisablePlayerRaceCheckpoint(playerid);
DisablePlayerCheckpoint(playerid);
}
}
stock CaughtedWanted(playerid, killerid)
{
new stringpolice[256];
format(stringpolice,256,"[WASTED] {0040FF}Ти беше заловен от полицай %s, защото си извършил престъпление!",pname[killerid]);
SendClientMessage(playerid, 0xFF0000FF, stringpolice);
if(PlayerInfo[playerid][pWanted]==1 && PlayerInfo[playerid][pADuty]==0)
{
PlayerInfo[playerid][pPJail]=2*60;
SendClientMessage(playerid, 0xFF0000FF, "[WASTED] {0040FF} Сега ще си в затвора за 2 минути и губиш $900!");
GivePlayerCash(killerid,900); GivePlayerCash(playerid,-900);
if(PlayerInfo[playerid][pWanted]==2)
{
PlayerInfo[playerid][pPJail]=4*60;
SendClientMessage(playerid, 0xFF0000FF, "[WASTED] {0040FF} Сега ще си в затвора за 4 минути и губиш $1800!");
GivePlayerCash(killerid,1800); GivePlayerCash(playerid,-1800);
}
if(PlayerInfo[playerid][pWanted]==3)
{
PlayerInfo[playerid][pPJail]=6*60;
SendClientMessage(playerid, 0xFF0000FF, "[WASTED] {0040FF} Сега ще си в затвора за 6 минути и губиш $2700!");
GivePlayerCash(killerid,2700); GivePlayerCash(playerid,-2700);
}
if(PlayerInfo[playerid][pWanted]==4)
{
PlayerInfo[playerid][pPJail]=8*60;
SendClientMessage(playerid, 0xFF0000FF, "[WASTED] {0040FF} Сега ще си в затвора за 8 минути и губиш $3600!");
GivePlayerCash(killerid,3600); GivePlayerCash(playerid,-3600);
}
if(PlayerInfo[playerid][pWanted]==5)
{
PlayerInfo[playerid][pPJail]=10*60;
SendClientMessage(playerid, 0xFF0000FF, "[WASTED] {0040FF} Сега ще си в затвора за 10 минути и губиш $4500!");
GivePlayerCash(killerid,4500); GivePlayerCash(playerid,-4500);
}
if(PlayerInfo[playerid][pWanted]==6)
{
PlayerInfo[playerid][pPJail]=12*60;
SendClientMessage(playerid, 0xFF0000FF, "[WASTED] {0040FF} Сега ще си в затвора за 12 минути и губиш $5400!");
GivePlayerCash(killerid,5400); GivePlayerCash(playerid,-5400);
}
}
}
stock LoseDrugs(playerid,killerid)
{
if(PlayerInfo[playerid][pWeed]>=1)
{
if(PlayerInfo[playerid][pWeed]==1)
{
format(string256,256,"Ти загуби твоя грам трева!");
SendClientMessage(playerid,0xFF2D2DFF,string256);
format(string256,256,"Ти отмъкна 1 грам трева от %s",pname[playerid]);
SendClientMessage(playerid,0xFF2D2DFF,string256);
}
else
{
format(string256,256,"Ти загуби твоите %d грама трева!",PlayerInfo[playerid][pWeed]);
SendClientMessage(playerid,0xFF2D2DFF,string256);
format(string256,256,"Ти отмъкна %d грама трева от %s",pname[playerid],PlayerInfo[playerid][pWeed]);
SendClientMessage(playerid,0xFF2D2DFF,string256);
}
PlayerInfo[killerid][pWeed]+=PlayerInfo[playerid][pWeed];
PlayerInfo[playerid][pWeed]=0;
}
if(PlayerInfo[playerid][pCocaine]>=1)
{
if(PlayerInfo[playerid][pCocaine]==1)
{
format(string256,256,"Ти загуби твоя грам кокаин!");
SendClientMessage(playerid,0xFF2D2DFF,string256);
format(string256,256,"Ти отмъкна 1 грам кокаин от %s",pname[playerid]);
SendClientMessage(playerid,0xFF2D2DFF,string256);
}
else
{
format(string256,256,"Ти загуби твоите %d кокаин трева!",PlayerInfo[playerid][pCocaine]);
SendClientMessage(playerid,0xFF2D2DFF,string256);
format(string256,256,"Ти отмъкна %d грама кокаин от %s",pname[playerid],PlayerInfo[playerid][pCocaine]);
SendClientMessage(playerid,0xFF2D2DFF,string256);
}
PlayerInfo[killerid][pCocaine]+=PlayerInfo[playerid][pCocaine];
PlayerInfo[playerid][pCocaine]=0;
}
if(PlayerInfo[playerid][pHeroin]>=1)
{
if(PlayerInfo[playerid][pHeroin]==1)
{
format(string256,256,"Ти загуби твоя грам хероин!");
SendClientMessage(playerid,0xFF2D2DFF,string256);
format(string256,256,"Ти отмъкна 1 грам хероин от %s",pname[playerid]);
SendClientMessage(playerid,0xFF2D2DFF,string256);
}
else
{
format(string256,256,"Ти загуби твоите %d хероин трева!",PlayerInfo[playerid][pHeroin]);
SendClientMessage(playerid,0xFF2D2DFF,string256);
format(string256,256,"Ти отмъкна %d грама хероин от %s",pname[playerid],PlayerInfo[playerid][pHeroin]);
SendClientMessage(playerid,0xFF2D2DFF,string256);
}
PlayerInfo[killerid][pHeroin]+=PlayerInfo[playerid][pHeroin];
PlayerInfo[playerid][pHeroin]=0;
}
if(PlayerInfo[playerid][pMoonshine]>=1)
{
if(PlayerInfo[playerid][pMoonshine]==1)
{
format(string256,256,"Ти загуби твоя литър спиртно питие!");
SendClientMessage(playerid,0xFF2D2DFF,string256);
format(string256,256,"Ти отмъкна 1 литър спиртно питие от %s",pname[playerid]);
SendClientMessage(playerid,0xFF2D2DFF,string256);
}
else
{
format(string256,256,"Ти загуби твоите %d литра спиртно питие!",PlayerInfo[playerid][pMoonshine]);
SendClientMessage(playerid,0xFF2D2DFF,string256);
format(string256,256,"Ти отмъкна %d литра спиртно питие от %s",pname[playerid],PlayerInfo[playerid][pMoonshine]);
SendClientMessage(playerid,0xFF2D2DFF,string256);
}
PlayerInfo[killerid][pMoonshine]+=PlayerInfo[playerid][pMoonshine];
PlayerInfo[playerid][pMoonshine]=0;
}
}
stock BestDMKiller()
{
new tmpID;
for(new i; i<MAX_PLAYERS; i++)
{
for(new j=MAX_PLAYERS; j>=0; j--)
{
if(playerInDeathmatch[i]==true && playerInDeathmatch[j]==true)
{
if(deathmatchKills[i]>deathmatchKills[tmpID] && deathmatchKills[j]>deathmatchKills[tmpID])
{
if(deathmatchKills[i]>deathmatchKills[j])
{
tmpID=i;
}
}
}
}
}
return tmpID;
}
stock SaveNewRaceFinishTime(racerID, raceIndex, finishTime)
{
new racesString[64];
format(racesString, 64, "/Races/%d.ini", raceIndex);
dini_IntSet(racesString,"stWinTime",finishTime);
dini_Set(racesString,"stWinner",pname[racerID]);
format(StreetRaceInfo[raceIndex][stWinner],50,pname[racerID]);
StreetRaceInfo[raceIndex][stWinTime]=finishTime;
}
stock GetClothName(clothID)
{
new clothName[60];
switch(clothID)
{

case 0:
{
format(clothName,60,"Empty");
}

}
return clothName;
}

stock PlayerFinishingRace(playerid)
{

switch(streetRacePositionIndex)
{
case 1:
{
streetRaceTimerToEnd=60;
GivePlayerCMN1Status(playerid);
cmn1Mission[playerid]=MISSION_STREETRACE;
format(string256,256,"Streetrace: %s завърши пръв за %d секунди, той спечели $%d",pname[playerid],streetRaceSecondsCounter[playerid],cmn1Money);
SendClientMessageToAll(COLOR_STREETRACE,string256);
if((streetRaceSecondsCounter[playerid]<StreetRaceInfo[streetRaceTypeIndex][stWinTime]) || StreetRaceInfo[streetRaceTypeIndex][stWinTime]==0)
{
format(string256,256,"Streetrace: %s постави нов рекорд за това състезание - %d секунди",pname[playerid],streetRaceSecondsCounter[playerid]);
SendClientMessageToAll(COLOR_STREETRACE,string256);
SaveNewRaceFinishTime(playerid, streetRaceTypeIndex,streetRaceSecondsCounter[playerid]);
}
format(string256,256,"[SUSPECT]{0040FF} Ти си заподозрян в престъпление: Състезание, ниво на издирване: %d",PlayerInfo[playerid][pWanted]);
SendClientMessage(playerid,0xFF0000FF,string256);
format(string256,256,"CMN1: %s е заподозрян в състезание,убий го и ще получиш CMN1 Kill.",pname[playerid]);
SendClientMessageToAll(0xF97804FF,string256);
SendClientMessage(playerid,0xF97804FF,"CMN1: Трябва да оцелееш 5 минути за да не си преследван повече.");
streetRacePositionIndex=2;
streetRaceSecondsCounter[playerid]=0;
streetRacePlayerColorChange[playerid]=0;
playerInStreetRace[playerid]=false;
//goto - open
//goto - close
}
case 2:
{
streetRacePositionIndex=3;
}
case 3:
{
streetRacePositionIndex=4;
}
}
DisablePlayerRaceCheckpoint(playerid);
SetPlayerToVirtualWorldNull(playerid);
}

stock SetPlayerToVirtualWorldNull(playerid)
{

if(IsPlayerInAnyVehicle(playerid))
{
new hisVeh=GetPlayerVehicleID(playerid);
SetPlayerVirtualWorld(playerid,0);
SetVehicleVirtualWorld(hisVeh,0);
PutPlayerInVehicle(playerid, hisVeh, 0);
}
else if(!IsPlayerInAnyVehicle(playerid))
{
SetPlayerVirtualWorld(playerid,0);
}

}
public BanExPublic(playerid, reason[])
{
hideexitserver[playerid]=1;
PlayerInfo[playerid][pBan]=0;
PlayerInfo[playerid][pBlock]=1;
BanEx(playerid, reason);
}

/*
· SA-MP Gamemode: Intense версия: 0.9 RC2
· Copyright © 2018-2022, Daniel Miroslavov Andreev
· Всички права са запазени.
*/
